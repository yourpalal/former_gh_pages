define(["underscore","globals.js","score","spinner","rivetTimer"],function(e,t,n,r,i){function o(){}function u(e){this.game=e,this.view=e.gameView}function a(e){this.game=e,this.view=e.gameView}function f(e){this.game=e,this.view=e.gameView}function l(e){this.game=e,this.view=e.gameView}var s={difficulty:{easy:0,medium:1,hard:2,infinite:3,toString:function(e){return["easy","medium","hard","infinite"][e]}}};return o.prototype={score:null,spinners:null,update:function(e){var t=this.spinners[this.active];t.rotateBy(t.arc*3*e/1e3),this.timer.bump(e)&&(this.game.userLost("You ran out of time!"),this.onFailure()),this.updateScore()},updateScore:function(){var e=0;this.game.state()!==this.game.states.lost&&(e=Math.round((1-this.timer.progress)*400)),this.score.set({ringsCleared:this.active,timeBonus:e})},draw:function(){this.view.update(),this.view.clearInactiveSpinners()},drawOnce:function(){e.chain(this.spinners).rest().each(function(e){this.view.addInactiveSpinner(e)},this),this.view.addActiveSpinner(this.spinners[0]),this.view.update()},onCanvasAction:function(){var e=this.spinners[this.active];if(this.spinners[this.active].includes(.01)||this.spinners[this.active].includes(-0.01)){this.game.userLost("You hit the timer bar!"),this.onFailure();return}this.onNoCollision(),this.timer.paused=!1},onFailure:function(){this.updateScore()},onNoCollision:function(){this.active+=1,this.updateScore(),this.active>=this.spinners.length?this.game.userWon():(this.view.reset(),this.view.addInactiveSpinner(this.spinners[this.active-1]),this.view.removeInactiveSpinner(this.spinners[this.active]),this.view.addActiveSpinner(this.spinners[this.active]))},init:function(){this.active=0,this.timer=new i(15e3),this.view.setRivetTimer(this.timer),this.score===null?this.score=new n:this.score.set({timeBonus:0,ringsCleared:0}),this.updateScore(),this.spinners=[],this.buildSpinners(),this.view.reset(),this.view.clearCanvases()},buildCommonSpinners:function(t,n,i){var s,o,u,a,f;s=20,e.times(n,function(e){u=Math.ceil(s/t*Math.random()),u===0&&(u+=1),a=Math.PI/u,this.spinners.push(new r({radius:s,arc:a,rotation:Math.random()*Math.PI*2})),s+=20},this),this.timer.graphicalLength=s+5+this.timer.bulbRadius},active:0,time:null},u.prototype={buildSpinners:function(){this.buildCommonSpinners(10,10,.7)},getModeString:function(){return"Easy"}},a.prototype={buildSpinners:function(){this.buildCommonSpinners(5,15,1)},getModeString:function(){return"Medium"}},f.prototype={buildSpinners:function(){this.buildCommonSpinners(4,20,1.3)},getModeString:function(){return"Hard"}},l.prototype={init:function(){o.prototype.init.call(this),this.timer.setTimeout(2e3),this.buildInfiniteSpinner()},onFailure:function(){},updateScore:function(){},onNoCollision:function(){this.score.set({timeBonus:this.score.get("timeBonus")+Math.round((1-this.timer.progress)*5),ringsCleared:this.score.get("ringsCleared")+1}),this.buildInfiniteSpinner(),this.view.reset(),this.view.addActiveSpinner(this.spinners[0]),this.timer.reset()},getModeString:function(){return"Infinite"},buildSpinners:function(){this.buildInfiniteSpinner()},buildInfiniteSpinner:function(){var e=Math.random()*330+20,t=Math.ceil(e/4*Math.random()),n=new r({radius:e,arc:Math.PI/t,rotation:Math.random()*Math.PI*2});this.spinners[0]=n,this.timer.graphicalLength=355+this.timer.bulbRadius*3}},inherits(u,o),inherits(a,o),inherits(f,o),inherits(l,o),s.EasyMode=u,s.MediumMode=a,s.HardMode=f,s.InfiniteMode=l,s});