define("player",[],function(){var e=function(e,t,n){this.name=e,this.color=t,this.selected=n||!1,this.reset()};return e.selectPlayer=function(e,t){return _.each(e,function(e,n){e.selected=!1,t==n&&(e.selected=!0)}),e[t]},_.extend(e.prototype,{reset:function(){}}),e}),define("controllers/boardctrl",["player"],function(e){"use strict";var t=function(){this.reset()};return _.extend(t.prototype,{reset:function(){this.actions=[],this.lastBoard=null},makeHistory:function(e,t){this.lastBoard=e,this.actions.unshift(t)},undoAvailable:function(){return null!==this.lastBoard},undo:function(){if(this.undoAvailable()){var e=this.lastBoard;return this.actions.shift(),this.lastBoard=null,e}}}),function(n){n.controller("BoardCtrl",["$scope",function(n){_.extend(n,{resetGame:function(){n.board=n.selected.game.makeBoard(n.players),n.current={player:e.selectPlayer(n.players,0),mode:"split"},_.each(n.players,function(e){e.reset()}),n.history.reset()},history:new t,undo:function(){n.history.undoAvailable()&&(n.board=n.history.undo())},bombing:!1,toggleBombing:function(){n.bombing=!n.bombing,n.current.mode=n.bombing?"bomb":"steal"},getColor:function(e){return e.color}}),n.players=n.selected.game.makePlayers(),n.resetGame(),n.$on("game-selected",function(e,t){n.players=t.makePlayers(),n.resetGame()})}])}}),define("board/board",[],function(){"use strict";var e=function(e){this.rule=e,this.message="expected action would violate rule "+e+'".',this.name="RulesViolation"},t=function(e,t){this.x=e,this.y=t,this.message="No block at "+e+","+t,this.name="BlockNotFoundException"},n=function(e,t,n,r){this.left=e,this.top=t,this.width=n,this.height=r,this.player=0,this.exploded=!1};_.extend(n.prototype,{set:function(e){return _.extend(this,e),this},clone:function(){var e=new n(this.left,this.top,this.width,this.height);return e.player=this.player,e.exploded=this.exploded,e},cells:function(){var e=_.range(this.left,this.left+this.width),t=_.range(this.top,this.top+this.height);return _.flatten(_.map(e,function(e){return _.map(t,function(t){return[e,t]})}),!0)},contains:function(e){return this.left<=e.left&&this.top<=e.top&&this.right()>=e.right()&&this.bottom()>=e.bottom()},toString:function(){return JSON.stringify(this)},right:function(){return this.left+this.width-1},bottom:function(){return this.top+this.height-1}});var r=function(e,t,n){this.action=e,this.players=t,this.changed_blocks=n},o=function(e,t){this.width=e||4,this.height=t||4,this._blocks=new Array(this.width*this.height),_.times(this.width,function(e){_.times(this.height,function(t){this._blocks[this._blockIndex(e,t)]=new n(e,t,1,1)},this)},this)};return _.extend(o.prototype,{split:function(e,t,o){var i=e,a=_.range(i.left,i.left+i.width,t),l=_.range(i.top,i.top+i.height,o),s=_.flatten(_.map(a,function(e){return _.map(l,function(r){return new n(e,r,t,o)})}));if(t!=Math.floor(t)||o!=Math.floor(o)||0>=t||0>=o||t==i.width&&o==i.height||i.height%o!==0||i.width%t!==0)throw new Error("Must split by sensible values");return _.each(s,function(e){e.player=i.player,_.each(e.cells(),function(t){this._blocks[this._blockIndex(t[0],t[1])]=e},this)},this),new r("split",[e.player],s)},steal:function(t,o){var i=t.clone();if(t.exploded)throw new e("cannot steal with exploded stuff");if(t.left==o.right()+1||t.right()+1==o.left)i.left=o.left;else{if(t.top!=o.bottom()+1&&t.bottom()+1!=o.top)throw new e("steals must be adjacent");i.top=o.top}var a=_.all(i.cells(),function(e){return i.contains(this.block(e[0],e[1]))},this);if(!a)throw new e("steals must contain all blocks");if(!new n(0,0,this.width,this.height).contains(i))throw new e("steals must remain in bounds");var l=_.all(i.cells(),function(e){return i.player!=this.block(e[0],e[1]).player},this);if(!l)throw new e("You can't steal your own blocks");var s=_.all(i.cells(),function(e){return!this.block(e[0],e[1]).exploded},this);if(!s)throw new e("You can't steal exploded blocks");_.each(i.cells(),function(e){this._blocks[this._blockIndex(e[0],e[1])]=i},this);var c=_.filter(this.uniqueBlocks(),function(e){return i.contains(e)},this);return new r("steal",[t.player,o.player],c)},merge:function(t){var n=this.span(t),o=_.map(n.cells(),function(e){return this.block(e[0],e[1])},this),i=_.any(o,function(e){return e.top!=t[0].top||e.left!=t[0].left}),a=_.every(o,function(e){return e.width==t[0].width&&e.height==t[0].height}),l=_.every(o,function(e){return e.player==t[0].player}),s=_.every(o,function(e){return!e.exploded});if(!i)throw new e("Cannot merge a single block.");if(!a)throw new e("Blocks to merge must have = dimensions");if(!l)throw new e("Blocks to merge must be from 1 player");if(!s)throw new e("Can't merge exploded blocks");return null!==n&&(n.player=t[0].player,_.each(n.cells(),function(e){this._blocks[this._blockIndex(e[0],e[1])]=n},this)),new r("merge",[n.player],[n])},bomb:function(t,n){var o=this.block(t,n),i=[];if(o.exploded)throw new e("Can't explode an exploded block!");return i=1!=o.width||1!=o.height?this.split(o,1,1).changed_blocks:[o],this.block(t,n).exploded=!0,new r("bomb",[o.player],i)},span:function(e){var t=_.chain(e).map(function(e){return e.cells()}).flatten(!0).value(),r=_.min(_.map(t,function(e){return e[0]})),o=_.max(_.map(t,function(e){return e[0]})),i=_.min(_.map(t,function(e){return e[1]})),a=_.max(_.map(t,function(e){return e[1]}));return new n(r,i,o-r+1,a-i+1)},area:function(e){var t=_.chain(e).map(function(e){return e.cells()}).flatten(!0).value(),r=_.min(_.map(t,function(e){return e[0]})),o=_.max(_.map(t,function(e){return e[0]})),i=_.min(_.map(t,function(e){return e[1]})),a=_.max(_.map(t,function(e){return e[1]})),l=new n(r,i,o-r+1,a-i+1),s=_.map(l.cells(),function(e){return this._blockIndex(e[0],e[1])},this),c=_.map(t,function(e){return this._blockIndex(e[0],e[1])},this);return c.length!=s.length||0!==_.difference(s,c).length?null:l},block:function(e,t){return this._blocks[this._blockIndex(e,t)]},_blockIndex:function(e,n){var r=e+n*this.width;if(r>this.width*this.height-1)throw new t(e,n);return r},blocks:function(){return this._blocks},uniqueBlocks:function(){return _.filter(this._blocks,function(e,t){return t==this._blockIndex(e.left,e.top)},this)},setPlayer:function(e,t){var r,o=new n;_.each(t,function(t){r=o.set(t).cells(),_.each(r,function(t){this._blocks[this._blockIndex(t[0],t[1])].player=e},this)},this)},clone:function(){var e=new o(this.width,this.height);return e._blocks=_.map(this._blocks,function(e){return e.clone()}),e},expand:function(e,t){var n=new o(e,t);_.each(this.uniqueBlocks(),function(e){var t;(e.width>1||e.height>1)&&n.merge([n.block(e.left,e.top),n.block(e.right(),e.bottom())]),t=n.block(e.left,e.top),t.player=e.player,t.exploded=e.exploded},this),this._blocks=n._blocks,this.width=e,this.height=t},contract:function(e,t){var n=new o(e,t);this._blocks=_.chain(n._blocks).map(function(e){return this.block(e.left,e.top)},this).map(function(n){return n.right()>=e&&(n.width=e-n.left),n.bottom()>=t&&(n.height=t-n.top),n}).value(),this.width=e,this.height=t},changeSize:function(e,t){if(this.width!=e||this.height!=t){var n=Math.sign(e-this.width)+Math.sign(t-this.height);n>0?this.expand(e,t):0===n?(this.changeSize(e,this.height),this.changeSize(e,t)):this.contract(e,t)}}}),o}),define("game",["board/board","player"],function(e,t){"use strict";var n=function(){};return n.save_newlines=function(e){return e.replace("\\","\\\\","g").replace("\n","\\n","g")},n.recover_newlines=function(e){return e.replace("\\n","\n","g").replace("\\\\","\\","g")},_.extend(n,{PER_TURN:"t",PER_GAME:"g",loadBoard:function(t){var n=new e(t[0],t[1]),r=function(){return _.find(n.blocks(),function(e){return null===e.player})};if(_.each(n.blocks(),function(e){e.player=null}),t=_.rest(t,2),t.length%3!==0)throw"bad length for board data";if(_.times(t.length/3,function(e){var o=t[3*e+0],i=t[3*e+1],a=t[3*e+2],l=r(),s=n.block(l.left+o-1,l.top+i-1);(1!=o||1!=i)&&n.merge([l,s]),n.block(l.left,l.top).player=a}),_.any(n.blocks(),function(e){return null===e.player}))throw"gaps in board";return n},loadGame:function(e){e=n.recover_newlines(e);var t=e.split("\n---\n"),r=_.initial(t).join("\n---\n"),o=JSON.parse(_.last(t)),i=new n;return i.rules=r,i.players=_.map(o.players,function(e){return _.pick(e,"name","color","split","merge","steal","bomb")}),i.name=o.name,i.board=n.loadBoard(o.board),i}}),_.extend(n.prototype,{clone:function(){return n.loadGame(this.saveToString())},turn:function(e,t){var r=this.players[t];_.each(["split","merge","steal","bomb"],function(t){e[t]=r[t]==n.PER_TURN?0:e[t]})},makePlayers:function(){return _.map(this.players,function(e){var n=new t(e.name,e.color);return n.reset(),n})},makeBoard:function(e){var t=this.board.clone();return _.each(t.blocks(),function(t){_.isNumber(t.player)&&(t.player=e[t.player])}),t},name:"split.merge.steal",rules:"At each turn, you must perform exactly one split, merge, and steal, in any order. If you cannot perform all three actions on your turn, you lose.\n\n###restrictions\n * You may steal only tiles of the same size\n * You may split and merge only your own tiles\n * You may steal only your opponents tiles\n * Each player may use exactly one bomb per game\n\n###stalemate\nIf both players agree that they are in a stalemate, both players receives an extra bomb to be used within their next three turns.",board:function(){var t=new e(4,4);return _.each(t.blocks(),function(e){e.player=e.bottom()<2?0:1}),t}(),players:function(){var e=[new t("player 1","purple"),new t("player 2","orange")];return _.each(e,function(e){e.split=n.PER_TURN,e.merge=n.PER_TURN,e.steal=n.PER_TURN,e.bomb=n.PER_GAME}),e}(),saveBoard:function(){return[this.board.width,this.board.height].concat(_.chain(this.board.uniqueBlocks()).map(function(e){return[e.width,e.height,e.player]}).flatten().value())},saveToString:function(){var e={name:this.name,players:_.map(this.players,function(e){return{color:e.color,name:e.name}}),board:this.saveBoard()};return n.save_newlines(this.rules+"\n---\n"+JSON.stringify(e))}}),n}),define("controllers/appctrl",["player","board/board","game"],function(e,t,n){"use strict";var r=function(){this.available=this.isAvailable()};_.extend(r.prototype,{default_games:[(new n).clone()],save:function(e){this.available&&(window.localStorage.splitmergestealgames=JSON.stringify(_.map(e,function(e){return e.saveToString()})))},load:function(){if(!this.available)return this.default_games;var e=window.localStorage.splitmergestealgames||"[]";return e=_.map(JSON.parse(e),function(e){return n.loadGame(e)}),0===e.length?this.default_games:e},isAvailable:function(){try{return"localStorage"in window&&null!==window.localStorage}catch(e){return!1}}});var o=function(e){e.gameStorage=new r,e.games=e.gameStorage.load(),e.selected={game:null},e.views={play:!1,select:!0,toggle:function(e){this[e]=!this[e]},hide:function(e){this[e]=!1},show:function(t){this.edit&&e.gameStorage.save(e.games),this[t]=!0,"edit"==t?(this.select=!1,this.play=!1):"play"==t&&(this.select=!1,this.edit=!1),e.$broadcast("show-view",t)},shown:function(e){return this[e]}},e.editGame=function(t){e.views.show("edit"),e.$broadcast("edit-game",t),e.selected.game=t},e.copyGame=function(t){t=t.clone(),e.games.push(t),t.name=t.name+" (copy)",e.editGame(t)},e.playGame=function(t){e.selected.game=t,e.views.show("play"),e.views.hide("select"),e.$broadcast("game-selected",t)}};return function(e){e.controller("AppCtrl",["$scope",o])}}),define("controllers/gamectrl",["player","board/board","game"],function(e,t,n){"use strict";var r=function(e){e.create={game_def:null},e.loadGame=function(){try{e.games.unshift(n.loadGame(e.create.game_def)),e.gameStorage.save(e.games)}finally{e.create.game_def=null}},e.deleteGame=function(t){e.games=_.filter(e.games,function(e){return e!==t}),e.gameStorage.save(e.games),e.investigate(e.games[0])},e.investigating=e.games[0],e.investigate=function(t){e.investigating=t}};return function(e){e.controller("GameCtrl",["$scope",r])}}),define("controllers/editctrl",["player","board/board","game"],function(e,t,n){"use strict";var r=function(e,t){_.extend(e,{popup:{visible:!1},edit:{game:null,mode:"split",getColor:function(t){return e.edit.game.players[t].color}},inMode:function(t){return e.edit.mode==t},playerSelected:function(t){return e.inMode("set player")&&e.edit.selectedPlayer==t},togglePlayerSelected:function(t){e.playerSelected(t)?e.edit.mode="split":(e.edit.selectedPlayer=t,e.edit.mode="set player")},toggleBombing:function(){e.edit.mode="bomb"==e.edit.mode?"steal":"bomb"}}),e.$watchCollection("[edit.board_width, edit.board_height]",function(t){var n=t[0],r=t[1];null!==e.edit.game&&e.edit.game.board.changeSize(n,r)}),e.$on("edit-game",function(t,r){null===r&&(r=(new n).clone(),r.name="new game"),e.edit.game=r,e.edit.board_width=e.edit.game.board.width,e.edit.board_height=e.edit.game.board.height}),e.$on("show-view",function(n,r){"edit"==r?e.save_interval=t(function(){e.gameStorage.save(e.games)},1e4,0,!1):(t.cancel(e.save_interval),e.gameStorage.save(e.games),e.save_interval=null)})};return function(e){e.controller("EditCtrl",["$scope","$interval",r])}}),define("board/game_board",["board/board"],function(){"use strict";var e={split_merge_steal:{immediate:!1,update:function(e,t,n){return this.act_on_board(e,t,n,n.board.clone())},apply:function(e,t,n){return this.act_on_board(e,t,n,n.board)},act_on_board:function(e,t,n,r){var o=n.block_coords(e,t),i=n.block_at(n.board,e,t);return n.mouse.start.contains(i)?r.split(n.mouse.start,1+o[0]-n.mouse.start.left,1+o[1]-n.mouse.start.top):n.mouse.start.player==i.player?r.merge([n.mouse.start,i]):r.steal(n.mouse.start,i)}},"set player":{immediate:!0,update:function(e,t,n){var r=n.board.clone();return this.act_on_board(e,t,n,r)},apply:function(e,t,n){return this.act_on_board(e,t,n,n.board)},act_on_board:function(e,t,n,r){var o=n.block_coords(e,t),i=r.block(o[0],o[1]);return i.player=n.selectedPlayer,i.exploded=!1,{action:"set player",players:[i.player],changed_blocks:[i]}}},bomb:{immediate:!0,update:function(e,t,n){var r=n.board.clone(),o=n.block_coords(e,t);return r.bomb(o[0],o[1])},apply:function(e,t,n){var r=n.block_coords(e,t);return n.board.bomb(r[0],r[1])}}};e.split=e.split_merge_steal,e.merge=e.split_merge_steal,e.steal=e.split_merge_steal;var t=function(e){this.$scope=e};t.prototype={shrink:10,style:function(e){var t=this.$scope.hspace,n=this.$scope.vspace,r=this.$scope.bwidth(),o=this.$scope.bheight(),i=this.style_hook(e,{"background-color":this.$scope.getColor(e.player),left:(t+r)*e.left,top:(n+o)*e.top,width:(t+r)*e.width-t,height:(n+o)*e.height-n});return i.left=i.left+"px",i.top=i.top+"px",i.width=i.width+"px",i.height=i.height+"px",i},style_hook:function(e,t){return t},css_classes:function(e){return{exploded:e.exploded}}};var n=["$scope",function(n){_.extend(n,{gfx:{board:_.extend(new t(n),{}),changed:_.extend(new t(n),{style_hook:function(e,t){var r=Math.min(.1*t.width,n.bwidth()/2),o=Math.min(.1*t.height,n.bheight()/2);return t.left+=r,t.top+=o,t.width-=2*r,t.height-=2*o,t.border="8px solid rgba(255, 255, 255, 0.5)",t}})},changed_blocks:null,bwidth:function(){var e=n.board.width*n.hspace;return(n.width-e)/n.board.width},bheight:function(){var e=n.board.height*n.vspace;return(n.height-e)/n.board.height},same_block:function(e,t,r,o){var i=n.block_coords(e,t),a=n.block_coords(r,o);return i[0]==a[0]&&i[1]==a[1]},block_coords:function(e,t){return[Math.floor(e/(n.bwidth()+n.hspace)),Math.floor(t/(n.bheight()+n.vspace))]},block_at:function(e,t,r){var o=n.block_coords(t,r);return e.block(o[0],o[1])},mouse:{tracking:!1},mousemove:function(t){var r=n.$board_el.offset(),o=t.pageX-r.left,i=t.pageY-r.top;if(n.mouse.tracking){var a=n.mouse.last[0],l=n.mouse.last[1];n.same_block(a,l,o,i)||(n.changed_blocks=e[n.mode].update(o,i,n).changed_blocks,n.mouse.last=[o,i])}},mousedown:function(t){var r=n.$board_el.offset(),o=t.pageX-r.left,i=t.pageY-r.top;if(n.mouse.tracking)try{var a=n.board.clone(),l=e[n.mode].apply(o,i,n);n.actionDone({board_before:a,action:l})}catch(s){}finally{n.changed_blocks=null}else{n.mouse.start=n.block_at(n.board,o,i),n.mouse.last=[o,i];try{n.changed_blocks=e[n.mode].update(o,i,n).changed_blocks}catch(c){n.changed_blocks=[n.mouse.start]}}n.mouse.tracking=e[n.mode].immediate||!n.mouse.tracking}}),n.$watch("mode",function(t){n.mouse.tracking=e[t].immediate,n.mouse.start=null,n.changed_blocks=null,n.mouse.tracking&&(n.mouse.last=[-1,-1])})}];return function(e){e.directive("gameBoard",function(){return{scope:{mode:"=",width:"=",height:"=",hspace:"=",vspace:"=",board:"=board",actionDone:"&onAction",getColor:"=getColor",selectedPlayer:"=selectedPlayer"},controller:n,link:function(e,t){t=$(t[0]),e.$board_el=$(t.find(".board")[0])},restrict:"E",templateUrl:"partials/game_board.html"}})}}),define("directives/marked-down",[],function(){var e=["$scope",function(e){e.render=function(){return markdown.toHTML(e.text)}}];return function(t){t.directive("markedDown",function(){return{scope:{text:"=text"},controller:e,restrict:"E",templateUrl:"partials/marked-down.html"}})}}),define("directives/number-picker",[],function(){var e=["$scope",function(e){e.values=_.range(1,e.max+1),e.setValue=function(t){e.value=Math.min(t,e.max)},e.$watch("max",function(t){e.values=_.range(1,t+1)})}];return function(t){t.directive("numberPicker",function(){return{restrict:"E",scope:{max:"=max",value:"=numModel"},controller:e,templateUrl:"partials/number-picker.html"}})}}),define("directives/players",["player"],function(e){var t=["$scope",function(t){t.colors=["purple","orange","red","blue","green","yellow"],t.playerVisibility=function(e){return e.selected?"visible":"hidden"},t.editing=-1,t.selectPlayer=function(e){t.players[e].selected||(t.doneEditing(),t.onSelect(e))},t.startEditing=function(e){t.editing=e},t.doneEditing=function(){t.editing=-1},t.selectColor=function(e){t.players[t.editing].color=e},t.removePlayer=function(e){var n=t.players[e].selected;if(e==t.players.length-1)t.players=_.initial(t.players);else{var r=_.first(t.players,e);t.players=r.concat(_.rest(t.players,e+1))}n&&t.players.length>0&&(t.players[Math.min(e,t.players.length-1)].selected=!0)};var n=function(){var e=_.pluck(t.players,"name"),n="player",r=1;if(!_.contains(e,n))return n;for(;_.contains(e,n+" "+r);)r++;return n+" "+r},r=function(){var e=_.difference(t.colors,_.pluck(t.players,"color"));return e.length>0?e[0]:t.colors[0]};t.addPlayer=function(){t.players.push(new e(n(),r(),!1))},t.colorClear=function(e){return e%3===0?"left":"none"}}];return function(e){e.directive("playerSelect",function(){return{scope:{players:"=players",onSelect:"=onSelect",canAddRemove:"=canAddremove"},controller:t,restrict:"E",transclude:!0,templateUrl:"app/directives/players.html"}})}}),define("directives/pop-up",[],function(){var e=function(){};return function(t){t.directive("popUp",function(){return{restrict:"E",replace:!0,transclude:!0,scope:{isVisible:"="},controller:e,templateUrl:"partials/pop-up.html"}})}}),define("app",["controllers/boardctrl","controllers/appctrl","controllers/gamectrl","controllers/editctrl","board/game_board","directives/marked-down","directives/number-picker","directives/players","directives/pop-up"],function(e,t,n,r,o,i,a,l,s){"use strict";var c=angular.module("myApp",["ngSanitize"]);return e(c),t(c),n(c),r(c),o(c),i(c),a(c),l(c),s(c),c}),require(["app"],function(){angular.bootstrap(document,["myApp"])}),define("app/js/main",["app"],function(){});