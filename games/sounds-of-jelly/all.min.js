"use strict";function Hud(){this.hints=this.makeHintLetters()}var THREE={REVISION:"71"};"object"==typeof module&&(module.exports=THREE),void 0===Math.sign&&(Math.sign=function(e){return 0>e?-1:e>0?1:+e}),THREE.log=function(){console.log.apply(console,arguments)},THREE.warn=function(){console.warn.apply(console,arguments)},THREE.error=function(){console.error.apply(console,arguments)},THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.MinEquation=103,THREE.MaxEquation=104,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=300,THREE.CubeReflectionMapping=301,THREE.CubeRefractionMapping=302,THREE.EquirectangularReflectionMapping=303,THREE.EquirectangularRefractionMapping=304,THREE.SphericalReflectionMapping=305,THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.HalfFloatType=1025,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGBEFormat=THREE.RGBAFormat,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.RGB_PVRTC_4BPPV1_Format=2100,THREE.RGB_PVRTC_2BPPV1_Format=2101,THREE.RGBA_PVRTC_4BPPV1_Format=2102,THREE.RGBA_PVRTC_2BPPV1_Format=2103,THREE.Projector=function(){THREE.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(e,t){THREE.warn("THREE.Projector: .projectVector() is now vector.project()."),e.project(t)},this.unprojectVector=function(e,t){THREE.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),e.unproject(t)},this.pickingRay=function(e,t){THREE.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}},THREE.CanvasRenderer=function(){THREE.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElement("canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},THREE.Color=function(e){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(e)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(e,t,r){if(0===t)this.r=this.g=this.b=r;else{var i=function(e,t,r){return 0>r&&(r+=1),r>1&&(r-=1),1/6>r?e+6*(t-e)*r:.5>r?t:2/3>r?e+6*(t-e)*(2/3-r):e};t=.5>=r?r*(1+t):r+t-r*t,r=2*r-t,this.r=i(r,t,e+1/3),this.g=i(r,t,e),this.b=i(r,t,e-1/3)}return this},setStyle:function(e){return/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)?(e=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e),this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this):/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)?(e=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e),this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this):/^\#([0-9a-f]{6})$/i.test(e)?(e=/^\#([0-9a-f]{6})$/i.exec(e),this.setHex(parseInt(e[1],16)),this):/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)?(e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e),this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this):/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var r=t>0?1/t:1;return this.r=Math.pow(e.r,r),this.g=Math.pow(e.g,r),this.b=Math.pow(e.b,r),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){e=e||{h:0,s:0,l:0};var t,r=this.r,i=this.g,n=this.b,o=Math.max(r,i,n),a=Math.min(r,i,n),s=(a+o)/2;if(a===o)a=t=0;else{var h=o-a,a=.5>=s?h/(o+a):h/(2-o-a);switch(o){case r:t=(i-n)/h+(n>i?6:0);break;case i:t=(n-r)/h+2;break;case n:t=(r-i)/h+4}t/=6}return e.h=t,e.s=a,e.l=s,e},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,r){var i=this.getHSL();return i.h+=e,i.s+=t,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){return this.r=e[0],this.g=e[1],this.b=e[2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._w=i,this.onChangeCallback(),this},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(!1==e instanceof THREE.Euler)throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var r=Math.cos(e._x/2),i=Math.cos(e._y/2),n=Math.cos(e._z/2),o=Math.sin(e._x/2),a=Math.sin(e._y/2),s=Math.sin(e._z/2);return"XYZ"===e.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"YXZ"===e.order?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"ZXY"===e.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"ZYX"===e.order?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"YZX"===e.order?(this._x=o*i*n+r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n-o*a*s):"XZY"===e.order&&(this._x=o*i*n-r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n+o*a*s),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t=e.elements,r=t[0];e=t[4];var i=t[8],n=t[1],o=t[5],a=t[9],s=t[2],h=t[6],t=t[10],l=r+o+t;return l>0?(r=.5/Math.sqrt(l+1),this._w=.25/r,this._x=(h-a)*r,this._y=(i-s)*r,this._z=(n-e)*r):r>o&&r>t?(r=2*Math.sqrt(1+r-o-t),this._w=(h-a)/r,this._x=.25*r,this._y=(e+n)/r,this._z=(i+s)/r):o>t?(r=2*Math.sqrt(1+o-r-t),this._w=(i-s)/r,this._x=(e+n)/r,this._y=.25*r,this._z=(a+h)/r):(r=2*Math.sqrt(1+t-r-o),this._w=(n-e)/r,this._x=(i+s)/r,this._y=(a+h)/r,this._z=.25*r),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector3),t=r.dot(i)+1,1e-6>t?(t=0,Math.abs(r.x)>Math.abs(r.z)?e.set(-r.y,r.x,0):e.set(0,-r.z,r.y)):e.crossVectors(r,i),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._z=this._y=this._x=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(THREE.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var r=e._x,i=e._y,n=e._z,o=e._w,a=t._x,s=t._y,h=t._z,l=t._w;return this._x=r*l+o*a+i*h-n*s,this._y=i*l+o*s+n*a-r*h,this._z=n*l+o*h+r*s-i*a,this._w=o*l-r*a-i*s-n*h,this.onChangeCallback(),this},multiplyVector3:function(e){return THREE.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var r=this._x,i=this._y,n=this._z,o=this._w,a=o*e._w+r*e._x+i*e._y+n*e._z;if(0>a?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=r,this._y=i,this._z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);return.001>Math.abs(h)?(this._w=.5*(o+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z),this):(a=Math.sin((1-t)*s)/h,s=Math.sin(t*s)/h,this._w=o*a+this._w*s,this._x=r*a+this._x*s,this._y=i*a+this._y*s,this._z=n*a+this._z*s,this.onChangeCallback(),this)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(e,t,r,i){return r.copy(e).slerp(t,i)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},sub:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return 0!==e?(e=1/e,this.x*=e,this.y*=e):this.y=this.x=0,this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector2,t=new THREE.Vector2),e.set(r,r),t.set(i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x;return e=this.y-e.y,t*t+e*e},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e),this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(t){return!1==t instanceof THREE.Euler&&THREE.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e;return function(t,r){return void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,r)),this}}(),applyMatrix3:function(e){var t=this.x,r=this.y,i=this.z;return e=e.elements,this.x=e[0]*t+e[3]*r+e[6]*i,this.y=e[1]*t+e[4]*r+e[7]*i,this.z=e[2]*t+e[5]*r+e[8]*i,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z;return e=e.elements,this.x=e[0]*t+e[4]*r+e[8]*i+e[12],this.y=e[1]*t+e[5]*r+e[9]*i+e[13],this.z=e[2]*t+e[6]*r+e[10]*i+e[14],this},applyProjection:function(e){var t=this.x,r=this.y,i=this.z;e=e.elements;var n=1/(e[3]*t+e[7]*r+e[11]*i+e[15]);return this.x=(e[0]*t+e[4]*r+e[8]*i+e[12])*n,this.y=(e[1]*t+e[5]*r+e[9]*i+e[13])*n,this.z=(e[2]*t+e[6]*r+e[10]*i+e[14])*n,this},applyQuaternion:function(e){var t=this.x,r=this.y,i=this.z,n=e.x,o=e.y,a=e.z;e=e.w;var s=e*t+o*i-a*r,h=e*r+a*t-n*i,l=e*i+n*r-o*t,t=-n*t-o*r-a*i;return this.x=s*e+t*-n+h*-a-l*-o,this.y=h*e+t*-o+l*-n-s*-a,this.z=l*e+t*-a+s*-o-h*-n,this},project:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.multiplyMatrices(t.projectionMatrix,e.getInverse(t.matrixWorld)),this.applyProjection(e)}}(),unproject:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyProjection(e)}}(),transformDirection:function(e){var t=this.x,r=this.y,i=this.z;return e=e.elements,this.x=e[0]*t+e[4]*r+e[8]*i,this.y=e[1]*t+e[5]*r+e[9]*i,this.z=e[2]*t+e[6]*r+e[10]*i,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return 0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e):this.z=this.y=this.x=0,this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector3,t=new THREE.Vector3),e.set(r,r,r),t.set(i,i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e),this},cross:function(e,t){if(void 0!==t)return THREE.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var r=this.x,i=this.y,n=this.z;return this.x=i*e.z-n*e.y,this.y=n*e.x-r*e.z,this.z=r*e.y-i*e.x,this},crossVectors:function(e,t){var r=e.x,i=e.y,n=e.z,o=t.x,a=t.y,s=t.z;return this.x=i*s-n*a,this.y=n*o-r*s,this.z=r*a-i*o,this},projectOnVector:function(){var e,t;return function(r){return void 0===e&&(e=new THREE.Vector3),e.copy(r).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){return e=this.dot(e)/(this.length()*e.length()),Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return e=this.z-e.z,t*t+r*r+e*e},setEulerFromRotationMatrix:function(e,t){THREE.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(e,t){THREE.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return THREE.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return THREE.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return THREE.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length();return e=this.set(e.elements[8],e.elements[9],e.elements[10]).length(),this.x=t,this.y=r,this.z=e,this},setFromMatrixColumn:function(e,t){var r=4*e,i=t.elements;return this.x=i[r],this.y=i[r+1],this.z=i[r+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(THREE.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=this.w;return e=e.elements,this.x=e[0]*t+e[4]*r+e[8]*i+e[12]*n,this.y=e[1]*t+e[5]*r+e[9]*i+e[13]*n,this.z=e[2]*t+e[6]*r+e[10]*i+e[14]*n,this.w=e[3]*t+e[7]*r+e[11]*i+e[15]*n,this},divideScalar:function(e){return 0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.z=this.y=this.x=0,this.w=1),this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,i;e=e.elements;var n=e[0];i=e[4];var o=e[8],a=e[1],s=e[5],h=e[9];r=e[2],t=e[6];var l=e[10];return.01>Math.abs(i-a)&&.01>Math.abs(o-r)&&.01>Math.abs(h-t)?.1>Math.abs(i+a)&&.1>Math.abs(o+r)&&.1>Math.abs(h+t)&&.1>Math.abs(n+s+l-3)?(this.set(1,0,0,0),this):(e=Math.PI,n=(n+1)/2,s=(s+1)/2,l=(l+1)/2,i=(i+a)/4,o=(o+r)/4,h=(h+t)/4,n>s&&n>l?.01>n?(t=0,i=r=.707106781):(t=Math.sqrt(n),r=i/t,i=o/t):s>l?.01>s?(t=.707106781,r=0,i=.707106781):(r=Math.sqrt(s),t=i/r,i=h/r):.01>l?(r=t=.707106781,i=0):(i=Math.sqrt(l),t=o/i,r=h/i),this.set(t,r,i,e),this):(e=Math.sqrt((t-h)*(t-h)+(o-r)*(o-r)+(a-i)*(a-i)),.001>Math.abs(e)&&(e=1),this.x=(t-h)/e,this.y=(o-r)/e,this.z=(a-i)/e,this.w=Math.acos((n+s+l-1)/2),this)},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},clampScalar:function(){var e,t;return function(r,i){return void 0===e&&(e=new THREE.Vector4,t=new THREE.Vector4),e.set(r,r,r,r),t.set(i,i,i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e),this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromAttribute:function(e,t,r){return void 0===r&&(r=0),t=t*e.itemSize+r,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this.w=e.array[t+3],this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(e,t,r,i){this._x=e||0,this._y=t||0,this._z=r||0,
this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" "),THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,r,i){return this._x=e,this._y=t,this._z=r,this._order=i||this._order,this.onChangeCallback(),this},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,r){var i=THREE.Math.clamp,n=e.elements;e=n[0];var o=n[4],a=n[8],s=n[1],h=n[5],l=n[9],c=n[2],u=n[6],n=n[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(i(a,-1,1)),.99999>Math.abs(a)?(this._x=Math.atan2(-l,n),this._z=Math.atan2(-o,e)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===t?(this._x=Math.asin(-i(l,-1,1)),.99999>Math.abs(l)?(this._y=Math.atan2(a,n),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,e),this._z=0)):"ZXY"===t?(this._x=Math.asin(i(u,-1,1)),.99999>Math.abs(u)?(this._y=Math.atan2(-c,n),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(s,e))):"ZYX"===t?(this._y=Math.asin(-i(c,-1,1)),.99999>Math.abs(c)?(this._x=Math.atan2(u,n),this._z=Math.atan2(s,e)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===t?(this._z=Math.asin(i(s,-1,1)),.99999>Math.abs(s)?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,e)):(this._x=0,this._y=Math.atan2(a,n))):"XZY"===t?(this._z=Math.asin(-i(o,-1,1)),.99999>Math.abs(o)?(this._x=Math.atan2(u,h),this._y=Math.atan2(a,e)):(this._x=Math.atan2(-l,n),this._y=0)):THREE.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,!1!==r&&this.onChangeCallback(),this},setFromQuaternion:function(){var e;return function(t,r,i){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,r,i),this}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i){e.subVectors(r,this.start),t.subVectors(this.end,this.start);var n=t.dot(t),n=t.dot(e)/n;return i&&(n=THREE.Math.clamp(n,0,1)),n}}(),closestPointToPoint:function(e,t,r){return e=this.closestPointToPointParameter(e,t),r=r||new THREE.Vector3,this.delta(r).multiplyScalar(e).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-(1/0),-(1/0))},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;r>t;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e,t){return(t||new THREE.Vector2).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-(1/0),-(1/0),-(1/0))},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;r>t;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var r=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){var i=t.geometry;if(void 0!==i)if(i instanceof THREE.Geometry)for(var n=i.vertices,i=0,o=n.length;o>i;i++)e.copy(n[i]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e);else if(i instanceof THREE.BufferGeometry&&void 0!==i.attributes.position)for(n=i.attributes.position.array,i=0,o=n.length;o>i;i+=3)e.set(n[i],n[i+1],n[i+2]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)}),this}}(),copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e,t){return(t||new THREE.Vector3).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){return t=t||new THREE.Sphere,t.center=this.center(),t.radius=.5*this.size(e).length(),t}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),0<arguments.length&&THREE.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,r,i,n,o,a,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=r,l[1]=i,l[4]=n,l[7]=o,l[2]=a,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(e){return THREE.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){return THREE.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,r,i){void 0===r&&(r=0),void 0===i&&(i=t.length);for(var n=0;i>n;n+=3,r+=3)e.x=t[r],e.y=t[r+1],e.z=t[r+2],e.applyMatrix3(this),t[r]=e.x,t[r+1]=e.y,t[r+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],o=e[4],a=e[5],s=e[6],h=e[7],e=e[8];return t*o*e-t*a*h-r*n*e+r*a*s+i*n*h-i*o*s},getInverse:function(e,t){var r=e.elements,i=this.elements;if(i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4],r=r[0]*i[0]+r[1]*i[3]+r[2]*i[6],0===r){if(t)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");return THREE.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/r),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]},clone:function(){return(new THREE.Matrix3).fromArray(this.elements)}},THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),0<arguments.length&&THREE.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,i,n,o,a,s,h,l,c,u,E,f,p,d){var m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=i,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=E,m[7]=f,m[11]=p,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return THREE.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements;return e=e.elements,t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractBasis:function(e,t,r){var i=this.elements;return e.set(i[0],i[1],i[2]),t.set(i[4],i[5],i[6]),r.set(i[8],i[9],i[10]),this},makeBasis:function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var r=this.elements;t=t.elements;var i=1/e.set(t[0],t[1],t[2]).length(),n=1/e.set(t[4],t[5],t[6]).length(),o=1/e.set(t[8],t[9],t[10]).length();return r[0]=t[0]*i,r[1]=t[1]*i,r[2]=t[2]*i,r[4]=t[4]*n,r[5]=t[5]*n,r[6]=t[6]*n,r[8]=t[8]*o,r[9]=t[9]*o,r[10]=t[10]*o,this}}(),makeRotationFromEuler:function(e){!1==e instanceof THREE.Euler&&THREE.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,r=e.x,i=e.y,n=e.z,o=Math.cos(r),r=Math.sin(r),a=Math.cos(i),i=Math.sin(i),s=Math.cos(n),n=Math.sin(n);if("XYZ"===e.order){e=o*s;var h=o*n,l=r*s,c=r*n;t[0]=a*s,t[4]=-a*n,t[8]=i,t[1]=h+l*i,t[5]=e-c*i,t[9]=-r*a,t[2]=c-e*i,t[6]=l+h*i,t[10]=o*a}else"YXZ"===e.order?(e=a*s,h=a*n,l=i*s,c=i*n,t[0]=e+c*r,t[4]=l*r-h,t[8]=o*i,t[1]=o*n,t[5]=o*s,t[9]=-r,t[2]=h*r-l,t[6]=c+e*r,t[10]=o*a):"ZXY"===e.order?(e=a*s,h=a*n,l=i*s,c=i*n,t[0]=e-c*r,t[4]=-o*n,t[8]=l+h*r,t[1]=h+l*r,t[5]=o*s,t[9]=c-e*r,t[2]=-o*i,t[6]=r,t[10]=o*a):"ZYX"===e.order?(e=o*s,h=o*n,l=r*s,c=r*n,t[0]=a*s,t[4]=l*i-h,t[8]=e*i+c,t[1]=a*n,t[5]=c*i+e,t[9]=h*i-l,t[2]=-i,t[6]=r*a,t[10]=o*a):"YZX"===e.order?(e=o*a,h=o*i,l=r*a,c=r*i,t[0]=a*s,t[4]=c-e*n,t[8]=l*n+h,t[1]=n,t[5]=o*s,t[9]=-r*s,t[2]=-i*s,t[6]=h*n+l,t[10]=e-c*n):"XZY"===e.order&&(e=o*a,h=o*i,l=r*a,c=r*i,t[0]=a*s,t[4]=-n,t[8]=i*s,t[1]=e*n+c,t[5]=o*s,t[9]=h*n-l,t[2]=l*n-h,t[6]=r*s,t[10]=c*n+e);return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(e){return THREE.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z,o=e.w,a=r+r,s=i+i,h=n+n;e=r*a;var l=r*s,r=r*h,c=i*s,i=i*h,n=n*h,a=o*a,s=o*s,o=o*h;return t[0]=1-(c+n),t[4]=l-o,t[8]=r+s,t[1]=l+o,t[5]=1-(e+n),t[9]=i-a,t[2]=r-s,t[6]=i+a,t[10]=1-(e+c),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o){var a=this.elements;return r.subVectors(i,n).normalize(),0===r.length()&&(r.z=1),e.crossVectors(o,r).normalize(),0===e.length()&&(r.x+=1e-4,e.crossVectors(o,r).normalize()),t.crossVectors(r,e),a[0]=e.x,a[4]=t.x,a[8]=r.x,a[1]=e.y,a[5]=t.y,a[9]=r.y,a[2]=e.z,a[6]=t.z,a[10]=r.z,this}}(),multiply:function(e,t){return void 0!==t?(THREE.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var r=e.elements,i=t.elements,n=this.elements,o=r[0],a=r[4],s=r[8],h=r[12],l=r[1],c=r[5],u=r[9],E=r[13],f=r[2],p=r[6],d=r[10],m=r[14],g=r[3],T=r[7],v=r[11],r=r[15],y=i[0],R=i[4],H=i[8],x=i[12],b=i[1],_=i[5],w=i[9],M=i[13],S=i[2],C=i[6],A=i[10],L=i[14],P=i[3],F=i[7],B=i[11],i=i[15];return n[0]=o*y+a*b+s*S+h*P,n[4]=o*R+a*_+s*C+h*F,n[8]=o*H+a*w+s*A+h*B,n[12]=o*x+a*M+s*L+h*i,n[1]=l*y+c*b+u*S+E*P,n[5]=l*R+c*_+u*C+E*F,n[9]=l*H+c*w+u*A+E*B,n[13]=l*x+c*M+u*L+E*i,n[2]=f*y+p*b+d*S+m*P,n[6]=f*R+p*_+d*C+m*F,n[10]=f*H+p*w+d*A+m*B,n[14]=f*x+p*M+d*L+m*i,n[3]=g*y+T*b+v*S+r*P,n[7]=g*R+T*_+v*C+r*F,n[11]=g*H+T*w+v*A+r*B,n[15]=g*x+T*M+v*L+r*i,this},multiplyToArray:function(e,t,r){var i=this.elements;return this.multiplyMatrices(e,t),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return THREE.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return THREE.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){return THREE.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var e=new THREE.Vector3;return function(t,r,i){void 0===r&&(r=0),void 0===i&&(i=t.length);for(var n=0;i>n;n+=3,r+=3)e.x=t[r],e.y=t[r+1],e.z=t[r+2],e.applyMatrix4(this),t[r]=e.x,t[r+1]=e.y,t[r+2]=e.z;return t}}(),rotateAxis:function(e){THREE.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return THREE.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],r=e[4],i=e[8],n=e[12],o=e[1],a=e[5],s=e[9],h=e[13],l=e[2],c=e[6],u=e[10],E=e[14];return e[3]*(+n*s*c-i*h*c-n*a*u+r*h*u+i*a*E-r*s*E)+e[7]*(+t*s*E-t*h*u+n*o*u-i*o*E+i*h*l-n*s*l)+e[11]*(+t*h*c-t*a*E-n*o*c+r*o*E+n*a*l-r*h*l)+e[15]*(-i*a*l-t*s*c+t*a*u+i*o*c-r*o*u+r*s*l)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e=new THREE.Vector3;return function(){THREE.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var r=this.elements,i=e.elements,n=i[0],o=i[4],a=i[8],s=i[12],h=i[1],l=i[5],c=i[9],u=i[13],E=i[2],f=i[6],p=i[10],d=i[14],m=i[3],g=i[7],T=i[11],i=i[15];if(r[0]=c*d*g-u*p*g+u*f*T-l*d*T-c*f*i+l*p*i,r[4]=s*p*g-a*d*g-s*f*T+o*d*T+a*f*i-o*p*i,r[8]=a*u*g-s*c*g+s*l*T-o*u*T-a*l*i+o*c*i,r[12]=s*c*f-a*u*f-s*l*p+o*u*p+a*l*d-o*c*d,r[1]=u*p*m-c*d*m-u*E*T+h*d*T+c*E*i-h*p*i,r[5]=a*d*m-s*p*m+s*E*T-n*d*T-a*E*i+n*p*i,r[9]=s*c*m-a*u*m-s*h*T+n*u*T+a*h*i-n*c*i,r[13]=a*u*E-s*c*E+s*h*p-n*u*p-a*h*d+n*c*d,r[2]=l*d*m-u*f*m+u*E*g-h*d*g-l*E*i+h*f*i,r[6]=s*f*m-o*d*m-s*E*g+n*d*g+o*E*i-n*f*i,r[10]=o*u*m-s*l*m+s*h*g-n*u*g-o*h*i+n*l*i,r[14]=s*l*E-o*u*E-s*h*f+n*u*f+o*h*d-n*l*d,r[3]=c*f*m-l*p*m-c*E*g+h*p*g+l*E*T-h*f*T,r[7]=o*p*m-a*f*m+a*E*g-n*p*g-o*E*T+n*f*T,r[11]=a*l*m-o*c*m-a*h*g+n*c*g+o*h*T-n*l*T,r[15]=o*c*E-a*l*E+a*h*f-n*c*f-o*h*p+n*l*p,r=n*r[0]+h*r[4]+E*r[8]+m*r[12],0==r){if(t)throw Error("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0");return THREE.warn("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/r),this},translate:function(e){THREE.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(e){THREE.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(e){THREE.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(e){THREE.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(e,t){THREE.error("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,r=e.x,i=e.y;return e=e.z,t[0]*=r,t[4]*=i,t[8]*=e,t[1]*=r,t[5]*=i,t[9]*=e,t[2]*=r,t[6]*=i,t[10]*=e,t[3]*=r,t[7]*=i,t[11]*=e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),i=Math.sin(t),n=1-r,o=e.x,a=e.y,s=e.z,h=n*o,l=n*a;return this.set(h*o+r,h*a-i*s,h*s+i*a,0,h*a+i*s,l*a+r,l*s-i*o,0,h*s-i*a,l*s+i*o,n*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},compose:function(e,t,r){return this.makeRotationFromQuaternion(t),this.scale(r),this.setPosition(e),this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(r,i,n){var o=this.elements,a=e.set(o[0],o[1],o[2]).length(),s=e.set(o[4],o[5],o[6]).length(),h=e.set(o[8],o[9],o[10]).length();0>this.determinant()&&(a=-a),r.x=o[12],r.y=o[13],r.z=o[14],t.elements.set(this.elements),r=1/a;var o=1/s,l=1/h;return t.elements[0]*=r,t.elements[1]*=r,t.elements[2]*=r,t.elements[4]*=o,t.elements[5]*=o,t.elements[6]*=o,t.elements[8]*=l,t.elements[9]*=l,t.elements[10]*=l,i.setFromRotationMatrix(t),n.x=a,n.y=s,n.z=h,this}}(),makeFrustum:function(e,t,r,i,n,o){var a=this.elements;return a[0]=2*n/(t-e),a[4]=0,a[8]=(t+e)/(t-e),a[12]=0,a[1]=0,a[5]=2*n/(i-r),a[9]=(i+r)/(i-r),a[13]=0,a[2]=0,a[6]=0,a[10]=-(o+n)/(o-n),a[14]=-2*o*n/(o-n),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,r,i){e=r*Math.tan(THREE.Math.degToRad(.5*e));var n=-e;return this.makeFrustum(n*t,e*t,n,e,r,i)},makeOrthographic:function(e,t,r,i,n,o){var a=this.elements,s=t-e,h=r-i,l=o-n;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-((t+e)/s),a[1]=0,a[5]=2/h,a[9]=0,a[13]=-((r+i)/h),a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-((o+n)/l),a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)}},THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var i=r.dot(this.direction);return 0>i?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);return 0>r?this.origin.distanceTo(t):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceTo(t))}}(),distanceSqToSegment:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o,a){e.copy(i).add(n).multiplyScalar(.5),t.copy(n).sub(i).normalize(),r.copy(this.origin).sub(e);var s,h=.5*i.distanceTo(n),l=-this.direction.dot(t),c=r.dot(this.direction),u=-r.dot(t),E=r.lengthSq(),f=Math.abs(1-l*l);return f>0?(i=l*u-c,n=l*c-u,s=h*f,i>=0?n>=-s?s>=n?(h=1/f,i*=h,n*=h,l=i*(i+l*n+2*c)+n*(l*i+n+2*u)+E):(n=h,i=Math.max(0,-(l*n+c)),l=-i*i+n*(n+2*u)+E):(n=-h,i=Math.max(0,-(l*n+c)),l=-i*i+n*(n+2*u)+E):-s>=n?(i=Math.max(0,-(-l*h+c)),n=i>0?-h:Math.min(Math.max(-h,-u),h),l=-i*i+n*(n+2*u)+E):s>=n?(i=0,n=Math.min(Math.max(-h,-u),h),l=n*(n+2*u)+E):(i=Math.max(0,-(l*h+c)),n=i>0?h:Math.min(Math.max(-h,-u),h),l=-i*i+n*(n+2*u)+E)):(n=l>0?-h:h,i=Math.max(0,-(l*n+c)),l=-i*i+n*(n+2*u)+E),o&&o.copy(this.direction).multiplyScalar(i).add(this.origin),a&&a.copy(t).multiplyScalar(n).add(e),l}}(),isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},intersectSphere:function(){var e=new THREE.Vector3;return function(t,r){e.subVectors(t.center,this.origin);var i=e.dot(this.direction),n=e.dot(e)-i*i,o=t.radius*t.radius;return n>o?null:(o=Math.sqrt(o-n),n=i-o,i+=o,0>n&&0>i?null:0>n?this.at(i,r):this.at(n,r))}}(),isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||0>e.normal.dot(this.direction)*t?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);return 0==t?0==e.distanceToPoint(this.origin)?0:null:(e=-(this.origin.dot(e.normal)+e.constant)/t,e>=0?e:null)},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var r,i,n,o,a;i=1/this.direction.x,o=1/this.direction.y,a=1/this.direction.z;var s=this.origin;return i>=0?(r=(e.min.x-s.x)*i,i*=e.max.x-s.x):(r=(e.max.x-s.x)*i,i*=e.min.x-s.x),o>=0?(n=(e.min.y-s.y)*o,o*=e.max.y-s.y):(n=(e.max.y-s.y)*o,o*=e.min.y-s.y),r>o||n>i?null:((n>r||r!==r)&&(r=n),(i>o||i!==i)&&(i=o),a>=0?(n=(e.min.z-s.z)*a,a*=e.max.z-s.z):(n=(e.max.z-s.z)*a,a*=e.min.z-s.z),r>a||n>i?null:((n>r||r!==r)&&(r=n),(i>a||i!==i)&&(i=a),0>i?null:this.at(r>=0?r:i,t)))},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;return function(n,o,a,s,h){if(t.subVectors(o,n),r.subVectors(a,n),i.crossVectors(t,r),o=this.direction.dot(i),o>0){if(s)return null;s=1}else{if(!(0>o))return null;s=-1,o=-o}return e.subVectors(this.origin,n),n=s*this.direction.dot(r.crossVectors(e,r)),0>n?null:(a=s*this.direction.dot(t.cross(e)),0>a||n+a>o?null:(n=-s*e.dot(i),0>n?null:this.at(n/o,h)))}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(t,r){var i=this.center;void 0!==r?i.copy(r):e.setFromPoints(t).center(i);for(var n=0,o=0,a=t.length;a>o;o++)n=Math.max(n,i.distanceToSquared(t[o]));return this.radius=Math.sqrt(n),this}}(),copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),i=t||new THREE.Vector3;return i.copy(e),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(e){return e=e||new THREE.Box3,e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,r,i,n,o){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,r,i,n,o){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(r),a[3].copy(i),a[4].copy(n),a[5].copy(o),this},copy:function(e){for(var t=this.planes,r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements;e=r[0];var i=r[1],n=r[2],o=r[3],a=r[4],s=r[5],h=r[6],l=r[7],c=r[8],u=r[9],E=r[10],f=r[11],p=r[12],d=r[13],m=r[14],r=r[15];return t[0].setComponents(o-e,l-a,f-c,r-p).normalize(),t[1].setComponents(o+e,l+a,f+c,r+p).normalize(),t[2].setComponents(o+i,l+s,f+u,r+d).normalize(),t[3].setComponents(o-i,l-s,f-u,r-d).normalize(),t[4].setComponents(o-n,l-h,f-E,r-m).normalize(),t[5].setComponents(o+n,l+h,f+E,r+m).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var r=t.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),e.copy(r.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){var t=this.planes,r=e.center;e=-e.radius;for(var i=0;6>i;i++)if(t[i].distanceToPoint(r)<e)return!1;return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){for(var i=this.planes,n=0;6>n;n++){var o=i[n];e.x=0<o.normal.x?r.min.x:r.max.x,t.x=0<o.normal.x?r.max.x:r.min.x,e.y=0<o.normal.y?r.min.y:r.max.y,t.y=0<o.normal.y?r.max.y:r.min.y,e.z=0<o.normal.z?r.min.z:r.max.z,t.z=0<o.normal.z?r.max.z:r.min.z;var a=o.distanceToPoint(e),o=o.distanceToPoint(t);if(0>a&&0>o)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,r=0;6>r;r++)if(0>t[r].distanceToPoint(e))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),
this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,n){return i=e.subVectors(n,i).cross(t.subVectors(r,i)).normalize(),this.setFromNormalAndCoplanarPoint(i,r),this}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start);return e=this.distanceToPoint(e.end),0>t&&e>0||0>e&&t>0},intersectLine:function(){var e=new THREE.Vector3;return function(t,r){var i=r||new THREE.Vector3,n=t.delta(e),o=this.normal.dot(n);return 0!=o?(o=-(t.start.dot(this.normal)+this.constant)/o,0>o||o>1?void 0:i.copy(n).multiplyScalar(o).add(t.start)):0==this.distanceToPoint(t.start)?i.copy(t.start):void 0}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Matrix3;return function(i,n){var o=n||r.getNormalMatrix(i),o=e.copy(this.normal).applyMatrix3(o),a=this.coplanarPoint(t);return a.applyMatrix4(i),this.setFromNormalAndCoplanarPoint(o,a),this}}(),translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),r=Array(36),i=0;return function(){for(var n=0;36>n;n++)8==n||13==n||18==n||23==n?r[n]="-":14==n?r[n]="4":(2>=i&&(i=33554432+16777216*Math.random()|0),e=15&i,i>>=4,r[n]=t[19==n?3&e|8:e]);return r.join("")}}(),clamp:function(e,t,r){return t>e?t:e>r?r:e},clampBottom:function(e,t){return t>e?t:e},mapLinear:function(e,t,r,i,n){return i+(e-t)*(n-i)/(r-t)},smoothstep:function(e,t,r){return t>=e?0:e>=r?1:(e=(e-t)/(r-t),e*e*(3-2*e))},smootherstep:function(e,t,r){return t>=e?0:e>=r?1:(e=(e-t)/(r-t),e*e*e*(e*(6*e-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return Math.floor(this.randFloat(e,t))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return 0===(e&e-1)&&0!==e},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,e++,e}},THREE.Spline=function(e){function t(e,t,r,i,n,o,a){return e=.5*(r-e),i=.5*(i-t),(2*(t-r)+e+i)*a+(-3*(t-r)-2*e-i)*o+e*n+t}this.points=e;var r,i,n,o,a,s,h,l,c,u=[],E={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return r=(this.points.length-1)*e,i=Math.floor(r),n=r-i,u[0]=0===i?i:i-1,u[1]=i,u[2]=i>this.points.length-2?this.points.length-1:i+1,u[3]=i>this.points.length-3?this.points.length-1:i+2,s=this.points[u[0]],h=this.points[u[1]],l=this.points[u[2]],c=this.points[u[3]],o=n*n,a=n*o,E.x=t(s.x,h.x,l.x,c.x,n,o,a),E.y=t(s.y,h.y,l.y,c.y,n,o,a),E.z=t(s.z,h.z,l.z,c.z,n,o,a),E},this.getControlPointsArray=function(){var e,t,r=this.points.length,i=[];for(e=0;r>e;e++)t=this.points[e],i[e]=[t.x,t.y,t.z];return i},this.getLength=function(e){var t,r,i,n=t=t=0,o=new THREE.Vector3,a=new THREE.Vector3,s=[],h=0;for(s[0]=0,e||(e=100),r=this.points.length*e,o.copy(this.points[0]),e=1;r>e;e++)t=e/r,i=this.getPoint(t),a.copy(i),h+=a.distanceTo(o),o.copy(i),t*=this.points.length-1,t=Math.floor(t),t!=n&&(s[t]=h,n=t);return s[s.length]=h,{chunks:s,total:h}},this.reparametrizeByArcLength=function(e){var t,r,i,n,o,a,s=[],h=new THREE.Vector3,l=this.getLength();for(s.push(h.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(r=l.chunks[t]-l.chunks[t-1],a=Math.ceil(e*r/l.total),n=(t-1)/(this.points.length-1),o=t/(this.points.length-1),r=1;a-1>r;r++)i=n+1/a*r*(o-n),i=this.getPoint(i),s.push(h.copy(i).clone());s.push(h.copy(this.points[t]).clone())}this.points=s}},THREE.Triangle=function(e,t,r){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,r,i,n){return n=n||new THREE.Vector3,n.subVectors(i,r),e.subVectors(t,r),n.cross(e),t=n.lengthSq(),t>0?n.multiplyScalar(1/Math.sqrt(t)):n.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o,a,s){e.subVectors(a,n),t.subVectors(o,n),r.subVectors(i,n),i=e.dot(e),n=e.dot(t),o=e.dot(r);var h=t.dot(t);a=t.dot(r);var l=i*h-n*n;return s=s||new THREE.Vector3,0==l?s.set(-2,-1,-1):(l=1/l,h=(h*o-n*a)*l,i=(i*a-n*o)*l,s.set(1-h-i,i,h))}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,r,i,n){return t=THREE.Triangle.barycoordFromPoint(t,r,i,n,e),0<=t.x&&0<=t.y&&1>=t.x+t.y}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),e=.001*(t-this.oldTime);this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners[e];if(void 0!==r){var i=r.indexOf(t);-1!==i&&r.splice(i,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var r=[],i=t.length,n=0;i>n;n++)r[n]=t[n];for(n=0;i>n;n++)r[n].call(this,e)}}}},function(e){e.Raycaster=function(t,r,i,n){this.ray=new e.Ray(t,r),this.near=i||0,this.far=n||1/0,this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var t=function(e,t){return e.distance-t.distance},r=function(e,t,i,n){if(e.raycast(t,i),!0===n){e=e.children,n=0;for(var o=e.length;o>n;n++)r(e[n],t,i,!0)}};e.Raycaster.prototype={constructor:e.Raycaster,precision:1e-4,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(t,r){r instanceof e.PerspectiveCamera?(this.ray.origin.copy(r.position),this.ray.direction.set(t.x,t.y,.5).unproject(r).sub(r.position).normalize()):r instanceof e.OrthographicCamera?(this.ray.origin.set(t.x,t.y,-1).unproject(r),this.ray.direction.set(0,0,-1).transformDirection(r.matrixWorld)):e.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,i){var n=[];return r(e,this,n,i),n.sort(t),n},intersectObjects:function(i,n){var o=[];if(!1==i instanceof Array)return e.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),o;for(var a=0,s=i.length;s>a;a++)r(i[a],this,o,n);return o.sort(t),o}}}(THREE),THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=void 0,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var e=new THREE.Vector3,t=new THREE.Euler,r=new THREE.Quaternion,i=new THREE.Vector3(1,1,1);t.onChange(function(){r.setFromEuler(t,!1)}),r.onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:t},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:i}}),this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return THREE.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order},set eulerOrder(e){THREE.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order=e},get useQuaternion(){THREE.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){THREE.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,r){return e.setFromAxisAngle(t,r),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,r){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translate:function(e,t){return THREE.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(1<arguments.length){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(THREE.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e instanceof THREE.Object3D?(void 0!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):THREE.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(1<arguments.length)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);t=this.children.indexOf(e),-1!==t&&(e.parent=void 0,e.dispatchEvent({type:"removed"}),this.children.splice(t,1))},getChildByName:function(e){return THREE.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var r=0,i=this.children.length;i>r;r++){var n=this.children[r].getObjectByProperty(e,t);if(void 0!==n)return n}},getWorldPosition:function(e){return e=e||new THREE.Vector3,this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){return r=r||new THREE.Quaternion,this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,r,t),r}}(),getWorldRotation:function(){var e=new THREE.Quaternion;return function(t){return t=t||new THREE.Euler,this.getWorldQuaternion(e),t.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new THREE.Vector3,t=new THREE.Quaternion;return function(r){return r=r||new THREE.Vector3,this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,r),r}}(),getWorldDirection:function(){var e=new THREE.Quaternion;return function(t){return t=t||new THREE.Vector3,this.getWorldQuaternion(e),t.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=0,r=this.children.length;r>t;t++)this.children[t].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=0,r=this.children.length;r>t;t++)this.children[t].traverseVisible(e)}},traverseAncestors:function(e){this.parent&&(e(this.parent),this.parent.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),(!0===this.matrixWorldNeedsUpdate||!0===e)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;r>t;t++)this.children[t].updateMatrixWorld(e)},toJSON:function(){var e={metadata:{version:4.3,type:"Object",generator:"ObjectExporter"}},t={},r={},i=function(t){if(void 0===e.materials&&(e.materials=[]),void 0===r[t.uuid]){var i=t.toJSON();delete i.metadata,r[t.uuid]=i,e.materials.push(i)}return t.uuid},n=function(r){var o={};if(o.uuid=r.uuid,o.type=r.type,""!==r.name&&(o.name=r.name),"{}"!==JSON.stringify(r.userData)&&(o.userData=r.userData),!0!==r.visible&&(o.visible=r.visible),r instanceof THREE.PerspectiveCamera)o.fov=r.fov,o.aspect=r.aspect,o.near=r.near,o.far=r.far;else if(r instanceof THREE.OrthographicCamera)o.left=r.left,o.right=r.right,o.top=r.top,o.bottom=r.bottom,o.near=r.near,o.far=r.far;else if(r instanceof THREE.AmbientLight)o.color=r.color.getHex();else if(r instanceof THREE.DirectionalLight)o.color=r.color.getHex(),o.intensity=r.intensity;else if(r instanceof THREE.PointLight)o.color=r.color.getHex(),o.intensity=r.intensity,o.distance=r.distance,o.decay=r.decay;else if(r instanceof THREE.SpotLight)o.color=r.color.getHex(),o.intensity=r.intensity,o.distance=r.distance,o.angle=r.angle,o.exponent=r.exponent,o.decay=r.decay;else if(r instanceof THREE.HemisphereLight)o.color=r.color.getHex(),o.groundColor=r.groundColor.getHex();else if(r instanceof THREE.Mesh||r instanceof THREE.Line||r instanceof THREE.PointCloud){var a=r.geometry;if(void 0===e.geometries&&(e.geometries=[]),void 0===t[a.uuid]){var s=a.toJSON();delete s.metadata,t[a.uuid]=s,e.geometries.push(s)}o.geometry=a.uuid,o.material=i(r.material),r instanceof THREE.Line&&(o.mode=r.mode)}else r instanceof THREE.Sprite&&(o.material=i(r.material));if(o.matrix=r.matrix.toArray(),0<r.children.length)for(o.children=[],a=0;a<r.children.length;a++)o.children.push(n(r.children[a]));return o};return e.object=n(this),e},clone:function(e,t){if(void 0===e&&(e=new THREE.Object3D),void 0===t&&(t=!0),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.quaternion.copy(this.quaternion),e.scale.copy(this.scale),e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled,e.userData=JSON.parse(JSON.stringify(this.userData)),!0===t)for(var r=0;r<this.children.length;r++)e.add(this.children[r].clone());return e}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Face3=function(e,t,r,i,n,o){this.a=e,this.b=t,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.materialIndex=this.materialIndex;for(var t=0,r=this.vertexNormals.length;r>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,r=this.vertexColors.length;r>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,r=this.vertexTangents.length;r>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,r,i,n,o,a){return THREE.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(e,t,r,n,o,a)},THREE.BufferAttribute=function(e,t){this.array=e,this.itemSize=t,this.needsUpdate=!1},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},copyAt:function(e,t,r){e*=this.itemSize,r*=t.itemSize;for(var i=0,n=this.itemSize;n>i;i++)this.array[e+i]=t.array[r+i];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},setX:function(e,t){return this.array[e*this.itemSize]=t,this},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,i){return e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this.array[e+2]=i,this},setXYZW:function(e,t,r,i,n){return e*=this.itemSize,this.array[e]=t,this.array[e+1]=r,this.array[e+2]=i,this.array[e+3]=n,this},clone:function(){return new THREE.BufferAttribute(new this.array.constructor(this.array),this.itemSize)}},THREE.Int8Attribute=function(e,t){return THREE.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint8Attribute=function(e,t){return THREE.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint8ClampedAttribute=function(e,t){return THREE.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Int16Attribute=function(e,t){return THREE.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint16Attribute=function(e,t){return THREE.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Int32Attribute=function(e,t){return THREE.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Uint32Attribute=function(e,t){return THREE.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Float32Attribute=function(e,t){return THREE.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.Float64Attribute=function(e,t){return THREE.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(e,t)},THREE.DynamicBufferAttribute=function(e,t){THREE.BufferAttribute.call(this,e,t),this.updateRange={offset:0,count:-1}},THREE.DynamicBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.DynamicBufferAttribute.prototype.constructor=THREE.DynamicBufferAttribute,THREE.DynamicBufferAttribute.prototype.clone=function(){return new THREE.DynamicBufferAttribute(new this.array.constructor(this.array),this.itemSize)},THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.attributes={},this.attributesKeys=[],this.offsets=this.drawcalls=[],this.boundingSphere=this.boundingBox=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(e,t,r){!1==t instanceof THREE.BufferAttribute?(THREE.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.attributes[e]={array:t,itemSize:r}):(this.attributes[e]=t,this.attributesKeys=Object.keys(this.attributes))},getAttribute:function(e){return this.attributes[e]},addDrawCall:function(e,t,r){this.drawcalls.push({start:e,count:t,index:void 0!==r?r:0})},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToVector3Array(t.array),t.needsUpdate=!0),t=this.attributes.normal,void 0!==t&&((new THREE.Matrix3).getNormalMatrix(e).applyToVector3Array(t.array),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.applyMatrix((new THREE.Matrix4).setPosition(e)),e},fromGeometry:function(e,t){t=t||{vertexColors:THREE.NoColors};var r=e.vertices,i=e.faces,n=e.faceVertexUvs,o=t.vertexColors,a=0<n[0].length,s=3==i[0].vertexNormals.length,h=new Float32Array(9*i.length);this.addAttribute("position",new THREE.BufferAttribute(h,3));var l=new Float32Array(9*i.length);if(this.addAttribute("normal",new THREE.BufferAttribute(l,3)),o!==THREE.NoColors){var c=new Float32Array(9*i.length);this.addAttribute("color",new THREE.BufferAttribute(c,3))}if(!0===a){var u=new Float32Array(6*i.length);this.addAttribute("uv",new THREE.BufferAttribute(u,2))}for(var E=0,f=0,p=0;E<i.length;E++,f+=6,p+=9){var d=i[E],m=r[d.a],g=r[d.b],T=r[d.c];h[p]=m.x,h[p+1]=m.y,h[p+2]=m.z,h[p+3]=g.x,h[p+4]=g.y,h[p+5]=g.z,h[p+6]=T.x,h[p+7]=T.y,h[p+8]=T.z,!0===s?(m=d.vertexNormals[0],g=d.vertexNormals[1],T=d.vertexNormals[2],l[p]=m.x,l[p+1]=m.y,l[p+2]=m.z,l[p+3]=g.x,l[p+4]=g.y,l[p+5]=g.z,l[p+6]=T.x,l[p+7]=T.y,l[p+8]=T.z):(m=d.normal,l[p]=m.x,l[p+1]=m.y,l[p+2]=m.z,l[p+3]=m.x,l[p+4]=m.y,l[p+5]=m.z,l[p+6]=m.x,l[p+7]=m.y,l[p+8]=m.z),o===THREE.FaceColors?(d=d.color,c[p]=d.r,c[p+1]=d.g,c[p+2]=d.b,c[p+3]=d.r,c[p+4]=d.g,c[p+5]=d.b,c[p+6]=d.r,c[p+7]=d.g,c[p+8]=d.b):o===THREE.VertexColors&&(m=d.vertexColors[0],g=d.vertexColors[1],d=d.vertexColors[2],c[p]=m.r,c[p+1]=m.g,c[p+2]=m.b,c[p+3]=g.r,c[p+4]=g.g,c[p+5]=g.b,c[p+6]=d.r,c[p+7]=d.g,c[p+8]=d.b),!0===a&&(d=n[0][E][0],m=n[0][E][1],g=n[0][E][2],u[f]=d.x,u[f+1]=d.y,u[f+2]=m.x,u[f+3]=m.y,u[f+4]=g.x,u[f+5]=g.y)}return this.computeBoundingSphere(),this},computeBoundingBox:function(){var e=new THREE.Vector3;return function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var t=this.attributes.position.array;if(t){var r=this.boundingBox;r.makeEmpty();for(var i=0,n=t.length;n>i;i+=3)e.set(t[i],t[i+1],t[i+2]),r.expandByPoint(e)}(void 0===t||0===t.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&THREE.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')}}(),computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position.array;if(r){e.makeEmpty();for(var i=this.boundingSphere.center,n=0,o=r.length;o>n;n+=3)t.set(r[n],r[n+1],r[n+2]),e.expandByPoint(t);e.center(i);for(var a=0,n=0,o=r.length;o>n;n+=3)t.set(r[n],r[n+1],r[n+2]),a=Math.max(a,i.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&THREE.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.attributes;if(e.position){var t=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(t.length),3));else for(var r=e.normal.array,i=0,n=r.length;n>i;i++)r[i]=0;var o,a,s,r=e.normal.array,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,E=new THREE.Vector3;if(e.index)for(var f=e.index.array,p=0<this.offsets.length?this.offsets:[{start:0,count:f.length,index:0}],d=0,m=p.length;m>d;++d){n=p[d].start,o=p[d].count;for(var g=p[d].index,i=n,n=n+o;n>i;i+=3)o=3*(g+f[i]),a=3*(g+f[i+1]),s=3*(g+f[i+2]),h.fromArray(t,o),l.fromArray(t,a),c.fromArray(t,s),u.subVectors(c,l),E.subVectors(h,l),u.cross(E),r[o]+=u.x,r[o+1]+=u.y,r[o+2]+=u.z,r[a]+=u.x,r[a+1]+=u.y,r[a+2]+=u.z,r[s]+=u.x,r[s+1]+=u.y,r[s+2]+=u.z}else for(i=0,n=t.length;n>i;i+=9)h.fromArray(t,i),l.fromArray(t,i+3),c.fromArray(t,i+6),u.subVectors(c,l),E.subVectors(h,l),u.cross(E),r[i]=u.x,r[i+1]=u.y,r[i+2]=u.z,r[i+3]=u.x,r[i+4]=u.y,r[i+5]=u.z,r[i+6]=u.x,r[i+7]=u.y,r[i+8]=u.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},computeTangents:function(){function e(e,t,r){M.fromArray(i,3*e),S.fromArray(i,3*t),C.fromArray(i,3*r),A.fromArray(o,2*e),L.fromArray(o,2*t),P.fromArray(o,2*r),u=S.x-M.x,E=C.x-M.x,f=S.y-M.y,p=C.y-M.y,d=S.z-M.z,m=C.z-M.z,g=L.x-A.x,T=P.x-A.x,v=L.y-A.y,y=P.y-A.y,R=1/(g*y-T*v),F.set((y*u-v*E)*R,(y*f-v*p)*R,(y*d-v*m)*R),B.set((g*E-T*u)*R,(g*p-T*f)*R,(g*m-T*d)*R),h[e].add(F),h[t].add(F),h[r].add(F),l[e].add(B),l[t].add(B),l[r].add(B)}function t(e){G.fromArray(n,3*e),I.copy(G),k=h[e],z.copy(k),z.sub(G.multiplyScalar(G.dot(k))).normalize(),O.crossVectors(I,k),N=O.dot(l[e]),V=0>N?-1:1,s[4*e]=z.x,s[4*e+1]=z.y,s[4*e+2]=z.z,s[4*e+3]=V}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)THREE.warn("THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var r=this.attributes.index.array,i=this.attributes.position.array,n=this.attributes.normal.array,o=this.attributes.uv.array,a=i.length/3;void 0===this.attributes.tangent&&this.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*a),4));for(var s=this.attributes.tangent.array,h=[],l=[],c=0;a>c;c++)h[c]=new THREE.Vector3,l[c]=new THREE.Vector3;var u,E,f,p,d,m,g,T,v,y,R,H,x,b,_,w,M=new THREE.Vector3,S=new THREE.Vector3,C=new THREE.Vector3,A=new THREE.Vector2,L=new THREE.Vector2,P=new THREE.Vector2,F=new THREE.Vector3,B=new THREE.Vector3;0===this.drawcalls.length&&this.addDrawCall(0,r.length,0);var U=this.drawcalls,c=0;for(x=U.length;x>c;++c){H=U[c].start,b=U[c].count;var D=U[c].index,a=H;for(H+=b;H>a;a+=3)b=D+r[a],_=D+r[a+1],w=D+r[a+2],e(b,_,w)}var V,k,N,z=new THREE.Vector3,O=new THREE.Vector3,G=new THREE.Vector3,I=new THREE.Vector3,c=0;for(x=U.length;x>c;++c)for(H=U[c].start,b=U[c].count,D=U[c].index,a=H,H+=b;H>a;a+=3)b=D+r[a],_=D+r[a+1],w=D+r[a+2],t(b),t(_),t(w)}},computeOffsets:function(e){void 0===e&&(e=65535);for(var t=this.attributes.index.array,r=this.attributes.position.array,i=t.length/3,n=new Uint16Array(t.length),o=0,a=0,s=[{start:0,count:0,index:0}],h=s[0],l=0,c=0,u=new Int32Array(6),E=new Int32Array(r.length),f=new Int32Array(r.length),p=0;p<r.length;p++)E[p]=-1,f[p]=-1;for(r=0;i>r;r++){for(var d=c=0;3>d;d++)p=t[3*r+d],-1==E[p]?(u[2*d]=p,u[2*d+1]=-1,c++):E[p]<h.index?(u[2*d]=p,u[2*d+1]=-1,l++):(u[2*d]=p,u[2*d+1]=E[p]);if(a+c>h.index+e)for(h={start:o,count:0,index:a},s.push(h),c=0;6>c;c+=2)d=u[c+1],d>-1&&d<h.index&&(u[c+1]=-1);for(c=0;6>c;c+=2)p=u[c],d=u[c+1],-1===d&&(d=a++),E[p]=d,f[d]=p,n[o++]=d-h.index,h.count++}return this.reorderBuffers(n,f,a),this.drawcalls=this.offsets=s},merge:function(e,t){if(!1!=e instanceof THREE.BufferGeometry){void 0===t&&(t=0);var r,i=this.attributes;for(r in i)if(void 0!==e.attributes[r])for(var n=i[r].array,o=e.attributes[r],a=o.array,s=0,o=o.itemSize*t;s<a.length;s++,o++)n[o]=a[s];return this}THREE.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)},normalizeNormals:function(){for(var e,t,r,i=this.attributes.normal.array,n=0,o=i.length;o>n;n+=3)e=i[n],t=i[n+1],r=i[n+2],e=1/Math.sqrt(e*e+t*t+r*r),i[n]*=e,i[n+1]*=e,i[n+2]*=e},reorderBuffers:function(e,t,r){var i,n={};for(i in this.attributes)"index"!=i&&(n[i]=new this.attributes[i].array.constructor(this.attributes[i].itemSize*r));for(var o=0;r>o;o++){var a=t[o];for(i in this.attributes)if("index"!=i)for(var s=this.attributes[i].array,h=this.attributes[i].itemSize,l=n[i],c=0;h>c;c++)l[o*h+c]=s[a*h+c]}this.attributes.index.array=e;for(i in this.attributes)"index"!=i&&(this.attributes[i].array=n[i],this.attributes[i].numItems=this.attributes[i].itemSize*r)},toJSON:function(){var e,t={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type,data:{attributes:{}}},r=this.attributes,i=this.offsets,n=this.boundingSphere;for(e in r){var o=r[e],a=Array.prototype.slice.call(o.array);t.data.attributes[e]={itemSize:o.itemSize,type:o.array.constructor.name,array:a}}return 0<i.length&&(t.data.offsets=JSON.parse(JSON.stringify(i))),null!==n&&(t.data.boundingSphere={center:n.center.toArray(),radius:n.radius}),t},clone:function(){var e,t=new THREE.BufferGeometry;for(e in this.attributes)t.addAttribute(e,this.attributes[e].clone());e=0;for(var r=this.offsets.length;r>e;e++){var i=this.offsets[e];t.offsets.push({start:i.start,index:i.index,count:i.count})}return t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",
this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.dynamic=!0,this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),r=0,i=this.vertices.length;i>r;r++)this.vertices[r].applyMatrix4(e);for(r=0,i=this.faces.length;i>r;r++){e=this.faces[r],e.normal.applyMatrix3(t).normalize();for(var n=0,o=e.vertexNormals.length;o>n;n++)e.vertexNormals[n].applyMatrix3(t).normalize()}null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.normalsNeedUpdate=this.verticesNeedUpdate=!0},fromBufferGeometry:function(e){for(var t=this,r=e.attributes,i=r.position.array,n=void 0!==r.index?r.index.array:void 0,o=void 0!==r.normal?r.normal.array:void 0,a=void 0!==r.color?r.color.array:void 0,s=void 0!==r.uv?r.uv.array:void 0,h=[],l=[],c=r=0;r<i.length;r+=3,c+=2)t.vertices.push(new THREE.Vector3(i[r],i[r+1],i[r+2])),void 0!==o&&h.push(new THREE.Vector3(o[r],o[r+1],o[r+2])),void 0!==a&&t.colors.push(new THREE.Color(a[r],a[r+1],a[r+2])),void 0!==s&&l.push(new THREE.Vector2(s[c],s[c+1]));var u=function(e,r,i){var n=void 0!==o?[h[e].clone(),h[r].clone(),h[i].clone()]:[],c=void 0!==a?[t.colors[e].clone(),t.colors[r].clone(),t.colors[i].clone()]:[];t.faces.push(new THREE.Face3(e,r,i,n,c)),void 0!==s&&t.faceVertexUvs[0].push([l[e].clone(),l[r].clone(),l[i].clone()])};if(void 0!==n)if(i=e.drawcalls,0<i.length)for(r=0;r<i.length;r++)for(var c=i[r],E=c.start,f=c.count,p=c.index,c=E,E=E+f;E>c;c+=3)u(p+n[c],p+n[c+1],p+n[c+2]);else for(r=0;r<n.length;r+=3)u(n[r],n[r+1],n[r+2]);else for(r=0;r<i.length/3;r+=3)u(r,r+1,r+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.applyMatrix((new THREE.Matrix4).setPosition(e)),e},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,r=0,i=this.faces.length;i>r;r++){var n=this.faces[r],o=this.vertices[n.a],a=this.vertices[n.b];e.subVectors(this.vertices[n.c],a),t.subVectors(o,a),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e){var t,r,i;for(i=Array(this.vertices.length),t=0,r=this.vertices.length;r>t;t++)i[t]=new THREE.Vector3;if(e){var n,o,a,s=new THREE.Vector3,h=new THREE.Vector3;for(e=0,t=this.faces.length;t>e;e++)r=this.faces[e],n=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c],s.subVectors(a,o),h.subVectors(n,o),s.cross(h),i[r.a].add(s),i[r.b].add(s),i[r.c].add(s)}else for(e=0,t=this.faces.length;t>e;e++)r=this.faces[e],i[r.a].add(r.normal),i[r.b].add(r.normal),i[r.c].add(r.normal);for(t=0,r=this.vertices.length;r>t;t++)i[t].normalize();for(e=0,t=this.faces.length;t>e;e++)r=this.faces[e],r.vertexNormals[0]=i[r.a].clone(),r.vertexNormals[1]=i[r.b].clone(),r.vertexNormals[2]=i[r.c].clone()},computeMorphNormals:function(){var e,t,r,i,n;for(r=0,i=this.faces.length;i>r;r++)for(n=this.faces[r],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;t>e;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var o=new THREE.Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;t>e;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[],n=this.morphNormals[e].faceNormals;var a,s,h=this.morphNormals[e].vertexNormals;for(r=0,i=this.faces.length;i>r;r++)a=new THREE.Vector3,s={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(a),h.push(s)}for(h=this.morphNormals[e],o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals(),r=0,i=this.faces.length;i>r;r++)n=this.faces[r],a=h.faceNormals[r],s=h.vertexNormals[r],a.copy(n.normal),s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])}for(r=0,i=this.faces.length;i>r;r++)n=this.faces[r],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){var e,t,r,i,n,o,a,s,h,l,c,u,E,f,p,d,m,g=[],T=[];r=new THREE.Vector3;var v=new THREE.Vector3,y=new THREE.Vector3,R=new THREE.Vector3,H=new THREE.Vector3;for(e=0,t=this.vertices.length;t>e;e++)g[e]=new THREE.Vector3,T[e]=new THREE.Vector3;for(e=0,t=this.faces.length;t>e;e++)n=this.faces[e],o=this.faceVertexUvs[0][e],i=n.a,m=n.b,n=n.c,a=this.vertices[i],s=this.vertices[m],h=this.vertices[n],l=o[0],c=o[1],u=o[2],o=s.x-a.x,E=h.x-a.x,f=s.y-a.y,p=h.y-a.y,s=s.z-a.z,a=h.z-a.z,h=c.x-l.x,d=u.x-l.x,c=c.y-l.y,l=u.y-l.y,u=1/(h*l-d*c),r.set((l*o-c*E)*u,(l*f-c*p)*u,(l*s-c*a)*u),v.set((h*E-d*o)*u,(h*p-d*f)*u,(h*a-d*s)*u),g[i].add(r),g[m].add(r),g[n].add(r),T[i].add(v),T[m].add(v),T[n].add(v);for(v=["a","b","c","d"],e=0,t=this.faces.length;t>e;e++)for(n=this.faces[e],r=0;r<Math.min(n.vertexNormals.length,3);r++)H.copy(n.vertexNormals[r]),i=n[v[r]],m=g[i],y.copy(m),y.sub(H.multiplyScalar(H.dot(m))).normalize(),R.crossVectors(n.vertexNormals[r],m),i=R.dot(T[i]),i=0>i?-1:1,n.vertexTangents[r]=new THREE.Vector4(y.x,y.y,y.z,i);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,i=t.length;i>r;r++)r>0&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(!1==e instanceof THREE.Geometry)THREE.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);else{var i,n=this.vertices.length,o=this.vertices,a=e.vertices,s=this.faces,h=e.faces,l=this.faceVertexUvs[0];e=e.faceVertexUvs[0],void 0===r&&(r=0),void 0!==t&&(i=(new THREE.Matrix3).getNormalMatrix(t));for(var c=0,u=a.length;u>c;c++){var E=a[c].clone();void 0!==t&&E.applyMatrix4(t),o.push(E)}for(c=0,u=h.length;u>c;c++){var f,a=h[c],p=a.vertexNormals,d=a.vertexColors,E=new THREE.Face3(a.a+n,a.b+n,a.c+n);for(E.normal.copy(a.normal),void 0!==i&&E.normal.applyMatrix3(i).normalize(),t=0,o=p.length;o>t;t++)f=p[t].clone(),void 0!==i&&f.applyMatrix3(i).normalize(),E.vertexNormals.push(f);for(E.color.copy(a.color),t=0,o=d.length;o>t;t++)f=d[t],E.vertexColors.push(f.clone());E.materialIndex=a.materialIndex+r,s.push(E)}for(c=0,u=e.length;u>c;c++)if(r=e[c],i=[],void 0!==r){for(t=0,o=r.length;o>t;t++)i.push(r[t].clone());l.push(i)}}},mergeMesh:function(e){!1==e instanceof THREE.Mesh?THREE.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e):(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix))},mergeVertices:function(){var e,t,r,i={},n=[],o=[],a=Math.pow(10,4);for(t=0,r=this.vertices.length;r>t;t++)e=this.vertices[t],e=Math.round(e.x*a)+"_"+Math.round(e.y*a)+"_"+Math.round(e.z*a),void 0===i[e]?(i[e]=t,n.push(this.vertices[t]),o[t]=n.length-1):o[t]=o[i[e]];for(i=[],t=0,r=this.faces.length;r>t;t++)for(a=this.faces[t],a.a=o[a.a],a.b=o[a.b],a.c=o[a.c],a=[a.a,a.b,a.c],e=0;3>e;e++)if(a[e]==a[(e+1)%3]){i.push(t);break}for(t=i.length-1;t>=0;t--)for(a=i[t],this.faces.splice(a,1),o=0,r=this.faceVertexUvs.length;r>o;o++)this.faceVertexUvs[o].splice(a,1);return t=this.vertices.length-n.length,this.vertices=n,t},toJSON:function(){function e(e,t,r){return r?e|1<<t:e&~(1<<t)}function t(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==l[t]?l[t]:(l[t]=h.length/3,h.push(e.x,e.y,e.z),l[t])}function r(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==u[t]?u[t]:(u[t]=c.length,c.push(e.getHex()),u[t])}function i(e){var t=e.x.toString()+e.y.toString();return void 0!==f[t]?f[t]:(f[t]=E.length/2,E.push(e.x,e.y),f[t])}var n={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type};if(""!==this.name&&(n.name=this.name),void 0!==this.parameters){var o,a=this.parameters;for(o in a)void 0!==a[o]&&(n[o]=a[o]);return n}for(a=[],o=0;o<this.vertices.length;o++){var s=this.vertices[o];a.push(s.x,s.y,s.z)}var s=[],h=[],l={},c=[],u={},E=[],f={};for(o=0;o<this.faces.length;o++){var p=this.faces[o],d=void 0!==this.faceVertexUvs[0][o],m=0<p.normal.length(),g=0<p.vertexNormals.length,T=1!==p.color.r||1!==p.color.g||1!==p.color.b,v=0<p.vertexColors.length,y=0,y=e(y,0,0),y=e(y,1,!1),y=e(y,2,!1),y=e(y,3,d),y=e(y,4,m),y=e(y,5,g),y=e(y,6,T),y=e(y,7,v);s.push(y),s.push(p.a,p.b,p.c),d&&(d=this.faceVertexUvs[0][o],s.push(i(d[0]),i(d[1]),i(d[2]))),m&&s.push(t(p.normal)),g&&(m=p.vertexNormals,s.push(t(m[0]),t(m[1]),t(m[2]))),T&&s.push(r(p.color)),v&&(p=p.vertexColors,s.push(r(p[0]),r(p[1]),r(p[2])))}return n.data={},n.data.vertices=a,n.data.normals=h,0<c.length&&(n.data.colors=c),0<E.length&&(n.data.uvs=[E]),n.data.faces=s,n},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,r=0,i=t.length;i>r;r++)e.vertices.push(t[r].clone());for(t=this.faces,r=0,i=t.length;i>r;r++)e.faces.push(t[r].clone());for(r=0,i=this.faceVertexUvs.length;i>r;r++){t=this.faceVertexUvs[r],void 0===e.faceVertexUvs[r]&&(e.faceVertexUvs[r]=[]);for(var n=0,o=t.length;o>n;n++){for(var a=t[n],s=[],h=0,l=a.length;l>h;h++)s.push(a[h].clone());e.faceVertexUvs[r].push(s)}}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Camera=function(){THREE.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.getWorldDirection=function(){var e=new THREE.Quaternion;return function(t){return t=t||new THREE.Vector3,this.getWorldQuaternion(e),t.set(0,0,-1).applyQuaternion(e)}}(),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(e){return void 0===e&&(e=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,e),e.matrixWorldInverse.copy(this.matrixWorldInverse),e.projectionMatrix.copy(this.projectionMatrix),e},THREE.CubeCamera=function(e,t,r){THREE.Object3D.call(this),this.type="CubeCamera";var i=new THREE.PerspectiveCamera(90,1,e,t);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(1,0,0)),this.add(i);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(-1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,1),o.lookAt(new THREE.Vector3(0,1,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,-1),a.lookAt(new THREE.Vector3(0,-1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var r=this.renderTarget,l=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,e.render(t,i,r),r.activeCubeFace=1,e.render(t,n,r),r.activeCubeFace=2,e.render(t,o,r),r.activeCubeFace=3,e.render(t,a,r),r.activeCubeFace=4,e.render(t,s,r),r.generateMipmaps=l,r.activeCubeFace=5,e.render(t,h,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CubeCamera.prototype.constructor=THREE.CubeCamera,THREE.OrthographicCamera=function(e,t,r,i,n,o){THREE.Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera,THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,i=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(r-e,r+e,i+t,i-t,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,e),e.zoom=this.zoom,e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e.projectionMatrix.copy(this.projectionMatrix),e},THREE.PerspectiveCamera=function(e,t,r,i){THREE.Camera.call(this),this.type="PerspectiveCamera",this.zoom=1,this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,i,n,o){this.fullWidth=e,this.fullHeight=t,this.x=r,this.y=i,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var e=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var t=this.fullWidth/this.fullHeight,e=Math.tan(THREE.Math.degToRad(.5*e))*this.near,r=-e,i=t*r,t=Math.abs(t*e-i),r=Math.abs(e-r);this.projectionMatrix.makeFrustum(i+this.x*t/this.fullWidth,i+(this.x+this.width)*t/this.fullWidth,e-(this.y+this.height)*r/this.fullHeight,e-this.y*r/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(e,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,e),e.zoom=this.zoom,e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e.projectionMatrix.copy(this.projectionMatrix),e},THREE.Light=function(e){THREE.Object3D.call(this),this.type="Light",this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.constructor=THREE.Light,THREE.Light.prototype.clone=function(e){return void 0===e&&(e=new THREE.Light),THREE.Object3D.prototype.clone.call(this,e),e.color.copy(this.color),e},THREE.AmbientLight=function(e){THREE.Light.call(this,e),this.type="AmbientLight"},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,e),e},THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.type="AreaLight",this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.height=this.width=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.AreaLight.prototype.constructor=THREE.AreaLight,THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.type="DirectionalLight",this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e.shadowCameraNear=this.shadowCameraNear,e.shadowCameraFar=this.shadowCameraFar,e.shadowCameraLeft=this.shadowCameraLeft,e.shadowCameraRight=this.shadowCameraRight,e.shadowCameraTop=this.shadowCameraTop,e.shadowCameraBottom=this.shadowCameraBottom,e.shadowCameraVisible=this.shadowCameraVisible,e.shadowBias=this.shadowBias,e.shadowDarkness=this.shadowDarkness,e.shadowMapWidth=this.shadowMapWidth,e.shadowMapHeight=this.shadowMapHeight,e.shadowCascade=this.shadowCascade,e.shadowCascadeOffset.copy(this.shadowCascadeOffset),e.shadowCascadeCount=this.shadowCascadeCount,e.shadowCascadeBias=this.shadowCascadeBias.slice(0),e.shadowCascadeWidth=this.shadowCascadeWidth.slice(0),e.shadowCascadeHeight=this.shadowCascadeHeight.slice(0),e.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0),e.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0),e},THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e),this.type="HemisphereLight",this.position.set(0,100,0),this.groundColor=new THREE.Color(t),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight,THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,e),e.groundColor.copy(this.groundColor),e.intensity=this.intensity,e},THREE.PointLight=function(e,t,r,i){THREE.Light.call(this,e),this.type="PointLight",this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.decay=void 0!==i?i:1},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.constructor=THREE.PointLight,THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,e),e.intensity=this.intensity,e.distance=this.distance,e.decay=this.decay,e},THREE.SpotLight=function(e,t,r,i,n,o){THREE.Light.call(this,e),this.type="SpotLight",this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.exponent=void 0!==n?n:10,this.decay=void 0!==o?o:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.constructor=THREE.SpotLight,THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,e),e.target=this.target.clone(),e.intensity=this.intensity,e.distance=this.distance,e.angle=this.angle,e.exponent=this.exponent,e.decay=this.decay,e.castShadow=this.castShadow,e.onlyShadow=this.onlyShadow,e.shadowCameraNear=this.shadowCameraNear,e.shadowCameraFar=this.shadowCameraFar,e.shadowCameraFov=this.shadowCameraFov,e.shadowCameraVisible=this.shadowCameraVisible,e.shadowBias=this.shadowBias,e.shadowDarkness=this.shadowDarkness,e.shadowMapWidth=this.shadowMapWidth,e.shadowMapHeight=this.shadowMapHeight,e},THREE.Cache={files:{},add:function(e,t){this.files[e]=t},get:function(e){return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null,this.imageLoader=new THREE.ImageLoader,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ",t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1024).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){return e=e.split("/"),1===e.length?"./":(e.pop(),e.join("/")+"/")},initMaterials:function(e,t){for(var r=[],i=0;i<e.length;++i)r[i]=this.createMaterial(e[i],t);return r},needsTangents:function(e){for(var t=0,r=e.length;r>t;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){function r(e){return e=Math.log(e)/Math.LN2,Math.pow(2,Math.round(e))}function i(e,i,n,a,s,h,l){var c,u=t+n,E=THREE.Loader.Handlers.get(u);null!==E?c=E.load(u):(c=new THREE.Texture,E=o.imageLoader,E.crossOrigin=o.crossOrigin,E.load(u,function(e){if(!1===THREE.Math.isPowerOfTwo(e.width)||!1===THREE.Math.isPowerOfTwo(e.height)){var t=r(e.width),i=r(e.height),n=document.createElement("canvas");n.width=t,n.height=i,n.getContext("2d").drawImage(e,0,0,t,i),c.image=n}else c.image=e;c.needsUpdate=!0})),c.sourceFile=n,a&&(c.repeat.set(a[0],a[1]),1!==a[0]&&(c.wrapS=THREE.RepeatWrapping),1!==a[1]&&(c.wrapT=THREE.RepeatWrapping)),s&&c.offset.set(s[0],s[1]),h&&(n={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==n[h[0]]&&(c.wrapS=n[h[0]]),void 0!==n[h[1]]&&(c.wrapT=n[h[1]])),l&&(c.anisotropy=l),e[i]=c}function n(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var o=this,a="MeshLambertMaterial",s={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var h=e.shading.toLowerCase();"phong"===h?a="MeshPhongMaterial":"basic"===h&&(a="MeshBasicMaterial")}return void 0!==e.blending&&void 0!==THREE[e.blending]&&(s.blending=THREE[e.blending]),void 0!==e.transparent&&(s.transparent=e.transparent),void 0!==e.opacity&&1>e.opacity&&(s.transparent=!0),void 0!==e.depthTest&&(s.depthTest=e.depthTest),void 0!==e.depthWrite&&(s.depthWrite=e.depthWrite),void 0!==e.visible&&(s.visible=e.visible),void 0!==e.flipSided&&(s.side=THREE.BackSide),void 0!==e.doubleSided&&(s.side=THREE.DoubleSide),void 0!==e.wireframe&&(s.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?s.vertexColors=THREE.FaceColors:e.vertexColors&&(s.vertexColors=THREE.VertexColors)),e.colorDiffuse?s.color=n(e.colorDiffuse):e.DbgColor&&(s.color=e.DbgColor),e.colorSpecular&&(s.specular=n(e.colorSpecular)),e.colorEmissive&&(s.emissive=n(e.colorEmissive)),void 0!==e.transparency&&(console.warn("THREE.Loader: transparency has been renamed to opacity"),e.opacity=e.transparency),void 0!==e.opacity&&(s.opacity=e.opacity),e.specularCoef&&(s.shininess=e.specularCoef),e.mapDiffuse&&t&&i(s,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&i(s,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&i(s,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&i(s,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&i(s,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapAlpha&&t&&i(s,"alphaMap",e.mapAlpha,e.mapAlphaRepeat,e.mapAlphaOffset,e.mapAlphaWrap,e.mapAlphaAnisotropy),e.mapBumpScale&&(s.bumpScale=e.mapBumpScale),e.mapNormalFactor&&(s.normalScale=new THREE.Vector2(e.mapNormalFactor,e.mapNormalFactor)),a=new THREE[a](s),void 0!==e.DbgName&&(a.name=e.DbgName),a}},THREE.Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=0,r=this.handlers.length;r>t;t+=2){var i=this.handlers[t+1];if(this.handlers[t].test(e))return i}return null}},THREE.XHRLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,r,i){var n=this,o=THREE.Cache.get(e);void 0!==o?t&&t(o):(o=new XMLHttpRequest,o.open("GET",e,!0),o.addEventListener("load",function(r){THREE.Cache.add(e,this.response),t&&t(this.response),n.manager.itemEnd(e)},!1),void 0!==r&&o.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&o.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(o.responseType=this.responseType),o.send(null),n.manager.itemStart(e))},setResponseType:function(e){this.responseType=e},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.ImageLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,r,i){var n=this,o=THREE.Cache.get(e);return void 0===o?(o=document.createElement("img"),o.addEventListener("load",function(r){THREE.Cache.add(e,this),t&&t(this),n.manager.itemEnd(e)},!1),void 0!==r&&o.addEventListener("progress",function(e){r(e)},!1),void 0!==i&&o.addEventListener("error",function(e){i(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),o.src=e,n.manager.itemStart(e),o):void t(o)},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.constructor=THREE.JSONLoader,THREE.JSONLoader.prototype.load=function(e,t,r){r=r&&"string"==typeof r?r:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,r,i,n){var o=new XMLHttpRequest,a=0;o.onreadystatechange=function(){if(o.readyState===o.DONE)if(200===o.status||0===o.status){if(o.responseText){var s=JSON.parse(o.responseText),h=s.metadata;if(void 0!==h){if("object"===h.type)return void THREE.error("THREE.JSONLoader: "+t+" should be loaded with THREE.ObjectLoader instead.");if("scene"===h.type)return void THREE.error("THREE.JSONLoader: "+t+" seems to be a Scene. Use THREE.SceneLoader instead.")}s=e.parse(s,i),r(s.geometry,s.materials)}else THREE.error("THREE.JSONLoader: "+t+" seems to be unreachable or the file is empty.");e.onLoadComplete()}else THREE.error("THREE.JSONLoader: Couldn't load "+t+" ("+o.status+")");else o.readyState===o.LOADING?n&&(0===a&&(a=o.getResponseHeader("Content-Length")),n({total:a,loaded:o.responseText.length})):o.readyState===o.HEADERS_RECEIVED&&void 0!==n&&(a=o.getResponseHeader("Content-Length"))},o.open("GET",t,!0),o.withCredentials=this.withCredentials,o.send(null)},THREE.JSONLoader.prototype.parse=function(e,t){var r=new THREE.Geometry,i=void 0!==e.scale?1/e.scale:1;return function(t){var i,n,o,a,s,h,l,c,u,E,f,p,d,m=e.faces;h=e.vertices;var g=e.normals,T=e.colors,v=0;if(void 0!==e.uvs){for(i=0;i<e.uvs.length;i++)e.uvs[i].length&&v++;for(i=0;v>i;i++)r.faceVertexUvs[i]=[]}for(a=0,s=h.length;s>a;)i=new THREE.Vector3,i.x=h[a++]*t,i.y=h[a++]*t,i.z=h[a++]*t,r.vertices.push(i);for(a=0,s=m.length;s>a;)if(t=m[a++],u=1&t,o=2&t,i=8&t,l=16&t,E=32&t,h=64&t,t&=128,u){if(u=new THREE.Face3,u.a=m[a],u.b=m[a+1],u.c=m[a+3],f=new THREE.Face3,f.a=m[a+1],f.b=m[a+2],f.c=m[a+3],a+=4,o&&(o=m[a++],u.materialIndex=o,f.materialIndex=o),o=r.faces.length,i)for(i=0;v>i;i++)for(p=e.uvs[i],r.faceVertexUvs[i][o]=[],r.faceVertexUvs[i][o+1]=[],n=0;4>n;n++)c=m[a++],d=p[2*c],c=p[2*c+1],d=new THREE.Vector2(d,c),2!==n&&r.faceVertexUvs[i][o].push(d),0!==n&&r.faceVertexUvs[i][o+1].push(d);if(l&&(l=3*m[a++],u.normal.set(g[l++],g[l++],g[l]),f.normal.copy(u.normal)),E)for(i=0;4>i;i++)l=3*m[a++],E=new THREE.Vector3(g[l++],g[l++],g[l]),2!==i&&u.vertexNormals.push(E),0!==i&&f.vertexNormals.push(E);if(h&&(h=m[a++],h=T[h],u.color.setHex(h),f.color.setHex(h)),t)for(i=0;4>i;i++)h=m[a++],h=T[h],2!==i&&u.vertexColors.push(new THREE.Color(h)),0!==i&&f.vertexColors.push(new THREE.Color(h));r.faces.push(u),r.faces.push(f)}else{if(u=new THREE.Face3,u.a=m[a++],u.b=m[a++],u.c=m[a++],o&&(o=m[a++],u.materialIndex=o),o=r.faces.length,i)for(i=0;v>i;i++)for(p=e.uvs[i],r.faceVertexUvs[i][o]=[],n=0;3>n;n++)c=m[a++],d=p[2*c],c=p[2*c+1],d=new THREE.Vector2(d,c),r.faceVertexUvs[i][o].push(d);if(l&&(l=3*m[a++],u.normal.set(g[l++],g[l++],g[l])),E)for(i=0;3>i;i++)l=3*m[a++],E=new THREE.Vector3(g[l++],g[l++],g[l]),u.vertexNormals.push(E);if(h&&(h=m[a++],u.color.setHex(T[h])),t)for(i=0;3>i;i++)h=m[a++],u.vertexColors.push(new THREE.Color(T[h]));r.faces.push(u)}}(i),function(){var t=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var i=0,n=e.skinWeights.length;n>i;i+=t)r.skinWeights.push(new THREE.Vector4(e.skinWeights[i],t>1?e.skinWeights[i+1]:0,t>2?e.skinWeights[i+2]:0,t>3?e.skinWeights[i+3]:0));if(e.skinIndices)for(i=0,n=e.skinIndices.length;n>i;i+=t)r.skinIndices.push(new THREE.Vector4(e.skinIndices[i],t>1?e.skinIndices[i+1]:0,t>2?e.skinIndices[i+2]:0,t>3?e.skinIndices[i+3]:0));r.bones=e.bones,r.bones&&0<r.bones.length&&(r.skinWeights.length!==r.skinIndices.length||r.skinIndices.length!==r.vertices.length)&&THREE.warn("THREE.JSONLoader: When skinning, number of vertices ("+r.vertices.length+"), skinIndices ("+r.skinIndices.length+"), and skinWeights ("+r.skinWeights.length+") should match."),r.animation=e.animation,r.animations=e.animations}(),function(t){if(void 0!==e.morphTargets){var i,n,o,a,s,h;for(i=0,n=e.morphTargets.length;n>i;i++)for(r.morphTargets[i]={},r.morphTargets[i].name=e.morphTargets[i].name,r.morphTargets[i].vertices=[],s=r.morphTargets[i].vertices,h=e.morphTargets[i].vertices,o=0,a=h.length;a>o;o+=3){var l=new THREE.Vector3;l.x=h[o]*t,l.y=h[o+1]*t,l.z=h[o+2]*t,s.push(l)}}if(void 0!==e.morphColors)for(i=0,n=e.morphColors.length;n>i;i++)for(r.morphColors[i]={},r.morphColors[i].name=e.morphColors[i].name,r.morphColors[i].colors=[],a=r.morphColors[i].colors,s=e.morphColors[i].colors,t=0,o=s.length;o>t;t+=3)h=new THREE.Color(16755200),h.setRGB(s[t],s[t+1],s[t+2]),a.push(h)}(i),r.computeFaceNormals(),r.computeBoundingSphere(),void 0===e.materials||0===e.materials.length?{geometry:r}:(i=this.initMaterials(e.materials,t),this.needsTangents(i)&&r.computeTangents(),{geometry:r,materials:i})},THREE.LoadingManager=function(e,t,r){var i=this,n=0,o=0;this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){o++},this.itemEnd=function(e){n++,void 0!==i.onProgress&&i.onProgress(e,n,o),n===o&&void 0!==i.onLoad&&i.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,r,i){var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(e,function(e){t(n.parse(JSON.parse(e)))},r,i)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t,r=new THREE.BufferGeometry,i=e.data.attributes;for(t in i){var n=i[t],o=new self[n.type](n.array);r.addAttribute(t,new THREE.BufferAttribute(o,n.itemSize));

}return i=e.data.offsets,void 0!==i&&(r.offsets=JSON.parse(JSON.stringify(i))),e=e.data.boundingSphere,void 0!==e&&(i=new THREE.Vector3,void 0!==e.center&&i.fromArray(e.center),r.boundingSphere=new THREE.Sphere(i,e.radius)),r}},THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,r,i){var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(e,function(e){t(n.parse(JSON.parse(e)))},r,i)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];if(void 0!==e.color&&t.color.setHex(e.color),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.uniforms&&(t.uniforms=e.uniforms),void 0!==e.vertexShader&&(t.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(t.fragmentShader=e.fragmentShader),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.shading&&(t.shading=e.shading),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.side&&(t.side=e.side),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.size&&(t.size=e.size),void 0!==e.sizeAttenuation&&(t.sizeAttenuation=e.sizeAttenuation),void 0!==e.materials)for(var r=0,i=e.materials.length;i>r;r++)t.materials.push(this.parse(e.materials[r]));return t}},THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.texturePath=""},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,r,i){""===this.texturePath&&(this.texturePath=e.substring(0,e.lastIndexOf("/")+1));var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(e,function(e){n.parse(JSON.parse(e),t)},r,i)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e,t){var r=this.parseGeometries(e.geometries),i=this.parseImages(e.images,function(){void 0!==t&&t(n)}),i=this.parseTextures(e.textures,i),i=this.parseMaterials(e.materials,i),n=this.parseObject(e.object,r,i);return void 0!==e.images&&0!==e.images.length||void 0===t||t(n),n},parseGeometries:function(e){var t={};if(void 0!==e)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,n=0,o=e.length;o>n;n++){var a,s=e[n];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new THREE[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"CubeGeometry":a=new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":a=new THREE.CircleGeometry(s.radius,s.segments);break;case"CylinderGeometry":a=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded);break;case"SphereGeometry":a=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"IcosahedronGeometry":a=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"TorusGeometry":a=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":a=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":a=i.parse(s);break;case"Geometry":a=r.parse(s.data).geometry}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),t[s.uuid]=a}return t},parseMaterials:function(e,t){var r={};if(void 0!==e)for(var i=function(e){return void 0===t[e]&&THREE.warn("THREE.ObjectLoader: Undefined texture",e),t[e]},n=new THREE.MaterialLoader,o=0,a=e.length;a>o;o++){var s=e[o],h=n.parse(s);h.uuid=s.uuid,void 0!==s.name&&(h.name=s.name),void 0!==s.map&&(h.map=i(s.map)),void 0!==s.bumpMap&&(h.bumpMap=i(s.bumpMap),s.bumpScale&&(h.bumpScale=new THREE.Vector2(s.bumpScale,s.bumpScale))),void 0!==s.alphaMap&&(h.alphaMap=i(s.alphaMap)),void 0!==s.envMap&&(h.envMap=i(s.envMap)),void 0!==s.normalMap&&(h.normalMap=i(s.normalMap),s.normalScale&&(h.normalScale=new THREE.Vector2(s.normalScale,s.normalScale))),void 0!==s.lightMap&&(h.lightMap=i(s.lightMap)),void 0!==s.specularMap&&(h.specularMap=i(s.specularMap)),r[s.uuid]=h}return r},parseImages:function(e,t){var r=this,i={};if(void 0!==e&&0<e.length){var n=new THREE.LoadingManager(t),o=new THREE.ImageLoader(n);o.setCrossOrigin(this.crossOrigin);for(var n=function(e){return r.manager.itemStart(e),o.load(e,function(){r.manager.itemEnd(e)})},a=0,s=e.length;s>a;a++){var h=e[a],l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h.url)?h.url:r.texturePath+h.url;i[h.uuid]=n(l)}}return i},parseTextures:function(e,t){var r={};if(void 0!==e)for(var i=0,n=e.length;n>i;i++){var o=e[i];void 0===o.image&&THREE.warn('THREE.ObjectLoader: No "image" speficied for',o.uuid),void 0===t[o.image]&&THREE.warn("THREE.ObjectLoader: Undefined image",o.image);var a=new THREE.Texture(t[o.image]);a.needsUpdate=!0,a.uuid=o.uuid,void 0!==o.name&&(a.name=o.name),void 0!==o.repeat&&(a.repeat=new THREE.Vector2(o.repeat[0],o.repeat[1])),void 0!==o.minFilter&&(a.minFilter=THREE[o.minFilter]),void 0!==o.magFilter&&(a.magFilter=THREE[o.magFilter]),void 0!==o.anisotropy&&(a.anisotropy=o.anisotropy),o.wrap instanceof Array&&(a.wrapS=THREE[o.wrap[0]],a.wrapT=THREE[o.wrap[1]]),r[o.uuid]=a}return r},parseObject:function(){var e=new THREE.Matrix4;return function(t,r,i){var n;n=function(e){return void 0===r[e]&&THREE.warn("THREE.ObjectLoader: Undefined geometry",e),r[e]};var o=function(e){return void 0===i[e]&&THREE.warn("THREE.ObjectLoader: Undefined material",e),i[e]};switch(t.type){case"Scene":n=new THREE.Scene;break;case"PerspectiveCamera":n=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":n=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":n=new THREE.AmbientLight(t.color);break;case"DirectionalLight":n=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":n=new THREE.PointLight(t.color,t.intensity,t.distance,t.decay);break;case"SpotLight":n=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent,t.decay);break;case"HemisphereLight":n=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":n=new THREE.Mesh(n(t.geometry),o(t.material));break;case"Line":n=new THREE.Line(n(t.geometry),o(t.material),t.mode);break;case"PointCloud":n=new THREE.PointCloud(n(t.geometry),o(t.material));break;case"Sprite":n=new THREE.Sprite(o(t.material));break;case"Group":n=new THREE.Group;break;default:n=new THREE.Object3D}if(n.uuid=t.uuid,void 0!==t.name&&(n.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(n.position,n.quaternion,n.scale)):(void 0!==t.position&&n.position.fromArray(t.position),void 0!==t.rotation&&n.rotation.fromArray(t.rotation),void 0!==t.scale&&n.scale.fromArray(t.scale)),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.children)for(var a in t.children)n.add(this.parseObject(t.children[a],r,i));return n}}()},THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,r,i){var n=new THREE.ImageLoader(this.manager);n.setCrossOrigin(this.crossOrigin),n.load(e,function(e){e=new THREE.Texture(e),e.needsUpdate=!0,void 0!==t&&t(e)},r,i)},setCrossOrigin:function(e){this.crossOrigin=e}},THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(){this._parser=null},THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(e,t,r,i){var n=this,o=new THREE.DataTexture,a=new THREE.XHRLoader;return a.setResponseType("arraybuffer"),a.load(e,function(e){(e=n._parser(e))&&(void 0!==e.image?o.image=e.image:void 0!==e.data&&(o.image.width=e.width,o.image.height=e.height,o.image.data=e.data),o.wrapS=void 0!==e.wrapS?e.wrapS:THREE.ClampToEdgeWrapping,o.wrapT=void 0!==e.wrapT?e.wrapT:THREE.ClampToEdgeWrapping,o.magFilter=void 0!==e.magFilter?e.magFilter:THREE.LinearFilter,o.minFilter=void 0!==e.minFilter?e.minFilter:THREE.LinearMipMapLinearFilter,o.anisotropy=void 0!==e.anisotropy?e.anisotropy:1,void 0!==e.format&&(o.format=e.format),void 0!==e.type&&(o.type=e.type),void 0!==e.mipmaps&&(o.mipmaps=e.mipmaps),1===e.mipmapCount&&(o.minFilter=THREE.LinearFilter),o.needsUpdate=!0,t&&t(o,e))},r,i),o}},THREE.CompressedTextureLoader=function(){this._parser=null},THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(e,t,r){var i=this,n=[],o=new THREE.CompressedTexture;o.image=n;var a=new THREE.XHRLoader;if(a.setResponseType("arraybuffer"),e instanceof Array){var s=0;r=function(r){a.load(e[r],function(e){e=i._parser(e,!0),n[r]={width:e.width,height:e.height,format:e.format,mipmaps:e.mipmaps},s+=1,6===s&&(1==e.mipmapCount&&(o.minFilter=THREE.LinearFilter),o.format=e.format,o.needsUpdate=!0,t&&t(o))})};for(var h=0,l=e.length;l>h;++h)r(h)}else a.load(e,function(e){if(e=i._parser(e,!0),e.isCubemap)for(var r=e.mipmaps.length/e.mipmapCount,a=0;r>a;a++){n[a]={mipmaps:[]};for(var s=0;s<e.mipmapCount;s++)n[a].mipmaps.push(e.mipmaps[a*e.mipmapCount+s]),n[a].format=e.format,n[a].width=e.width,n[a].height=e.height}else o.image.width=e.width,o.image.height=e.height,o.mipmaps=e.mipmaps;1===e.mipmapCount&&(o.minFilter=THREE.LinearFilter),o.format=e.format,o.needsUpdate=!0,t&&t(o)});return o}},THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Material",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null,this.colorWrite=this.depthWrite=this.depthTest=!0,this.polygonOffset=!1,this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this._needsUpdate=this.visible=!0},THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){!0===e&&this.update(),this._needsUpdate=e},setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0===r)THREE.warn("THREE.Material: '"+t+"' parameter is undefined.");else if(t in this){var i=this[t];i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[t]="overdraw"==t?Number(r):r}}},toJSON:function(){var e={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type};return""!==this.name&&(e.name=this.name),this instanceof THREE.MeshBasicMaterial?(e.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(e.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.MeshLambertMaterial?(e.color=this.color.getHex(),e.emissive=this.emissive.getHex(),this.vertexColors!==THREE.NoColors&&(e.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(e.shading=this.shading),this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.MeshPhongMaterial?(e.color=this.color.getHex(),e.emissive=this.emissive.getHex(),e.specular=this.specular.getHex(),e.shininess=this.shininess,this.vertexColors!==THREE.NoColors&&(e.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(e.shading=this.shading),this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.MeshNormalMaterial?(this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.MeshDepthMaterial?(this.blending!==THREE.NormalBlending&&(e.blending=this.blending),this.side!==THREE.FrontSide&&(e.side=this.side)):this instanceof THREE.PointCloudMaterial?(e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(e.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(e.blending=this.blending)):this instanceof THREE.ShaderMaterial?(e.uniforms=this.uniforms,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader):this instanceof THREE.SpriteMaterial&&(e.color=this.color.getHex()),1>this.opacity&&(e.opacity=this.opacity),!1!==this.transparent&&(e.transparent=this.transparent),!1!==this.wireframe&&(e.wireframe=this.wireframe),e},clone:function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.blendSrcAlpha=this.blendSrcAlpha,e.blendDstAlpha=this.blendDstAlpha,e.blendEquationAlpha=this.blendEquationAlpha,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.type="LineBasicMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.type="LineDashedMaterial",this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial,THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.type="MeshBasicMaterial",this.color=new THREE.Color(16777215),this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.alphaMap=this.alphaMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.type="MeshLambertMaterial",this.color=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.envMap=this.alphaMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.alphaMap=this.alphaMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.type="MeshPhongMaterial",this.color=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.wrapAround=this.metal=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.bumpMap=this.lightMap=this.map=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.envMap=this.alphaMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.alphaMap=this.alphaMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.type="MeshDepthMaterial",this.wireframe=this.morphTargets=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.type="MeshNormalMaterial",this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.uuid=THREE.Math.generateUUID(),this.type="MeshFaceMaterial",this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype={constructor:THREE.MeshFaceMaterial,toJSON:function(){for(var e={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},t=0,r=this.materials.length;r>t;t++)e.materials.push(this.materials[t].toJSON());return e},clone:function(){for(var e=new THREE.MeshFaceMaterial,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e}},THREE.PointCloudMaterial=function(e){THREE.Material.call(this),this.type="PointCloudMaterial",this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(e)},THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointCloudMaterial.prototype.constructor=THREE.PointCloudMaterial,THREE.PointCloudMaterial.prototype.clone=function(){var e=new THREE.PointCloudMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleBasicMaterial=function(e){return THREE.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(e)},THREE.ParticleSystemMaterial=function(e){return THREE.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(e)},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.attributes=null,this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.RawShaderMaterial=function(e){THREE.ShaderMaterial.call(this,e),this.type="RawShaderMaterial"},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial,THREE.RawShaderMaterial.prototype.clone=function(){var e=new THREE.RawShaderMaterial;return THREE.ShaderMaterial.prototype.clone.call(this,e),e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.type="SpriteMaterial",this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(e)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial,THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.rotation=this.rotation,e.fog=this.fog,e},THREE.Texture=function(e,t,r,i,n,o,a,s,h){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++}),this.uuid=THREE.Math.generateUUID(),this.sourceFile=this.name="",this.image=void 0!==e?e:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:THREE.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){!0===e&&this.update(),this._needsUpdate=e},clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CubeTexture=function(e,t,r,i,n,o,a,s,h){t=void 0!==t?t:THREE.CubeReflectionMapping,THREE.Texture.call(this,e,t,r,i,n,o,a,s,h),this.images=e},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.prototype.constructor=THREE.CubeTexture,THREE.CubeTexture.clone=function(e){return void 0===e&&(e=new THREE.CubeTexture),THREE.Texture.prototype.clone.call(this,e),e.images=this.images,e},THREE.CompressedTexture=function(e,t,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c),this.image={width:t,height:r},this.mipmaps=e,this.generateMipmaps=this.flipY=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture,THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,r,i,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,i,n,c),this.image={data:e,width:t,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.VideoTexture=function(e,t,r,i,n,o,a,s,h){THREE.Texture.call(this,e,t,r,i,n,o,a,s,h),this.generateMipmaps=!1;var l=this,c=function(){requestAnimationFrame(c),e.readyState===e.HAVE_ENOUGH_DATA&&(l.needsUpdate=!0)};c()},THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype),THREE.VideoTexture.prototype.constructor=THREE.VideoTexture,THREE.Group=function(){THREE.Object3D.call(this),this.type="Group"},THREE.Group.prototype=Object.create(THREE.Object3D.prototype),THREE.Group.prototype.constructor=THREE.Group,THREE.PointCloud=function(e,t){THREE.Object3D.call(this),this.type="PointCloud",this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.PointCloudMaterial({color:16777215*Math.random()})},THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype),THREE.PointCloud.prototype.constructor=THREE.PointCloud,THREE.PointCloud.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray;return function(r,i){var n=this,o=n.geometry,a=r.params.PointCloud.threshold;if(e.getInverse(this.matrixWorld),t.copy(r.ray).applyMatrix4(e),null===o.boundingBox||!1!==t.isIntersectionBox(o.boundingBox)){var s=a/((this.scale.x+this.scale.y+this.scale.z)/3),h=new THREE.Vector3,a=function(e,o){var a=t.distanceToPoint(e);if(s>a){var h=t.closestPointToPoint(e);h.applyMatrix4(n.matrixWorld);var l=r.ray.origin.distanceTo(h);i.push({distance:l,distanceToRay:a,point:h.clone(),index:o,face:null,object:n})}};if(o instanceof THREE.BufferGeometry){var l=o.attributes,c=l.position.array;if(void 0!==l.index){var l=l.index.array,u=o.offsets;0===u.length&&(u=[{start:0,count:l.length,index:0}]);for(var E=0,f=u.length;f>E;++E)for(var p=u[E].start,d=u[E].index,o=p,p=p+u[E].count;p>o;o++){var m=d+l[o];h.fromArray(c,3*m),a(h,m)}}else for(l=c.length/3,o=0;l>o;o++)h.set(c[3*o],c[3*o+1],c[3*o+2]),a(h,o)}else for(h=this.geometry.vertices,o=0;o<h.length;o++)a(h[o],o)}}}(),THREE.PointCloud.prototype.clone=function(e){return void 0===e&&(e=new THREE.PointCloud(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){return THREE.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud."),new THREE.PointCloud(e,t)},THREE.Line=function(e,t,r){THREE.Object3D.call(this),this.type="Line",this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.mode=void 0!==r?r:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.constructor=THREE.Line,THREE.Line.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray,r=new THREE.Sphere;return function(i,n){var o=i.linePrecision,o=o*o,a=this.geometry;if(null===a.boundingSphere&&a.computeBoundingSphere(),r.copy(a.boundingSphere),r.applyMatrix4(this.matrixWorld),!1!==i.ray.isIntersectionSphere(r)){e.getInverse(this.matrixWorld),t.copy(i.ray).applyMatrix4(e);var s=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,u=this.mode===THREE.LineStrip?1:2;if(a instanceof THREE.BufferGeometry){var E=a.attributes;if(void 0!==E.index){var f=E.index.array,E=E.position.array,p=a.offsets;0===p.length&&(p=[{start:0,count:f.length,index:0}]);for(var d=0;d<p.length;d++)for(var m=p[d].start,g=p[d].count,T=p[d].index,a=m;m+g-1>a;a+=u){var v=T+f[a+1];s.fromArray(E,3*(T+f[a])),h.fromArray(E,3*v),v=t.distanceSqToSegment(s,h,c,l),v>o||(v=t.origin.distanceTo(c),v<i.near||v>i.far||n.push({distance:v,point:l.clone().applyMatrix4(this.matrixWorld),index:a,offsetIndex:d,face:null,faceIndex:null,object:this}))}}else for(E=E.position.array,a=0;a<E.length/3-1;a+=u)s.fromArray(E,3*a),h.fromArray(E,3*a+3),v=t.distanceSqToSegment(s,h,c,l),v>o||(v=t.origin.distanceTo(c),v<i.near||v>i.far||n.push({distance:v,point:l.clone().applyMatrix4(this.matrixWorld),index:a,face:null,faceIndex:null,object:this}))}else if(a instanceof THREE.Geometry)for(s=a.vertices,h=s.length,a=0;h-1>a;a+=u)v=t.distanceSqToSegment(s[a],s[a+1],c,l),v>o||(v=t.origin.distanceTo(c),v<i.near||v>i.far||n.push({distance:v,point:l.clone().applyMatrix4(this.matrixWorld),index:a,face:null,faceIndex:null,object:this}))}}}(),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.mode)),
THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(THREE.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray,r=new THREE.Sphere,i=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3;return function(a,s){var h=this.geometry;if(null===h.boundingSphere&&h.computeBoundingSphere(),r.copy(h.boundingSphere),r.applyMatrix4(this.matrixWorld),!1!==a.ray.isIntersectionSphere(r)&&(e.getInverse(this.matrixWorld),t.copy(a.ray).applyMatrix4(e),null===h.boundingBox||!1!==t.isIntersectionBox(h.boundingBox)))if(h instanceof THREE.BufferGeometry){var l=this.material;if(void 0!==l){var c,u,E=h.attributes,f=a.precision;if(void 0!==E.index){var p=E.index.array,d=E.position.array,m=h.offsets;0===m.length&&(m=[{start:0,count:p.length,index:0}]);for(var g=0,T=m.length;T>g;++g)for(var E=m[g].start,v=m[g].index,h=E,y=E+m[g].count;y>h;h+=3){E=v+p[h],c=v+p[h+1],u=v+p[h+2],i.fromArray(d,3*E),n.fromArray(d,3*c),o.fromArray(d,3*u);var R=l.side===THREE.BackSide?t.intersectTriangle(o,n,i,!0):t.intersectTriangle(i,n,o,l.side!==THREE.DoubleSide);if(null!==R){R.applyMatrix4(this.matrixWorld);var H=a.ray.origin.distanceTo(R);f>H||H<a.near||H>a.far||s.push({distance:H,point:R,face:new THREE.Face3(E,c,u,THREE.Triangle.normal(i,n,o)),faceIndex:null,object:this})}}}else for(d=E.position.array,p=h=0,y=d.length;y>h;h+=3,p+=9)E=h,c=h+1,u=h+2,i.fromArray(d,p),n.fromArray(d,p+3),o.fromArray(d,p+6),R=l.side===THREE.BackSide?t.intersectTriangle(o,n,i,!0):t.intersectTriangle(i,n,o,l.side!==THREE.DoubleSide),null!==R&&(R.applyMatrix4(this.matrixWorld),H=a.ray.origin.distanceTo(R),f>H||H<a.near||H>a.far||s.push({distance:H,point:R,face:new THREE.Face3(E,c,u,THREE.Triangle.normal(i,n,o)),faceIndex:null,object:this}))}}else if(h instanceof THREE.Geometry)for(p=this.material instanceof THREE.MeshFaceMaterial,d=!0===p?this.material.materials:null,f=a.precision,m=h.vertices,g=0,T=h.faces.length;T>g;g++)if(v=h.faces[g],l=!0===p?d[v.materialIndex]:this.material,void 0!==l){if(E=m[v.a],c=m[v.b],u=m[v.c],!0===l.morphTargets){R=h.morphTargets,H=this.morphTargetInfluences,i.set(0,0,0),n.set(0,0,0),o.set(0,0,0);for(var y=0,x=R.length;x>y;y++){var b=H[y];if(0!==b){var _=R[y].vertices;i.x+=(_[v.a].x-E.x)*b,i.y+=(_[v.a].y-E.y)*b,i.z+=(_[v.a].z-E.z)*b,n.x+=(_[v.b].x-c.x)*b,n.y+=(_[v.b].y-c.y)*b,n.z+=(_[v.b].z-c.z)*b,o.x+=(_[v.c].x-u.x)*b,o.y+=(_[v.c].y-u.y)*b,o.z+=(_[v.c].z-u.z)*b}}i.add(E),n.add(c),o.add(u),E=i,c=n,u=o}R=l.side===THREE.BackSide?t.intersectTriangle(u,c,E,!0):t.intersectTriangle(E,c,u,l.side!==THREE.DoubleSide),null!==R&&(R.applyMatrix4(this.matrixWorld),H=a.ray.origin.distanceTo(R),f>H||H<a.near||H>a.far||s.push({distance:H,point:R,face:v,faceIndex:g,object:this}))}}}(),THREE.Mesh.prototype.clone=function(e,t){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e,t),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.type="Bone",this.skin=e},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.constructor=THREE.Bone,THREE.Skeleton=function(e,t,r){if(this.useVertexTexture=void 0!==r?r:!0,this.identityMatrix=new THREE.Matrix4,e=e||[],this.bones=e.slice(0),this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=e=256<this.bones.length?64:64<this.bones.length?32:16<this.bones.length?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*this.bones.length),void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else for(THREE.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[],t=0,e=this.bones.length;e>t;t++)this.boneInverses.push(new THREE.Matrix4)},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var e=0,t=this.bones.length;t>e;e++){var r=new THREE.Matrix4;this.bones[e]&&r.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(r)}},THREE.Skeleton.prototype.pose=function(){for(var e,t=0,r=this.bones.length;r>t;t++)(e=this.bones[t])&&e.matrixWorld.getInverse(this.boneInverses[t]);for(t=0,r=this.bones.length;r>t;t++)(e=this.bones[t])&&(e.parent?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},THREE.Skeleton.prototype.update=function(){var e=new THREE.Matrix4;return function(){for(var t=0,r=this.bones.length;r>t;t++)e.multiplyMatrices(this.bones[t]?this.bones[t].matrixWorld:this.identityMatrix,this.boneInverses[t]),e.flattenToArrayOffset(this.boneMatrices,16*t);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh=function(e,t,r){if(THREE.Mesh.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4,e=[],this.geometry&&void 0!==this.geometry.bones){for(var i,n,o,a,s=0,h=this.geometry.bones.length;h>s;++s)i=this.geometry.bones[s],n=i.pos,o=i.rotq,a=i.scl,t=new THREE.Bone(this),e.push(t),t.name=i.name,t.position.set(n[0],n[1],n[2]),t.quaternion.set(o[0],o[1],o[2],o[3]),void 0!==a?t.scale.set(a[0],a[1],a[2]):t.scale.set(1,1,1);for(s=0,h=this.geometry.bones.length;h>s;++s)i=this.geometry.bones[s],-1!==i.parent?e[i.parent].add(e[s]):this.add(e[s])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(e,void 0,r))},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh,THREE.SkinnedMesh.prototype.bind=function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],r=1/t.lengthManhattan();1/0!==r?t.multiplyScalar(r):t.set(1)}},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):THREE.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.type="MorphAnimMesh",this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh,THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,r=e.animations,i=/([a-z]+)_?(\d+)/,n=0,o=e.morphTargets.length;o>n;n++){var a=e.morphTargets[n].name.match(i);if(a&&1<a.length){a=a[1],r[a]||(r[a]={start:1/0,end:-(1/0)});var s=r[a];n<s.start&&(s.start=n),n>s.end&&(s.end=n),t||(t=a)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var r=this.geometry.animations[e];r?(this.setFrameRange(r.start,r.end),this.duration=(r.end-r.start)/t*1e3,this.time=0):THREE.warn("THREE.MorphAnimMesh: animation["+e+"] undefined in .playAnimation()")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||0>this.time)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)):(this.time%=this.duration,0>this.time&&(this.time+=this.duration)),e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1),e!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e),t=this.time%t/t,this.directionBackwards&&(t=1-t),this.morphTargetInfluences[this.currentKeyframe]=t,this.morphTargetInfluences[this.lastKeyframe]=1-t},THREE.MorphAnimMesh.prototype.interpolateTargets=function(e,t,r){for(var i=this.morphTargetInfluences,n=0,o=i.length;o>n;n++)i[n]=0;e>-1&&(i[e]=1-r),t>-1&&(i[t]=r)},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.constructor=THREE.LOD,THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=0;r<this.objects.length&&!(t<this.objects[r].distance);r++);this.objects.splice(r,0,{distance:t,object:e}),this.add(e)},THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,r=this.objects.length;r>t&&!(e<this.objects[t].distance);t++);return this.objects[t-1].object},THREE.LOD.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var i=t.ray.origin.distanceTo(e);this.getObjectForDistance(i).raycast(t,r)}}(),THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){if(1<this.objects.length){e.setFromMatrixPosition(r.matrixWorld),t.setFromMatrixPosition(this.matrixWorld),r=e.distanceTo(t),this.objects[0].object.visible=!0;for(var i=1,n=this.objects.length;n>i&&r>=this.objects[i].distance;i++)this.objects[i-1].object.visible=!1,this.objects[i].object.visible=!0;for(;n>i;i++)this.objects[i].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(e){void 0===e&&(e=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,e);for(var t=0,r=this.objects.length;r>t;t++){var i=this.objects[t].object.clone();i.visible=0===t,e.addLevel(i,this.objects[t].distance)}return e},THREE.Sprite=function(){var e=new Uint16Array([0,1,2,0,2,3]),t=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),r=new Float32Array([0,0,1,0,1,1,0,1]),i=new THREE.BufferGeometry;return i.addAttribute("index",new THREE.BufferAttribute(e,1)),i.addAttribute("position",new THREE.BufferAttribute(t,3)),i.addAttribute("uv",new THREE.BufferAttribute(r,2)),function(e){THREE.Object3D.call(this),this.type="Sprite",this.geometry=i,this.material=void 0!==e?e:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,r){e.setFromMatrixPosition(this.matrixWorld);var i=t.ray.distanceToPoint(e);i>this.scale.x||r.push({distance:i,point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Particle=THREE.Sprite,THREE.LensFlare=function(e,t,r,i,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,r,i,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.constructor=THREE.LensFlare,THREE.LensFlare.prototype.add=function(e,t,r,i,n,o){void 0===t&&(t=-1),void 0===r&&(r=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,r=this.lensFlares.length,i=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(e=0;r>e;e++)t=this.lensFlares[e],t.x=this.positionScreen.x+i*t.distance,t.y=this.positionScreen.y+n*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.Scene=function(){THREE.Object3D.call(this),this.type="Scene",this.overrideMaterial=this.fog=null,this.autoUpdate=!0},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.clone=function(e){return void 0===e&&(e=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,e),null!==this.fog&&(e.fog=this.fog.clone()),null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone()),e.autoUpdate=this.autoUpdate,e.matrixAutoUpdate=this.matrixAutoUpdate,e},THREE.Fog=function(e,t,r){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.ShaderChunk={},THREE.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\nfloat square( in float a ) { return a*a; }\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\nfloat average( in float a ) { return a; }\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\n}\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n	return normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal) {\n	float distance = dot( planeNormal, point-pointOnPlane );\n	return point - distance * planeNormal;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return pointOnLine + lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) );\n}\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\n	if ( decayExponent > 0.0 ) {\n	  return pow( saturate( 1.0 - lightDistance / cutoffDistance ), decayExponent );\n	}\n	return 1.0;\n}\n\nvec3 inputToLinear( in vec3 a ) {\n#ifdef GAMMA_INPUT\n	return pow( a, vec3( float( GAMMA_FACTOR ) ) );\n#else\n	return a;\n#endif\n}\nvec3 linearToOutput( in vec3 a ) {\n#ifdef GAMMA_OUTPUT\n	return pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n#else\n	return a;\n#endif\n}\n",THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n	if ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n	vec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\n\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n	#ifdef DOUBLE_SIDED\n\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n		#ifdef WRAP_AROUND\n\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n		#endif\n\n	#endif\n\n	#ifdef WRAP_AROUND\n\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n		#ifdef DOUBLE_SIDED\n\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n		#endif\n\n	#endif\n\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n	#ifdef DOUBLE_SIDED\n\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n	#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n		#ifdef DOUBLE_SIDED\n\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n			#ifdef WRAP_AROUND\n\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n			#endif\n\n		#endif\n\n		#ifdef WRAP_AROUND\n\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n			#ifdef DOUBLE_SIDED\n\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n			#endif\n\n		#endif\n\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * attenuation;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * attenuation;\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			float attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n			lVector = normalize( lVector );\n\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n			#ifdef DOUBLE_SIDED\n\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n				#ifdef WRAP_AROUND\n\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n				#endif\n\n			#endif\n\n			#ifdef WRAP_AROUND\n\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n				#ifdef DOUBLE_SIDED\n\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n				#endif\n\n			#endif\n\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * attenuation * spotEffect;\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * attenuation * spotEffect;\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\n\n		float dotProduct = dot( transformedNormal, lVector );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n\nvLightFront += ambientLightColor;\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack += ambientLightColor;\n\n#endif\n",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n	uniform vec4 offsetRepeat;\n	uniform sampler2D map;\n\n#endif\n",THREE.ShaderChunk.default_vertex="#ifdef USE_SKINNING\n\n	vec4 mvPosition = modelViewMatrix * skinned;\n\n#elif defined( USE_MORPHTARGETS )\n\n	vec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#else\n\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n",THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	#ifdef USE_MORPHNORMALS\n\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n	#else\n\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif",THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n\n#endif",THREE.ShaderChunk.lights_phong_fragment="#ifndef FLAT_SHADED\n\n	vec3 normal = normalize( vNormal );\n\n	#ifdef DOUBLE_SIDED\n\n		normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n	#endif\n\n#else\n\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n\n#endif\n\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\nvec3 totalDiffuseLight = vec3( 0.0 );\nvec3 totalSpecularLight = vec3( 0.0 );\n\n#if MAX_POINT_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n		lVector = normalize( lVector );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n\n		#ifdef WRAP_AROUND\n\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		totalDiffuseLight += pointLightColor[ i ] * pointDiffuseWeight * attenuation;\n\n				// specular\n\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		totalSpecularLight += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * attenuation * specularNormalization;\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n		lVector = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			// diffuse\n\n			float dotProduct = dot( normal, lVector );\n\n			#ifdef WRAP_AROUND\n\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n			#else\n\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n\n			#endif\n\n			totalDiffuseLight += spotLightColor[ i ] * spotDiffuseWeight * attenuation * spotEffect;\n\n			// specular\n\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			totalSpecularLight += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * attenuation * specularNormalization * spotEffect;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\n\n		// diffuse\n\n		float dotProduct = dot( normal, dirVector );\n\n		#ifdef WRAP_AROUND\n\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		totalDiffuseLight += directionalLightColor[ i ] * dirDiffuseWeight;\n\n		// specular\n\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n		/*\n		// fresnel term from skin shader\n		const float F0 = 0.128;\n\n		float base = 1.0 - dot( viewPosition, dirHalfVector );\n		float exponential = pow( base, 5.0 );\n\n		float fresnel = exponential + F0 * ( 1.0 - exponential );\n		*/\n\n		/*\n		// fresnel term from fresnel shader\n		const float mFresnelBias = 0.08;\n		const float mFresnelScale = 0.3;\n		const float mFresnelPower = 5.0;\n\n		float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n		*/\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		// 		dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		totalSpecularLight += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		totalDiffuseLight += hemiColor;\n\n		// specular (sky light)\n\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n		// specular (ground light)\n\n		vec3 lVectorGround = -lVector;\n\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n		float dotProductGround = dot( normal, lVectorGround );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		totalSpecularLight += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n	}\n\n#endif\n\n#ifdef METAL\n\n	outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) * specular + totalSpecularLight + emissive;\n\n#else\n\n	outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) + totalSpecularLight + emissive;\n\n#endif\n",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif",
THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n	vec3 morphedNormal = vec3( 0.0 );\n\n	morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n	morphedNormal += normal;\n\n#endif",THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n	// Per-Pixel Tangent Space Normal Mapping\n	// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n",THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n\n#endif",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n	}\n\n#endif",THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	texelColor.xyz = inputToLinear( texelColor.xyz );\n\n	diffuseColor *= texelColor;\n\n#endif",THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n	vUv2 = uv2;\n\n#endif",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n	diffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n	vColor.xyz = inputToLinear( color.xyz );\n\n#endif",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n	#ifdef USE_MORPHTARGETS\n\n	vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n	vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n	#endif\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n\n#endif\n",THREE.ShaderChunk.linear_to_gamma_fragment="\n	outgoingLight = linearToOutput( outgoingLight );\n",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif",THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n",THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// Transforming Normal Vectors with the Inverse Transformation\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n		#ifdef ENVMAP_MODE_REFLECTION\n\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n		#else\n\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		#endif\n\n	#else\n\n		vec3 reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n	#else\n		float flipNormal = 1.0;\n	#endif\n\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n\n	envColor.xyz = inputToLinear( envColor.xyz );\n\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_MIX )\n\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_ADD )\n\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\n		fogFactor = whiteCompliment( fogFactor );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	outgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n	// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n	// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n	// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif\n",THREE.ShaderChunk.defaultnormal_vertex="#ifdef USE_SKINNING\n\n	vec3 objectNormal = skinnedNormal.xyz;\n\n#elif defined( USE_MORPHNORMALS )\n\n	vec3 objectNormal = morphedNormal;\n\n#else\n\n	vec3 objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n",THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n#endif\n",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n	outgoingLight *= diffuseColor.xyz * texture2D( lightMap, vUv2 ).xyz;\n\n#endif",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n	diffuseColor.rgb *= vColor;\n\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n	morphed += position;\n\n#endif",THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	vec3 worldNormal = transformDirection( objectNormal, modelMatrix );\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	#ifdef ENVMAP_MODE_REFLECTION\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	#else\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n	#ifdef SHADOWMAP_DEBUG\n\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n	#endif\n\n	#ifdef SHADOWMAP_CASCADE\n\n		int inFrustumCount = 0;\n\n	#endif\n\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n				// if ( something && something ) breaks ATI OpenGL shader compiler\n				// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n				// don't shadow pixels outside of light frustum\n				// use just first frustum (for cascades)\n				// don't shadow pixels behind far plane of light frustum\n\n		#ifdef SHADOWMAP_CASCADE\n\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n		#else\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		#endif\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n			shadowCoord.z += shadowBias[ i ];\n\n			#if defined( SHADOWMAP_TYPE_PCF )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n		/*\n						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n						// must enroll loop manually\n\n				for ( float y = -1.25; y <= 1.25; y += 1.25 )\n					for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n						vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n								// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n								//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n						float fDepth = unpackDepth( rgbaDepth );\n\n						if ( fDepth < shadowCoord.z )\n							shadow += 1.0;\n\n				}\n\n				shadow /= 9.0;\n\n		*/\n\n				const float shadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#else\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n\n		// spot with multiple shadows is darker\n\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n		// spot with multiple shadows has the same color as single shadow spot\n\n		// 					shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n			#endif\n\n		}\n\n\n		#ifdef SHADOWMAP_DEBUG\n\n			#ifdef SHADOWMAP_CASCADE\n\n				if ( inFrustum && inFrustumCount == 1 ) outgoingLight *= frustumColors[ i ];\n\n			#else\n\n				if ( inFrustum ) outgoingLight *= frustumColors[ i ];\n\n			#endif\n\n		#endif\n\n	}\n\n	// NOTE: I am unsure if this is correct in linear space.  -bhouston, Dec 29, 2014\n	shadowColor = inputToLinear( shadowColor );\n\n	outgoingLight = outgoingLight * shadowColor;\n\n#endif\n",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#elif defined( USE_MORPHTARGETS )\n\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n\n	#endif\n\n#endif",THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n",THREE.UniformsUtils={merge:function(e){for(var t={},r=0;r<e.length;r++){var i,n=this.clone(e[r]);for(i in n)t[i]=n[i]}return t},clone:function(e){var t,r={};for(t in e){r[t]={};for(var i in e[t]){var n=e[t][i];r[t][i]=n instanceof THREE.Color||n instanceof THREE.Vector2||n instanceof THREE.Vector3||n instanceof THREE.Vector4||n instanceof THREE.Matrix4||n instanceof THREE.Texture?n.clone():n instanceof Array?n.slice():n}}return r}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},pointLightDecay:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]},spotLightDecay:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"	#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	outgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	#ifdef DOUBLE_SIDED\n		if ( gl_FrontFacing )\n			outgoingLight += diffuseColor.rgb * vLightFront + emissive;\n		else\n			outgoingLight += diffuseColor.rgb * vLightBack + emissive;\n	#else\n		outgoingLight += diffuseColor.rgb * vLightFront + emissive;\n	#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),
fragmentShader:["#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	#ifdef USE_SIZEATTENUATION\n		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n	#else\n		gl_PointSize = size;\n	#endif\n	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,"	outgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,"	outgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;\nuniform float mFar;\nuniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	float color = 1.0 - smoothstep( mNear, mFar, depth );\n	gl_FragColor = vec4( vec3( color ), opacity );\n}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n	vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {\nvec3 direction = normalize( vWorldPosition );\nvec2 sampleUV;\nsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\nsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\ngl_FragColor = texture2D( tEquirect, sampleUV );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {\n	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n	res -= res.xxyz * bit_mask;\n	return res;\n}\nvoid main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT\n		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n	#else\n		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n	#endif\n}"].join("\n")}},THREE.WebGLRenderer=function(e){function t(e){var t=e.geometry;e=e.material;var r=t.vertices.length;if(e.attributes){void 0===t.__webglCustomAttributesList&&(t.__webglCustomAttributesList=[]);for(var i in e.attributes){var n=e.attributes[i];if(!n.__webglInitialized||n.createUniqueBuffers){n.__webglInitialized=!0;var o=1;"v2"===n.type?o=2:"v3"===n.type?o=3:"v4"===n.type?o=4:"c"===n.type&&(o=3),n.size=o,n.array=new Float32Array(r*o),n.buffer=Y.createBuffer(),n.buffer.belongsToAttribute=i,n.needsUpdate=!0}t.__webglCustomAttributesList.push(n)}}}function r(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function i(e,t,r,i){r=r.attributes;var n=t.attributes;t=t.attributesKeys;for(var o=0,a=t.length;a>o;o++){var s=t[o],h=n[s];if(h>=0){var l=r[s];void 0!==l?(s=l.itemSize,Y.bindBuffer(Y.ARRAY_BUFFER,l.buffer),ge.enableAttribute(h),Y.vertexAttribPointer(h,s,Y.FLOAT,!1,0,i*s*4)):void 0!==e.defaultAttributeValues&&(2===e.defaultAttributeValues[s].length?Y.vertexAttrib2fv(h,e.defaultAttributeValues[s]):3===e.defaultAttributeValues[s].length&&Y.vertexAttrib3fv(h,e.defaultAttributeValues[s]))}}ge.disableUnusedAttributes()}function n(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function o(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function a(e,t){return t[0]-e[0]}function s(e){if(!1!==e.visible){if(!(e instanceof THREE.Scene||e instanceof THREE.Group)){void 0===e.__webglInit&&(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,e.addEventListener("removed",ke));var r=e.geometry;if(void 0!==r&&void 0===r.__webglInit)if(r.__webglInit=!0,r.addEventListener("dispose",Ne),r instanceof THREE.BufferGeometry)K.info.memory.geometries++;else if(e instanceof THREE.Mesh)u(e,r);else if(e instanceof THREE.Line){if(void 0===r.__webglVertexBuffer){r.__webglVertexBuffer=Y.createBuffer(),r.__webglColorBuffer=Y.createBuffer(),r.__webglLineDistanceBuffer=Y.createBuffer(),K.info.memory.geometries++;var i=r.vertices.length;r.__vertexArray=new Float32Array(3*i),r.__colorArray=new Float32Array(3*i),r.__lineDistanceArray=new Float32Array(1*i),r.__webglLineCount=i,t(e),r.verticesNeedUpdate=!0,r.colorsNeedUpdate=!0,r.lineDistancesNeedUpdate=!0}}else e instanceof THREE.PointCloud&&void 0===r.__webglVertexBuffer&&(r.__webglVertexBuffer=Y.createBuffer(),r.__webglColorBuffer=Y.createBuffer(),K.info.memory.geometries++,i=r.vertices.length,r.__vertexArray=new Float32Array(3*i),r.__colorArray=new Float32Array(3*i),r.__webglParticleCount=i,t(e),r.verticesNeedUpdate=!0,r.colorsNeedUpdate=!0);if(void 0===e.__webglActive)if(e.__webglActive=!0,e instanceof THREE.Mesh){if(r instanceof THREE.BufferGeometry)E(G,r,e);else if(r instanceof THREE.Geometry)for(var r=je[r.id],i=0,n=r.length;n>i;i++)E(G,r[i],e)}else e instanceof THREE.Line||e instanceof THREE.PointCloud?E(G,r,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&I.push({id:null,object:e,opaque:null,transparent:null,z:0});if(e instanceof THREE.Light)O.push(e);else if(e instanceof THREE.Sprite)X.push(e);else if(e instanceof THREE.LensFlare)q.push(e);else if((r=G[e.id])&&(!1===e.frustumCulled||!0===le.intersectsObject(e)))for(i=0,n=r.length;n>i;i++){var o=r[i],a=o,h=a.object,l=a.buffer,c=h.geometry,h=h.material;h instanceof THREE.MeshFaceMaterial?(h=h.materials[c instanceof THREE.BufferGeometry?0:l.materialIndex],a.material=h,h.transparent?j.push(a):W.push(a)):h&&(a.material=h,h.transparent?j.push(a):W.push(a)),o.render=!0,!0===K.sortObjects&&(ue.setFromMatrixPosition(e.matrixWorld),ue.applyProjection(ce),o.z=ue.z)}}for(i=0,n=e.children.length;n>i;i++)s(e.children[i])}}function h(e,t,r,i,n){for(var o,a=0,s=e.length;s>a;a++){o=e[a];var h=o.object,l=o.buffer;if(y(h,t),n)o=n;else{if(o=o.material,!o)continue;m(o)}K.setMaterialFaces(o),l instanceof THREE.BufferGeometry?K.renderBufferDirect(t,r,i,o,l,h):K.renderBuffer(t,r,i,o,l,h)}}function l(e,t,r,i,n,o){for(var a,s=0,h=e.length;h>s;s++){a=e[s];var l=a.object;if(l.visible){if(o)a=o;else{if(a=a[t],!a)continue;m(a)}K.renderImmediateObject(r,i,n,a,l)}}}function c(e){var t=e.object.material;t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)}function u(e,t){var i=e.material,n=!1;if(void 0===je[t.id]||!0===t.groupsNeedUpdate){delete G[e.id];for(var o,a,s=je,h=t.id,i=i instanceof THREE.MeshFaceMaterial,l=Te.get("OES_element_index_uint")?4294967296:65535,n={},c=t.morphTargets.length,u=t.morphNormals.length,f={},p=[],d=0,m=t.faces.length;m>d;d++){o=t.faces[d];var g=i?o.materialIndex:0;g in n||(n[g]={hash:g,counter:0}),o=n[g].hash+"_"+n[g].counter,o in f||(a={id:Xe++,faces3:[],materialIndex:g,vertices:0,numMorphTargets:c,numMorphNormals:u},f[o]=a,p.push(a)),f[o].vertices+3>l&&(n[g].counter+=1,o=n[g].hash+"_"+n[g].counter,o in f||(a={id:Xe++,faces3:[],materialIndex:g,vertices:0,numMorphTargets:c,numMorphNormals:u},f[o]=a,p.push(a))),f[o].faces3.push(d),f[o].vertices+=3}s[h]=p,t.groupsNeedUpdate=!1}for(s=je[t.id],h=0,i=s.length;i>h;h++){if(l=s[h],void 0===l.__webglVertexBuffer){if(n=l,n.__webglVertexBuffer=Y.createBuffer(),n.__webglNormalBuffer=Y.createBuffer(),n.__webglTangentBuffer=Y.createBuffer(),n.__webglColorBuffer=Y.createBuffer(),n.__webglUVBuffer=Y.createBuffer(),n.__webglUV2Buffer=Y.createBuffer(),n.__webglSkinIndicesBuffer=Y.createBuffer(),n.__webglSkinWeightsBuffer=Y.createBuffer(),n.__webglFaceBuffer=Y.createBuffer(),n.__webglLineBuffer=Y.createBuffer(),u=n.numMorphTargets)for(n.__webglMorphTargetsBuffers=[],c=0;u>c;c++)n.__webglMorphTargetsBuffers.push(Y.createBuffer());if(u=n.numMorphNormals)for(n.__webglMorphNormalsBuffers=[],c=0;u>c;c++)n.__webglMorphNormalsBuffers.push(Y.createBuffer());if(K.info.memory.geometries++,n=l,d=e,m=d.geometry,u=n.faces3,c=3*u.length,f=1*u.length,p=3*u.length,u=r(d,n),n.__vertexArray=new Float32Array(3*c),n.__normalArray=new Float32Array(3*c),n.__colorArray=new Float32Array(3*c),n.__uvArray=new Float32Array(2*c),1<m.faceVertexUvs.length&&(n.__uv2Array=new Float32Array(2*c)),m.hasTangents&&(n.__tangentArray=new Float32Array(4*c)),d.geometry.skinWeights.length&&d.geometry.skinIndices.length&&(n.__skinIndexArray=new Float32Array(4*c),n.__skinWeightArray=new Float32Array(4*c)),d=null!==Te.get("OES_element_index_uint")&&f>21845?Uint32Array:Uint16Array,n.__typeArray=d,n.__faceArray=new d(3*f),n.__lineArray=new d(2*p),m=n.numMorphTargets)for(n.__morphTargetsArrays=[],d=0;m>d;d++)n.__morphTargetsArrays.push(new Float32Array(3*c));if(m=n.numMorphNormals)for(n.__morphNormalsArrays=[],d=0;m>d;d++)n.__morphNormalsArrays.push(new Float32Array(3*c));if(n.__webglFaceCount=3*f,n.__webglLineCount=2*p,u.attributes)for(f in void 0===n.__webglCustomAttributesList&&(n.__webglCustomAttributesList=[]),f=void 0,u.attributes){var T,p=u.attributes[f],d={};for(T in p)d[T]=p[T];(!d.__webglInitialized||d.createUniqueBuffers)&&(d.__webglInitialized=!0,m=1,"v2"===d.type?m=2:"v3"===d.type?m=3:"v4"===d.type?m=4:"c"===d.type&&(m=3),d.size=m,d.array=new Float32Array(c*m),d.buffer=Y.createBuffer(),d.buffer.belongsToAttribute=f,p.needsUpdate=!0,d.__original=p),n.__webglCustomAttributesList.push(d)}n.__inittedArrays=!0,t.verticesNeedUpdate=!0,t.morphTargetsNeedUpdate=!0,t.elementsNeedUpdate=!0,t.uvsNeedUpdate=!0,t.normalsNeedUpdate=!0,t.tangentsNeedUpdate=!0,n=t.colorsNeedUpdate=!0}else n=!1;(n||void 0===e.__webglActive)&&E(G,l,e)}e.__webglActive=!0}function E(e,t,r){var i=r.id;e[i]=e[i]||[],e[i].push({id:i,buffer:t,object:r,material:null,z:0})}function f(e){var t=e.geometry;if(t instanceof THREE.BufferGeometry)for(var i=t.attributes,n=t.attributesKeys,o=0,a=n.length;a>o;o++){var s=n[o],h=i[s],l="index"===s?Y.ELEMENT_ARRAY_BUFFER:Y.ARRAY_BUFFER;void 0===h.buffer?(h.buffer=Y.createBuffer(),Y.bindBuffer(l,h.buffer),Y.bufferData(l,h.array,h instanceof THREE.DynamicBufferAttribute?Y.DYNAMIC_DRAW:Y.STATIC_DRAW),h.needsUpdate=!1):!0===h.needsUpdate&&(Y.bindBuffer(l,h.buffer),void 0===h.updateRange||-1===h.updateRange.count?Y.bufferSubData(l,0,h.array):0===h.updateRange.count?console.error("THREE.WebGLRenderer.updateObject: using updateRange for THREE.DynamicBufferAttribute and marked as needsUpdate but count is 0, ensure you are using set methods or updating manually."):(Y.bufferSubData(l,h.updateRange.offset*h.array.BYTES_PER_ELEMENT,h.array.subarray(h.updateRange.offset,h.updateRange.offset+h.updateRange.count)),h.updateRange.count=0),h.needsUpdate=!1)}else if(e instanceof THREE.Mesh){!0===t.groupsNeedUpdate&&u(e,t);for(var c=je[t.id],o=0,E=c.length;E>o;o++){var f=c[o],m=r(e,f),g=m.attributes&&p(m);if(t.verticesNeedUpdate||t.morphTargetsNeedUpdate||t.elementsNeedUpdate||t.uvsNeedUpdate||t.normalsNeedUpdate||t.colorsNeedUpdate||t.tangentsNeedUpdate||g){var T=f,v=e,y=Y.DYNAMIC_DRAW,R=!t.dynamic,H=m;if(T.__inittedArrays){var x=!1==H instanceof THREE.MeshPhongMaterial&&H.shading===THREE.FlatShading,b=void 0,_=void 0,w=void 0,M=void 0,S=void 0,C=void 0,A=void 0,L=void 0,P=void 0,F=void 0,B=void 0,U=void 0,D=void 0,V=void 0,k=void 0,N=void 0,z=void 0,O=void 0,G=void 0,I=void 0,W=void 0,j=void 0,X=void 0,q=void 0,K=void 0,Q=void 0,Z=void 0,J=void 0,$=void 0,ee=void 0,te=void 0,re=void 0,ie=void 0,ne=void 0,oe=void 0,ae=void 0,se=void 0,he=void 0,le=void 0,ce=void 0,ue=0,Ee=0,fe=0,pe=0,de=0,me=0,ge=0,Te=0,ve=0,ye=0,Re=0,He=0,xe=void 0,be=T.__vertexArray,_e=T.__uvArray,we=T.__uv2Array,Me=T.__normalArray,Se=T.__tangentArray,Ce=T.__colorArray,Ae=T.__skinIndexArray,Le=T.__skinWeightArray,Pe=T.__morphTargetsArrays,Fe=T.__morphNormalsArrays,Be=T.__webglCustomAttributesList,Ue=void 0,De=T.__faceArray,Ve=T.__lineArray,ke=v.geometry,Ne=ke.elementsNeedUpdate,ze=ke.uvsNeedUpdate,Oe=ke.normalsNeedUpdate,Ge=ke.tangentsNeedUpdate,Ie=ke.colorsNeedUpdate,We=ke.morphTargetsNeedUpdate,Xe=ke.vertices,qe=T.faces3,Ye=ke.faces,Ke=ke.faceVertexUvs[0],Qe=ke.faceVertexUvs[1],Ze=ke.skinIndices,Je=ke.skinWeights,$e=ke.morphTargets,et=ke.morphNormals;if(ke.verticesNeedUpdate){for(b=0,_=qe.length;_>b;b++)M=Ye[qe[b]],U=Xe[M.a],D=Xe[M.b],V=Xe[M.c],be[Ee]=U.x,be[Ee+1]=U.y,be[Ee+2]=U.z,be[Ee+3]=D.x,be[Ee+4]=D.y,be[Ee+5]=D.z,be[Ee+6]=V.x,be[Ee+7]=V.y,be[Ee+8]=V.z,Ee+=9;Y.bindBuffer(Y.ARRAY_BUFFER,T.__webglVertexBuffer),Y.bufferData(Y.ARRAY_BUFFER,be,y)}if(We)for(oe=0,ae=$e.length;ae>oe;oe++){for(b=Re=0,_=qe.length;_>b;b++)le=qe[b],M=Ye[le],U=$e[oe].vertices[M.a],D=$e[oe].vertices[M.b],V=$e[oe].vertices[M.c],se=Pe[oe],se[Re]=U.x,se[Re+1]=U.y,se[Re+2]=U.z,se[Re+3]=D.x,se[Re+4]=D.y,se[Re+5]=D.z,se[Re+6]=V.x,se[Re+7]=V.y,se[Re+8]=V.z,H.morphNormals&&(x?I=G=O=et[oe].faceNormals[le]:(ce=et[oe].vertexNormals[le],O=ce.a,G=ce.b,I=ce.c),he=Fe[oe],he[Re]=O.x,he[Re+1]=O.y,he[Re+2]=O.z,he[Re+3]=G.x,he[Re+4]=G.y,he[Re+5]=G.z,he[Re+6]=I.x,he[Re+7]=I.y,he[Re+8]=I.z),Re+=9;Y.bindBuffer(Y.ARRAY_BUFFER,T.__webglMorphTargetsBuffers[oe]),Y.bufferData(Y.ARRAY_BUFFER,Pe[oe],y),H.morphNormals&&(Y.bindBuffer(Y.ARRAY_BUFFER,T.__webglMorphNormalsBuffers[oe]),Y.bufferData(Y.ARRAY_BUFFER,Fe[oe],y))}if(Je.length){for(b=0,_=qe.length;_>b;b++)M=Ye[qe[b]],q=Je[M.a],K=Je[M.b],Q=Je[M.c],Le[ye]=q.x,Le[ye+1]=q.y,Le[ye+2]=q.z,Le[ye+3]=q.w,Le[ye+4]=K.x,Le[ye+5]=K.y,Le[ye+6]=K.z,Le[ye+7]=K.w,Le[ye+8]=Q.x,Le[ye+9]=Q.y,Le[ye+10]=Q.z,Le[ye+11]=Q.w,Z=Ze[M.a],J=Ze[M.b],$=Ze[M.c],Ae[ye]=Z.x,Ae[ye+1]=Z.y,Ae[ye+2]=Z.z,Ae[ye+3]=Z.w,Ae[ye+4]=J.x,Ae[ye+5]=J.y,Ae[ye+6]=J.z,Ae[ye+7]=J.w,Ae[ye+8]=$.x,Ae[ye+9]=$.y,Ae[ye+10]=$.z,Ae[ye+11]=$.w,ye+=12;ye>0&&(Y.bindBuffer(Y.ARRAY_BUFFER,T.__webglSkinIndicesBuffer),Y.bufferData(Y.ARRAY_BUFFER,Ae,y),Y.bindBuffer(Y.ARRAY_BUFFER,T.__webglSkinWeightsBuffer),Y.bufferData(Y.ARRAY_BUFFER,Le,y))}if(Ie){for(b=0,_=qe.length;_>b;b++)M=Ye[qe[b]],A=M.vertexColors,L=M.color,3===A.length&&H.vertexColors===THREE.VertexColors?(W=A[0],j=A[1],X=A[2]):X=j=W=L,Ce[ve]=W.r,Ce[ve+1]=W.g,Ce[ve+2]=W.b,Ce[ve+3]=j.r,Ce[ve+4]=j.g,Ce[ve+5]=j.b,Ce[ve+6]=X.r,Ce[ve+7]=X.g,Ce[ve+8]=X.b,ve+=9;ve>0&&(Y.bindBuffer(Y.ARRAY_BUFFER,T.__webglColorBuffer),Y.bufferData(Y.ARRAY_BUFFER,Ce,y))}if(Ge&&ke.hasTangents){for(b=0,_=qe.length;_>b;b++)M=Ye[qe[b]],P=M.vertexTangents,k=P[0],N=P[1],z=P[2],Se[ge]=k.x,Se[ge+1]=k.y,Se[ge+2]=k.z,Se[ge+3]=k.w,Se[ge+4]=N.x,Se[ge+5]=N.y,Se[ge+6]=N.z,Se[ge+7]=N.w,Se[ge+8]=z.x,Se[ge+9]=z.y,Se[ge+10]=z.z,Se[ge+11]=z.w,ge+=12;Y.bindBuffer(Y.ARRAY_BUFFER,T.__webglTangentBuffer),Y.bufferData(Y.ARRAY_BUFFER,Se,y)}if(Oe){for(b=0,_=qe.length;_>b;b++)if(M=Ye[qe[b]],S=M.vertexNormals,C=M.normal,3===S.length&&!1===x)for(ee=0;3>ee;ee++)re=S[ee],Me[me]=re.x,Me[me+1]=re.y,Me[me+2]=re.z,me+=3;else for(ee=0;3>ee;ee++)Me[me]=C.x,Me[me+1]=C.y,Me[me+2]=C.z,me+=3;Y.bindBuffer(Y.ARRAY_BUFFER,T.__webglNormalBuffer),Y.bufferData(Y.ARRAY_BUFFER,Me,y)}if(ze&&Ke){for(b=0,_=qe.length;_>b;b++)if(w=qe[b],F=Ke[w],void 0!==F)for(ee=0;3>ee;ee++)ie=F[ee],_e[fe]=ie.x,_e[fe+1]=ie.y,fe+=2;fe>0&&(Y.bindBuffer(Y.ARRAY_BUFFER,T.__webglUVBuffer),Y.bufferData(Y.ARRAY_BUFFER,_e,y))}if(ze&&Qe){for(b=0,_=qe.length;_>b;b++)if(w=qe[b],B=Qe[w],void 0!==B)for(ee=0;3>ee;ee++)ne=B[ee],we[pe]=ne.x,we[pe+1]=ne.y,pe+=2;pe>0&&(Y.bindBuffer(Y.ARRAY_BUFFER,T.__webglUV2Buffer),Y.bufferData(Y.ARRAY_BUFFER,we,y))}if(Ne){for(b=0,_=qe.length;_>b;b++)De[de]=ue,De[de+1]=ue+1,De[de+2]=ue+2,de+=3,Ve[Te]=ue,Ve[Te+1]=ue+1,Ve[Te+2]=ue,Ve[Te+3]=ue+2,Ve[Te+4]=ue+1,Ve[Te+5]=ue+2,Te+=6,ue+=3;Y.bindBuffer(Y.ELEMENT_ARRAY_BUFFER,T.__webglFaceBuffer),Y.bufferData(Y.ELEMENT_ARRAY_BUFFER,De,y),Y.bindBuffer(Y.ELEMENT_ARRAY_BUFFER,T.__webglLineBuffer),Y.bufferData(Y.ELEMENT_ARRAY_BUFFER,Ve,y)}if(Be)for(ee=0,te=Be.length;te>ee;ee++)if(Ue=Be[ee],Ue.__original.needsUpdate){if(He=0,1===Ue.size){if(void 0===Ue.boundTo||"vertices"===Ue.boundTo)for(b=0,_=qe.length;_>b;b++)M=Ye[qe[b]],Ue.array[He]=Ue.value[M.a],Ue.array[He+1]=Ue.value[M.b],Ue.array[He+2]=Ue.value[M.c],He+=3;else if("faces"===Ue.boundTo)for(b=0,_=qe.length;_>b;b++)xe=Ue.value[qe[b]],Ue.array[He]=xe,Ue.array[He+1]=xe,Ue.array[He+2]=xe,He+=3}else if(2===Ue.size){if(void 0===Ue.boundTo||"vertices"===Ue.boundTo)for(b=0,_=qe.length;_>b;b++)M=Ye[qe[b]],U=Ue.value[M.a],D=Ue.value[M.b],V=Ue.value[M.c],Ue.array[He]=U.x,Ue.array[He+1]=U.y,Ue.array[He+2]=D.x,Ue.array[He+3]=D.y,Ue.array[He+4]=V.x,Ue.array[He+5]=V.y,He+=6;else if("faces"===Ue.boundTo)for(b=0,_=qe.length;_>b;b++)V=D=U=xe=Ue.value[qe[b]],Ue.array[He]=U.x,Ue.array[He+1]=U.y,Ue.array[He+2]=D.x,Ue.array[He+3]=D.y,Ue.array[He+4]=V.x,Ue.array[He+5]=V.y,He+=6}else if(3===Ue.size){var tt;if(tt="c"===Ue.type?["r","g","b"]:["x","y","z"],void 0===Ue.boundTo||"vertices"===Ue.boundTo)for(b=0,_=qe.length;_>b;b++)M=Ye[qe[b]],U=Ue.value[M.a],D=Ue.value[M.b],V=Ue.value[M.c],Ue.array[He]=U[tt[0]],Ue.array[He+1]=U[tt[1]],Ue.array[He+2]=U[tt[2]],Ue.array[He+3]=D[tt[0]],Ue.array[He+4]=D[tt[1]],Ue.array[He+5]=D[tt[2]],Ue.array[He+6]=V[tt[0]],Ue.array[He+7]=V[tt[1]],Ue.array[He+8]=V[tt[2]],He+=9;else if("faces"===Ue.boundTo)for(b=0,_=qe.length;_>b;b++)V=D=U=xe=Ue.value[qe[b]],Ue.array[He]=U[tt[0]],Ue.array[He+1]=U[tt[1]],Ue.array[He+2]=U[tt[2]],Ue.array[He+3]=D[tt[0]],Ue.array[He+4]=D[tt[1]],Ue.array[He+5]=D[tt[2]],Ue.array[He+6]=V[tt[0]],Ue.array[He+7]=V[tt[1]],Ue.array[He+8]=V[tt[2]],He+=9;else if("faceVertices"===Ue.boundTo)for(b=0,_=qe.length;_>b;b++)xe=Ue.value[qe[b]],U=xe[0],D=xe[1],V=xe[2],Ue.array[He]=U[tt[0]],Ue.array[He+1]=U[tt[1]],Ue.array[He+2]=U[tt[2]],Ue.array[He+3]=D[tt[0]],Ue.array[He+4]=D[tt[1]],Ue.array[He+5]=D[tt[2]],Ue.array[He+6]=V[tt[0]],Ue.array[He+7]=V[tt[1]],Ue.array[He+8]=V[tt[2]],He+=9}else if(4===Ue.size)if(void 0===Ue.boundTo||"vertices"===Ue.boundTo)for(b=0,_=qe.length;_>b;b++)M=Ye[qe[b]],U=Ue.value[M.a],D=Ue.value[M.b],V=Ue.value[M.c],Ue.array[He]=U.x,Ue.array[He+1]=U.y,Ue.array[He+2]=U.z,Ue.array[He+3]=U.w,Ue.array[He+4]=D.x,Ue.array[He+5]=D.y,Ue.array[He+6]=D.z,Ue.array[He+7]=D.w,Ue.array[He+8]=V.x,Ue.array[He+9]=V.y,Ue.array[He+10]=V.z,Ue.array[He+11]=V.w,He+=12;else if("faces"===Ue.boundTo)for(b=0,_=qe.length;_>b;b++)V=D=U=xe=Ue.value[qe[b]],Ue.array[He]=U.x,Ue.array[He+1]=U.y,Ue.array[He+2]=U.z,Ue.array[He+3]=U.w,Ue.array[He+4]=D.x,Ue.array[He+5]=D.y,Ue.array[He+6]=D.z,Ue.array[He+7]=D.w,Ue.array[He+8]=V.x,Ue.array[He+9]=V.y,Ue.array[He+10]=V.z,Ue.array[He+11]=V.w,He+=12;else if("faceVertices"===Ue.boundTo)for(b=0,_=qe.length;_>b;b++)xe=Ue.value[qe[b]],U=xe[0],D=xe[1],V=xe[2],Ue.array[He]=U.x,Ue.array[He+1]=U.y,Ue.array[He+2]=U.z,Ue.array[He+3]=U.w,Ue.array[He+4]=D.x,Ue.array[He+5]=D.y,Ue.array[He+6]=D.z,Ue.array[He+7]=D.w,Ue.array[He+8]=V.x,Ue.array[He+9]=V.y,Ue.array[He+10]=V.z,Ue.array[He+11]=V.w,He+=12;Y.bindBuffer(Y.ARRAY_BUFFER,Ue.buffer),Y.bufferData(Y.ARRAY_BUFFER,Ue.array,y)}R&&(delete T.__inittedArrays,delete T.__colorArray,delete T.__normalArray,delete T.__tangentArray,delete T.__uvArray,delete T.__uv2Array,delete T.__faceArray,delete T.__vertexArray,delete T.__lineArray,delete T.__skinIndexArray,delete T.__skinWeightArray)}}}t.verticesNeedUpdate=!1,t.morphTargetsNeedUpdate=!1,t.elementsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.tangentsNeedUpdate=!1,m.attributes&&d(m)}else if(e instanceof THREE.Line){if(m=r(e,t),g=m.attributes&&p(m),t.verticesNeedUpdate||t.colorsNeedUpdate||t.lineDistancesNeedUpdate||g){var rt,it,nt,ot,at,st,ht,lt,ct,ut,Et,ft,pt=Y.DYNAMIC_DRAW,dt=t.vertices,mt=t.colors,gt=t.lineDistances,Tt=dt.length,vt=mt.length,yt=gt.length,Rt=t.__vertexArray,Ht=t.__colorArray,xt=t.__lineDistanceArray,bt=t.colorsNeedUpdate,_t=t.lineDistancesNeedUpdate,wt=t.__webglCustomAttributesList;if(t.verticesNeedUpdate){for(rt=0;Tt>rt;rt++)ot=dt[rt],at=3*rt,Rt[at]=ot.x,Rt[at+1]=ot.y,Rt[at+2]=ot.z;Y.bindBuffer(Y.ARRAY_BUFFER,t.__webglVertexBuffer),Y.bufferData(Y.ARRAY_BUFFER,Rt,pt)}if(bt){for(it=0;vt>it;it++)st=mt[it],at=3*it,Ht[at]=st.r,Ht[at+1]=st.g,Ht[at+2]=st.b;Y.bindBuffer(Y.ARRAY_BUFFER,t.__webglColorBuffer),Y.bufferData(Y.ARRAY_BUFFER,Ht,pt)}if(_t){for(nt=0;yt>nt;nt++)xt[nt]=gt[nt];Y.bindBuffer(Y.ARRAY_BUFFER,t.__webglLineDistanceBuffer),Y.bufferData(Y.ARRAY_BUFFER,xt,pt)}if(wt)for(ht=0,lt=wt.length;lt>ht;ht++)if(ft=wt[ht],ft.needsUpdate&&(void 0===ft.boundTo||"vertices"===ft.boundTo)){if(at=0,ut=ft.value.length,1===ft.size)for(ct=0;ut>ct;ct++)ft.array[ct]=ft.value[ct];else if(2===ft.size)for(ct=0;ut>ct;ct++)Et=ft.value[ct],ft.array[at]=Et.x,ft.array[at+1]=Et.y,at+=2;else if(3===ft.size)if("c"===ft.type)for(ct=0;ut>ct;ct++)Et=ft.value[ct],ft.array[at]=Et.r,ft.array[at+1]=Et.g,ft.array[at+2]=Et.b,at+=3;else for(ct=0;ut>ct;ct++)Et=ft.value[ct],ft.array[at]=Et.x,ft.array[at+1]=Et.y,ft.array[at+2]=Et.z,at+=3;else if(4===ft.size)for(ct=0;ut>ct;ct++)Et=ft.value[ct],ft.array[at]=Et.x,ft.array[at+1]=Et.y,ft.array[at+2]=Et.z,ft.array[at+3]=Et.w,at+=4;Y.bindBuffer(Y.ARRAY_BUFFER,ft.buffer),Y.bufferData(Y.ARRAY_BUFFER,ft.array,pt),ft.needsUpdate=!1}}t.verticesNeedUpdate=!1,t.colorsNeedUpdate=!1,t.lineDistancesNeedUpdate=!1,m.attributes&&d(m)}else if(e instanceof THREE.PointCloud){if(m=r(e,t),g=m.attributes&&p(m),t.verticesNeedUpdate||t.colorsNeedUpdate||g){var Mt,St,Ct,At,Lt,Pt,Ft,Bt,Ut,Dt,Vt,kt=Y.DYNAMIC_DRAW,Nt=t.vertices,zt=Nt.length,Ot=t.colors,Gt=Ot.length,It=t.__vertexArray,Wt=t.__colorArray,jt=t.colorsNeedUpdate,Xt=t.__webglCustomAttributesList;if(t.verticesNeedUpdate){for(Mt=0;zt>Mt;Mt++)Ct=Nt[Mt],At=3*Mt,It[At]=Ct.x,It[At+1]=Ct.y,It[At+2]=Ct.z;Y.bindBuffer(Y.ARRAY_BUFFER,t.__webglVertexBuffer),Y.bufferData(Y.ARRAY_BUFFER,It,kt)}if(jt){for(St=0;Gt>St;St++)Lt=Ot[St],At=3*St,Wt[At]=Lt.r,Wt[At+1]=Lt.g,Wt[At+2]=Lt.b;Y.bindBuffer(Y.ARRAY_BUFFER,t.__webglColorBuffer),Y.bufferData(Y.ARRAY_BUFFER,Wt,kt)}if(Xt)for(Pt=0,Ft=Xt.length;Ft>Pt;Pt++){if(Vt=Xt[Pt],Vt.needsUpdate&&(void 0===Vt.boundTo||"vertices"===Vt.boundTo))if(Ut=Vt.value.length,At=0,1===Vt.size)for(Bt=0;Ut>Bt;Bt++)Vt.array[Bt]=Vt.value[Bt];else if(2===Vt.size)for(Bt=0;Ut>Bt;Bt++)Dt=Vt.value[Bt],Vt.array[At]=Dt.x,Vt.array[At+1]=Dt.y,At+=2;else if(3===Vt.size)if("c"===Vt.type)for(Bt=0;Ut>Bt;Bt++)Dt=Vt.value[Bt],Vt.array[At]=Dt.r,Vt.array[At+1]=Dt.g,Vt.array[At+2]=Dt.b,At+=3;else for(Bt=0;Ut>Bt;Bt++)Dt=Vt.value[Bt],Vt.array[At]=Dt.x,Vt.array[At+1]=Dt.y,Vt.array[At+2]=Dt.z,At+=3;else if(4===Vt.size)for(Bt=0;Ut>Bt;Bt++)Dt=Vt.value[Bt],Vt.array[At]=Dt.x,Vt.array[At+1]=Dt.y,Vt.array[At+2]=Dt.z,Vt.array[At+3]=Dt.w,At+=4;Y.bindBuffer(Y.ARRAY_BUFFER,Vt.buffer),Y.bufferData(Y.ARRAY_BUFFER,Vt.array,kt),Vt.needsUpdate=!1}}t.verticesNeedUpdate=!1,t.colorsNeedUpdate=!1,m.attributes&&d(m)}}function p(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function d(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function m(e){!0===e.transparent?ge.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha):ge.setBlending(THREE.NoBlending),ge.setDepthTest(e.depthTest),ge.setDepthWrite(e.depthWrite),ge.setColorWrite(e.colorWrite),ge.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function g(e,t,r,i,n){var o,a,s,h;if(re=0,i.needsUpdate){i.program&&We(i),i.addEventListener("dispose",Ge);var l=qe[i.type];if(l){var c=THREE.ShaderLib[l];i.__webglShader={uniforms:THREE.UniformsUtils.clone(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader}}else i.__webglShader={uniforms:i.uniforms,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader};for(var u=0,E=0,f=0,p=0,d=0,m=t.length;m>d;d++){var g=t[d];g.onlyShadow||!1===g.visible||(g instanceof THREE.DirectionalLight&&u++,g instanceof THREE.PointLight&&E++,g instanceof THREE.SpotLight&&f++,g instanceof THREE.HemisphereLight&&p++)}o=u,a=E,s=f,h=p;for(var y,b=0,_=0,w=t.length;w>_;_++){var C=t[_];C.castShadow&&(C instanceof THREE.SpotLight&&b++,C instanceof THREE.DirectionalLight&&!C.shadowCascade&&b++)}y=b;var A;if(Me&&n&&n.skeleton&&n.skeleton.useVertexTexture)A=1024;else{var P=Y.getParameter(Y.MAX_VERTEX_UNIFORM_VECTORS),F=Math.floor((P-20)/4);void 0!==n&&n instanceof THREE.SkinnedMesh&&(F=Math.min(n.skeleton.bones.length,F),F<n.skeleton.bones.length&&THREE.warn("WebGLRenderer: too many bones - "+n.skeleton.bones.length+", this GPU supports just "+F+" (try OpenGL instead of ANGLE)")),A=F}var B={precision:L,supportsVertexTextures:we,map:!!i.map,envMap:!!i.envMap,envMapMode:i.envMap&&i.envMap.mapping,lightMap:!!i.lightMap,bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,combine:i.combine,vertexColors:i.vertexColors,fog:r,useFog:i.fog,fogExp:r instanceof THREE.FogExp2,flatShading:i.shading===THREE.FlatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:k,skinning:i.skinning,maxBones:A,useVertexTexture:Me&&n&&n.skeleton&&n.skeleton.useVertexTexture,morphTargets:i.morphTargets,morphNormals:i.morphNormals,maxMorphTargets:K.maxMorphTargets,maxMorphNormals:K.maxMorphNormals,maxDirLights:o,maxPointLights:a,maxSpotLights:s,maxHemiLights:h,maxShadows:y,shadowMapEnabled:K.shadowMapEnabled&&n.receiveShadow&&y>0,shadowMapType:K.shadowMapType,shadowMapDebug:K.shadowMapDebug,shadowMapCascade:K.shadowMapCascade,alphaTest:i.alphaTest,metal:i.metal,wrapAround:i.wrapAround,doubleSided:i.side===THREE.DoubleSide,flipSided:i.side===THREE.BackSide},U=[];if(l?U.push(l):(U.push(i.fragmentShader),U.push(i.vertexShader)),void 0!==i.defines)for(var D in i.defines)U.push(D),U.push(i.defines[D]);for(D in B)U.push(D),U.push(B[D]);for(var V,N=U.join(),z=0,O=Q.length;O>z;z++){var G=Q[z];if(G.code===N){V=G,V.usedTimes++;break}}void 0===V&&(V=new THREE.WebGLProgram(K,N,i,B),Q.push(V),K.info.memory.programs=Q.length),i.program=V;var I=V.attributes;if(i.morphTargets){i.numSupportedMorphTargets=0;for(var W,j="morphTarget",X=0;X<K.maxMorphTargets;X++)W=j+X,0<=I[W]&&i.numSupportedMorphTargets++}if(i.morphNormals)for(i.numSupportedMorphNormals=0,j="morphNormal",X=0;X<K.maxMorphNormals;X++)W=j+X,0<=I[W]&&i.numSupportedMorphNormals++;i.uniformsList=[];for(var q in i.__webglShader.uniforms){
var J=i.program.uniforms[q];J&&i.uniformsList.push([i.__webglShader.uniforms[q],J])}i.needsUpdate=!1}i.morphTargets&&!n.__webglMorphTargetInfluences&&(n.__webglMorphTargetInfluences=new Float32Array(K.maxMorphTargets));var ee=!1,ie=!1,ne=!1,oe=i.program,ae=oe.uniforms,se=i.__webglShader.uniforms;if(oe.id!==Z&&(Y.useProgram(oe.program),Z=oe.id,ne=ie=ee=!0),i.id!==$&&(-1===$&&(ne=!0),$=i.id,ie=!0),(ee||e!==te)&&(Y.uniformMatrix4fv(ae.projectionMatrix,!1,e.projectionMatrix.elements),k&&Y.uniform1f(ae.logDepthBufFC,2/(Math.log(e.far+1)/Math.LN2)),e!==te&&(te=e),(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==ae.cameraPosition&&(ue.setFromMatrixPosition(e.matrixWorld),Y.uniform3f(ae.cameraPosition,ue.x,ue.y,ue.z)),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshBasicMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==ae.viewMatrix&&Y.uniformMatrix4fv(ae.viewMatrix,!1,e.matrixWorldInverse.elements)),i.skinning)if(n.bindMatrix&&null!==ae.bindMatrix&&Y.uniformMatrix4fv(ae.bindMatrix,!1,n.bindMatrix.elements),n.bindMatrixInverse&&null!==ae.bindMatrixInverse&&Y.uniformMatrix4fv(ae.bindMatrixInverse,!1,n.bindMatrixInverse.elements),Me&&n.skeleton&&n.skeleton.useVertexTexture){if(null!==ae.boneTexture){var he=v();Y.uniform1i(ae.boneTexture,he),K.setTexture(n.skeleton.boneTexture,he)}null!==ae.boneTextureWidth&&Y.uniform1i(ae.boneTextureWidth,n.skeleton.boneTextureWidth),null!==ae.boneTextureHeight&&Y.uniform1i(ae.boneTextureHeight,n.skeleton.boneTextureHeight)}else n.skeleton&&n.skeleton.boneMatrices&&null!==ae.boneGlobalMatrices&&Y.uniformMatrix4fv(ae.boneGlobalMatrices,!1,n.skeleton.boneMatrices);if(ie){if(r&&i.fog&&(se.fogColor.value=r.color,r instanceof THREE.Fog?(se.fogNear.value=r.near,se.fogFar.value=r.far):r instanceof THREE.FogExp2&&(se.fogDensity.value=r.density)),i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights){if(fe){var le,ce,de,me,ge,Te,ve,ye,ne=!0,Re=0,He=0,xe=0,be=pe,Se=be.directional.colors,Ce=be.directional.positions,Ae=be.point.colors,Le=be.point.positions,Fe=be.point.distances,Be=be.point.decays,Ue=be.spot.colors,De=be.spot.positions,Ve=be.spot.distances,ke=be.spot.directions,Ne=be.spot.anglesCos,Oe=be.spot.exponents,Ie=be.spot.decays,je=be.hemi.skyColors,Xe=be.hemi.groundColors,Ye=be.hemi.positions,Ke=0,Qe=0,Ze=0,Je=0,$e=0,et=0,tt=0,rt=0,it=0,nt=0,ot=0,at=0;for(le=0,ce=t.length;ce>le;le++)de=t[le],de.onlyShadow||(me=de.color,ve=de.intensity,ye=de.distance,de instanceof THREE.AmbientLight?de.visible&&(Re+=me.r,He+=me.g,xe+=me.b):de instanceof THREE.DirectionalLight?($e+=1,de.visible&&(Ee.setFromMatrixPosition(de.matrixWorld),ue.setFromMatrixPosition(de.target.matrixWorld),Ee.sub(ue),Ee.normalize(),it=3*Ke,Ce[it]=Ee.x,Ce[it+1]=Ee.y,Ce[it+2]=Ee.z,R(Se,it,me,ve),Ke+=1)):de instanceof THREE.PointLight?(et+=1,de.visible&&(nt=3*Qe,R(Ae,nt,me,ve),ue.setFromMatrixPosition(de.matrixWorld),Le[nt]=ue.x,Le[nt+1]=ue.y,Le[nt+2]=ue.z,Fe[Qe]=ye,Be[Qe]=0===de.distance?0:de.decay,Qe+=1)):de instanceof THREE.SpotLight?(tt+=1,de.visible&&(ot=3*Ze,R(Ue,ot,me,ve),Ee.setFromMatrixPosition(de.matrixWorld),De[ot]=Ee.x,De[ot+1]=Ee.y,De[ot+2]=Ee.z,Ve[Ze]=ye,ue.setFromMatrixPosition(de.target.matrixWorld),Ee.sub(ue),Ee.normalize(),ke[ot]=Ee.x,ke[ot+1]=Ee.y,ke[ot+2]=Ee.z,Ne[Ze]=Math.cos(de.angle),Oe[Ze]=de.exponent,Ie[Ze]=0===de.distance?0:de.decay,Ze+=1)):de instanceof THREE.HemisphereLight&&(rt+=1,de.visible&&(Ee.setFromMatrixPosition(de.matrixWorld),Ee.normalize(),at=3*Je,Ye[at]=Ee.x,Ye[at+1]=Ee.y,Ye[at+2]=Ee.z,ge=de.color,Te=de.groundColor,R(je,at,ge,ve),R(Xe,at,Te,ve),Je+=1)));for(le=3*Ke,ce=Math.max(Se.length,3*$e);ce>le;le++)Se[le]=0;for(le=3*Qe,ce=Math.max(Ae.length,3*et);ce>le;le++)Ae[le]=0;for(le=3*Ze,ce=Math.max(Ue.length,3*tt);ce>le;le++)Ue[le]=0;for(le=3*Je,ce=Math.max(je.length,3*rt);ce>le;le++)je[le]=0;for(le=3*Je,ce=Math.max(Xe.length,3*rt);ce>le;le++)Xe[le]=0;be.directional.length=Ke,be.point.length=Qe,be.spot.length=Ze,be.hemi.length=Je,be.ambient[0]=Re,be.ambient[1]=He,be.ambient[2]=xe,fe=!1}if(ne){var st=pe;se.ambientLightColor.value=st.ambient,se.directionalLightColor.value=st.directional.colors,se.directionalLightDirection.value=st.directional.positions,se.pointLightColor.value=st.point.colors,se.pointLightPosition.value=st.point.positions,se.pointLightDistance.value=st.point.distances,se.pointLightDecay.value=st.point.decays,se.spotLightColor.value=st.spot.colors,se.spotLightPosition.value=st.spot.positions,se.spotLightDistance.value=st.spot.distances,se.spotLightDirection.value=st.spot.directions,se.spotLightAngleCos.value=st.spot.anglesCos,se.spotLightExponent.value=st.spot.exponents,se.spotLightDecay.value=st.spot.decays,se.hemisphereLightSkyColor.value=st.hemi.skyColors,se.hemisphereLightGroundColor.value=st.hemi.groundColors,se.hemisphereLightDirection.value=st.hemi.positions,T(se,!0)}else T(se,!1)}if(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial){se.opacity.value=i.opacity,se.diffuse.value=i.color,se.map.value=i.map,se.lightMap.value=i.lightMap,se.specularMap.value=i.specularMap,se.alphaMap.value=i.alphaMap,i.bumpMap&&(se.bumpMap.value=i.bumpMap,se.bumpScale.value=i.bumpScale),i.normalMap&&(se.normalMap.value=i.normalMap,se.normalScale.value.copy(i.normalScale));var ht;if(i.map?ht=i.map:i.specularMap?ht=i.specularMap:i.normalMap?ht=i.normalMap:i.bumpMap?ht=i.bumpMap:i.alphaMap&&(ht=i.alphaMap),void 0!==ht){var lt=ht.offset,ct=ht.repeat;se.offsetRepeat.value.set(lt.x,lt.y,ct.x,ct.y)}se.envMap.value=i.envMap,se.flipEnvMap.value=i.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,se.reflectivity.value=i.reflectivity,se.refractionRatio.value=i.refractionRatio}if(i instanceof THREE.LineBasicMaterial)se.diffuse.value=i.color,se.opacity.value=i.opacity;else if(i instanceof THREE.LineDashedMaterial)se.diffuse.value=i.color,se.opacity.value=i.opacity,se.dashSize.value=i.dashSize,se.totalSize.value=i.dashSize+i.gapSize,se.scale.value=i.scale;else if(i instanceof THREE.PointCloudMaterial){if(se.psColor.value=i.color,se.opacity.value=i.opacity,se.size.value=i.size,se.scale.value=S.height/2,se.map.value=i.map,null!==i.map){var ut=i.map.offset,Et=i.map.repeat;se.offsetRepeat.value.set(ut.x,ut.y,Et.x,Et.y)}}else i instanceof THREE.MeshPhongMaterial?(se.shininess.value=i.shininess,se.emissive.value=i.emissive,se.specular.value=i.specular,i.wrapAround&&se.wrapRGB.value.copy(i.wrapRGB)):i instanceof THREE.MeshLambertMaterial?(se.emissive.value=i.emissive,i.wrapAround&&se.wrapRGB.value.copy(i.wrapRGB)):i instanceof THREE.MeshDepthMaterial?(se.mNear.value=e.near,se.mFar.value=e.far,se.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(se.opacity.value=i.opacity);if(n.receiveShadow&&!i._shadowPass&&se.shadowMatrix)for(var ft=0,pt=0,dt=t.length;dt>pt;pt++){var mt=t[pt];mt.castShadow&&(mt instanceof THREE.SpotLight||mt instanceof THREE.DirectionalLight&&!mt.shadowCascade)&&(se.shadowMap.value[ft]=mt.shadowMap,se.shadowMapSize.value[ft]=mt.shadowMapSize,se.shadowMatrix.value[ft]=mt.shadowMatrix,se.shadowDarkness.value[ft]=mt.shadowDarkness,se.shadowBias.value[ft]=mt.shadowBias,ft++)}for(var gt,Tt,vt,yt=i.uniformsList,Rt=0,Ht=yt.length;Ht>Rt;Rt++){var xt=yt[Rt][0];if(!1!==xt.needsUpdate){var bt=xt.type,_t=xt.value,wt=yt[Rt][1];switch(bt){case"1i":Y.uniform1i(wt,_t);break;case"1f":Y.uniform1f(wt,_t);break;case"2f":Y.uniform2f(wt,_t[0],_t[1]);break;case"3f":Y.uniform3f(wt,_t[0],_t[1],_t[2]);break;case"4f":Y.uniform4f(wt,_t[0],_t[1],_t[2],_t[3]);break;case"1iv":Y.uniform1iv(wt,_t);break;case"3iv":Y.uniform3iv(wt,_t);break;case"1fv":Y.uniform1fv(wt,_t);break;case"2fv":Y.uniform2fv(wt,_t);break;case"3fv":Y.uniform3fv(wt,_t);break;case"4fv":Y.uniform4fv(wt,_t);break;case"Matrix3fv":Y.uniformMatrix3fv(wt,!1,_t);break;case"Matrix4fv":Y.uniformMatrix4fv(wt,!1,_t);break;case"i":Y.uniform1i(wt,_t);break;case"f":Y.uniform1f(wt,_t);break;case"v2":Y.uniform2f(wt,_t.x,_t.y);break;case"v3":Y.uniform3f(wt,_t.x,_t.y,_t.z);break;case"v4":Y.uniform4f(wt,_t.x,_t.y,_t.z,_t.w);break;case"c":Y.uniform3f(wt,_t.r,_t.g,_t.b);break;case"iv1":Y.uniform1iv(wt,_t);break;case"iv":Y.uniform3iv(wt,_t);break;case"fv1":Y.uniform1fv(wt,_t);break;case"fv":Y.uniform3fv(wt,_t);break;case"v2v":void 0===xt._array&&(xt._array=new Float32Array(2*_t.length));for(var Mt=0,St=_t.length;St>Mt;Mt++)vt=2*Mt,xt._array[vt]=_t[Mt].x,xt._array[vt+1]=_t[Mt].y;Y.uniform2fv(wt,xt._array);break;case"v3v":for(void 0===xt._array&&(xt._array=new Float32Array(3*_t.length)),Mt=0,St=_t.length;St>Mt;Mt++)vt=3*Mt,xt._array[vt]=_t[Mt].x,xt._array[vt+1]=_t[Mt].y,xt._array[vt+2]=_t[Mt].z;Y.uniform3fv(wt,xt._array);break;case"v4v":for(void 0===xt._array&&(xt._array=new Float32Array(4*_t.length)),Mt=0,St=_t.length;St>Mt;Mt++)vt=4*Mt,xt._array[vt]=_t[Mt].x,xt._array[vt+1]=_t[Mt].y,xt._array[vt+2]=_t[Mt].z,xt._array[vt+3]=_t[Mt].w;Y.uniform4fv(wt,xt._array);break;case"m3":Y.uniformMatrix3fv(wt,!1,_t.elements);break;case"m3v":for(void 0===xt._array&&(xt._array=new Float32Array(9*_t.length)),Mt=0,St=_t.length;St>Mt;Mt++)_t[Mt].flattenToArrayOffset(xt._array,9*Mt);Y.uniformMatrix3fv(wt,!1,xt._array);break;case"m4":Y.uniformMatrix4fv(wt,!1,_t.elements);break;case"m4v":for(void 0===xt._array&&(xt._array=new Float32Array(16*_t.length)),Mt=0,St=_t.length;St>Mt;Mt++)_t[Mt].flattenToArrayOffset(xt._array,16*Mt);Y.uniformMatrix4fv(wt,!1,xt._array);break;case"t":if(gt=_t,Tt=v(),Y.uniform1i(wt,Tt),!gt)continue;if(gt instanceof THREE.CubeTexture||gt.image instanceof Array&&6===gt.image.length){var Ct=gt,At=Tt;if(6===Ct.image.length)if(Ct.needsUpdate){Ct.image.__webglTextureCube||(Ct.addEventListener("dispose",ze),Ct.image.__webglTextureCube=Y.createTexture(),K.info.memory.textures++),Y.activeTexture(Y.TEXTURE0+At),Y.bindTexture(Y.TEXTURE_CUBE_MAP,Ct.image.__webglTextureCube),Y.pixelStorei(Y.UNPACK_FLIP_Y_WEBGL,Ct.flipY);for(var Lt=Ct instanceof THREE.CompressedTexture,Pt=Ct.image[0]instanceof THREE.DataTexture,Ft=[],Bt=0;6>Bt;Bt++)Ft[Bt]=!K.autoScaleCubemaps||Lt||Pt?Pt?Ct.image[Bt].image:Ct.image[Bt]:x(Ct.image[Bt],_e);var Ut=Ft[0],Dt=THREE.Math.isPowerOfTwo(Ut.width)&&THREE.Math.isPowerOfTwo(Ut.height),Vt=M(Ct.format),kt=M(Ct.type);for(H(Y.TEXTURE_CUBE_MAP,Ct,Dt),Bt=0;6>Bt;Bt++)if(Lt)for(var Nt,zt=Ft[Bt].mipmaps,Ot=0,Gt=zt.length;Gt>Ot;Ot++)Nt=zt[Ot],Ct.format!==THREE.RGBAFormat&&Ct.format!==THREE.RGBFormat?-1<Pe().indexOf(Vt)?Y.compressedTexImage2D(Y.TEXTURE_CUBE_MAP_POSITIVE_X+Bt,Ot,Vt,Nt.width,Nt.height,0,Nt.data):THREE.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()"):Y.texImage2D(Y.TEXTURE_CUBE_MAP_POSITIVE_X+Bt,Ot,Vt,Nt.width,Nt.height,0,Vt,kt,Nt.data);else Pt?Y.texImage2D(Y.TEXTURE_CUBE_MAP_POSITIVE_X+Bt,0,Vt,Ft[Bt].width,Ft[Bt].height,0,Vt,kt,Ft[Bt].data):Y.texImage2D(Y.TEXTURE_CUBE_MAP_POSITIVE_X+Bt,0,Vt,Vt,kt,Ft[Bt]);Ct.generateMipmaps&&Dt&&Y.generateMipmap(Y.TEXTURE_CUBE_MAP),Ct.needsUpdate=!1,Ct.onUpdate&&Ct.onUpdate()}else Y.activeTexture(Y.TEXTURE0+At),Y.bindTexture(Y.TEXTURE_CUBE_MAP,Ct.image.__webglTextureCube)}else if(gt instanceof THREE.WebGLRenderTargetCube){var It=gt;Y.activeTexture(Y.TEXTURE0+Tt),Y.bindTexture(Y.TEXTURE_CUBE_MAP,It.__webglTexture)}else K.setTexture(gt,Tt);break;case"tv":for(void 0===xt._array&&(xt._array=[]),Mt=0,St=xt.value.length;St>Mt;Mt++)xt._array[Mt]=v();for(Y.uniform1iv(wt,xt._array),Mt=0,St=xt.value.length;St>Mt;Mt++)gt=xt.value[Mt],Tt=xt._array[Mt],gt&&K.setTexture(gt,Tt);break;default:THREE.warn("THREE.WebGLRenderer: Unknown uniform type: "+bt)}}}}return Y.uniformMatrix4fv(ae.modelViewMatrix,!1,n._modelViewMatrix.elements),ae.normalMatrix&&Y.uniformMatrix3fv(ae.normalMatrix,!1,n._normalMatrix.elements),null!==ae.modelMatrix&&Y.uniformMatrix4fv(ae.modelMatrix,!1,n.matrixWorld.elements),oe}function T(e,t){e.ambientLightColor.needsUpdate=t,e.directionalLightColor.needsUpdate=t,e.directionalLightDirection.needsUpdate=t,e.pointLightColor.needsUpdate=t,e.pointLightPosition.needsUpdate=t,e.pointLightDistance.needsUpdate=t,e.pointLightDecay.needsUpdate=t,e.spotLightColor.needsUpdate=t,e.spotLightPosition.needsUpdate=t,e.spotLightDistance.needsUpdate=t,e.spotLightDirection.needsUpdate=t,e.spotLightAngleCos.needsUpdate=t,e.spotLightExponent.needsUpdate=t,e.spotLightDecay.needsUpdate=t,e.hemisphereLightSkyColor.needsUpdate=t,e.hemisphereLightGroundColor.needsUpdate=t,e.hemisphereLightDirection.needsUpdate=t}function v(){var e=re;return e>=He&&THREE.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+He),re+=1,e}function y(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getNormalMatrix(e._modelViewMatrix)}function R(e,t,r,i){e[t]=r.r*i,e[t+1]=r.g*i,e[t+2]=r.b*i}function H(e,t,r){r?(Y.texParameteri(e,Y.TEXTURE_WRAP_S,M(t.wrapS)),Y.texParameteri(e,Y.TEXTURE_WRAP_T,M(t.wrapT)),Y.texParameteri(e,Y.TEXTURE_MAG_FILTER,M(t.magFilter)),Y.texParameteri(e,Y.TEXTURE_MIN_FILTER,M(t.minFilter))):(Y.texParameteri(e,Y.TEXTURE_WRAP_S,Y.CLAMP_TO_EDGE),Y.texParameteri(e,Y.TEXTURE_WRAP_T,Y.CLAMP_TO_EDGE),t.wrapS===THREE.ClampToEdgeWrapping&&t.wrapT===THREE.ClampToEdgeWrapping||THREE.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( "+t.sourceFile+" )"),Y.texParameteri(e,Y.TEXTURE_MAG_FILTER,w(t.magFilter)),Y.texParameteri(e,Y.TEXTURE_MIN_FILTER,w(t.minFilter)),t.minFilter!==THREE.NearestFilter&&t.minFilter!==THREE.LinearFilter&&THREE.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( "+t.sourceFile+" )")),(r=Te.get("EXT_texture_filter_anisotropic"))&&t.type!==THREE.FloatType&&t.type!==THREE.HalfFloatType&&(1<t.anisotropy||t.__currentAnisotropy)&&(Y.texParameterf(e,r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,K.getMaxAnisotropy())),t.__currentAnisotropy=t.anisotropy)}function x(e,t){if(e.width>t||e.height>t){var r=t/Math.max(e.width,e.height),i=document.createElement("canvas");return i.width=Math.floor(e.width*r),i.height=Math.floor(e.height*r),i.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,i.width,i.height),THREE.warn("THREE.WebGLRenderer: image is too big ("+e.width+"x"+e.height+"). Resized to "+i.width+"x"+i.height,e),i}return e}function b(e,t){Y.bindRenderbuffer(Y.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(Y.renderbufferStorage(Y.RENDERBUFFER,Y.DEPTH_COMPONENT16,t.width,t.height),Y.framebufferRenderbuffer(Y.FRAMEBUFFER,Y.DEPTH_ATTACHMENT,Y.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(Y.renderbufferStorage(Y.RENDERBUFFER,Y.DEPTH_STENCIL,t.width,t.height),Y.framebufferRenderbuffer(Y.FRAMEBUFFER,Y.DEPTH_STENCIL_ATTACHMENT,Y.RENDERBUFFER,e)):Y.renderbufferStorage(Y.RENDERBUFFER,Y.RGBA4,t.width,t.height)}function _(e){e instanceof THREE.WebGLRenderTargetCube?(Y.bindTexture(Y.TEXTURE_CUBE_MAP,e.__webglTexture),Y.generateMipmap(Y.TEXTURE_CUBE_MAP),Y.bindTexture(Y.TEXTURE_CUBE_MAP,null)):(Y.bindTexture(Y.TEXTURE_2D,e.__webglTexture),Y.generateMipmap(Y.TEXTURE_2D),Y.bindTexture(Y.TEXTURE_2D,null))}function w(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?Y.NEAREST:Y.LINEAR}function M(e){var t;if(e===THREE.RepeatWrapping)return Y.REPEAT;if(e===THREE.ClampToEdgeWrapping)return Y.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return Y.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return Y.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return Y.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return Y.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return Y.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return Y.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return Y.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return Y.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return Y.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return Y.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return Y.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return Y.BYTE;if(e===THREE.ShortType)return Y.SHORT;if(e===THREE.UnsignedShortType)return Y.UNSIGNED_SHORT;if(e===THREE.IntType)return Y.INT;if(e===THREE.UnsignedIntType)return Y.UNSIGNED_INT;if(e===THREE.FloatType)return Y.FLOAT;if(t=Te.get("OES_texture_half_float"),null!==t&&e===THREE.HalfFloatType)return t.HALF_FLOAT_OES;if(e===THREE.AlphaFormat)return Y.ALPHA;if(e===THREE.RGBFormat)return Y.RGB;if(e===THREE.RGBAFormat)return Y.RGBA;if(e===THREE.LuminanceFormat)return Y.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return Y.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return Y.FUNC_ADD;if(e===THREE.SubtractEquation)return Y.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return Y.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return Y.ZERO;if(e===THREE.OneFactor)return Y.ONE;if(e===THREE.SrcColorFactor)return Y.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return Y.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return Y.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return Y.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return Y.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return Y.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return Y.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return Y.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return Y.SRC_ALPHA_SATURATE;if(t=Te.get("WEBGL_compressed_texture_s3tc"),null!==t){if(e===THREE.RGB_S3TC_DXT1_Format)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t=Te.get("WEBGL_compressed_texture_pvrtc"),null!==t){if(e===THREE.RGB_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===THREE.RGB_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===THREE.RGBA_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===THREE.RGBA_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t=Te.get("EXT_blend_minmax"),null!==t){if(e===THREE.MinEquation)return t.MIN_EXT;if(e===THREE.MaxEquation)return t.MAX_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION),e=e||{};var S=void 0!==e.canvas?e.canvas:document.createElement("canvas"),C=void 0!==e.context?e.context:null,A=1,L=void 0!==e.precision?e.precision:"highp",P=void 0!==e.alpha?e.alpha:!1,F=void 0!==e.depth?e.depth:!0,B=void 0!==e.stencil?e.stencil:!0,U=void 0!==e.antialias?e.antialias:!1,D=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,V=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,k=void 0!==e.logarithmicDepthBuffer?e.logarithmicDepthBuffer:!1,N=new THREE.Color(0),z=0,O=[],G={},I=[],W=[],j=[],X=[],q=[];this.domElement=S,this.context=null,this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.gammaFactor=2,this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Y,K=this,Q=[],Z=null,J=null,$=-1,ee="",te=null,re=0,ie=0,ne=0,oe=S.width,ae=S.height,se=0,he=0,le=new THREE.Frustum,ce=new THREE.Matrix4,ue=new THREE.Vector3,Ee=new THREE.Vector3,fe=!0,pe={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};try{var de={alpha:P,depth:F,stencil:B,antialias:U,premultipliedAlpha:D,preserveDrawingBuffer:V};if(Y=C||S.getContext("webgl",de)||S.getContext("experimental-webgl",de),null===Y){if(null!==S.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context."}S.addEventListener("webglcontextlost",function(e){e.preventDefault(),Re(),ye(),G={}},!1)}catch(me){THREE.error("THREE.WebGLRenderer: "+me)}var ge=new THREE.WebGLState(Y,M);void 0===Y.getShaderPrecisionFormat&&(Y.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var Te=new THREE.WebGLExtensions(Y);Te.get("OES_texture_float"),Te.get("OES_texture_float_linear"),Te.get("OES_texture_half_float"),Te.get("OES_texture_half_float_linear"),Te.get("OES_standard_derivatives"),k&&Te.get("EXT_frag_depth");var ve=function(e,t,r,i){!0===D&&(e*=i,t*=i,r*=i),Y.clearColor(e,t,r,i)},ye=function(){Y.clearColor(0,0,0,1),Y.clearDepth(1),Y.clearStencil(0),Y.enable(Y.DEPTH_TEST),Y.depthFunc(Y.LEQUAL),Y.frontFace(Y.CCW),Y.cullFace(Y.BACK),Y.enable(Y.CULL_FACE),Y.enable(Y.BLEND),Y.blendEquation(Y.FUNC_ADD),Y.blendFunc(Y.SRC_ALPHA,Y.ONE_MINUS_SRC_ALPHA),Y.viewport(ie,ne,oe,ae),ve(N.r,N.g,N.b,z)},Re=function(){te=Z=null,ee="",$=-1,fe=!0,ge.reset()};ye(),this.context=Y,this.state=ge;var He=Y.getParameter(Y.MAX_TEXTURE_IMAGE_UNITS),xe=Y.getParameter(Y.MAX_VERTEX_TEXTURE_IMAGE_UNITS),be=Y.getParameter(Y.MAX_TEXTURE_SIZE),_e=Y.getParameter(Y.MAX_CUBE_MAP_TEXTURE_SIZE),we=xe>0,Me=we&&Te.get("OES_texture_float"),Se=Y.getShaderPrecisionFormat(Y.VERTEX_SHADER,Y.HIGH_FLOAT),Ce=Y.getShaderPrecisionFormat(Y.VERTEX_SHADER,Y.MEDIUM_FLOAT),Ae=Y.getShaderPrecisionFormat(Y.FRAGMENT_SHADER,Y.HIGH_FLOAT),Le=Y.getShaderPrecisionFormat(Y.FRAGMENT_SHADER,Y.MEDIUM_FLOAT),Pe=function(){var e;return function(){if(void 0!==e)return e;if(e=[],Te.get("WEBGL_compressed_texture_pvrtc")||Te.get("WEBGL_compressed_texture_s3tc"))for(var t=Y.getParameter(Y.COMPRESSED_TEXTURE_FORMATS),r=0;r<t.length;r++)e.push(t[r]);return e}}(),Fe=0<Se.precision&&0<Ae.precision,Be=0<Ce.precision&&0<Le.precision;"highp"!==L||Fe||(Be?(L="mediump",THREE.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(L="lowp",THREE.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp."))),"mediump"!==L||Be||(L="lowp",THREE.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));var Ue=new THREE.ShadowMapPlugin(this,O,G,I),De=new THREE.SpritePlugin(this,X),Ve=new THREE.LensFlarePlugin(this,q);this.getContext=function(){return Y},this.forceContextLoss=function(){Te.get("WEBGL_lose_context").loseContext()},this.supportsVertexTextures=function(){return we},this.supportsFloatTextures=function(){return Te.get("OES_texture_float")},this.supportsHalfFloatTextures=function(){return Te.get("OES_texture_half_float")},this.supportsStandardDerivatives=function(){return Te.get("OES_standard_derivatives")},this.supportsCompressedTextureS3TC=function(){return Te.get("WEBGL_compressed_texture_s3tc")},this.supportsCompressedTexturePVRTC=function(){return Te.get("WEBGL_compressed_texture_pvrtc")},this.supportsBlendMinMax=function(){return Te.get("EXT_blend_minmax")},this.getMaxAnisotropy=function(){var e;return function(){if(void 0!==e)return e;var t=Te.get("EXT_texture_filter_anisotropic");return e=null!==t?Y.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}(),this.getPrecision=function(){return L},this.getPixelRatio=function(){return A},this.setPixelRatio=function(e){A=e},this.setSize=function(e,t,r){S.width=e*A,S.height=t*A,!1!==r&&(S.style.width=e+"px",S.style.height=t+"px"),this.setViewport(0,0,e,t)},this.setViewport=function(e,t,r,i){ie=e*A,ne=t*A,oe=r*A,ae=i*A,Y.viewport(ie,ne,oe,ae)},this.setScissor=function(e,t,r,i){Y.scissor(e*A,t*A,r*A,i*A)},this.enableScissorTest=function(e){e?Y.enable(Y.SCISSOR_TEST):Y.disable(Y.SCISSOR_TEST)},this.getClearColor=function(){return N},this.setClearColor=function(e,t){N.set(e),z=void 0!==t?t:1,ve(N.r,N.g,N.b,z)},this.getClearAlpha=function(){return z},this.setClearAlpha=function(e){z=e,ve(N.r,N.g,N.b,z)},this.clear=function(e,t,r){var i=0;(void 0===e||e)&&(i|=Y.COLOR_BUFFER_BIT),(void 0===t||t)&&(i|=Y.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=Y.STENCIL_BUFFER_BIT),Y.clear(i)},this.clearColor=function(){Y.clear(Y.COLOR_BUFFER_BIT)},this.clearDepth=function(){Y.clear(Y.DEPTH_BUFFER_BIT)},this.clearStencil=function(){Y.clear(Y.STENCIL_BUFFER_BIT)},this.clearTarget=function(e,t,r,i){this.setRenderTarget(e),this.clear(t,r,i)},this.resetGLState=Re;var ke=function(e){e.target.traverse(function(e){if(e.removeEventListener("remove",ke),e instanceof THREE.Mesh||e instanceof THREE.PointCloud||e instanceof THREE.Line)delete G[e.id];else if(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)for(var t=I,r=t.length-1;r>=0;r--)t[r].object===e&&t.splice(r,1);delete e.__webglInit,delete e._modelViewMatrix,delete e._normalMatrix,delete e.__webglActive})},Ne=function(e){if(e=e.target,e.removeEventListener("dispose",Ne),delete e.__webglInit,e instanceof THREE.BufferGeometry){for(var t in e.attributes){var r=e.attributes[t];void 0!==r.buffer&&(Y.deleteBuffer(r.buffer),delete r.buffer)}K.info.memory.geometries--}else if(t=je[e.id],void 0!==t){for(var r=0,i=t.length;i>r;r++){var n=t[r];if(void 0!==n.numMorphTargets){for(var o=0,a=n.numMorphTargets;a>o;o++)Y.deleteBuffer(n.__webglMorphTargetsBuffers[o]);delete n.__webglMorphTargetsBuffers}if(void 0!==n.numMorphNormals){for(o=0,a=n.numMorphNormals;a>o;o++)Y.deleteBuffer(n.__webglMorphNormalsBuffers[o]);delete n.__webglMorphNormalsBuffers}Ie(n)}delete je[e.id]}else Ie(e);ee=""},ze=function(e){e=e.target,e.removeEventListener("dispose",ze),e.image&&e.image.__webglTextureCube?(Y.deleteTexture(e.image.__webglTextureCube),delete e.image.__webglTextureCube):void 0!==e.__webglInit&&(Y.deleteTexture(e.__webglTexture),delete e.__webglTexture,delete e.__webglInit),K.info.memory.textures--},Oe=function(e){if(e=e.target,e.removeEventListener("dispose",Oe),e&&void 0!==e.__webglTexture){if(Y.deleteTexture(e.__webglTexture),delete e.__webglTexture,e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)Y.deleteFramebuffer(e.__webglFramebuffer[t]),Y.deleteRenderbuffer(e.__webglRenderbuffer[t]);else Y.deleteFramebuffer(e.__webglFramebuffer),Y.deleteRenderbuffer(e.__webglRenderbuffer);delete e.__webglFramebuffer,delete e.__webglRenderbuffer}K.info.memory.textures--},Ge=function(e){e=e.target,e.removeEventListener("dispose",Ge),We(e)},Ie=function(e){for(var t="__webglVertexBuffer __webglNormalBuffer __webglTangentBuffer __webglColorBuffer __webglUVBuffer __webglUV2Buffer __webglSkinIndicesBuffer __webglSkinWeightsBuffer __webglFaceBuffer __webglLineBuffer __webglLineDistanceBuffer".split(" "),r=0,i=t.length;i>r;r++){var n=t[r];void 0!==e[n]&&(Y.deleteBuffer(e[n]),delete e[n])}if(void 0!==e.__webglCustomAttributesList){for(n in e.__webglCustomAttributesList)Y.deleteBuffer(e.__webglCustomAttributesList[n].buffer);delete e.__webglCustomAttributesList}K.info.memory.geometries--},We=function(e){var t=e.program.program;if(void 0!==t){e.program=void 0;var r,i,n=!1;for(e=0,r=Q.length;r>e;e++)if(i=Q[e],i.program===t){i.usedTimes--,0===i.usedTimes&&(n=!0);break}if(!0===n){for(n=[],e=0,r=Q.length;r>e;e++)i=Q[e],i.program!==t&&n.push(i);Q=n,Y.deleteProgram(t),K.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,r){if(ge.initAttributes(),e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=Y.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=Y.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=Y.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=Y.createBuffer()),e.hasPositions&&(Y.bindBuffer(Y.ARRAY_BUFFER,e.__webglVertexBuffer),Y.bufferData(Y.ARRAY_BUFFER,e.positionArray,Y.DYNAMIC_DRAW),ge.enableAttribute(t.attributes.position),Y.vertexAttribPointer(t.attributes.position,3,Y.FLOAT,!1,0,0)),e.hasNormals){if(Y.bindBuffer(Y.ARRAY_BUFFER,e.__webglNormalBuffer),!1==r instanceof THREE.MeshPhongMaterial&&r.shading===THREE.FlatShading){var i,n,o,a,s,h,l,c,u,E,f,p=3*e.count;for(f=0;p>f;f+=9)E=e.normalArray,i=E[f],n=E[f+1],o=E[f+2],a=E[f+3],h=E[f+4],c=E[f+5],s=E[f+6],l=E[f+7],u=E[f+8],i=(i+a+s)/3,n=(n+h+l)/3,o=(o+c+u)/3,E[f]=i,E[f+1]=n,E[f+2]=o,E[f+3]=i,E[f+4]=n,E[f+5]=o,E[f+6]=i,E[f+7]=n,E[f+8]=o}Y.bufferData(Y.ARRAY_BUFFER,e.normalArray,Y.DYNAMIC_DRAW),ge.enableAttribute(t.attributes.normal),Y.vertexAttribPointer(t.attributes.normal,3,Y.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(Y.bindBuffer(Y.ARRAY_BUFFER,e.__webglUvBuffer),Y.bufferData(Y.ARRAY_BUFFER,e.uvArray,Y.DYNAMIC_DRAW),ge.enableAttribute(t.attributes.uv),Y.vertexAttribPointer(t.attributes.uv,2,Y.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==THREE.NoColors&&(Y.bindBuffer(Y.ARRAY_BUFFER,e.__webglColorBuffer),Y.bufferData(Y.ARRAY_BUFFER,e.colorArray,Y.DYNAMIC_DRAW),ge.enableAttribute(t.attributes.color),Y.vertexAttribPointer(t.attributes.color,3,Y.FLOAT,!1,0,0)),ge.disableUnusedAttributes(),Y.drawArrays(Y.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,n,o,a){if(!1!==n.visible)if(f(a),e=g(e,t,r,n,a),t=!1,r="direct_"+o.id+"_"+e.id+"_"+(n.wireframe?1:0),r!==ee&&(ee=r,t=!0),t&&ge.initAttributes(),a instanceof THREE.Mesh){a=!0===n.wireframe?Y.LINES:Y.TRIANGLES;var s=o.attributes.index;if(s){var h,l;if(s.array instanceof Uint32Array&&Te.get("OES_element_index_uint")?(h=Y.UNSIGNED_INT,l=4):(h=Y.UNSIGNED_SHORT,l=2),r=o.offsets,0===r.length)t&&(i(n,e,o,0),Y.bindBuffer(Y.ELEMENT_ARRAY_BUFFER,s.buffer)),Y.drawElements(a,s.array.length,h,0),K.info.render.calls++,K.info.render.vertices+=s.array.length,K.info.render.faces+=s.array.length/3;else{t=!0;for(var c=0,u=r.length;u>c;c++){var E=r[c].index;t&&(i(n,e,o,E),Y.bindBuffer(Y.ELEMENT_ARRAY_BUFFER,s.buffer)),Y.drawElements(a,r[c].count,h,r[c].start*l),K.info.render.calls++,K.info.render.vertices+=r[c].count,K.info.render.faces+=r[c].count/3}}}else t&&i(n,e,o,0),n=o.attributes.position,Y.drawArrays(a,0,n.array.length/n.itemSize),K.info.render.calls++,K.info.render.vertices+=n.array.length/n.itemSize,K.info.render.faces+=n.array.length/(3*n.itemSize)}else if(a instanceof THREE.PointCloud)if(a=Y.POINTS,s=o.attributes.index)if(s.array instanceof Uint32Array&&Te.get("OES_element_index_uint")?(h=Y.UNSIGNED_INT,l=4):(h=Y.UNSIGNED_SHORT,l=2),r=o.offsets,0===r.length)t&&(i(n,e,o,0),Y.bindBuffer(Y.ELEMENT_ARRAY_BUFFER,s.buffer)),Y.drawElements(a,s.array.length,h,0),K.info.render.calls++,K.info.render.points+=s.array.length;else for(1<r.length&&(t=!0),c=0,u=r.length;u>c;c++)E=r[c].index,t&&(i(n,e,o,E),Y.bindBuffer(Y.ELEMENT_ARRAY_BUFFER,s.buffer)),Y.drawElements(a,r[c].count,h,r[c].start*l),K.info.render.calls++,K.info.render.points+=r[c].count;else if(t&&i(n,e,o,0),n=o.attributes.position,r=o.offsets,0===r.length)Y.drawArrays(a,0,n.array.length/3),K.info.render.calls++,K.info.render.points+=n.array.length/3;else for(c=0,u=r.length;u>c;c++)Y.drawArrays(a,r[c].index,r[c].count),K.info.render.calls++,K.info.render.points+=r[c].count;else if(a instanceof THREE.Line)if(a=a.mode===THREE.LineStrip?Y.LINE_STRIP:Y.LINES,ge.setLineWidth(n.linewidth*A),s=o.attributes.index)if(s.array instanceof Uint32Array?(h=Y.UNSIGNED_INT,l=4):(h=Y.UNSIGNED_SHORT,l=2),r=o.offsets,0===r.length)t&&(i(n,e,o,0),Y.bindBuffer(Y.ELEMENT_ARRAY_BUFFER,s.buffer)),Y.drawElements(a,s.array.length,h,0),K.info.render.calls++,K.info.render.vertices+=s.array.length;else for(1<r.length&&(t=!0),c=0,u=r.length;u>c;c++)E=r[c].index,t&&(i(n,e,o,E),Y.bindBuffer(Y.ELEMENT_ARRAY_BUFFER,s.buffer)),Y.drawElements(a,r[c].count,h,r[c].start*l),K.info.render.calls++,K.info.render.vertices+=r[c].count;else if(t&&i(n,e,o,0),n=o.attributes.position,r=o.offsets,0===r.length)Y.drawArrays(a,0,n.array.length/3),K.info.render.calls++,K.info.render.vertices+=n.array.length/3;else for(c=0,u=r.length;u>c;c++)Y.drawArrays(a,r[c].index,r[c].count),K.info.render.calls++,K.info.render.vertices+=r[c].count},this.renderBuffer=function(e,t,r,i,n,o){if(!1!==i.visible){if(f(o),r=g(e,t,r,i,o),t=r.attributes,e=!1,r=n.id+"_"+r.id+"_"+(i.wireframe?1:0),r!==ee&&(ee=r,e=!0),e&&ge.initAttributes(),!i.morphTargets&&0<=t.position)e&&(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglVertexBuffer),
ge.enableAttribute(t.position),Y.vertexAttribPointer(t.position,3,Y.FLOAT,!1,0,0));else if(o.morphTargetBase){if(r=i.program.attributes,-1!==o.morphTargetBase&&0<=r.position?(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[o.morphTargetBase]),ge.enableAttribute(r.position),Y.vertexAttribPointer(r.position,3,Y.FLOAT,!1,0,0)):0<=r.position&&(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglVertexBuffer),ge.enableAttribute(r.position),Y.vertexAttribPointer(r.position,3,Y.FLOAT,!1,0,0)),o.morphTargetForcedOrder.length)for(var s,h=0,l=o.morphTargetForcedOrder,c=o.morphTargetInfluences;h<i.numSupportedMorphTargets&&h<l.length;)s=r["morphTarget"+h],s>=0&&(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[l[h]]),ge.enableAttribute(s),Y.vertexAttribPointer(s,3,Y.FLOAT,!1,0,0)),s=r["morphNormal"+h],s>=0&&i.morphNormals&&(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[l[h]]),ge.enableAttribute(s),Y.vertexAttribPointer(s,3,Y.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[h]=c[l[h]],h++;else{for(l=[],c=o.morphTargetInfluences,h=o.geometry.morphTargets,c.length>h.length&&(console.warn("THREE.WebGLRenderer: Influences array is bigger than morphTargets array."),c.length=h.length),h=0,s=c.length;s>h;h++)l.push([c[h],h]);l.length>i.numSupportedMorphTargets?(l.sort(a),l.length=i.numSupportedMorphTargets):l.length>i.numSupportedMorphNormals?l.sort(a):0===l.length&&l.push([0,0]);for(var h=0,u=i.numSupportedMorphTargets;u>h;h++)if(l[h]){var E=l[h][1];s=r["morphTarget"+h],s>=0&&(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[E]),ge.enableAttribute(s),Y.vertexAttribPointer(s,3,Y.FLOAT,!1,0,0)),s=r["morphNormal"+h],s>=0&&i.morphNormals&&(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[E]),ge.enableAttribute(s),Y.vertexAttribPointer(s,3,Y.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[h]=c[E]}else o.__webglMorphTargetInfluences[h]=0}null!==i.program.uniforms.morphTargetInfluences&&Y.uniform1fv(i.program.uniforms.morphTargetInfluences,o.__webglMorphTargetInfluences)}if(e){if(n.__webglCustomAttributesList)for(r=0,c=n.__webglCustomAttributesList.length;c>r;r++)l=n.__webglCustomAttributesList[r],0<=t[l.buffer.belongsToAttribute]&&(Y.bindBuffer(Y.ARRAY_BUFFER,l.buffer),ge.enableAttribute(t[l.buffer.belongsToAttribute]),Y.vertexAttribPointer(t[l.buffer.belongsToAttribute],l.size,Y.FLOAT,!1,0,0));0<=t.color&&(0<o.geometry.colors.length||0<o.geometry.faces.length?(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglColorBuffer),ge.enableAttribute(t.color),Y.vertexAttribPointer(t.color,3,Y.FLOAT,!1,0,0)):void 0!==i.defaultAttributeValues&&Y.vertexAttrib3fv(t.color,i.defaultAttributeValues.color)),0<=t.normal&&(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglNormalBuffer),ge.enableAttribute(t.normal),Y.vertexAttribPointer(t.normal,3,Y.FLOAT,!1,0,0)),0<=t.tangent&&(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglTangentBuffer),ge.enableAttribute(t.tangent),Y.vertexAttribPointer(t.tangent,4,Y.FLOAT,!1,0,0)),0<=t.uv&&(o.geometry.faceVertexUvs[0]?(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglUVBuffer),ge.enableAttribute(t.uv),Y.vertexAttribPointer(t.uv,2,Y.FLOAT,!1,0,0)):void 0!==i.defaultAttributeValues&&Y.vertexAttrib2fv(t.uv,i.defaultAttributeValues.uv)),0<=t.uv2&&(o.geometry.faceVertexUvs[1]?(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglUV2Buffer),ge.enableAttribute(t.uv2),Y.vertexAttribPointer(t.uv2,2,Y.FLOAT,!1,0,0)):void 0!==i.defaultAttributeValues&&Y.vertexAttrib2fv(t.uv2,i.defaultAttributeValues.uv2)),i.skinning&&0<=t.skinIndex&&0<=t.skinWeight&&(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),ge.enableAttribute(t.skinIndex),Y.vertexAttribPointer(t.skinIndex,4,Y.FLOAT,!1,0,0),Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),ge.enableAttribute(t.skinWeight),Y.vertexAttribPointer(t.skinWeight,4,Y.FLOAT,!1,0,0)),0<=t.lineDistance&&(Y.bindBuffer(Y.ARRAY_BUFFER,n.__webglLineDistanceBuffer),ge.enableAttribute(t.lineDistance),Y.vertexAttribPointer(t.lineDistance,1,Y.FLOAT,!1,0,0))}ge.disableUnusedAttributes(),o instanceof THREE.Mesh?(o=n.__typeArray===Uint32Array?Y.UNSIGNED_INT:Y.UNSIGNED_SHORT,i.wireframe?(ge.setLineWidth(i.wireframeLinewidth*A),e&&Y.bindBuffer(Y.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),Y.drawElements(Y.LINES,n.__webglLineCount,o,0)):(e&&Y.bindBuffer(Y.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),Y.drawElements(Y.TRIANGLES,n.__webglFaceCount,o,0)),K.info.render.calls++,K.info.render.vertices+=n.__webglFaceCount,K.info.render.faces+=n.__webglFaceCount/3):o instanceof THREE.Line?(o=o.mode===THREE.LineStrip?Y.LINE_STRIP:Y.LINES,ge.setLineWidth(i.linewidth*A),Y.drawArrays(o,0,n.__webglLineCount),K.info.render.calls++):o instanceof THREE.PointCloud&&(Y.drawArrays(Y.POINTS,0,n.__webglParticleCount),K.info.render.calls++,K.info.render.points+=n.__webglParticleCount)}},this.render=function(e,t,r,i){if(!1==t instanceof THREE.Camera)THREE.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var a=e.fog;ee="",$=-1,te=null,fe=!0,!0===e.autoUpdate&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),e.traverse(function(e){e instanceof THREE.SkinnedMesh&&e.skeleton.update()}),t.matrixWorldInverse.getInverse(t.matrixWorld),ce.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),le.setFromMatrix(ce),O.length=0,W.length=0,j.length=0,X.length=0,q.length=0,s(e),!0===K.sortObjects&&(W.sort(n),j.sort(o)),Ue.render(e,t),K.info.render.calls=0,K.info.render.vertices=0,K.info.render.faces=0,K.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),i=0;for(var u=I.length;u>i;i++){var E=I[i],f=E.object;f.visible&&(y(f,t),c(E))}e.overrideMaterial?(i=e.overrideMaterial,m(i),h(W,t,O,a,i),h(j,t,O,a,i),l(I,"",t,O,a,i)):(ge.setBlending(THREE.NoBlending),h(W,t,O,a,null),l(I,"opaque",t,O,a,null),h(j,t,O,a,null),l(I,"transparent",t,O,a,null)),De.render(e,t),Ve.render(e,t,se,he),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&_(r),ge.setDepthTest(!0),ge.setDepthWrite(!0),ge.setColorWrite(!0)}},this.renderImmediateObject=function(e,t,r,i,n){var o=g(e,t,r,i,n);ee="",K.setMaterialFaces(i),n.immediateRenderCallback?n.immediateRenderCallback(o,Y,le):n.render(function(e){K.renderBufferImmediate(e,o,i)})};var je={},Xe=0,qe={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointCloudMaterial:"particle_basic"};this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?Y.disable(Y.CULL_FACE):(Y.frontFace(t===THREE.FrontFaceDirectionCW?Y.CW:Y.CCW),Y.cullFace(e===THREE.CullFaceBack?Y.BACK:e===THREE.CullFaceFront?Y.FRONT:Y.FRONT_AND_BACK),Y.enable(Y.CULL_FACE))},this.setMaterialFaces=function(e){ge.setDoubleSided(e.side===THREE.DoubleSide),ge.setFlipSided(e.side===THREE.BackSide)},this.uploadTexture=function(e){void 0===e.__webglInit&&(e.__webglInit=!0,e.addEventListener("dispose",ze),e.__webglTexture=Y.createTexture(),K.info.memory.textures++),Y.bindTexture(Y.TEXTURE_2D,e.__webglTexture),Y.pixelStorei(Y.UNPACK_FLIP_Y_WEBGL,e.flipY),Y.pixelStorei(Y.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),Y.pixelStorei(Y.UNPACK_ALIGNMENT,e.unpackAlignment),e.image=x(e.image,be);var t=e.image,r=THREE.Math.isPowerOfTwo(t.width)&&THREE.Math.isPowerOfTwo(t.height),i=M(e.format),n=M(e.type);H(Y.TEXTURE_2D,e,r);var o=e.mipmaps;if(e instanceof THREE.DataTexture)if(0<o.length&&r){for(var a=0,s=o.length;s>a;a++)t=o[a],Y.texImage2D(Y.TEXTURE_2D,a,i,t.width,t.height,0,i,n,t.data);e.generateMipmaps=!1}else Y.texImage2D(Y.TEXTURE_2D,0,i,t.width,t.height,0,i,n,t.data);else if(e instanceof THREE.CompressedTexture)for(a=0,s=o.length;s>a;a++)t=o[a],e.format!==THREE.RGBAFormat&&e.format!==THREE.RGBFormat?-1<Pe().indexOf(i)?Y.compressedTexImage2D(Y.TEXTURE_2D,a,i,t.width,t.height,0,t.data):THREE.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Y.texImage2D(Y.TEXTURE_2D,a,i,t.width,t.height,0,i,n,t.data);else if(0<o.length&&r){for(a=0,s=o.length;s>a;a++)t=o[a],Y.texImage2D(Y.TEXTURE_2D,a,i,i,n,t);e.generateMipmaps=!1}else Y.texImage2D(Y.TEXTURE_2D,0,i,i,n,e.image);e.generateMipmaps&&r&&Y.generateMipmap(Y.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()},this.setTexture=function(e,t){Y.activeTexture(Y.TEXTURE0+t),e.needsUpdate?K.uploadTexture(e):Y.bindTexture(Y.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&void 0===e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",Oe),e.__webglTexture=Y.createTexture(),K.info.memory.textures++;var r=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height),i=M(e.format),n=M(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],Y.bindTexture(Y.TEXTURE_CUBE_MAP,e.__webglTexture),H(Y.TEXTURE_CUBE_MAP,e,r);for(var o=0;6>o;o++){e.__webglFramebuffer[o]=Y.createFramebuffer(),e.__webglRenderbuffer[o]=Y.createRenderbuffer(),Y.texImage2D(Y.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,i,e.width,e.height,0,i,n,null);var a=e,s=Y.TEXTURE_CUBE_MAP_POSITIVE_X+o;Y.bindFramebuffer(Y.FRAMEBUFFER,e.__webglFramebuffer[o]),Y.framebufferTexture2D(Y.FRAMEBUFFER,Y.COLOR_ATTACHMENT0,s,a.__webglTexture,0),b(e.__webglRenderbuffer[o],e)}r&&Y.generateMipmap(Y.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=Y.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:Y.createRenderbuffer(),Y.bindTexture(Y.TEXTURE_2D,e.__webglTexture),H(Y.TEXTURE_2D,e,r),Y.texImage2D(Y.TEXTURE_2D,0,i,e.width,e.height,0,i,n,null),i=Y.TEXTURE_2D,Y.bindFramebuffer(Y.FRAMEBUFFER,e.__webglFramebuffer),Y.framebufferTexture2D(Y.FRAMEBUFFER,Y.COLOR_ATTACHMENT0,i,e.__webglTexture,0),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?Y.framebufferRenderbuffer(Y.FRAMEBUFFER,Y.DEPTH_ATTACHMENT,Y.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&Y.framebufferRenderbuffer(Y.FRAMEBUFFER,Y.DEPTH_STENCIL_ATTACHMENT,Y.RENDERBUFFER,e.__webglRenderbuffer):b(e.__webglRenderbuffer,e),r&&Y.generateMipmap(Y.TEXTURE_2D);t?Y.bindTexture(Y.TEXTURE_CUBE_MAP,null):Y.bindTexture(Y.TEXTURE_2D,null),Y.bindRenderbuffer(Y.RENDERBUFFER,null),Y.bindFramebuffer(Y.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,r=e.width,e=e.height,n=i=0):(t=null,r=oe,e=ae,i=ie,n=ne),t!==J&&(Y.bindFramebuffer(Y.FRAMEBUFFER,t),Y.viewport(i,n,r,e),J=t),se=r,he=e},this.readRenderTargetPixels=function(e,t,r,i,n,o){if(e instanceof THREE.WebGLRenderTarget){if(e.__webglFramebuffer)if(e.format!==THREE.RGBAFormat)console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.");else{var a=!1;e.__webglFramebuffer!==J&&(Y.bindFramebuffer(Y.FRAMEBUFFER,e.__webglFramebuffer),a=!0),Y.checkFramebufferStatus(Y.FRAMEBUFFER)===Y.FRAMEBUFFER_COMPLETE?Y.readPixels(t,r,i,n,Y.RGBA,Y.UNSIGNED_BYTE,o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."),a&&Y.bindFramebuffer(Y.FRAMEBUFFER,J)}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.initMaterial=function(){THREE.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},this.addPrePlugin=function(){THREE.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},this.addPostPlugin=function(){THREE.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},this.updateShadowMap=function(){THREE.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}},THREE.WebGLRenderTarget=function(e,t,r){this.width=e,this.height=t,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==r.depthBuffer?r.depthBuffer:!0,this.stencilBuffer=void 0!==r.stencilBuffer?r.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=void 0!==r.shareDepthFrom?r.shareDepthFrom:null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(e,t){this.width=e,this.height=t},clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.WebGLExtensions=function(e){var t={};this.get=function(r){if(void 0!==t[r])return t[r];var i;switch(r){case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(r)}return null===i&&THREE.warn("THREE.WebGLRenderer: "+r+" extension not supported."),t[r]=i}},THREE.WebGLProgram=function(){var e=0;return function(t,r,i,n){var o=t.context,a=i.defines,s=i.__webglShader.uniforms,h=i.attributes,l=i.__webglShader.vertexShader,c=i.__webglShader.fragmentShader,u=i.index0AttributeName;void 0===u&&!0===n.morphTargets&&(u="position");var E="SHADOWMAP_TYPE_BASIC";n.shadowMapType===THREE.PCFShadowMap?E="SHADOWMAP_TYPE_PCF":n.shadowMapType===THREE.PCFSoftShadowMap&&(E="SHADOWMAP_TYPE_PCF_SOFT");var f="ENVMAP_TYPE_CUBE",p="ENVMAP_MODE_REFLECTION",d="ENVMAP_BLENDING_MULTIPLY";if(n.envMap){switch(i.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:f="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:f="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:f="ENVMAP_TYPE_SPHERE"}switch(i.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:p="ENVMAP_MODE_REFRACTION"}switch(i.combine){case THREE.MultiplyOperation:d="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:d="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:d="ENVMAP_BLENDING_ADD"}}var m,g,T=0<t.gammaFactor?t.gammaFactor:1;m=[];for(var v in a)g=a[v],!1!==g&&(g="#define "+v+" "+g,m.push(g));m=m.join("\n"),a=o.createProgram(),i instanceof THREE.RawShaderMaterial?t=i="":(i=["precision "+n.precision+" float;","precision "+n.precision+" int;",m,n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.gammaInput?"#define GAMMA_INPUT":"",t.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+T,"#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,"#define MAX_BONES "+n.maxBones,n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+p:"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexColors?"#define USE_COLOR":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals?"#define USE_MORPHNORMALS":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+E:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\n	attribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\n	attribute vec3 morphTarget0;\n	attribute vec3 morphTarget1;\n	attribute vec3 morphTarget2;\n	attribute vec3 morphTarget3;\n	#ifdef USE_MORPHNORMALS\n		attribute vec3 morphNormal0;\n		attribute vec3 morphNormal1;\n		attribute vec3 morphNormal2;\n		attribute vec3 morphNormal3;\n	#else\n		attribute vec3 morphTarget4;\n		attribute vec3 morphTarget5;\n		attribute vec3 morphTarget6;\n		attribute vec3 morphTarget7;\n	#endif\n#endif\n#ifdef USE_SKINNING\n	attribute vec4 skinIndex;\n	attribute vec4 skinWeight;\n#endif\n"].join("\n"),t=["precision "+n.precision+" float;","precision "+n.precision+" int;",n.bumpMap||n.normalMap||n.flatShading?"#extension GL_OES_standard_derivatives : enable":"",m,"#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,n.alphaTest?"#define ALPHATEST "+n.alphaTest:"",t.gammaInput?"#define GAMMA_INPUT":"",t.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+T,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+f:"",n.envMap?"#define "+p:"",n.envMap?"#define "+d:"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexColors?"#define USE_COLOR":"",n.flatShading?"#define FLAT_SHADED":"",n.metal?"#define METAL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+E:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n")),l=new THREE.WebGLShader(o,o.VERTEX_SHADER,i+l),c=new THREE.WebGLShader(o,o.FRAGMENT_SHADER,t+c),o.attachShader(a,l),o.attachShader(a,c),void 0!==u&&o.bindAttribLocation(a,0,u),o.linkProgram(a),u=o.getProgramInfoLog(a),!1===o.getProgramParameter(a,o.LINK_STATUS)&&THREE.error("THREE.WebGLProgram: shader error: "+o.getError(),"gl.VALIDATE_STATUS",o.getProgramParameter(a,o.VALIDATE_STATUS),"gl.getPRogramInfoLog",u),""!==u&&THREE.warn("THREE.WebGLProgram: gl.getProgramInfoLog()"+u),o.deleteShader(l),o.deleteShader(c),u="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences bindMatrix bindMatrixInverse".split(" "),n.useVertexTexture?(u.push("boneTexture"),u.push("boneTextureWidth"),u.push("boneTextureHeight")):u.push("boneGlobalMatrices"),n.logarithmicDepthBuffer&&u.push("logDepthBufFC");for(var y in s)u.push(y);for(s=u,y={},u=0,t=s.length;t>u;u++)E=s[u],y[E]=o.getUniformLocation(a,E);for(this.uniforms=y,u="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" "),s=0;s<n.maxMorphTargets;s++)u.push("morphTarget"+s);for(s=0;s<n.maxMorphNormals;s++)u.push("morphNormal"+s);for(var R in h)u.push(R);for(n=u,h={},R=0,s=n.length;s>R;R++)y=n[R],h[y]=o.getAttribLocation(a,y);return this.attributes=h,this.attributesKeys=Object.keys(this.attributes),this.id=e++,this.code=r,this.usedTimes=1,this.program=a,this.vertexShader=l,this.fragmentShader=c,this}}(),THREE.WebGLShader=function(){var e=function(e){e=e.split("\n");for(var t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")};return function(t,r,i){return r=t.createShader(r),t.shaderSource(r,i),t.compileShader(r),!1===t.getShaderParameter(r,t.COMPILE_STATUS)&&THREE.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(r)&&THREE.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t.getShaderInfoLog(r),e(i)),r}}(),THREE.WebGLState=function(e,t){var r=new Uint8Array(16),i=new Uint8Array(16),n=null,o=null,a=null,s=null,h=null,l=null,c=null,u=null,E=null,f=null,p=null,d=null,m=null,g=null,T=null,v=null;this.initAttributes=function(){for(var e=0,t=r.length;t>e;e++)r[e]=0},this.enableAttribute=function(t){r[t]=1,0===i[t]&&(e.enableVertexAttribArray(t),i[t]=1)},this.disableUnusedAttributes=function(){for(var t=0,n=i.length;n>t;t++)i[t]!==r[t]&&(e.disableVertexAttribArray(t),i[t]=0)},this.setBlending=function(r,i,u,E,f,p,d){r!==n&&(r===THREE.NoBlending?e.disable(e.BLEND):r===THREE.AdditiveBlending?(e.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)):r===THREE.SubtractiveBlending?(e.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR)):r===THREE.MultiplyBlending?(e.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR)):r===THREE.CustomBlending?e.enable(e.BLEND):(e.enable(e.BLEND),e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)),n=r),r===THREE.CustomBlending?(f=f||i,p=p||u,d=d||E,(i!==o||f!==h)&&(e.blendEquationSeparate(t(i),t(f)),o=i,h=f),(u!==a||E!==s||p!==l||d!==c)&&(e.blendFuncSeparate(t(u),t(E),t(p),t(d)),a=u,s=E,l=p,c=d)):c=l=h=s=a=o=null},this.setDepthTest=function(t){u!==t&&(t?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),u=t)},this.setDepthWrite=function(t){E!==t&&(e.depthMask(t),E=t)},this.setColorWrite=function(t){f!==t&&(e.colorMask(t,t,t,t),f=t)},this.setDoubleSided=function(t){p!==t&&(t?e.disable(e.CULL_FACE):e.enable(e.CULL_FACE),p=t)},this.setFlipSided=function(t){d!==t&&(e.frontFace(t?e.CW:e.CCW),d=t)},this.setLineWidth=function(t){t!==m&&(e.lineWidth(t),m=t)},this.setPolygonOffset=function(t,r,i){g!==t&&(t?e.enable(e.POLYGON_OFFSET_FILL):e.disable(e.POLYGON_OFFSET_FILL),g=t),!t||T===r&&v===i||(e.polygonOffset(r,i),T=r,v=i)},this.reset=function(){for(var e=0;e<i.length;e++)i[e]=0;d=p=f=E=u=n=null}},THREE.LensFlarePlugin=function(e,t){var r,i,n,o,a,s,h,l,c,u,E,f,p,d,m,g,T=e.context;this.render=function(v,y,R,H){if(0!==t.length){v=new THREE.Vector3;var x=H/R,b=.5*R,_=.5*H,w=16/H,M=new THREE.Vector2(w*x,w),S=new THREE.Vector3(1,1,0),C=new THREE.Vector2(1,1);if(void 0===p){var w=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),A=new Uint16Array([0,1,2,0,2,3]);E=T.createBuffer(),f=T.createBuffer(),T.bindBuffer(T.ARRAY_BUFFER,E),T.bufferData(T.ARRAY_BUFFER,w,T.STATIC_DRAW),T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,f),T.bufferData(T.ELEMENT_ARRAY_BUFFER,A,T.STATIC_DRAW),m=T.createTexture(),g=T.createTexture(),T.bindTexture(T.TEXTURE_2D,m),T.texImage2D(T.TEXTURE_2D,0,T.RGB,16,16,0,T.RGB,T.UNSIGNED_BYTE,null),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_S,T.CLAMP_TO_EDGE),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_T,T.CLAMP_TO_EDGE),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MAG_FILTER,T.NEAREST),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MIN_FILTER,T.NEAREST),T.bindTexture(T.TEXTURE_2D,g),T.texImage2D(T.TEXTURE_2D,0,T.RGBA,16,16,0,T.RGBA,T.UNSIGNED_BYTE,null),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_S,T.CLAMP_TO_EDGE),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_T,T.CLAMP_TO_EDGE),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MAG_FILTER,T.NEAREST),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MIN_FILTER,T.NEAREST);var w=(d=0<T.getParameter(T.MAX_VERTEX_TEXTURE_IMAGE_UNITS))?{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},A=T.createProgram(),L=T.createShader(T.FRAGMENT_SHADER),P=T.createShader(T.VERTEX_SHADER),F="precision "+e.getPrecision()+" float;\n";T.shaderSource(L,F+w.fragmentShader),T.shaderSource(P,F+w.vertexShader),T.compileShader(L),T.compileShader(P),T.attachShader(A,L),T.attachShader(A,P),T.linkProgram(A),p=A,c=T.getAttribLocation(p,"position"),u=T.getAttribLocation(p,"uv"),r=T.getUniformLocation(p,"renderType"),i=T.getUniformLocation(p,"map"),n=T.getUniformLocation(p,"occlusionMap"),o=T.getUniformLocation(p,"opacity"),a=T.getUniformLocation(p,"color"),s=T.getUniformLocation(p,"scale"),h=T.getUniformLocation(p,"rotation"),l=T.getUniformLocation(p,"screenPosition")}for(T.useProgram(p),T.enableVertexAttribArray(c),T.enableVertexAttribArray(u),T.uniform1i(n,0),T.uniform1i(i,1),T.bindBuffer(T.ARRAY_BUFFER,E),T.vertexAttribPointer(c,2,T.FLOAT,!1,16,0),T.vertexAttribPointer(u,2,T.FLOAT,!1,16,8),T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,f),T.disable(T.CULL_FACE),T.depthMask(!1),A=0,L=t.length;L>A;A++)if(w=16/H,M.set(w*x,w),P=t[A],v.set(P.matrixWorld.elements[12],P.matrixWorld.elements[13],P.matrixWorld.elements[14]),v.applyMatrix4(y.matrixWorldInverse),v.applyProjection(y.projectionMatrix),S.copy(v),C.x=S.x*b+b,C.y=S.y*_+_,d||0<C.x&&C.x<R&&0<C.y&&C.y<H){T.activeTexture(T.TEXTURE1),T.bindTexture(T.TEXTURE_2D,m),T.copyTexImage2D(T.TEXTURE_2D,0,T.RGB,C.x-8,C.y-8,16,16,0),T.uniform1i(r,0),T.uniform2f(s,M.x,M.y),T.uniform3f(l,S.x,S.y,S.z),T.disable(T.BLEND),T.enable(T.DEPTH_TEST),T.drawElements(T.TRIANGLES,6,T.UNSIGNED_SHORT,0),T.activeTexture(T.TEXTURE0),T.bindTexture(T.TEXTURE_2D,g),T.copyTexImage2D(T.TEXTURE_2D,0,T.RGBA,C.x-8,C.y-8,16,16,0),T.uniform1i(r,1),T.disable(T.DEPTH_TEST),T.activeTexture(T.TEXTURE1),T.bindTexture(T.TEXTURE_2D,m),T.drawElements(T.TRIANGLES,6,T.UNSIGNED_SHORT,0),P.positionScreen.copy(S),P.customUpdateCallback?P.customUpdateCallback(P):P.updateLensFlares(),T.uniform1i(r,2),T.enable(T.BLEND);for(var F=0,B=P.lensFlares.length;B>F;F++){var U=P.lensFlares[F];.001<U.opacity&&.001<U.scale&&(S.x=U.x,S.y=U.y,S.z=U.z,w=U.size*U.scale/H,M.x=w*x,M.y=w,T.uniform3f(l,S.x,S.y,S.z),T.uniform2f(s,M.x,M.y),T.uniform1f(h,U.rotation),T.uniform1f(o,U.opacity),T.uniform3f(a,U.color.r,U.color.g,U.color.b),e.state.setBlending(U.blending,U.blendEquation,U.blendSrc,U.blendDst),e.setTexture(U.texture,1),T.drawElements(T.TRIANGLES,6,T.UNSIGNED_SHORT,0))}}T.enable(T.CULL_FACE),T.enable(T.DEPTH_TEST),T.depthMask(!0),e.resetGLState()}}},THREE.ShadowMapPlugin=function(e,t,r,i){function n(e,t,i){if(t.visible){var o=r[t.id];if(o&&t.castShadow&&(!1===t.frustumCulled||!0===c.intersectsObject(t)))for(var a=0,s=o.length;s>a;a++){var h=o[a];t._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),d.push(h)}for(a=0,s=t.children.length;s>a;a++)n(e,t.children[a],i)}}var o,a,s,h,l=e.context,c=new THREE.Frustum,u=new THREE.Matrix4,E=new THREE.Vector3,f=new THREE.Vector3,p=new THREE.Vector3,d=[],m=THREE.ShaderLib.depthRGBA,g=THREE.UniformsUtils.clone(m.uniforms);o=new THREE.ShaderMaterial({uniforms:g,vertexShader:m.vertexShader,fragmentShader:m.fragmentShader}),a=new THREE.ShaderMaterial({uniforms:g,vertexShader:m.vertexShader,fragmentShader:m.fragmentShader,morphTargets:!0}),s=new THREE.ShaderMaterial({uniforms:g,vertexShader:m.vertexShader,fragmentShader:m.fragmentShader,skinning:!0}),h=new THREE.ShaderMaterial({uniforms:g,vertexShader:m.vertexShader,fragmentShader:m.fragmentShader,morphTargets:!0,skinning:!0}),o._shadowPass=!0,a._shadowPass=!0,s._shadowPass=!0,h._shadowPass=!0,this.render=function(r,m){if(!1!==e.shadowMapEnabled){var g,T,v,y,R,H,x,b,_=[];for(y=0,l.clearColor(1,1,1,1),l.disable(l.BLEND),l.enable(l.CULL_FACE),l.frontFace(l.CCW),l.cullFace(e.shadowMapCullFace===THREE.CullFaceFront?l.FRONT:l.BACK),e.state.setDepthTest(!0),g=0,T=t.length;T>g;g++)if(v=t[g],v.castShadow)if(v instanceof THREE.DirectionalLight&&v.shadowCascade)for(R=0;R<v.shadowCascadeCount;R++){var w;if(v.shadowCascadeArray[R])w=v.shadowCascadeArray[R];else{x=v;var M=R;w=new THREE.DirectionalLight,w.isVirtual=!0,w.onlyShadow=!0,w.castShadow=!0,w.shadowCameraNear=x.shadowCameraNear,w.shadowCameraFar=x.shadowCameraFar,w.shadowCameraLeft=x.shadowCameraLeft,w.shadowCameraRight=x.shadowCameraRight,w.shadowCameraBottom=x.shadowCameraBottom,w.shadowCameraTop=x.shadowCameraTop,w.shadowCameraVisible=x.shadowCameraVisible,w.shadowDarkness=x.shadowDarkness,w.shadowBias=x.shadowCascadeBias[M],w.shadowMapWidth=x.shadowCascadeWidth[M],w.shadowMapHeight=x.shadowCascadeHeight[M],
w.pointsWorld=[],w.pointsFrustum=[],b=w.pointsWorld,H=w.pointsFrustum;for(var S=0;8>S;S++)b[S]=new THREE.Vector3,H[S]=new THREE.Vector3;b=x.shadowCascadeNearZ[M],x=x.shadowCascadeFarZ[M],H[0].set(-1,-1,b),H[1].set(1,-1,b),H[2].set(-1,1,b),H[3].set(1,1,b),H[4].set(-1,-1,x),H[5].set(1,-1,x),H[6].set(-1,1,x),H[7].set(1,1,x),w.originalCamera=m,H=new THREE.Gyroscope,H.position.copy(v.shadowCascadeOffset),H.add(w),H.add(w.target),m.add(H),v.shadowCascadeArray[R]=w}M=v,b=R,x=M.shadowCascadeArray[b],x.position.copy(M.position),x.target.position.copy(M.target.position),x.lookAt(x.target),x.shadowCameraVisible=M.shadowCameraVisible,x.shadowDarkness=M.shadowDarkness,x.shadowBias=M.shadowCascadeBias[b],H=M.shadowCascadeNearZ[b],M=M.shadowCascadeFarZ[b],x=x.pointsFrustum,x[0].z=H,x[1].z=H,x[2].z=H,x[3].z=H,x[4].z=M,x[5].z=M,x[6].z=M,x[7].z=M,_[y]=w,y++}else _[y]=v,y++;for(g=0,T=_.length;T>g;g++){if(v=_[g],v.shadowMap||(R=THREE.LinearFilter,e.shadowMapType===THREE.PCFSoftShadowMap&&(R=THREE.NearestFilter),v.shadowMap=new THREE.WebGLRenderTarget(v.shadowMapWidth,v.shadowMapHeight,{minFilter:R,magFilter:R,format:THREE.RGBAFormat}),v.shadowMapSize=new THREE.Vector2(v.shadowMapWidth,v.shadowMapHeight),v.shadowMatrix=new THREE.Matrix4),!v.shadowCamera){if(v instanceof THREE.SpotLight)v.shadowCamera=new THREE.PerspectiveCamera(v.shadowCameraFov,v.shadowMapWidth/v.shadowMapHeight,v.shadowCameraNear,v.shadowCameraFar);else{if(!(v instanceof THREE.DirectionalLight)){THREE.error("THREE.ShadowMapPlugin: Unsupported light type for shadow",v);continue}v.shadowCamera=new THREE.OrthographicCamera(v.shadowCameraLeft,v.shadowCameraRight,v.shadowCameraTop,v.shadowCameraBottom,v.shadowCameraNear,v.shadowCameraFar)}r.add(v.shadowCamera),!0===r.autoUpdate&&r.updateMatrixWorld()}if(v.shadowCameraVisible&&!v.cameraHelper&&(v.cameraHelper=new THREE.CameraHelper(v.shadowCamera),r.add(v.cameraHelper)),v.isVirtual&&w.originalCamera==m){for(R=m,y=v.shadowCamera,H=v.pointsFrustum,x=v.pointsWorld,E.set(1/0,1/0,1/0),f.set(-(1/0),-(1/0),-(1/0)),M=0;8>M;M++)b=x[M],b.copy(H[M]),b.unproject(R),b.applyMatrix4(y.matrixWorldInverse),b.x<E.x&&(E.x=b.x),b.x>f.x&&(f.x=b.x),b.y<E.y&&(E.y=b.y),b.y>f.y&&(f.y=b.y),b.z<E.z&&(E.z=b.z),b.z>f.z&&(f.z=b.z);y.left=E.x,y.right=f.x,y.top=f.y,y.bottom=E.y,y.updateProjectionMatrix()}for(y=v.shadowMap,H=v.shadowMatrix,R=v.shadowCamera,R.position.setFromMatrixPosition(v.matrixWorld),p.setFromMatrixPosition(v.target.matrixWorld),R.lookAt(p),R.updateMatrixWorld(),R.matrixWorldInverse.getInverse(R.matrixWorld),v.cameraHelper&&(v.cameraHelper.visible=v.shadowCameraVisible),v.shadowCameraVisible&&v.cameraHelper.update(),H.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),H.multiply(R.projectionMatrix),H.multiply(R.matrixWorldInverse),u.multiplyMatrices(R.projectionMatrix,R.matrixWorldInverse),c.setFromMatrix(u),e.setRenderTarget(y),e.clear(),d.length=0,n(r,r,R),v=0,y=d.length;y>v;v++)x=d[v],H=x.object,x=x.buffer,M=H.material instanceof THREE.MeshFaceMaterial?H.material.materials[0]:H.material,b=void 0!==H.geometry.morphTargets&&0<H.geometry.morphTargets.length&&M.morphTargets,S=H instanceof THREE.SkinnedMesh&&M.skinning,b=H.customDepthMaterial?H.customDepthMaterial:S?b?h:s:b?a:o,e.setMaterialFaces(M),x instanceof THREE.BufferGeometry?e.renderBufferDirect(R,t,null,b,x,H):e.renderBuffer(R,t,null,b,x,H);for(v=0,y=i.length;y>v;v++)x=i[v],H=x.object,H.visible&&H.castShadow&&(H._modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,H.matrixWorld),e.renderImmediateObject(R,t,null,o,H))}g=e.getClearColor(),T=e.getClearAlpha(),l.clearColor(g.r,g.g,g.b,T),l.enable(l.BLEND),e.shadowMapCullFace===THREE.CullFaceFront&&l.cullFace(l.BACK),e.resetGLState()}}},THREE.SpritePlugin=function(e,t){function r(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var i,n,o,a,s,h,l,c,u,E,f,p,d,m,g,T,v,y,R,H,x,b=e.context,_=new THREE.Vector3,w=new THREE.Quaternion,M=new THREE.Vector3;this.render=function(S,C){if(0!==t.length){if(void 0===H){var A=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),L=new Uint16Array([0,1,2,0,2,3]);y=b.createBuffer(),R=b.createBuffer(),b.bindBuffer(b.ARRAY_BUFFER,y),b.bufferData(b.ARRAY_BUFFER,A,b.STATIC_DRAW),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,R),b.bufferData(b.ELEMENT_ARRAY_BUFFER,L,b.STATIC_DRAW);var A=b.createProgram(),L=b.createShader(b.VERTEX_SHADER),P=b.createShader(b.FRAGMENT_SHADER);b.shaderSource(L,["precision "+e.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")),b.shaderSource(P,["precision "+e.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")),b.compileShader(L),b.compileShader(P),b.attachShader(A,L),b.attachShader(A,P),b.linkProgram(A),H=A,T=b.getAttribLocation(H,"position"),v=b.getAttribLocation(H,"uv"),i=b.getUniformLocation(H,"uvOffset"),n=b.getUniformLocation(H,"uvScale"),o=b.getUniformLocation(H,"rotation"),a=b.getUniformLocation(H,"scale"),s=b.getUniformLocation(H,"color"),h=b.getUniformLocation(H,"map"),l=b.getUniformLocation(H,"opacity"),c=b.getUniformLocation(H,"modelViewMatrix"),u=b.getUniformLocation(H,"projectionMatrix"),E=b.getUniformLocation(H,"fogType"),f=b.getUniformLocation(H,"fogDensity"),p=b.getUniformLocation(H,"fogNear"),d=b.getUniformLocation(H,"fogFar"),m=b.getUniformLocation(H,"fogColor"),g=b.getUniformLocation(H,"alphaTest"),A=document.createElement("canvas"),A.width=8,A.height=8,L=A.getContext("2d"),L.fillStyle="white",L.fillRect(0,0,8,8),x=new THREE.Texture(A),x.needsUpdate=!0}b.useProgram(H),b.enableVertexAttribArray(T),b.enableVertexAttribArray(v),b.disable(b.CULL_FACE),b.enable(b.BLEND),b.bindBuffer(b.ARRAY_BUFFER,y),b.vertexAttribPointer(T,2,b.FLOAT,!1,16,0),b.vertexAttribPointer(v,2,b.FLOAT,!1,16,8),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,R),b.uniformMatrix4fv(u,!1,C.projectionMatrix.elements),b.activeTexture(b.TEXTURE0),b.uniform1i(h,0),L=A=0,(P=S.fog)?(b.uniform3f(m,P.color.r,P.color.g,P.color.b),P instanceof THREE.Fog?(b.uniform1f(p,P.near),b.uniform1f(d,P.far),b.uniform1i(E,1),L=A=1):P instanceof THREE.FogExp2&&(b.uniform1f(f,P.density),b.uniform1i(E,2),L=A=2)):(b.uniform1i(E,0),L=A=0);for(var P=0,F=t.length;F>P;P++){var B=t[P];B._modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,B.matrixWorld),B.z=-B._modelViewMatrix.elements[14]}t.sort(r);for(var U=[],P=0,F=t.length;F>P;P++){var B=t[P],D=B.material;b.uniform1f(g,D.alphaTest),b.uniformMatrix4fv(c,!1,B._modelViewMatrix.elements),B.matrixWorld.decompose(_,w,M),U[0]=M.x,U[1]=M.y,B=0,S.fog&&D.fog&&(B=L),A!==B&&(b.uniform1i(E,B),A=B),null!==D.map?(b.uniform2f(i,D.map.offset.x,D.map.offset.y),b.uniform2f(n,D.map.repeat.x,D.map.repeat.y)):(b.uniform2f(i,0,0),b.uniform2f(n,1,1)),b.uniform1f(l,D.opacity),b.uniform3f(s,D.color.r,D.color.g,D.color.b),b.uniform1f(o,D.rotation),b.uniform2fv(a,U),e.state.setBlending(D.blending,D.blendEquation,D.blendSrc,D.blendDst),e.state.setDepthTest(D.depthTest),e.state.setDepthWrite(D.depthWrite),D.map&&D.map.image&&D.map.image.width?e.setTexture(D.map,0):e.setTexture(x,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0)}b.enable(b.CULL_FACE),e.resetGLState()}}},THREE.GeometryUtils={merge:function(e,t,r){THREE.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var i;t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,t=t.geometry),e.merge(t,i,r)},center:function(e){return THREE.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(e,t,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var o=new THREE.Texture(void 0,t);return n.load(e,function(e){o.image=e,o.needsUpdate=!0,r&&r(o)},void 0,function(e){i&&i(e)}),o.sourceFile=e,o},loadTextureCube:function(e,t,r,i){var n=new THREE.ImageLoader;n.crossOrigin=this.crossOrigin;var o=new THREE.CubeTexture([],t);o.flipY=!1;var a=0;t=function(t){n.load(e[t],function(e){o.images[t]=e,a+=1,6===a&&(o.needsUpdate=!0,r&&r(o))},void 0,i)};for(var s=0,h=e.length;h>s;++s)t(s);return o},loadCompressedTexture:function(){THREE.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){THREE.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(e,t){var r=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t|=1;var i=e.width,n=e.height,o=document.createElement("canvas");o.width=i,o.height=n;var a=o.getContext("2d");a.drawImage(e,0,0);for(var s=a.getImageData(0,0,i,n).data,h=a.createImageData(i,n),l=h.data,c=0;i>c;c++)for(var u=0;n>u;u++){var E=0>u-1?0:u-1,f=u+1>n-1?n-1:u+1,p=0>c-1?0:c-1,d=c+1>i-1?i-1:c+1,m=[],g=[0,0,s[4*(u*i+c)]/255*t];for(m.push([-1,0,s[4*(u*i+p)]/255*t]),m.push([-1,-1,s[4*(E*i+p)]/255*t]),m.push([0,-1,s[4*(E*i+c)]/255*t]),m.push([1,-1,s[4*(E*i+d)]/255*t]),m.push([1,0,s[4*(u*i+d)]/255*t]),m.push([1,1,s[4*(f*i+d)]/255*t]),m.push([0,1,s[4*(f*i+c)]/255*t]),m.push([-1,1,s[4*(f*i+p)]/255*t]),E=[],p=m.length,f=0;p>f;f++){var d=m[f],T=m[(f+1)%p],d=[d[0]-g[0],d[1]-g[1],d[2]-g[2]],T=[T[0]-g[0],T[1]-g[1],T[2]-g[2]];E.push(r([d[1]*T[2]-d[2]*T[1],d[2]*T[0]-d[0]*T[2],d[0]*T[1]-d[1]*T[0]]))}for(m=[0,0,0],f=0;f<E.length;f++)m[0]+=E[f][0],m[1]+=E[f][1],m[2]+=E[f][2];m[0]/=E.length,m[1]/=E.length,m[2]/=E.length,g=4*(u*i+c),l[g]=(m[0]+1)/2*255|0,l[g+1]=(m[1]+1)/2*255|0,l[g+2]=255*m[2]|0,l[g+3]=255}return a.putImageData(h,0,0),o},generateDataTexture:function(e,t,r){var i=e*t,n=new Uint8Array(3*i),o=Math.floor(255*r.r),a=Math.floor(255*r.g);r=Math.floor(255*r.b);for(var s=0;i>s;s++)n[3*s]=o,n[3*s+1]=a,n[3*s+2]=r;return e=new THREE.DataTexture(n,e,t,THREE.RGBFormat),e.needsUpdate=!0,e}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var r=new THREE.Object3D,i=0,n=t.length;n>i;i++)r.add(new THREE.Mesh(e,t[i]));return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),e.applyMatrix(i),t.remove(e),r.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(e){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(e){var t=e.familyName.toLowerCase();return this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e,this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){var t=this.getFace(),r=this.size/t.resolution,i=0,n=String(e).split(""),o=n.length,a=[];for(e=0;o>e;e++){var s=new THREE.Path,s=this.extractGlyphPoints(n[e],t,r,i,s),i=i+s.offset;a.push(s.path)}return{paths:a,offset:i/2}},extractGlyphPoints:function(e,t,r,i,n){var o,a,s,h,l,c,u,E,f,p,d,m=[],g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o)for(t=g._cachedOutline||(g._cachedOutline=g.o.split(" ")),h=t.length,e=0;h>e;)switch(s=t[e++]){case"m":s=t[e++]*r+i,l=t[e++]*r,n.moveTo(s,l);break;case"l":s=t[e++]*r+i,l=t[e++]*r,n.lineTo(s,l);break;case"q":if(s=t[e++]*r+i,l=t[e++]*r,E=t[e++]*r+i,f=t[e++]*r,n.quadraticCurveTo(E,f,s,l),o=m[m.length-1])for(c=o.x,u=o.y,o=1,a=this.divisions;a>=o;o++){var T=o/a;THREE.Shape.Utils.b2(T,c,E,s),THREE.Shape.Utils.b2(T,u,f,l)}break;case"b":if(s=t[e++]*r+i,l=t[e++]*r,E=t[e++]*r+i,f=t[e++]*r,p=t[e++]*r+i,d=t[e++]*r,n.bezierCurveTo(E,f,p,d,s,l),o=m[m.length-1])for(c=o.x,u=o.y,o=1,a=this.divisions;a>=o;o++)T=o/a,THREE.Shape.Utils.b3(T,c,E,p,s),THREE.Shape.Utils.b3(T,u,f,d,l)}return{offset:g.ha*r,path:n}}}},THREE.FontUtils.generateShapes=function(e,t){t=t||{};var r=void 0!==t.curveSegments?t.curveSegments:4,i=void 0!==t.font?t.font:"helvetiker",n=void 0!==t.weight?t.weight:"normal",o=void 0!==t.style?t.style:"normal";for(THREE.FontUtils.size=void 0!==t.size?t.size:100,THREE.FontUtils.divisions=r,THREE.FontUtils.face=i,THREE.FontUtils.weight=n,THREE.FontUtils.style=o,r=THREE.FontUtils.drawText(e).paths,i=[],n=0,o=r.length;o>n;n++)Array.prototype.push.apply(i,r[n].toShapes());return i},function(e){var t=function(e){for(var t=e.length,r=0,i=t-1,n=0;t>n;i=n++)r+=e[i].x*e[n].y-e[n].x*e[i].y;return.5*r};return e.Triangulate=function(e,r){var i=e.length;if(3>i)return null;var n,o,a,s=[],h=[],l=[];if(0<t(e))for(o=0;i>o;o++)h[o]=o;else for(o=0;i>o;o++)h[o]=i-1-o;var c=2*i;for(o=i-1;i>2;){if(0>=c--){THREE.warn("THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()");break}n=o,n>=i&&(n=0),o=n+1,o>=i&&(o=0),a=o+1,a>=i&&(a=0);var u;e:{var E=u=void 0,f=void 0,p=void 0,d=void 0,m=void 0,g=void 0,T=void 0,v=void 0,E=e[h[n]].x,f=e[h[n]].y,p=e[h[o]].x,d=e[h[o]].y,m=e[h[a]].x,g=e[h[a]].y;if(1e-10>(p-E)*(g-f)-(d-f)*(m-E))u=!1;else{var y=void 0,R=void 0,H=void 0,x=void 0,b=void 0,_=void 0,w=void 0,M=void 0,S=void 0,C=void 0,S=M=w=v=T=void 0,y=m-p,R=g-d,H=E-m,x=f-g,b=p-E,_=d-f;for(u=0;i>u;u++)if(T=e[h[u]].x,v=e[h[u]].y,!(T===E&&v===f||T===p&&v===d||T===m&&v===g)&&(w=T-E,M=v-f,S=T-p,C=v-d,T-=m,v-=g,S=y*C-R*S,w=b*M-_*w,M=H*v-x*T,S>=-1e-10&&M>=-1e-10&&w>=-1e-10)){u=!1;break e}u=!0}}if(u){for(s.push([e[h[n]],e[h[o]],e[h[a]]]),l.push([h[n],h[o],h[a]]),n=o,a=o+1;i>a;n++,a++)h[n]=h[a];i--,c=2*i}}return r?l:s},e.Triangulate.area=t,e}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Audio=function(e){THREE.Object3D.call(this),this.type="Audio",this.context=e.context,this.source=this.context.createBufferSource(),this.source.onended=this.onEnded.bind(this),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.panner=this.context.createPanner(),this.panner.connect(this.gain),this.autoplay=!1,this.startTime=0,this.isPlaying=!1},THREE.Audio.prototype=Object.create(THREE.Object3D.prototype),THREE.Audio.prototype.constructor=THREE.Audio,THREE.Audio.prototype.load=function(e){var t=this,r=new XMLHttpRequest;return r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(e){t.context.decodeAudioData(this.response,function(e){t.source.buffer=e,t.autoplay&&t.play()})},r.send(),this},THREE.Audio.prototype.play=function(){if(!0===this.isPlaying)THREE.warn("THREE.Audio: Audio is already playing.");else{var e=this.context.createBufferSource();e.buffer=this.source.buffer,e.loop=this.source.loop,e.onended=this.source.onended,e.connect(this.panner),e.start(0,this.startTime),this.isPlaying=!0,this.source=e}},THREE.Audio.prototype.pause=function(){this.source.stop(),this.startTime=this.context.currentTime},THREE.Audio.prototype.stop=function(){this.source.stop(),this.startTime=0},THREE.Audio.prototype.onEnded=function(){this.isPlaying=!1},THREE.Audio.prototype.setLoop=function(e){this.source.loop=e},THREE.Audio.prototype.setRefDistance=function(e){this.panner.refDistance=e},THREE.Audio.prototype.setRolloffFactor=function(e){this.panner.rolloffFactor=e},THREE.Audio.prototype.setVolume=function(e){this.gain.gain.value=e},THREE.Audio.prototype.updateMatrixWorld=function(){var e=new THREE.Vector3;return function(t){THREE.Object3D.prototype.updateMatrixWorld.call(this,t),e.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(e.x,e.y,e.z)}}(),THREE.AudioListener=function(){THREE.Object3D.call(this),this.type="AudioListener",this.context=new(window.AudioContext||window.webkitAudioContext)},THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype),THREE.AudioListener.prototype.constructor=THREE.AudioListener,THREE.AudioListener.prototype.updateMatrixWorld=function(){var e=new THREE.Vector3,t=new THREE.Quaternion,r=new THREE.Vector3,i=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3;return function(a){THREE.Object3D.prototype.updateMatrixWorld.call(this,a),a=this.context.listener;var s=this.up;this.matrixWorld.decompose(e,t,r),i.set(0,0,-1).applyQuaternion(t),n.subVectors(e,o),a.setPosition(e.x,e.y,e.z),a.setOrientation(i.x,i.y,i.z,s.x,s.y,s.z),a.setVelocity(n.x,n.y,n.z),o.copy(e)}}(),THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(e){return THREE.warn("THREE.Curve: Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){return e=this.getUtoTmapping(e),this.getPoint(e)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,r=[];for(t=0;e>=t;t++)r.push(this.getPoint(t/e));return r},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,r=[];for(t=0;e>=t;t++)r.push(this.getPointAt(t/e));return r},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,r,i=[],n=this.getPoint(0),o=0;for(i.push(0),r=1;e>=r;r++)t=this.getPoint(r/e),o+=t.distanceTo(n),i.push(o),n=t;return this.cacheArcLengths=i},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var r,i=this.getLengths(),n=0,o=i.length;r=t?t:e*i[o-1];for(var a,s=0,h=o-1;h>=s;)if(n=Math.floor(s+(h-s)/2),a=i[n]-r,0>a)s=n+1;else{if(!(a>0)){h=n;break}h=n-1}return n=h,i[n]==r?n/(o-1):(s=i[n],i=(n+(r-s)/(i[n+1]-s))/(o-1))},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4;return e+=1e-4,0>t&&(t=0),e>1&&(e=1),t=this.getPoint(t),this.getPoint(e).clone().sub(t).normalize()},THREE.Curve.prototype.getTangentAt=function(e){return e=this.getUtoTmapping(e),this.getTangent(e)},THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,r,i){return 2*(1-e)*(r-t)+2*e*(i-r)},tangentCubicBezier:function(e,t,r,i,n){return-3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*i*(1-e)-3*e*e*i+3*e*e*n},tangentSpline:function(e,t,r,i,n){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,r,i,n){e=.5*(r-e),i=.5*(i-t);var o=n*n;return(2*t-2*r+e+i)*n*o+(-3*t+3*r-2*e-i)*o+e*n+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.constructor=THREE.CurvePath,THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){var t=e*this.getLength(),r=this.getCurveLengths();for(e=0;e<r.length;){if(r[e]>=t)return t=r[e]-t,e=this.curves[e],t=1-t/e.getLength(),e.getPointAt(t);e++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],r=0,i=this.curves.length;for(e=0;i>e;e++)r+=this.curves[e].getLength(),t.push(r);return this.cacheLengths=t},THREE.CurvePath.prototype.getBoundingBox=function(){var e,t,r,i,n,o,a=this.getPoints();e=t=Number.NEGATIVE_INFINITY,i=n=Number.POSITIVE_INFINITY;var s,h,l,c,u=a[0]instanceof THREE.Vector3;for(c=u?new THREE.Vector3:new THREE.Vector2,h=0,l=a.length;l>h;h++)s=a[h],s.x>e?e=s.x:s.x<i&&(i=s.x),s.y>t?t=s.y:s.y<n&&(n=s.y),u&&(s.z>r?r=s.z:s.z<o&&(o=s.z)),c.add(s);return a={minX:i,minY:n,maxX:e,maxY:t},u&&(a.maxZ=r,a.minZ=o),a},THREE.CurvePath.prototype.createPointsGeometry=function(e){return e=this.getPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){return e=this.getSpacedPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,r=0;r<e.length;r++)t.vertices.push(new THREE.Vector3(e[r].x,e[r].y,e[r].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var r,i,n=this.getPoints(e);for(t||(t=this.bends),r=0,i=t.length;i>r;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var r,i,n=this.getSpacedPoints(e);for(t||(t=this.bends),r=0,i=t.length;i>r;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var r,i,n,o,a,s,h=this.getBoundingBox();for(r=0,i=e.length;i>r;r++)n=e[r],o=n.x,a=n.y,s=o/h.maxX,s=t.getUtoTmapping(s,o),o=t.getPoint(s),s=t.getTangent(s),s.set(-s.y,s.x).multiplyScalar(a),n.x=o.x+s.x,n.y=o.y+s.y;return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.constructor=THREE.Gyroscope,THREE.Gyroscope.prototype.updateMatrixWorld=function(){var e=new THREE.Vector3,t=new THREE.Quaternion,r=new THREE.Vector3,i=new THREE.Vector3,n=new THREE.Quaternion,o=new THREE.Vector3;return function(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(i,n,o),this.matrix.decompose(e,t,r),this.matrixWorld.compose(i,t,o)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var s=0,h=this.children.length;h>s;s++)this.children[s].updateMatrixWorld(a)}}(),THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.Path.prototype.constructor=THREE.Path,THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;r>t;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var r=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:r})},THREE.Path.prototype.lineTo=function(e,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=new THREE.LineCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(e,t));this.curves.push(i),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(e,t,r,i){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args,o=new THREE.QuadraticBezierCurve(new THREE.Vector2(o[o.length-2],o[o.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(r,i));this.curves.push(o),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(e,t,r,i,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(r,i),new THREE.Vector2(n,o));this.curves.push(s),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=[new THREE.Vector2(r[r.length-2],r[r.length-1])];Array.prototype.push.apply(r,e),r=new THREE.SplineCurve(r),this.curves.push(r),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,r,i,n,o){var a=this.actions[this.actions.length-1].args;this.absarc(e+a[a.length-2],t+a[a.length-1],r,i,n,o)},THREE.Path.prototype.absarc=function(e,t,r,i,n,o){this.absellipse(e,t,r,r,i,n,o)},THREE.Path.prototype.ellipse=function(e,t,r,i,n,o,a){var s=this.actions[this.actions.length-1].args;this.absellipse(e+s[s.length-2],t+s[s.length-1],r,i,n,o,a)},THREE.Path.prototype.absellipse=function(e,t,r,i,n,o,a){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,r,i,n,o,a);this.curves.push(h),h=h.getPoint(1),s.push(h.x),s.push(h.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e,t){e||(e=40);for(var r=[],i=0;e>i;i++)r.push(this.getPoint(i/e));return r},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var r,i,n,o,a,s,h,l,c,u,E,f,p,d=[];for(r=0,i=this.actions.length;i>r;r++)switch(n=this.actions[r],o=n.action,n=n.args,o){case THREE.PathActions.MOVE_TO:d.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.LINE_TO:d.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(a=n[2],s=n[3],c=n[0],u=n[1],0<d.length?(o=d[d.length-1],E=o.x,f=o.y):(o=this.actions[r-1].args,E=o[o.length-2],f=o[o.length-1]),n=1;e>=n;n++)p=n/e,o=THREE.Shape.Utils.b2(p,E,c,a),p=THREE.Shape.Utils.b2(p,f,u,s),d.push(new THREE.Vector2(o,p));break;case THREE.PathActions.BEZIER_CURVE_TO:for(a=n[4],s=n[5],c=n[0],u=n[1],h=n[2],l=n[3],0<d.length?(o=d[d.length-1],E=o.x,f=o.y):(o=this.actions[r-1].args,E=o[o.length-2],f=o[o.length-1]),n=1;e>=n;n++)p=n/e,o=THREE.Shape.Utils.b3(p,E,c,h,a),p=THREE.Shape.Utils.b3(p,f,u,l,s),d.push(new THREE.Vector2(o,p));break;case THREE.PathActions.CSPLINE_THRU:for(o=this.actions[r-1].args,p=[new THREE.Vector2(o[o.length-2],o[o.length-1])],o=e*n[0].length,p=p.concat(n[0]),p=new THREE.SplineCurve(p),n=1;o>=n;n++)d.push(p.getPointAt(n/o));break;case THREE.PathActions.ARC:for(a=n[0],s=n[1],u=n[2],h=n[3],o=n[4],c=!!n[5],E=o-h,f=2*e,n=1;f>=n;n++)p=n/f,c||(p=1-p),p=h+p*E,o=a+u*Math.cos(p),p=s+u*Math.sin(p),d.push(new THREE.Vector2(o,p));break;case THREE.PathActions.ELLIPSE:for(a=n[0],s=n[1],u=n[2],l=n[3],h=n[4],o=n[5],c=!!n[6],E=o-h,f=2*e,n=1;f>=n;n++)p=n/f,c||(p=1-p),p=h+p*E,o=a+u*Math.cos(p),p=s+l*Math.sin(p),d.push(new THREE.Vector2(o,p))}return r=d[d.length-1],1e-10>Math.abs(r.x-d[0].x)&&1e-10>Math.abs(r.y-d[0].y)&&d.splice(d.length-1,1),t&&d.push(d[0]),d},THREE.Path.prototype.toShapes=function(e,t){function r(e){for(var t=[],r=0,i=e.length;i>r;r++){var n=e[r],o=new THREE.Shape;o.actions=n.actions,o.curves=n.curves,t.push(o)}return t}function i(e,t){for(var r=t.length,i=!1,n=r-1,o=0;r>o;n=o++){var a=t[n],s=t[o],h=s.x-a.x,l=s.y-a.y;if(1e-10<Math.abs(l)){if(0>l&&(a=t[o],h=-h,s=t[n],l=-l),!(e.y<a.y||e.y>s.y))if(e.y==a.y){if(e.x==a.x)return!0}else{if(n=l*(e.x-a.x)-h*(e.y-a.y),0==n)return!0;0>n||(i=!i)}}else if(e.y==a.y&&(s.x<=e.x&&e.x<=a.x||a.x<=e.x&&e.x<=s.x))return!0}return i}var n=function(e){var t,r,i,n,o=[],a=new THREE.Path;for(t=0,r=e.length;r>t;t++)i=e[t],n=i.args,i=i.action,i==THREE.PathActions.MOVE_TO&&0!=a.actions.length&&(o.push(a),a=new THREE.Path),a[i].apply(a,n);return 0!=a.actions.length&&o.push(a),o}(this.actions);if(0==n.length)return[];if(!0===t)return r(n);var o,a,s,h=[];if(1==n.length)return a=n[0],s=new THREE.Shape,s.actions=a.actions,s.curves=a.curves,h.push(s),h;var l=!THREE.Shape.Utils.isClockWise(n[0].getPoints()),l=e?!l:l;s=[];var c,u=[],E=[],f=0;u[f]=void 0,E[f]=[];var p,d;for(p=0,d=n.length;d>p;p++)a=n[p],c=a.getPoints(),o=THREE.Shape.Utils.isClockWise(c),(o=e?!o:o)?(!l&&u[f]&&f++,u[f]={s:new THREE.Shape,p:c},u[f].s.actions=a.actions,u[f].s.curves=a.curves,l&&f++,E[f]=[]):E[f].push({h:a,p:c[0]});if(!u[0])return r(n);if(1<u.length){for(p=!1,d=[],a=0,n=u.length;n>a;a++)s[a]=[];for(a=0,n=u.length;n>a;a++)for(o=E[a],l=0;l<o.length;l++){f=o[l],c=!0;for(var m=0;m<u.length;m++)i(f.p,u[m].p)&&(a!=m&&d.push({froms:a,tos:m,hole:l}),c?(c=!1,s[m].push(f)):p=!0);c&&s[a].push(f)}0<d.length&&(p||(E=s))}for(p=0,d=u.length;d>p;p++)for(s=u[p].s,h.push(s),a=E[p],n=0,o=a.length;o>n;n++)s.holes.push(a[n].h);return h},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.constructor=THREE.Shape,THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;r>t;t++)i[t]=this.holes[t].getTransformedPoints(e,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;r>t;t++)i[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={triangulateShape:function(e,t){function r(e,t,r){return e.x!=t.x?e.x<t.x?e.x<=r.x&&r.x<=t.x:t.x<=r.x&&r.x<=e.x:e.y<t.y?e.y<=r.y&&r.y<=t.y:t.y<=r.y&&r.y<=e.y}function i(e,t,i,n,o){var a=t.x-e.x,s=t.y-e.y,h=n.x-i.x,l=n.y-i.y,c=e.x-i.x,u=e.y-i.y,E=s*h-a*l,f=s*c-a*u;if(1e-10<Math.abs(E)){if(E>0){if(0>f||f>E)return[];if(h=l*c-h*u,0>h||h>E)return[]}else{if(f>0||E>f)return[];if(h=l*c-h*u,h>0||E>h)return[]}return 0==h?!o||0!=f&&f!=E?[e]:[]:h==E?!o||0!=f&&f!=E?[t]:[]:0==f?[i]:f==E?[n]:(o=h/E,[{x:e.x+o*a,y:e.y+o*s}])}return 0!=f||l*c!=h*u?[]:(s=0==a&&0==s,h=0==h&&0==l,s&&h?e.x!=i.x||e.y!=i.y?[]:[e]:s?r(i,n,e)?[e]:[]:h?r(e,t,i)?[i]:[]:(0!=a?(e.x<t.x?(a=e,h=e.x,s=t,e=t.x):(a=t,h=t.x,s=e,e=e.x),i.x<n.x?(t=i,E=i.x,l=n,i=n.x):(t=n,E=n.x,l=i,i=i.x)):(e.y<t.y?(a=e,h=e.y,s=t,e=t.y):(a=t,h=t.y,s=e,e=e.y),i.y<n.y?(t=i,E=i.y,l=n,i=n.y):(t=n,E=n.y,l=i,i=i.y)),E>=h?E>e?[]:e==E?o?[]:[t]:i>=e?[t,s]:[t,l]:h>i?[]:h==i?o?[]:[a]:i>=e?[a,s]:[a,l]))}function n(e,t,r,i){var n=t.x-e.x,o=t.y-e.y;t=r.x-e.x,r=r.y-e.y;var a=i.x-e.x;return i=i.y-e.y,e=n*r-o*t,n=n*i-o*a,1e-10<Math.abs(e)?(t=a*r-i*t,e>0?n>=0&&t>=0:n>=0||t>=0):n>0}var o,a,s,h,l,c={};for(s=e.concat(),o=0,a=t.length;a>o;o++)Array.prototype.push.apply(s,t[o]);for(o=0,a=s.length;a>o;o++)l=s[o].x+":"+s[o].y,void 0!==c[l]&&THREE.warn("THREE.Shape: Duplicate point",l),c[l]=o;o=function(e,t){function r(e,t){var r=m.length-1,i=e-1;0>i&&(i=r);var o=e+1;return o>r&&(o=0),(r=n(m[e],m[i],m[o],s[t]))?(r=s.length-1,i=t-1,0>i&&(i=r),o=t+1,o>r&&(o=0),(r=n(s[t],s[i],s[o],m[e]))?!0:!1):!1}function o(e,t){var r,n;for(r=0;r<m.length;r++)if(n=r+1,
n%=m.length,n=i(e,t,m[r],m[n],!0),0<n.length)return!0;return!1}function a(e,r){var n,o,a,s;for(n=0;n<g.length;n++)for(o=t[g[n]],a=0;a<o.length;a++)if(s=a+1,s%=o.length,s=i(e,r,o[a],o[s],!0),0<s.length)return!0;return!1}var s,h,l,c,u,E,f,p,d,m=e.concat(),g=[],T=[],v=0;for(h=t.length;h>v;v++)g.push(v);f=0;for(var y=2*g.length;0<g.length;){if(y--,0>y){console.log("Infinite Loop! Holes left:"+g.length+", Probably Hole outside Shape!");break}for(l=f;l<m.length;l++){for(c=m[l],h=-1,v=0;v<g.length;v++)if(u=g[v],E=c.x+":"+c.y+":"+u,void 0===T[E]){for(s=t[u],p=0;p<s.length;p++)if(u=s[p],r(l,p)&&!o(c,u)&&!a(c,u)){h=p,g.splice(v,1),f=m.slice(0,l+1),u=m.slice(l),p=s.slice(h),d=s.slice(0,h+1),m=f.concat(p).concat(d).concat(u),f=l;break}if(h>=0)break;T[E]=!0}if(h>=0)break}}return m}(e,t);var u=THREE.FontUtils.Triangulate(o,!1);for(o=0,a=u.length;a>o;o++)for(h=u[o],s=0;3>s;s++)l=h[s].x+":"+h[s].y,l=c[l],void 0!==l&&(h[s]=l);return u.concat()},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var r=1-e;return r*r*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,r,i){return this.b2p0(e,t)+this.b2p1(e,r)+this.b2p2(e,i)},b3p0:function(e,t){var r=1-e;return r*r*r*t},b3p1:function(e,t){var r=1-e;return 3*r*r*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,r,i,n){return this.b3p0(e,t)+this.b3p1(e,r)+this.b3p2(e,i)+this.b3p3(e,n)}},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.constructor=THREE.LineCurve,THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e,this.v1=t,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve,THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t=new THREE.Vector2;return t.x=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),t.y=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),t},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t=new THREE.Vector2;return t.x=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),t.y=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y),t.normalize()},THREE.CubicBezierCurve=function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve,THREE.CubicBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,e)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.constructor=THREE.SplineCurve,THREE.SplineCurve.prototype.getPoint=function(e){var t=this.points;e*=t.length-1;var r=Math.floor(e);e-=r;var i=t[0==r?r:r-1],n=t[r],o=t[r>t.length-2?t.length-1:r+1],t=t[r>t.length-3?t.length-1:r+2],r=new THREE.Vector2;return r.x=THREE.Curve.Utils.interpolate(i.x,n.x,o.x,t.x,e),r.y=THREE.Curve.Utils.interpolate(i.y,n.y,o.y,t.y,e),r},THREE.EllipseCurve=function(e,t,r,i,n,o,a){this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve,THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;return 0>t&&(t+=2*Math.PI),t>2*Math.PI&&(t-=2*Math.PI),e=!0===this.aClockwise?this.aEndAngle+(1-e)*(2*Math.PI-t):this.aStartAngle+e*t,t=new THREE.Vector2,t.x=this.aX+this.xRadius*Math.cos(e),t.y=this.aY+this.yRadius*Math.sin(e),t},THREE.ArcCurve=function(e,t,r,i,n,o){THREE.EllipseCurve.call(this,e,t,r,r,i,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.ArcCurve.prototype.constructor=THREE.ArcCurve,THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,r){this.v0=e,this.v1=t,this.v2=r},function(e){var t=new THREE.Vector3;return t.x=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),t.y=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),t.z=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),t}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},function(e){var t=new THREE.Vector3;return t.x=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t.y=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t.z=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),t}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=this.points;e*=t.length-1;var r=Math.floor(e);e-=r;var i=t[0==r?r:r-1],n=t[r],o=t[r>t.length-2?t.length-1:r+1],t=t[r>t.length-3?t.length-1:r+2],r=new THREE.Vector3;return r.x=THREE.Curve.Utils.interpolate(i.x,n.x,o.x,t.x,e),r.y=THREE.Curve.Utils.interpolate(i.y,n.y,o.y,t.y,e),r.z=THREE.Curve.Utils.interpolate(i.z,n.z,o.z,t.z,e),r}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=this.points;e*=t.length-0;var r=Math.floor(e);e-=r;var r=r+(r>0?0:(Math.floor(Math.abs(r)/t.length)+1)*t.length),i=t[(r-1)%t.length],n=t[r%t.length],o=t[(r+1)%t.length],t=t[(r+2)%t.length],r=new THREE.Vector3;return r.x=THREE.Curve.Utils.interpolate(i.x,n.x,o.x,t.x,e),r.y=THREE.Curve.Utils.interpolate(i.y,n.y,o.y,t.y,e),r.z=THREE.Curve.Utils.interpolate(i.z,n.z,o.z,t.z,e),r}),THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){THREE.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){THREE.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){THREE.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(e){if(!0===e.initialized)return e;for(var t=0;t<e.hierarchy.length;t++){for(var r=0;r<e.hierarchy[t].keys.length;r++)if(0>e.hierarchy[t].keys[r].time&&(e.hierarchy[t].keys[r].time=0),void 0!==e.hierarchy[t].keys[r].rot&&!(e.hierarchy[t].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[t].keys[r].rot;e.hierarchy[t].keys[r].rot=(new THREE.Quaternion).fromArray(i)}if(e.hierarchy[t].keys.length&&void 0!==e.hierarchy[t].keys[0].morphTargets){for(i={},r=0;r<e.hierarchy[t].keys.length;r++)for(var n=0;n<e.hierarchy[t].keys[r].morphTargets.length;n++){var o=e.hierarchy[t].keys[r].morphTargets[n];i[o]=-1}for(e.hierarchy[t].usedMorphTargets=i,r=0;r<e.hierarchy[t].keys.length;r++){var a={};for(o in i){for(n=0;n<e.hierarchy[t].keys[r].morphTargets.length;n++)if(e.hierarchy[t].keys[r].morphTargets[n]===o){a[o]=e.hierarchy[t].keys[r].morphTargetsInfluences[n];break}n===e.hierarchy[t].keys[r].morphTargets.length&&(a[o]=0)}e.hierarchy[t].keys[r].morphTargetsInfluences=a}}for(r=1;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].time===e.hierarchy[t].keys[r-1].time&&(e.hierarchy[t].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[t].keys.length;r++)e.hierarchy[t].keys[r].index=r}return e.initialized=!0,e},parse:function(e){var t=function(e,r){r.push(e);for(var i=0;i<e.children.length;i++)t(e.children[i],r)},r=[];if(e instanceof THREE.SkinnedMesh)for(var i=0;i<e.skeleton.bones.length;i++)r.push(e.skeleton.bones[i]);else t(e,r);return r},play:function(e){-1===this.animations.indexOf(e)&&this.animations.push(e)},stop:function(e){e=this.animations.indexOf(e),-1!==e&&this.animations.splice(e,1)},update:function(e){for(var t=0;t<this.animations.length;t++)this.animations[t].resetBlendWeights();for(t=0;t<this.animations.length;t++)this.animations[t].update(e)}},THREE.Animation=function(e,t){this.root=e,this.data=THREE.AnimationHandler.init(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=!0,this.weight=0,this.interpolationType=THREE.AnimationHandler.LINEAR},THREE.Animation.prototype={constructor:THREE.Animation,keyTypes:["pos","rot","scl"],play:function(e,t){this.currentTime=void 0!==e?e:0,this.weight=void 0!==t?t:1,this.isPlaying=!0,this.reset(),THREE.AnimationHandler.play(this)},stop:function(){this.isPlaying=!1,THREE.AnimationHandler.stop(this)},reset:function(){for(var e=0,t=this.hierarchy.length;t>e;e++){var r=this.hierarchy[e];void 0===r.animationCache&&(r.animationCache={animations:{},blending:{positionWeight:0,quaternionWeight:0,scaleWeight:0}});var i=this.data.name,n=r.animationCache.animations,o=n[i];for(void 0===o&&(o={prevKey:{pos:0,rot:0,scl:0},nextKey:{pos:0,rot:0,scl:0},originalMatrix:r.matrix},n[i]=o),r=0;3>r;r++){for(var i=this.keyTypes[r],n=this.data.hierarchy[e].keys[0],a=this.getNextKeyWith(i,e,1);a.time<this.currentTime&&a.index>n.index;)n=a,a=this.getNextKeyWith(i,e,a.index+1);o.prevKey[i]=n,o.nextKey[i]=a}}},resetBlendWeights:function(){for(var e=0,t=this.hierarchy.length;t>e;e++){var r=this.hierarchy[e].animationCache;void 0!==r&&(r=r.blending,r.positionWeight=0,r.quaternionWeight=0,r.scaleWeight=0)}},update:function(){var e=[],t=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Quaternion,n=function(e,t){var r,i,n,a,s,h,l=[],c=[];return r=(e.length-1)*t,i=Math.floor(r),r-=i,l[0]=0===i?i:i-1,l[1]=i,l[2]=i>e.length-2?i:i+1,l[3]=i>e.length-3?i:i+2,i=e[l[0]],a=e[l[1]],s=e[l[2]],h=e[l[3]],l=r*r,n=r*l,c[0]=o(i[0],a[0],s[0],h[0],r,l,n),c[1]=o(i[1],a[1],s[1],h[1],r,l,n),c[2]=o(i[2],a[2],s[2],h[2],r,l,n),c},o=function(e,t,r,i,n,o,a){return e=.5*(r-e),i=.5*(i-t),(2*(t-r)+e+i)*a+(-3*(t-r)-2*e-i)*o+e*n+t};return function(o){if(!1!==this.isPlaying&&(this.currentTime+=o*this.timeScale,0!==this.weight)){o=this.data.length,(this.currentTime>o||0>this.currentTime)&&(this.loop?(this.currentTime%=o,0>this.currentTime&&(this.currentTime+=o),this.reset()):this.stop()),o=0;for(var a=this.hierarchy.length;a>o;o++)for(var s=this.hierarchy[o],h=s.animationCache.animations[this.data.name],l=s.animationCache.blending,c=0;3>c;c++){var u=this.keyTypes[c],E=h.prevKey[u],f=h.nextKey[u];if(0<this.timeScale&&f.time<=this.currentTime||0>this.timeScale&&E.time>=this.currentTime){for(E=this.data.hierarchy[o].keys[0],f=this.getNextKeyWith(u,o,1);f.time<this.currentTime&&f.index>E.index;)E=f,f=this.getNextKeyWith(u,o,f.index+1);h.prevKey[u]=E,h.nextKey[u]=f}var p=(this.currentTime-E.time)/(f.time-E.time),d=E[u],m=f[u];0>p&&(p=0),p>1&&(p=1),"pos"===u?this.interpolationType===THREE.AnimationHandler.LINEAR?(r.x=d[0]+(m[0]-d[0])*p,r.y=d[1]+(m[1]-d[1])*p,r.z=d[2]+(m[2]-d[2])*p,E=this.weight/(this.weight+l.positionWeight),s.position.lerp(r,E),l.positionWeight+=this.weight):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(e[0]=this.getPrevKeyWith("pos",o,E.index-1).pos,e[1]=d,e[2]=m,e[3]=this.getNextKeyWith("pos",o,f.index+1).pos,p=.33*p+.33,f=n(e,p),E=this.weight/(this.weight+l.positionWeight),l.positionWeight+=this.weight,u=s.position,u.x+=(f[0]-u.x)*E,u.y+=(f[1]-u.y)*E,u.z+=(f[2]-u.z)*E,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(p=n(e,1.01*p),t.set(p[0],p[1],p[2]),t.sub(u),t.y=0,t.normalize(),p=Math.atan2(t.x,t.z),s.rotation.set(0,p,0))):"rot"===u?(THREE.Quaternion.slerp(d,m,i,p),0===l.quaternionWeight?(s.quaternion.copy(i),l.quaternionWeight=this.weight):(E=this.weight/(this.weight+l.quaternionWeight),THREE.Quaternion.slerp(s.quaternion,i,s.quaternion,E),l.quaternionWeight+=this.weight)):"scl"===u&&(r.x=d[0]+(m[0]-d[0])*p,r.y=d[1]+(m[1]-d[1])*p,r.z=d[2]+(m[2]-d[2])*p,E=this.weight/(this.weight+l.scaleWeight),s.scale.lerp(r,E),l.scaleWeight+=this.weight)}return!0}}}(),getNextKeyWith:function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r<i.length-1?r:i.length-1:r%i.length;r<i.length;r++)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[0]},getPrevKeyWith:function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r>0?r:0:r>=0?r:r+i.length;r>=0;r--)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[i.length-1]}},THREE.KeyFrameAnimation=function(e){this.root=e.node,this.data=THREE.AnimationHandler.init(e),this.hierarchy=THREE.AnimationHandler.parse(this.root),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0,e=0;for(var t=this.hierarchy.length;t>e;e++){var r=this.data.hierarchy[e].sids,i=this.hierarchy[e];if(this.data.hierarchy[e].keys.length&&r){for(var n=0;n<r.length;n++){var o=r[n],a=this.getNextKeyWith(o,e,0);a&&a.apply(o)}i.matrixAutoUpdate=!1,this.data.hierarchy[e].node.updateMatrix(),i.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype={constructor:THREE.KeyFrameAnimation,play:function(e){if(this.currentTime=void 0!==e?e:0,!1===this.isPlaying){this.isPlaying=!0;var t,r,i=this.hierarchy.length;for(e=0;i>e;e++)t=this.hierarchy[e],r=this.data.hierarchy[e],void 0===r.animationCache&&(r.animationCache={},r.animationCache.prevKey=null,r.animationCache.nextKey=null,r.animationCache.originalMatrix=t.matrix),t=this.data.hierarchy[e].keys,t.length&&(r.animationCache.prevKey=t[0],r.animationCache.nextKey=t[1],this.startTime=Math.min(t[0].time,this.startTime),this.endTime=Math.max(t[t.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.play(this)},stop:function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.stop(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],r=this.data.hierarchy[e];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;i.copy(t.matrix),t.matrix=i,delete r.animationCache}}},update:function(e){if(!1!==this.isPlaying){this.currentTime+=e*this.timeScale,e=this.data.length,!0===this.loop&&this.currentTime>e&&(this.currentTime%=e),this.currentTime=Math.min(this.currentTime,e),e=0;for(var t=this.hierarchy.length;t>e;e++){var r=this.hierarchy[e],i=this.data.hierarchy[e],n=i.keys,i=i.animationCache;if(n.length){var o=i.prevKey,a=i.nextKey;if(a.time<=this.currentTime){for(;a.time<this.currentTime&&a.index>o.index;)o=a,a=n[o.index+1];i.prevKey=o,i.nextKey=a}a.time>=this.currentTime?o.interpolate(a,this.currentTime):o.interpolate(a,a.time),this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}}},getNextKeyWith:function(e,t,r){for(t=this.data.hierarchy[t].keys,r%=t.length;r<t.length;r++)if(t[r].hasTarget(e))return t[r];return t[0]},getPrevKeyWith:function(e,t,r){for(t=this.data.hierarchy[t].keys,r=r>=0?r:r+t.length;r>=0;r--)if(t[r].hasTarget(e))return t[r];return t[t.length-1]}},THREE.MorphAnimation=function(e){this.mesh=e,this.frames=e.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.currentFrame=this.lastFrame=0,this.isPlaying=!1},THREE.MorphAnimation.prototype={constructor:THREE.MorphAnimation,play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(e){if(!1!==this.isPlaying){this.currentTime+=e,!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration),e=this.duration/this.frames;var t=Math.floor(this.currentTime/e),r=this.mesh.morphTargetInfluences;t!=this.currentFrame&&(r[this.lastFrame]=0,r[this.currentFrame]=1,r[t]=0,this.lastFrame=this.currentFrame,this.currentFrame=t),r[t]=this.currentTime%e/e,r[this.lastFrame]=1-r[t]}}},THREE.BoxGeometry=function(e,t,r,i,n,o){function a(e,t,r,i,n,o,a,h){var l,c=s.widthSegments,u=s.heightSegments,E=n/2,f=o/2,p=s.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?l="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(l="y",u=s.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(l="x",c=s.depthSegments);var d=c+1,m=u+1,g=n/c,T=o/u,v=new THREE.Vector3;for(v[l]=a>0?1:-1,n=0;m>n;n++)for(o=0;d>o;o++){var y=new THREE.Vector3;y[e]=(o*g-E)*r,y[t]=(n*T-f)*i,y[l]=a,s.vertices.push(y)}for(n=0;u>n;n++)for(o=0;c>o;o++)f=o+d*n,e=o+d*(n+1),t=o+1+d*(n+1),r=o+1+d*n,i=new THREE.Vector2(o/c,1-n/u),a=new THREE.Vector2(o/c,1-(n+1)/u),l=new THREE.Vector2((o+1)/c,1-(n+1)/u),E=new THREE.Vector2((o+1)/c,1-n/u),f=new THREE.Face3(f+p,e+p,r+p),f.normal.copy(v),f.vertexNormals.push(v.clone(),v.clone(),v.clone()),f.materialIndex=h,s.faces.push(f),s.faceVertexUvs[0].push([i,a,E]),f=new THREE.Face3(e+p,t+p,r+p),f.normal.copy(v),f.vertexNormals.push(v.clone(),v.clone(),v.clone()),f.materialIndex=h,s.faces.push(f),s.faceVertexUvs[0].push([a.clone(),l,E.clone()])}THREE.Geometry.call(this),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:i,heightSegments:n,depthSegments:o},this.widthSegments=i||1,this.heightSegments=n||1,this.depthSegments=o||1;var s=this;i=e/2,n=t/2,o=r/2,a("z","y",-1,-1,r,t,i,0),a("z","y",1,-1,r,t,-i,1),a("x","z",1,1,e,r,n,2),a("x","z",1,-1,e,r,-n,3),a("x","y",1,-1,e,t,o,4),a("x","y",-1,-1,e,t,-o,5),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry,THREE.CircleGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:i},e=e||50,t=void 0!==t?Math.max(3,t):8,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var n,o=[];n=new THREE.Vector3;var a=new THREE.Vector2(.5,.5);for(this.vertices.push(n),o.push(a),n=0;t>=n;n++){var s=new THREE.Vector3,h=r+n/t*i;s.x=e*Math.cos(h),s.y=e*Math.sin(h),this.vertices.push(s),o.push(new THREE.Vector2((s.x/e+1)/2,(s.y/e+1)/2))}for(r=new THREE.Vector3(0,0,1),n=1;t>=n;n++)this.faces.push(new THREE.Face3(n,n+1,0,[r.clone(),r.clone(),r.clone()])),this.faceVertexUvs[0].push([o[n].clone(),o[n+1].clone(),a.clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry,THREE.CubeGeometry=function(e,t,r,i,n,o){return THREE.warn("THREE.CubeGeometry has been renamed to THREE.BoxGeometry."),new THREE.BoxGeometry(e,t,r,i,n,o)},THREE.CylinderGeometry=function(e,t,r,i,n,o,a,s){THREE.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:i,heightSegments:n,openEnded:o,thetaStart:a,thetaLength:s},e=void 0!==e?e:20,t=void 0!==t?t:20,r=void 0!==r?r:100,i=i||8,n=n||1,o=void 0!==o?o:!1,a=void 0!==a?a:0,s=void 0!==s?s:2*Math.PI;var h,l,c=r/2,u=[],E=[];for(l=0;n>=l;l++){var f=[],p=[],d=l/n,m=d*(t-e)+e;for(h=0;i>=h;h++){var g=h/i,T=new THREE.Vector3;T.x=m*Math.sin(g*s+a),T.y=-d*r+c,T.z=m*Math.cos(g*s+a),this.vertices.push(T),f.push(this.vertices.length-1),p.push(new THREE.Vector2(g,1-d))}u.push(f),E.push(p)}for(r=(t-e)/r,h=0;i>h;h++)for(0!==e?(a=this.vertices[u[0][h]].clone(),s=this.vertices[u[0][h+1]].clone()):(a=this.vertices[u[1][h]].clone(),s=this.vertices[u[1][h+1]].clone()),a.setY(Math.sqrt(a.x*a.x+a.z*a.z)*r).normalize(),s.setY(Math.sqrt(s.x*s.x+s.z*s.z)*r).normalize(),l=0;n>l;l++){var f=u[l][h],p=u[l+1][h],d=u[l+1][h+1],m=u[l][h+1],g=a.clone(),T=a.clone(),v=s.clone(),y=s.clone(),R=E[l][h].clone(),H=E[l+1][h].clone(),x=E[l+1][h+1].clone(),b=E[l][h+1].clone();this.faces.push(new THREE.Face3(f,p,m,[g,T,y])),this.faceVertexUvs[0].push([R,H,b]),this.faces.push(new THREE.Face3(p,d,m,[T.clone(),v,y.clone()])),this.faceVertexUvs[0].push([H.clone(),x,b.clone()])}if(!1===o&&e>0)for(this.vertices.push(new THREE.Vector3(0,c,0)),h=0;i>h;h++)f=u[0][h],p=u[0][h+1],d=this.vertices.length-1,g=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),R=E[0][h].clone(),H=E[0][h+1].clone(),x=new THREE.Vector2(H.x,0),this.faces.push(new THREE.Face3(f,p,d,[g,T,v])),this.faceVertexUvs[0].push([R,H,x]);if(!1===o&&t>0)for(this.vertices.push(new THREE.Vector3(0,-c,0)),h=0;i>h;h++)f=u[n][h+1],p=u[n][h],d=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),T=new THREE.Vector3(0,-1,0),v=new THREE.Vector3(0,-1,0),R=E[n][h+1].clone(),H=E[n][h].clone(),x=new THREE.Vector2(H.x,1),this.faces.push(new THREE.Face3(f,p,d,[g,T,v])),this.faceVertexUvs[0].push([R,H,x]);this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.ExtrudeGeometry=function(e,t){"undefined"!=typeof e&&(THREE.Geometry.call(this),this.type="ExtrudeGeometry",e=e instanceof Array?e:[e],this.addShapeList(e,t),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry,THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,i=0;r>i;i++)this.addShape(e[i],t)},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function r(e,t,r){return t||THREE.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}function i(e,t,r){var i=1,i=e.x-t.x,n=e.y-t.y,o=r.x-e.x,a=r.y-e.y,s=i*i+n*n;if(1e-10<Math.abs(i*a-n*o)){var h=Math.sqrt(s),l=Math.sqrt(o*o+a*a),s=t.x-n/h;if(t=t.y+i/h,o=((r.x-a/l-s)*a-(r.y+o/l-t)*o)/(i*a-n*o),r=s+i*o-e.x,e=t+n*o-e.y,i=r*r+e*e,2>=i)return new THREE.Vector2(r,e);i=Math.sqrt(i/2)}else e=!1,i>1e-10?o>1e-10&&(e=!0):-1e-10>i?-1e-10>o&&(e=!0):Math.sign(n)==Math.sign(a)&&(e=!0),e?(r=-n,e=i,i=Math.sqrt(s)):(r=i,e=n,i=Math.sqrt(s/2));return new THREE.Vector2(r/i,e/i)}function n(e,t){var r,i;for(z=e.length;0<=--z;){r=z,i=z-1,0>i&&(i=e.length-1);for(var n=0,o=T+2*d,n=0;o>n;n++){var a=k*n,s=k*(n+1),h=t+r+a,a=t+i+a,l=t+i+s,s=t+r+s,h=h+S,a=a+S,l=l+S,s=s+S;M.faces.push(new THREE.Face3(h,a,s,null,null,H)),M.faces.push(new THREE.Face3(a,l,s,null,null,H)),h=x.generateSideWallUV(M,h,a,l,s),M.faceVertexUvs[0].push([h[0],h[1],h[3]]),M.faceVertexUvs[0].push([h[1],h[2],h[3]])}}}function o(e,t,r){M.vertices.push(new THREE.Vector3(e,t,r))}function a(e,t,r){e+=S,t+=S,r+=S,M.faces.push(new THREE.Face3(e,t,r,null,null,R)),e=x.generateTopUV(M,e,t,r),M.faceVertexUvs[0].push(e)}var s,h,l,c,u,E=void 0!==t.amount?t.amount:100,f=void 0!==t.bevelThickness?t.bevelThickness:6,p=void 0!==t.bevelSize?t.bevelSize:f-2,d=void 0!==t.bevelSegments?t.bevelSegments:3,m=void 0!==t.bevelEnabled?t.bevelEnabled:!0,g=void 0!==t.curveSegments?t.curveSegments:12,T=void 0!==t.steps?t.steps:1,v=t.extrudePath,y=!1,R=t.material,H=t.extrudeMaterial,x=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;v&&(s=v.getSpacedPoints(T),y=!0,m=!1,h=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(v,T,!1),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3),m||(p=f=d=0);var b,_,w,M=this,S=this.vertices.length,v=e.extractPoints(g),g=v.shape,C=v.holes;if(v=!THREE.Shape.Utils.isClockWise(g)){for(g=g.reverse(),_=0,w=C.length;w>_;_++)b=C[_],THREE.Shape.Utils.isClockWise(b)&&(C[_]=b.reverse());v=!1}var A=THREE.Shape.Utils.triangulateShape(g,C),L=g;for(_=0,w=C.length;w>_;_++)b=C[_],g=g.concat(b);var P,F,B,U,D,V,k=g.length,N=A.length,v=[],z=0;for(B=L.length,P=B-1,F=z+1;B>z;z++,P++,F++)P===B&&(P=0),F===B&&(F=0),v[z]=i(L[z],L[P],L[F]);var O,G=[],I=v.concat();for(_=0,w=C.length;w>_;_++){for(b=C[_],O=[],z=0,B=b.length,P=B-1,F=z+1;B>z;z++,P++,F++)P===B&&(P=0),F===B&&(F=0),O[z]=i(b[z],b[P],b[F]);G.push(O),I=I.concat(O)}for(P=0;d>P;P++){for(B=P/d,U=f*(1-B),F=p*Math.sin(B*Math.PI/2),z=0,B=L.length;B>z;z++)D=r(L[z],v[z],F),o(D.x,D.y,-U);for(_=0,w=C.length;w>_;_++)for(b=C[_],O=G[_],z=0,B=b.length;B>z;z++)D=r(b[z],O[z],F),o(D.x,D.y,-U)}for(F=p,z=0;k>z;z++)D=m?r(g[z],I[z],F):g[z],y?(c.copy(h.normals[0]).multiplyScalar(D.x),l.copy(h.binormals[0]).multiplyScalar(D.y),u.copy(s[0]).add(c).add(l),o(u.x,u.y,u.z)):o(D.x,D.y,0);for(B=1;T>=B;B++)for(z=0;k>z;z++)D=m?r(g[z],I[z],F):g[z],y?(c.copy(h.normals[B]).multiplyScalar(D.x),l.copy(h.binormals[B]).multiplyScalar(D.y),u.copy(s[B]).add(c).add(l),o(u.x,u.y,u.z)):o(D.x,D.y,E/T*B);for(P=d-1;P>=0;P--){for(B=P/d,U=f*(1-B),F=p*Math.sin(B*Math.PI/2),z=0,B=L.length;B>z;z++)D=r(L[z],v[z],F),o(D.x,D.y,E+U);for(_=0,w=C.length;w>_;_++)for(b=C[_],O=G[_],z=0,B=b.length;B>z;z++)D=r(b[z],O[z],F),y?o(D.x,D.y+s[T-1].y,s[T-1].x+U):o(D.x,D.y,E+U)}!function(){if(m){var e;for(e=0*k,z=0;N>z;z++)V=A[z],a(V[2]+e,V[1]+e,V[0]+e);for(e=T+2*d,e*=k,z=0;N>z;z++)V=A[z],a(V[0]+e,V[1]+e,V[2]+e)}else{for(z=0;N>z;z++)V=A[z],a(V[2],V[1],V[0]);for(z=0;N>z;z++)V=A[z],a(V[0]+k*T,V[1]+k*T,V[2]+k*T)}}(),function(){var e=0;for(n(L,e),e+=L.length,_=0,w=C.length;w>_;_++)b=C[_],n(b,e),e+=b.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,i){return e=e.vertices,t=e[t],r=e[r],i=e[i],[new THREE.Vector2(t.x,t.y),new THREE.Vector2(r.x,r.y),new THREE.Vector2(i.x,i.y)]},generateSideWallUV:function(e,t,r,i,n){return e=e.vertices,t=e[t],r=e[r],i=e[i],n=e[n],.01>Math.abs(t.y-r.y)?[new THREE.Vector2(t.x,1-t.z),new THREE.Vector2(r.x,1-r.z),new THREE.Vector2(i.x,1-i.z),new THREE.Vector2(n.x,1-n.z)]:[new THREE.Vector2(t.y,1-t.z),new THREE.Vector2(r.y,1-r.z),new THREE.Vector2(i.y,1-i.z),new THREE.Vector2(n.y,1-n.z)]}},THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),this.type="ShapeGeometry",!1==e instanceof Array&&(e=[e]),this.addShapeList(e,t),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry,THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,i=e.length;i>r;r++)this.addShape(e[r],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var r,i,n,o=t.material,a=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,s=this.vertices.length;r=e.extractPoints(void 0!==t.curveSegments?t.curveSegments:12);var h=r.shape,l=r.holes;if(!THREE.Shape.Utils.isClockWise(h))for(h=h.reverse(),r=0,i=l.length;i>r;r++)n=l[r],THREE.Shape.Utils.isClockWise(n)&&(l[r]=n.reverse());var c=THREE.Shape.Utils.triangulateShape(h,l);for(r=0,i=l.length;i>r;r++)n=l[r],h=h.concat(n);for(l=h.length,i=c.length,r=0;l>r;r++)n=h[r],this.vertices.push(new THREE.Vector3(n.x,n.y,0));for(r=0;i>r;r++)l=c[r],h=l[0]+s,n=l[1]+s,l=l[2]+s,this.faces.push(new THREE.Face3(h,n,l,null,null,o)),this.faceVertexUvs[0].push(a.generateTopUV(this,h,n,l))},THREE.LatheGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:i},t=t||12,r=r||0,i=i||2*Math.PI;for(var n=1/(e.length-1),o=1/t,a=0,s=t;s>=a;a++)for(var h=r+a*o*i,l=Math.cos(h),c=Math.sin(h),h=0,u=e.length;u>h;h++){var E=e[h],f=new THREE.Vector3;f.x=l*E.x-c*E.y,f.y=c*E.x+l*E.y,f.z=E.z,this.vertices.push(f)}for(r=e.length,a=0,s=t;s>a;a++)for(h=0,u=e.length-1;u>h;h++){t=c=h+r*a,i=c+r;var l=c+1+r,c=c+1,E=a*o,f=h*n,p=E+o,d=f+n;this.faces.push(new THREE.Face3(t,i,c)),this.faceVertexUvs[0].push([new THREE.Vector2(E,f),new THREE.Vector2(p,f),new THREE.Vector2(E,d)]),this.faces.push(new THREE.Face3(i,l,c)),this.faceVertexUvs[0].push([new THREE.Vector2(p,f),new THREE.Vector2(p,d),new THREE.Vector2(E,d)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry,THREE.PlaneGeometry=function(e,t,r,i){console.info("THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint."),THREE.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:i},this.fromBufferGeometry(new THREE.PlaneBufferGeometry(e,t,r,i))},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.PlaneBufferGeometry=function(e,t,r,i){THREE.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:i};var n=e/2,o=t/2;r=r||1,i=i||1;var a=r+1,s=i+1,h=e/r,l=t/i;t=new Float32Array(a*s*3),e=new Float32Array(a*s*3);for(var c=new Float32Array(a*s*2),u=0,E=0,f=0;s>f;f++)for(var p=f*l-o,d=0;a>d;d++)t[u]=d*h-n,t[u+1]=-p,e[u+2]=1,c[E]=d/r,c[E+1]=1-f/i,u+=3,E+=2;for(u=0,n=new(65535<t.length/3?Uint32Array:Uint16Array)(r*i*6),f=0;i>f;f++)for(d=0;r>d;d++)o=d+a*(f+1),s=d+1+a*(f+1),h=d+1+a*f,n[u]=d+a*f,n[u+1]=o,n[u+2]=h,n[u+3]=o,n[u+4]=s,n[u+5]=h,u+=6;this.addAttribute("index",new THREE.BufferAttribute(n,1)),this.addAttribute("position",new THREE.BufferAttribute(t,3)),this.addAttribute("normal",new THREE.BufferAttribute(e,3)),this.addAttribute("uv",new THREE.BufferAttribute(c,2))},THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry,THREE.RingGeometry=function(e,t,r,i,n,o){THREE.Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:i,thetaStart:n,thetaLength:o},e=e||0,t=t||50,n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI,r=void 0!==r?Math.max(3,r):8,i=void 0!==i?Math.max(1,i):8;var a,s=[],h=e,l=(t-e)/i;for(e=0;i+1>e;e++){for(a=0;r+1>a;a++){var c=new THREE.Vector3,u=n+a/r*o;c.x=h*Math.cos(u),c.y=h*Math.sin(u),this.vertices.push(c),s.push(new THREE.Vector2((c.x/t+1)/2,(c.y/t+1)/2))}h+=l}for(t=new THREE.Vector3(0,0,1),e=0;i>e;e++)for(n=e*(r+1),a=0;r>a;a++)o=u=a+n,l=u+r+1,c=u+r+2,this.faces.push(new THREE.Face3(o,l,c,[t.clone(),t.clone(),t.clone()])),this.faceVertexUvs[0].push([s[o].clone(),s[l].clone(),s[c].clone()]),o=u,l=u+r+2,c=u+1,this.faces.push(new THREE.Face3(o,l,c,[t.clone(),t.clone(),t.clone()])),this.faceVertexUvs[0].push([s[o].clone(),s[l].clone(),s[c].clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,h)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry.prototype.constructor=THREE.RingGeometry,THREE.SphereGeometry=function(e,t,r,i,n,o,a){THREE.Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a},e=e||50,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;var s,h,l=[],c=[];for(h=0;r>=h;h++){var u=[],E=[];for(s=0;t>=s;s++){var f=s/t,p=h/r,d=new THREE.Vector3;d.x=-e*Math.cos(i+f*n)*Math.sin(o+p*a),d.y=e*Math.cos(o+p*a),d.z=e*Math.sin(i+f*n)*Math.sin(o+p*a),this.vertices.push(d),u.push(this.vertices.length-1),E.push(new THREE.Vector2(f,1-p))}l.push(u),c.push(E)}for(h=0;r>h;h++)for(s=0;t>s;s++){i=l[h][s+1],n=l[h][s],o=l[h+1][s],a=l[h+1][s+1];var u=this.vertices[i].clone().normalize(),E=this.vertices[n].clone().normalize(),f=this.vertices[o].clone().normalize(),p=this.vertices[a].clone().normalize(),d=c[h][s+1].clone(),m=c[h][s].clone(),g=c[h+1][s].clone(),T=c[h+1][s+1].clone();Math.abs(this.vertices[i].y)===e?(d.x=(d.x+m.x)/2,this.faces.push(new THREE.Face3(i,o,a,[u,f,p])),this.faceVertexUvs[0].push([d,g,T])):Math.abs(this.vertices[o].y)===e?(g.x=(g.x+T.x)/2,this.faces.push(new THREE.Face3(i,n,o,[u,E,f])),this.faceVertexUvs[0].push([d,m,g])):(this.faces.push(new THREE.Face3(i,n,a,[u,E,p])),this.faceVertexUvs[0].push([d,m,T]),
this.faces.push(new THREE.Face3(n,o,a,[E.clone(),f,p.clone()])),this.faceVertexUvs[0].push([m.clone(),g,T.clone()]))}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.TextGeometry=function(e,t){t=t||{};var r=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,t),this.type="TextGeometry"},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TextGeometry.prototype.constructor=THREE.TextGeometry,THREE.TorusGeometry=function(e,t,r,i,n){THREE.Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:i,arc:n},e=e||100,t=t||40,r=r||8,i=i||6,n=n||2*Math.PI;for(var o=new THREE.Vector3,a=[],s=[],h=0;r>=h;h++)for(var l=0;i>=l;l++){var c=l/i*n,u=h/r*Math.PI*2;o.x=e*Math.cos(c),o.y=e*Math.sin(c);var E=new THREE.Vector3;E.x=(e+t*Math.cos(u))*Math.cos(c),E.y=(e+t*Math.cos(u))*Math.sin(c),E.z=t*Math.sin(u),this.vertices.push(E),a.push(new THREE.Vector2(l/i,h/r)),s.push(E.clone().sub(o).normalize())}for(h=1;r>=h;h++)for(l=1;i>=l;l++)e=(i+1)*h+l-1,t=(i+1)*(h-1)+l-1,n=(i+1)*(h-1)+l,o=(i+1)*h+l,c=new THREE.Face3(e,t,o,[s[e].clone(),s[t].clone(),s[o].clone()]),this.faces.push(c),this.faceVertexUvs[0].push([a[e].clone(),a[t].clone(),a[o].clone()]),c=new THREE.Face3(t,n,o,[s[t].clone(),s[n].clone(),s[o].clone()]),this.faces.push(c),this.faceVertexUvs[0].push([a[t].clone(),a[n].clone(),a[o].clone()]);this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry,THREE.TorusKnotGeometry=function(e,t,r,i,n,o,a){function s(e,t,r,i,n){var o=Math.cos(e),a=Math.sin(e);return e*=t/r,t=Math.cos(e),o*=i*(2+t)*.5,a=i*(2+t)*a*.5,i=n*i*Math.sin(e)*.5,new THREE.Vector3(o,a,i)}THREE.Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:i,p:n,q:o,heightScale:a},e=e||100,t=t||40,r=r||64,i=i||8,n=n||2,o=o||3,a=a||1;for(var h=Array(r),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,E=0;r>E;++E){h[E]=Array(i);var f=E/r*2*n*Math.PI,p=s(f,o,n,e,a),f=s(f+.01,o,n,e,a);for(l.subVectors(f,p),c.addVectors(f,p),u.crossVectors(l,c),c.crossVectors(u,l),u.normalize(),c.normalize(),f=0;i>f;++f){var d=f/i*2*Math.PI,m=-t*Math.cos(d),d=t*Math.sin(d),g=new THREE.Vector3;g.x=p.x+m*c.x+d*u.x,g.y=p.y+m*c.y+d*u.y,g.z=p.z+m*c.z+d*u.z,h[E][f]=this.vertices.push(g)-1}}for(E=0;r>E;++E)for(f=0;i>f;++f)n=(E+1)%r,o=(f+1)%i,e=h[E][f],t=h[n][f],n=h[n][o],o=h[E][o],a=new THREE.Vector2(E/r,f/i),l=new THREE.Vector2((E+1)/r,f/i),c=new THREE.Vector2((E+1)/r,(f+1)/i),u=new THREE.Vector2(E/r,(f+1)/i),this.faces.push(new THREE.Face3(e,t,o)),this.faceVertexUvs[0].push([a,l,u]),this.faces.push(new THREE.Face3(t,n,o)),this.faceVertexUvs[0].push([l.clone(),c,u.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry,THREE.TubeGeometry=function(e,t,r,i,n,o){THREE.Geometry.call(this),this.type="TubeGeometry",this.parameters={path:e,segments:t,radius:r,radialSegments:i,closed:n},t=t||64,r=r||1,i=i||8,n=n||!1,o=o||THREE.TubeGeometry.NoTaper;var a,s,h,l,c,u,E,f,p,d,m=[],g=t+1,T=new THREE.Vector3;for(f=new THREE.TubeGeometry.FrenetFrames(e,t,n),p=f.normals,d=f.binormals,this.tangents=f.tangents,this.normals=p,this.binormals=d,f=0;g>f;f++)for(m[f]=[],h=f/(g-1),E=e.getPointAt(h),a=p[f],s=d[f],c=r*o(h),h=0;i>h;h++)l=h/i*2*Math.PI,u=-c*Math.cos(l),l=c*Math.sin(l),T.copy(E),T.x+=u*a.x+l*s.x,T.y+=u*a.y+l*s.y,T.z+=u*a.z+l*s.z,m[f][h]=this.vertices.push(new THREE.Vector3(T.x,T.y,T.z))-1;for(f=0;t>f;f++)for(h=0;i>h;h++)o=n?(f+1)%t:f+1,g=(h+1)%i,e=m[f][h],r=m[o][h],o=m[o][g],g=m[f][g],T=new THREE.Vector2(f/t,h/i),p=new THREE.Vector2((f+1)/t,h/i),d=new THREE.Vector2((f+1)/t,(h+1)/i),a=new THREE.Vector2(f/t,(h+1)/i),this.faces.push(new THREE.Face3(e,r,g)),this.faceVertexUvs[0].push([T,p,a]),this.faces.push(new THREE.Face3(r,o,g)),this.faceVertexUvs[0].push([p.clone(),d,a.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry,THREE.TubeGeometry.NoTaper=function(e){return 1},THREE.TubeGeometry.SinusoidalTaper=function(e){return Math.sin(Math.PI*e)},THREE.TubeGeometry.FrenetFrames=function(e,t,r){var i=new THREE.Vector3,n=[],o=[],a=[],s=new THREE.Vector3,h=new THREE.Matrix4;t+=1;var l,c,u;for(this.tangents=n,this.normals=o,this.binormals=a,l=0;t>l;l++)c=l/(t-1),n[l]=e.getTangentAt(c),n[l].normalize();for(o[0]=new THREE.Vector3,a[0]=new THREE.Vector3,e=Number.MAX_VALUE,l=Math.abs(n[0].x),c=Math.abs(n[0].y),u=Math.abs(n[0].z),e>=l&&(e=l,i.set(1,0,0)),e>=c&&(e=c,i.set(0,1,0)),e>=u&&i.set(0,0,1),s.crossVectors(n[0],i).normalize(),o[0].crossVectors(n[0],s),a[0].crossVectors(n[0],o[0]),l=1;t>l;l++)o[l]=o[l-1].clone(),a[l]=a[l-1].clone(),s.crossVectors(n[l-1],n[l]),1e-4<s.length()&&(s.normalize(),i=Math.acos(THREE.Math.clamp(n[l-1].dot(n[l]),-1,1)),o[l].applyMatrix4(h.makeRotationAxis(s,i))),a[l].crossVectors(n[l],o[l]);if(r)for(i=Math.acos(THREE.Math.clamp(o[0].dot(o[t-1]),-1,1)),i/=t-1,0<n[0].dot(s.crossVectors(o[0],o[t-1]))&&(i=-i),l=1;t>l;l++)o[l].applyMatrix4(h.makeRotationAxis(n[l],i*l)),a[l].crossVectors(n[l],o[l])},THREE.PolyhedronGeometry=function(e,t,r,i){function n(e){var t=e.normalize().clone();t.index=h.vertices.push(t)-1;var r=Math.atan2(e.z,-e.x)/2/Math.PI+.5;return e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5,t.uv=new THREE.Vector2(r,1-e),t}function o(e,t,r){var i=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()]);h.faces.push(i),m.copy(e).add(t).add(r).divideScalar(3),i=Math.atan2(m.z,-m.x),h.faceVertexUvs[0].push([s(e.uv,e,i),s(t.uv,t,i),s(r.uv,r,i)])}function a(e,t){for(var r=Math.pow(2,t),i=n(h.vertices[e.a]),a=n(h.vertices[e.b]),s=n(h.vertices[e.c]),l=[],c=0;r>=c;c++){l[c]=[];for(var u=n(i.clone().lerp(s,c/r)),E=n(a.clone().lerp(s,c/r)),f=r-c,p=0;f>=p;p++)l[c][p]=0==p&&c==r?u:n(u.clone().lerp(E,p/f))}for(c=0;r>c;c++)for(p=0;2*(r-c)-1>p;p++)i=Math.floor(p/2),0==p%2?o(l[c][i+1],l[c+1][i],l[c][i]):o(l[c][i+1],l[c+1][i+1],l[c+1][i])}function s(e,t,r){return 0>r&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(r/2/Math.PI+.5,e.y)),e.clone()}THREE.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:i},r=r||1,i=i||0;for(var h=this,l=0,c=e.length;c>l;l+=3)n(new THREE.Vector3(e[l],e[l+1],e[l+2]));e=this.vertices;for(var u=[],E=l=0,c=t.length;c>l;l+=3,E++){var f=e[t[l]],p=e[t[l+1]],d=e[t[l+2]];u[E]=new THREE.Face3(f.index,p.index,d.index,[f.clone(),p.clone(),d.clone()])}for(var m=new THREE.Vector3,l=0,c=u.length;c>l;l++)a(u[l],i);for(l=0,c=this.faceVertexUvs[0].length;c>l;l++)t=this.faceVertexUvs[0][l],i=t[0].x,e=t[1].x,u=t[2].x,E=Math.max(i,Math.max(e,u)),f=Math.min(i,Math.min(e,u)),E>.9&&.1>f&&(.2>i&&(t[0].x+=1),.2>e&&(t[1].x+=1),.2>u&&(t[2].x+=1));for(l=0,c=this.vertices.length;c>l;l++)this.vertices[l].multiplyScalar(r);this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.DodecahedronGeometry=function(e,t){this.parameters={radius:e,detail:t};var r=(1+Math.sqrt(5))/2,i=1/r;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-r,0,-i,r,0,i,-r,0,i,r,-i,-r,0,-i,r,0,i,-r,0,i,r,0,-r,0,-i,r,0,-i,-r,0,i,r,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t)},THREE.DodecahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry,THREE.IcosahedronGeometry=function(e,t){var r=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry,THREE.OctahedronGeometry=function(e,t){this.parameters={radius:e,detail:t},THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry,THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry,THREE.ParametricGeometry=function(e,t,r){THREE.Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:r};var i,n,o,a,s=this.vertices,h=this.faces,l=this.faceVertexUvs[0],c=t+1;for(i=0;r>=i;i++)for(a=i/r,n=0;t>=n;n++)o=n/t,o=e(o,a),s.push(o);var u,E,f,p;for(i=0;r>i;i++)for(n=0;t>n;n++)e=i*c+n,s=i*c+n+1,a=(i+1)*c+n+1,o=(i+1)*c+n,u=new THREE.Vector2(n/t,i/r),E=new THREE.Vector2((n+1)/t,i/r),f=new THREE.Vector2((n+1)/t,(i+1)/r),p=new THREE.Vector2(n/t,(i+1)/r),h.push(new THREE.Face3(e,s,o)),l.push([u,E,p]),h.push(new THREE.Face3(s,a,o)),l.push([E.clone(),f,p.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry,THREE.AxisHelper=function(e){e=e||1;var t=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]),r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);e=new THREE.BufferGeometry,e.addAttribute("position",new THREE.BufferAttribute(t,3)),e.addAttribute("color",new THREE.BufferAttribute(r,3)),t=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.Line.call(this,e,t,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.AxisHelper.prototype.constructor=THREE.AxisHelper,THREE.ArrowHelper=function(){var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var t=new THREE.CylinderGeometry(0,.5,1,5,1);return t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),function(r,i,n,o,a,s){THREE.Object3D.call(this),void 0===o&&(o=16776960),void 0===n&&(n=1),void 0===a&&(a=.2*n),void 0===s&&(s=.2*a),this.position.copy(i),this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:o})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:o})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(r),this.setLength(n,a,s)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper,THREE.ArrowHelper.prototype.setDirection=function(){var e,t=new THREE.Vector3;return function(r){.99999<r.y?this.quaternion.set(0,0,0,1):-.99999>r.y?this.quaternion.set(1,0,0,0):(t.set(r.z,0,-r.x).normalize(),e=Math.acos(r.y),this.quaternion.setFromAxisAngle(t,e))}}(),THREE.ArrowHelper.prototype.setLength=function(e,t,r){void 0===t&&(t=.2*e),void 0===r&&(r=.2*t),this.line.scale.set(1,e-t,1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},THREE.BoxHelper=function(e){var t=new THREE.BufferGeometry;t.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3)),THREE.Line.call(this,t,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==e&&this.update(e)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.constructor=THREE.BoxHelper,THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;null===t.boundingBox&&t.computeBoundingBox();var r=t.boundingBox.min,t=t.boundingBox.max,i=this.geometry.attributes.position.array;i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=r.x,i[4]=t.y,i[5]=t.z,i[6]=r.x,i[7]=t.y,i[8]=t.z,i[9]=r.x,i[10]=r.y,i[11]=t.z,i[12]=r.x,i[13]=r.y,i[14]=t.z,i[15]=t.x,i[16]=r.y,i[17]=t.z,i[18]=t.x,i[19]=r.y,i[20]=t.z,i[21]=t.x,i[22]=t.y,i[23]=t.z,i[24]=t.x,i[25]=t.y,i[26]=r.z,i[27]=r.x,i[28]=t.y,i[29]=r.z,i[30]=r.x,i[31]=t.y,i[32]=r.z,i[33]=r.x,i[34]=r.y,i[35]=r.z,i[36]=r.x,i[37]=r.y,i[38]=r.z,i[39]=t.x,i[40]=r.y,i[41]=r.z,i[42]=t.x,i[43]=r.y,i[44]=r.z,i[45]=t.x,i[46]=t.y,i[47]=r.z,i[48]=t.x,i[49]=t.y,i[50]=t.z,i[51]=t.x,i[52]=t.y,i[53]=r.z,i[54]=r.x,i[55]=t.y,i[56]=t.z,i[57]=r.x,i[58]=t.y,i[59]=r.z,i[60]=r.x,i[61]=r.y,i[62]=t.z,i[63]=r.x,i[64]=r.y,i[65]=r.z,i[66]=t.x,i[67]=r.y,i[68]=t.z,i[69]=t.x,i[70]=r.y,i[71]=r.z,this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeBoundingSphere(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},THREE.BoundingBoxHelper=function(e,t){var r=void 0!==t?t:8947848;this.object=e,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper,THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(e){function t(e,t,i){r(e,i),r(t,i)}function r(e,t){i.vertices.push(new THREE.Vector3),i.colors.push(new THREE.Color(t)),void 0===o[e]&&(o[e]=[]),o[e].push(i.vertices.length-1)}var i=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),o={};t("n1","n2",16755200),t("n2","n4",16755200),t("n4","n3",16755200),t("n3","n1",16755200),t("f1","f2",16755200),t("f2","f4",16755200),t("f4","f3",16755200),t("f3","f1",16755200),t("n1","f1",16755200),t("n2","f2",16755200),t("n3","f3",16755200),t("n4","f4",16755200),t("p","n1",16711680),t("p","n2",16711680),t("p","n3",16711680),t("p","n4",16711680),t("u1","u2",43775),t("u2","u3",43775),t("u3","u1",43775),t("c","t",16777215),t("p","c",3355443),t("cn1","cn2",3355443),t("cn3","cn4",3355443),t("cf1","cf2",3355443),t("cf3","cf4",3355443),THREE.Line.call(this,i,n,THREE.LinePieces),this.camera=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.constructor=THREE.CameraHelper,THREE.CameraHelper.prototype.update=function(){var e,t,r=new THREE.Vector3,i=new THREE.Camera,n=function(n,o,a,s){if(r.set(o,a,s).unproject(i),n=t[n],void 0!==n)for(o=0,a=n.length;a>o;o++)e.vertices[n[o]].copy(r)};return function(){e=this.geometry,t=this.pointMap,i.projectionMatrix.copy(this.camera.projectionMatrix),n("c",0,0,-1),n("t",0,0,1),n("n1",-1,-1,-1),n("n2",1,-1,-1),n("n3",-1,1,-1),n("n4",1,1,-1),n("f1",-1,-1,1),n("f2",1,-1,1),n("f3",-1,1,1),n("f4",1,1,1),n("u1",.7,1.1,-1),n("u2",-.7,1.1,-1),n("u3",0,2,-1),n("cf1",-1,0,1),n("cf2",1,0,1),n("cf3",0,-1,1),n("cf4",0,1,1),n("cn1",-1,0,-1),n("cn2",1,0,-1),n("cn3",0,-1,-1),n("cn4",0,1,-1),e.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,t=t||1;var r=new THREE.Geometry;r.vertices.push(new THREE.Vector3(-t,t,0),new THREE.Vector3(t,t,0),new THREE.Vector3(t,-t,0),new THREE.Vector3(-t,-t,0),new THREE.Vector3(-t,t,0));var i=new THREE.LineBasicMaterial({fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(r,i),this.add(this.lightPlane),r=new THREE.Geometry,r.vertices.push(new THREE.Vector3,new THREE.Vector3),i=new THREE.LineBasicMaterial({fog:!1}),i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,i),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper,THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(t,e),this.lightPlane.lookAt(r),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(r),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(e,t,r){t=void 0!==t?t:16777215,r=Math.cos(THREE.Math.degToRad(void 0!==r?r:1));var i,n=[0,0],o={},a=function(e,t){return e-t},s=["a","b","c"],h=new THREE.BufferGeometry;e.geometry instanceof THREE.BufferGeometry?(i=new THREE.Geometry,i.fromBufferGeometry(e.geometry)):i=e.geometry.clone(),i.mergeVertices(),i.computeFaceNormals();var l=i.vertices;i=i.faces;for(var c=0,u=0,E=i.length;E>u;u++)for(var f=i[u],p=0;3>p;p++){n[0]=f[s[p]],n[1]=f[s[(p+1)%3]],n.sort(a);var d=n.toString();void 0===o[d]?(o[d]={vert1:n[0],vert2:n[1],face1:u,face2:void 0},c++):o[d].face2=u}n=new Float32Array(6*c),a=0;for(d in o)s=o[d],(void 0===s.face2||i[s.face1].normal.dot(i[s.face2].normal)<=r)&&(c=l[s.vert1],n[a++]=c.x,n[a++]=c.y,n[a++]=c.z,c=l[s.vert2],n[a++]=c.x,n[a++]=c.y,n[a++]=c.z);h.addAttribute("position",new THREE.BufferAttribute(n,3)),THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:t}),THREE.LinePieces),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype),THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper,THREE.FaceNormalsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1,e=void 0!==r?r:16776960,i=void 0!==i?i:1,t=new THREE.Geometry,r=0;for(var n=this.object.geometry.faces.length;n>r;r++)t.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,t,new THREE.LineBasicMaterial({color:e,linewidth:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper,THREE.FaceNormalsHelper.prototype.update=function(){var e=this.geometry.vertices,t=this.object,r=t.geometry.vertices,i=t.geometry.faces,n=t.matrixWorld;t.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(n);for(var o=t=0,a=i.length;a>t;t++,o+=2){var s=i[t];e[o].copy(r[s.a]).add(r[s.b]).add(r[s.c]).divideScalar(3).applyMatrix4(n),e[o+1].copy(s.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(e[o])}return this.geometry.verticesNeedUpdate=!0,this},THREE.GridHelper=function(e,t){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var n=-e;e>=n;n+=t){r.vertices.push(new THREE.Vector3(-e,0,n),new THREE.Vector3(e,0,n),new THREE.Vector3(n,0,-e),new THREE.Vector3(n,0,e));var o=0===n?this.color1:this.color2;r.colors.push(o,o,o,o)}THREE.Line.call(this,r,i,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.constructor=THREE.GridHelper,THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var r=new THREE.SphereGeometry(t,4,2);r.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var i=0;8>i;i++)r.faces[i].color=this.colors[4>i?0:1];i=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0}),this.lightSphere=new THREE.Mesh(r,i),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper,THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(t,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,i),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper,THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SkeletonHelper=function(e){this.bones=this.getBoneList(e);for(var t=new THREE.Geometry,r=0;r<this.bones.length;r++)this.bones[r].parent instanceof THREE.Bone&&(t.vertices.push(new THREE.Vector3),t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(0,0,1)),t.colors.push(new THREE.Color(0,1,0)));r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0}),THREE.Line.call(this,t,r,THREE.LinePieces),this.root=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype),THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper,THREE.SkeletonHelper.prototype.getBoneList=function(e){var t=[];e instanceof THREE.Bone&&t.push(e);for(var r=0;r<e.children.length;r++)t.push.apply(t,this.getBoneList(e.children[r]));return t},THREE.SkeletonHelper.prototype.update=function(){for(var e=this.geometry,t=(new THREE.Matrix4).getInverse(this.root.matrixWorld),r=new THREE.Matrix4,i=0,n=0;n<this.bones.length;n++){var o=this.bones[n];o.parent instanceof THREE.Bone&&(r.multiplyMatrices(t,o.matrixWorld),e.vertices[i].setFromMatrixPosition(r),r.multiplyMatrices(t,o.parent.matrixWorld),e.vertices[i+1].setFromMatrixPosition(r),i+=2)}e.verticesNeedUpdate=!0,e.computeBoundingSphere()},THREE.SpotLightHelper=function(e){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,e=new THREE.CylinderGeometry(0,1,1,8,1,!0),e.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var t=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(e,t),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper,THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e4,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1,t=void 0!==r?r:16711680,i=void 0!==i?i:1,r=new THREE.Geometry,e=e.geometry.faces;for(var n=0,o=e.length;o>n;n++)for(var a=0,s=e[n].vertexNormals.length;s>a;a++)r.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:t,linewidth:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper,THREE.VertexNormalsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){e=["a","b","c","d"],this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var r=this.geometry.vertices,i=this.object.geometry.vertices,n=this.object.geometry.faces,o=this.object.matrixWorld,a=0,s=0,h=n.length;h>s;s++)for(var l=n[s],c=0,u=l.vertexNormals.length;u>c;c++){var E=l.vertexNormals[c];r[a].copy(i[l[e[c]]]).applyMatrix4(o),t.copy(E).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),t.add(r[a]),a+=1,r[a].copy(t),a+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(e,t,r,i){this.object=e,this.size=void 0!==t?t:1,t=void 0!==r?r:255,i=void 0!==i?i:1,r=new THREE.Geometry,e=e.geometry.faces;for(var n=0,o=e.length;o>n;n++)for(var a=0,s=e[n].vertexTangents.length;s>a;a++)r.vertices.push(new THREE.Vector3),r.vertices.push(new THREE.Vector3);THREE.Line.call(this,r,new THREE.LineBasicMaterial({color:t,linewidth:i}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.constructor=THREE.VertexTangentsHelper,THREE.VertexTangentsHelper.prototype.update=function(e){var t=new THREE.Vector3;return function(e){e=["a","b","c","d"],this.object.updateMatrixWorld(!0);for(var r=this.geometry.vertices,i=this.object.geometry.vertices,n=this.object.geometry.faces,o=this.object.matrixWorld,a=0,s=0,h=n.length;h>s;s++)for(var l=n[s],c=0,u=l.vertexTangents.length;u>c;c++){var E=l.vertexTangents[c];r[a].copy(i[l[e[c]]]).applyMatrix4(o),t.copy(E).transformDirection(o).multiplyScalar(this.size),t.add(r[a]),a+=1,r[a].copy(t),a+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(e,t){var r=void 0!==t?t:16777215,i=[0,0],n={},o=function(e,t){return e-t},a=["a","b","c"],s=new THREE.BufferGeometry;if(e.geometry instanceof THREE.Geometry){for(var h=e.geometry.vertices,l=e.geometry.faces,c=0,u=new Uint32Array(6*l.length),E=0,f=l.length;f>E;E++)for(var p=l[E],d=0;3>d;d++){i[0]=p[a[d]],i[1]=p[a[(d+1)%3]],i.sort(o);var m=i.toString();void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++)}for(i=new Float32Array(6*c),E=0,f=c;f>E;E++)for(d=0;2>d;d++)c=h[u[2*E+d]],a=6*E+3*d,i[a+0]=c.x,i[a+1]=c.y,i[a+2]=c.z;s.addAttribute("position",new THREE.BufferAttribute(i,3))}else if(e.geometry instanceof THREE.BufferGeometry){if(void 0!==e.geometry.attributes.index){h=e.geometry.attributes.position.array,f=e.geometry.attributes.index.array,l=e.geometry.drawcalls,c=0,0===l.length&&(l=[{count:f.length,index:0,start:0}]);for(var u=new Uint32Array(2*f.length),p=0,g=l.length;g>p;++p)for(var d=l[p].start,m=l[p].count,a=l[p].index,E=d,T=d+m;T>E;E+=3)for(d=0;3>d;d++)i[0]=a+f[E+d],i[1]=a+f[E+(d+1)%3],i.sort(o),m=i.toString(),void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++);for(i=new Float32Array(6*c),E=0,f=c;f>E;E++)for(d=0;2>d;d++)a=6*E+3*d,c=3*u[2*E+d],i[a+0]=h[c],i[a+1]=h[c+1],i[a+2]=h[c+2]}else for(h=e.geometry.attributes.position.array,c=h.length/3,u=c/3,i=new Float32Array(6*c),E=0,f=u;f>E;E++)for(d=0;3>d;d++)a=18*E+6*d,u=9*E+3*d,i[a+0]=h[u],i[a+1]=h[u+1],i[a+2]=h[u+2],c=9*E+(d+1)%3*3,i[a+3]=h[c],i[a+4]=h[c+1],i[a+5]=h[c+2];s.addAttribute("position",new THREE.BufferAttribute(i,3))}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper,THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(e){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject,THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length;this.createAnimation("__default",0,r-1,r/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh,THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,i){t={startFrame:t,endFrame:r,length:r-t+1,fps:i,duration:(r-t)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[e]=t,this.animationsList.push(t)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,r=/([a-z]+)_?(\d+)/,i={},n=this.geometry,o=0,a=n.morphTargets.length;a>o;o++){var s=n.morphTargets[o].name.match(r);if(s&&1<s.length){var h=s[1];i[h]||(i[h]={start:1/0,end:-(1/0)}),s=i[h],o<s.start&&(s.start=o),o>s.end&&(s.end=o),t||(t=h)}}for(h in i)s=i[h],this.createAnimation(h,s.start,s.end,e);this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){(e=this.animationsMap[e])&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){(e=this.animationsMap[e])&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;return(e=this.animationsMap[e])&&(t=e.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;return(e=this.animationsMap[e])&&(t=e.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):THREE.warn("THREE.MorphBlendMesh: animation["+e+"] undefined in .playAnimation()")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){(e=this.animationsMap[e])&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;r>t;t++){var i=this.animationsList[t];if(i.active){var n=i.duration/i.length;

i.time+=i.direction*e,i.mirroredLoop?(i.time>i.duration||0>i.time)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),0>i.time&&(i.time=0,i.directionBackwards=!1)):(i.time%=i.duration,0>i.time&&(i.time+=i.duration));var o=i.startFrame+THREE.Math.clamp(Math.floor(i.time/n),0,i.length-1),a=i.weight;o!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*a,this.morphTargetInfluences[o]=0,i.lastFrame=i.currentFrame,i.currentFrame=o),n=i.time%n/n,i.directionBackwards&&(n=1-n),this.morphTargetInfluences[i.currentFrame]=n*a,this.morphTargetInfluences[i.lastFrame]=(1-n)*a}}},function(){function e(e,t,r){r=(r||0)-1;for(var i=e?e.length:0;++r<i;)if(e[r]===t)return r;return-1}function t(t,r){var i=typeof r;if(t=t.l,"boolean"==i||null==r)return t[r]?0:-1;"number"!=i&&"string"!=i&&(i="object");var n="number"==i?r:g+r;return t=(t=t[i])&&t[n],"object"==i?t&&-1<e(t,r)?0:-1:t?0:-1}function r(e){var t=this.l,r=typeof e;if("boolean"==r||null==e)t[e]=!0;else{"number"!=r&&"string"!=r&&(r="object");var i="number"==r?e:g+e,t=t[r]||(t[r]={});"object"==r?(t[i]||(t[i]=[])).push(e):t[i]=!0}}function i(e){return e.charCodeAt(0)}function n(e,t){for(var r=e.m,i=t.m,n=-1,o=r.length;++n<o;){var a=r[n],s=i[n];if(a!==s){if(a>s||"undefined"==typeof a)return 1;if(s>a||"undefined"==typeof s)return-1}}return e.n-t.n}function o(e){var t=-1,i=e.length,n=e[0],o=e[i/2|0],a=e[i-1];if(n&&"object"==typeof n&&o&&"object"==typeof o&&a&&"object"==typeof a)return!1;for(n=h(),n["false"]=n["null"]=n["true"]=n.undefined=!1,o=h(),o.k=e,o.l=n,o.push=r;++t<i;)o.push(e[t]);return o}function a(e){return"\\"+X[e]}function s(){return p.pop()||[]}function h(){return d.pop()||{k:null,l:null,m:null,"false":!1,n:0,"null":!1,number:null,object:null,push:null,string:null,"true":!1,undefined:!1,o:null}}function l(e){e.length=0,p.length<v&&p.push(e)}function c(e){var t=e.l;t&&c(t),e.k=e.l=e.m=e.object=e.number=e.string=e.o=null,d.length<v&&d.push(e)}function u(e,t,r){t||(t=0),"undefined"==typeof r&&(r=e?e.length:0);var i=-1;r=r-t||0;for(var n=Array(0>r?0:r);++i<r;)n[i]=e[t+i];return n}function E(r){function p(e,t,r){if(!e||!j[typeof e])return e;t=t&&"undefined"==typeof r?t:te(t,r,3);for(var i=-1,n=j[typeof e]&&Dt(e),o=n?n.length:0;++i<o&&(r=n[i],!1!==t(e[r],r,e)););return e}function d(e,t,r){var i;if(!e||!j[typeof e])return e;t=t&&"undefined"==typeof r?t:te(t,r,3);for(i in e)if(!1===t(e[i],i,e))break;return e}function v(e,t,r){var i,n=e,o=n;if(!n)return o;for(var a=arguments,s=0,h="number"==typeof r?2:a.length;++s<h;)if((n=a[s])&&j[typeof n])for(var l=-1,c=j[typeof n]&&Dt(n),u=c?c.length:0;++l<u;)i=c[l],"undefined"==typeof o[i]&&(o[i]=n[i]);return o}function X(e,t,r){var i,n=e,o=n;if(!n)return o;var a=arguments,s=0,h="number"==typeof r?2:a.length;if(h>3&&"function"==typeof a[h-2])var l=te(a[--h-1],a[h--],2);else h>2&&"function"==typeof a[h-1]&&(l=a[--h]);for(;++s<h;)if((n=a[s])&&j[typeof n])for(var c=-1,u=j[typeof n]&&Dt(n),E=u?u.length:0;++c<E;)i=u[c],o[i]=l?l(o[i],n[i]):n[i];return o}function Y(e){var t,r=[];if(!e||!j[typeof e])return r;for(t in e)gt.call(e,t)&&r.push(t);return r}function K(e){return e&&"object"==typeof e&&!Ut(e)&&gt.call(e,"__wrapped__")?e:new Q(e)}function Q(e,t){this.__chain__=!!t,this.__wrapped__=e}function Z(e){function t(){if(i){var e=u(i);Tt.apply(e,arguments)}if(this instanceof t){var o=ee(r.prototype),e=r.apply(o,e||arguments);return Re(e)?e:o}return r.apply(n,e||arguments)}var r=e[0],i=e[2],n=e[4];return Bt(t,e),t}function $(e,t,r,i,n){if(r){var o=r(e);if("undefined"!=typeof o)return o}if(!Re(e))return e;var a=ct.call(e);if(!G[a])return e;var h=Pt[a];switch(a){case U:case D:return new h(+e);case k:case O:return new h(e);case z:return o=h(e.source,_.exec(e)),o.lastIndex=e.lastIndex,o}if(a=Ut(e),t){var c=!i;i||(i=s()),n||(n=s());for(var E=i.length;E--;)if(i[E]==e)return n[E];o=a?h(e.length):{}}else o=a?u(e):X({},e);return a&&(gt.call(e,"index")&&(o.index=e.index),gt.call(e,"input")&&(o.input=e.input)),t?(i.push(e),n.push(o),(a?Ce:p)(e,function(e,a){o[a]=$(e,t,r,i,n)}),c&&(l(i),l(n)),o):o}function ee(e){return Re(e)?xt(e):{}}function te(e,t,r){if("function"!=typeof e)return Xe;if("undefined"==typeof t||!("prototype"in e))return e;var i=e.__bindData__;if("undefined"==typeof i&&(Ft.funcNames&&(i=!e.name),i=i||!Ft.funcDecomp,!i)){var n=dt.call(e);Ft.funcNames||(i=!w.test(n)),i||(i=A.test(n),Bt(e,i))}if(!1===i||!0!==i&&1&i[1])return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,i){return e.call(t,r,i)};case 3:return function(r,i,n){return e.call(t,r,i,n)};case 4:return function(r,i,n,o){return e.call(t,r,i,n,o)}}return We(e,t)}function re(e){function t(){var e=h?a:this;if(n){var p=u(n);Tt.apply(p,arguments)}return(o||c)&&(p||(p=u(arguments)),o&&Tt.apply(p,o),c&&p.length<s)?(i|=16,re([r,E?i:-4&i,p,null,a,s])):(p||(p=arguments),l&&(r=e[f]),this instanceof t?(e=ee(r.prototype),p=r.apply(e,p),Re(p)?p:e):r.apply(e,p))}var r=e[0],i=e[1],n=e[2],o=e[3],a=e[4],s=e[5],h=1&i,l=2&i,c=4&i,E=8&i,f=r;return Bt(t,e),t}function ie(r,i){var n=-1,a=Ee(),s=r?r.length:0,h=s>=T&&a===e,l=[];if(h){var u=o(i);u?(a=t,i=u):h=!1}for(;++n<s;)u=r[n],0>a(i,u)&&l.push(u);return h&&c(i),l}function ne(e,t,r,i){i=(i||0)-1;for(var n=e?e.length:0,o=[];++i<n;){var a=e[i];if(a&&"object"==typeof a&&"number"==typeof a.length&&(Ut(a)||me(a))){t||(a=ne(a,t,r));var s=-1,h=a.length,l=o.length;for(o.length+=h;++s<h;)o[l++]=a[s]}else r||o.push(a)}return o}function oe(e,t,r,i,n,o){if(r){var a=r(e,t);if("undefined"!=typeof a)return!!a}if(e===t)return 0!==e||1/e==1/t;if(e===e&&!(e&&j[typeof e]||t&&j[typeof t]))return!1;if(null==e||null==t)return e===t;var h=ct.call(e),c=ct.call(t);if(h==F&&(h=N),c==F&&(c=N),h!=c)return!1;switch(h){case U:case D:return+e==+t;case k:return e!=+e?t!=+t:0==e?1/e==1/t:e==+t;case z:case O:return e==ot(t)}if(c=h==B,!c){var u=gt.call(e,"__wrapped__"),E=gt.call(t,"__wrapped__");if(u||E)return oe(u?e.__wrapped__:e,E?t.__wrapped__:t,r,i,n,o);if(h!=N)return!1;if(h=e.constructor,u=t.constructor,h!=u&&!(ye(h)&&h instanceof h&&ye(u)&&u instanceof u)&&"constructor"in e&&"constructor"in t)return!1}for(h=!n,n||(n=s()),o||(o=s()),u=n.length;u--;)if(n[u]==e)return o[u]==t;var f=0,a=!0;if(n.push(e),o.push(t),c){if(u=e.length,f=t.length,(a=f==u)||i)for(;f--;)if(c=u,E=t[f],i)for(;c--&&!(a=oe(e[c],E,r,i,n,o)););else if(!(a=oe(e[f],E,r,i,n,o)))break}else d(t,function(t,s,h){return gt.call(h,s)?(f++,a=gt.call(e,s)&&oe(e[s],t,r,i,n,o)):void 0}),a&&!i&&d(e,function(e,t,r){return gt.call(r,t)?a=-1<--f:void 0});return n.pop(),o.pop(),h&&(l(n),l(o)),a}function ae(e,t,r,i,n){(Ut(t)?Ce:p)(t,function(t,o){var a,s,h=t,l=e[o];if(t&&((s=Ut(t))||Ot(t))){for(h=i.length;h--;)if(a=i[h]==t){l=n[h];break}if(!a){var c;r&&(h=r(l,t),c="undefined"!=typeof h)&&(l=h),c||(l=s?Ut(l)?l:[]:Ot(l)?l:{}),i.push(t),n.push(l),c||ae(l,t,r,i,n)}}else r&&(h=r(l,t),"undefined"==typeof h&&(h=t)),"undefined"!=typeof h&&(l=h);e[o]=l})}function se(e,t){return e+pt(Lt()*(t-e+1))}function he(r,i,n){var a=-1,h=Ee(),u=r?r.length:0,E=[],f=!i&&u>=T&&h===e,p=n||f?s():E;for(f&&(p=o(p),h=t);++a<u;){var d=r[a],m=n?n(d,a,r):d;(i?!a||p[p.length-1]!==m:0>h(p,m))&&((n||f)&&p.push(m),E.push(d))}return f?(l(p.k),c(p)):n&&l(p),E}function le(e){return function(t,r,i){var n={};r=K.createCallback(r,i,3),i=-1;var o=t?t.length:0;if("number"==typeof o)for(;++i<o;){var a=t[i];e(n,a,r(a,i,t),t)}else p(t,function(t,i,o){e(n,t,r(t,i,o),o)});return n}}function ce(e,t,r,i,n,o){var a=1&t,s=4&t,h=16&t,l=32&t;if(!(2&t||ye(e)))throw new at;h&&!r.length&&(t&=-17,h=r=!1),l&&!i.length&&(t&=-33,l=i=!1);var c=e&&e.__bindData__;return c&&!0!==c?(c=u(c),c[2]&&(c[2]=u(c[2])),c[3]&&(c[3]=u(c[3])),!a||1&c[1]||(c[4]=n),!a&&1&c[1]&&(t|=8),!s||4&c[1]||(c[5]=o),h&&Tt.apply(c[2]||(c[2]=[]),r),l&&Rt.apply(c[3]||(c[3]=[]),i),c[1]|=t,ce.apply(null,c)):(1==t||17===t?Z:re)([e,t,r,i,n,o])}function ue(e){return Vt[e]}function Ee(){var t=(t=K.indexOf)===ke?e:t;return t}function fe(e){return"function"==typeof e&&ut.test(e)}function pe(e){var t,r;return e&&ct.call(e)==N&&(t=e.constructor,!ye(t)||t instanceof t)?(d(e,function(e,t){r=t}),"undefined"==typeof r||gt.call(e,r)):!1}function de(e){return kt[e]}function me(e){return e&&"object"==typeof e&&"number"==typeof e.length&&ct.call(e)==F||!1}function ge(e,t,r){var i=Dt(e),n=i.length;for(t=te(t,r,3);n--&&(r=i[n],!1!==t(e[r],r,e)););return e}function Te(e){var t=[];return d(e,function(e,r){ye(e)&&t.push(r)}),t.sort()}function ve(e){for(var t=-1,r=Dt(e),i=r.length,n={};++t<i;){var o=r[t];n[e[o]]=o}return n}function ye(e){return"function"==typeof e}function Re(e){return!(!e||!j[typeof e])}function He(e){return"number"==typeof e||e&&"object"==typeof e&&ct.call(e)==k||!1}function xe(e){return"string"==typeof e||e&&"object"==typeof e&&ct.call(e)==O||!1}function be(e){for(var t=-1,r=Dt(e),i=r.length,n=Ze(i);++t<i;)n[t]=e[r[t]];return n}function _e(e,t,r){var i=-1,n=Ee(),o=e?e.length:0,a=!1;return r=(0>r?St(0,o+r):r)||0,Ut(e)?a=-1<n(e,t,r):"number"==typeof o?a=-1<(xe(e)?e.indexOf(t,r):n(e,t,r)):p(e,function(e){return++i<r?void 0:!(a=e===t)}),a}function we(e,t,r){var i=!0;t=K.createCallback(t,r,3),r=-1;var n=e?e.length:0;if("number"==typeof n)for(;++r<n&&(i=!!t(e[r],r,e)););else p(e,function(e,r,n){return i=!!t(e,r,n)});return i}function Me(e,t,r){var i=[];t=K.createCallback(t,r,3),r=-1;var n=e?e.length:0;if("number"==typeof n)for(;++r<n;){var o=e[r];t(o,r,e)&&i.push(o)}else p(e,function(e,r,n){t(e,r,n)&&i.push(e)});return i}function Se(e,t,r){t=K.createCallback(t,r,3),r=-1;var i=e?e.length:0;if("number"!=typeof i){var n;return p(e,function(e,r,i){return t(e,r,i)?(n=e,!1):void 0}),n}for(;++r<i;){var o=e[r];if(t(o,r,e))return o}}function Ce(e,t,r){var i=-1,n=e?e.length:0;if(t=t&&"undefined"==typeof r?t:te(t,r,3),"number"==typeof n)for(;++i<n&&!1!==t(e[i],i,e););else p(e,t);return e}function Ae(e,t,r){var i=e?e.length:0;if(t=t&&"undefined"==typeof r?t:te(t,r,3),"number"==typeof i)for(;i--&&!1!==t(e[i],i,e););else{var n=Dt(e),i=n.length;p(e,function(e,r,o){return r=n?n[--i]:--i,t(o[r],r,o)})}return e}function Le(e,t,r){var i=-1,n=e?e.length:0;if(t=K.createCallback(t,r,3),"number"==typeof n)for(var o=Ze(n);++i<n;)o[i]=t(e[i],i,e);else o=[],p(e,function(e,r,n){o[++i]=t(e,r,n)});return o}function Pe(e,t,r){var n=-1/0,o=n;if("function"!=typeof t&&r&&r[t]===e&&(t=null),null==t&&Ut(e)){r=-1;for(var a=e.length;++r<a;){var s=e[r];s>o&&(o=s)}}else t=null==t&&xe(e)?i:K.createCallback(t,r,3),Ce(e,function(e,r,i){r=t(e,r,i),r>n&&(n=r,o=e)});return o}function Fe(e,t,r,i){if(!e)return r;var n=3>arguments.length;t=K.createCallback(t,i,4);var o=-1,a=e.length;if("number"==typeof a)for(n&&(r=e[++o]);++o<a;)r=t(r,e[o],o,e);else p(e,function(e,i,o){r=n?(n=!1,e):t(r,e,i,o)});return r}function Be(e,t,r,i){var n=3>arguments.length;return t=K.createCallback(t,i,4),Ae(e,function(e,i,o){r=n?(n=!1,e):t(r,e,i,o)}),r}function Ue(e){var t=-1,r=e?e.length:0,i=Ze("number"==typeof r?r:0);return Ce(e,function(e){var r=se(0,++t);i[t]=i[r],i[r]=e}),i}function De(e,t,r){var i;t=K.createCallback(t,r,3),r=-1;var n=e?e.length:0;if("number"==typeof n)for(;++r<n&&!(i=t(e[r],r,e)););else p(e,function(e,r,n){return!(i=t(e,r,n))});return!!i}function Ve(e,t,r){var i=0,n=e?e.length:0;if("number"!=typeof t&&null!=t){var o=-1;for(t=K.createCallback(t,r,3);++o<n&&t(e[o],o,e);)i++}else if(i=t,null==i||r)return e?e[0]:f;return u(e,0,Ct(St(0,i),n))}function ke(t,r,i){if("number"==typeof i){var n=t?t.length:0;i=0>i?St(0,n+i):i||0}else if(i)return i=ze(t,r),t[i]===r?i:-1;return e(t,r,i)}function Ne(e,t,r){if("number"!=typeof t&&null!=t){var i=0,n=-1,o=e?e.length:0;for(t=K.createCallback(t,r,3);++n<o&&t(e[n],n,e);)i++}else i=null==t||r?1:St(0,t);return u(e,i)}function ze(e,t,r,i){var n=0,o=e?e.length:n;for(r=r?K.createCallback(r,i,1):Xe,t=r(t);o>n;)i=n+o>>>1,r(e[i])<t?n=i+1:o=i;return n}function Oe(e,t,r,i){return"boolean"!=typeof t&&null!=t&&(i=r,r="function"!=typeof t&&i&&i[t]===e?null:t,t=!1),null!=r&&(r=K.createCallback(r,i,3)),he(e,t,r)}function Ge(){for(var e=1<arguments.length?arguments:arguments[0],t=-1,r=e?Pe(jt(e,"length")):0,i=Ze(0>r?0:r);++t<r;)i[t]=jt(e,t);return i}function Ie(e,t){var r=-1,i=e?e.length:0,n={};for(t||!i||Ut(e[0])||(t=[]);++r<i;){var o=e[r];t?n[o]=t[r]:o&&(n[o[0]]=o[1])}return n}function We(e,t){return 2<arguments.length?ce(e,17,u(arguments,2),null,t):ce(e,1,null,null,t)}function je(e,t,r){function i(){c&&ft(c),a=c=u=f,(d||p!==t)&&(E=Xt(),s=e.apply(l,o),c||a||(o=l=null))}function n(){var r=t-(Xt()-h);r>0?c=vt(n,r):(a&&ft(a),r=u,a=c=u=f,r&&(E=Xt(),s=e.apply(l,o),c||a||(o=l=null)))}var o,a,s,h,l,c,u,E=0,p=!1,d=!0;if(!ye(e))throw new at;if(t=St(0,t)||0,!0===r)var m=!0,d=!1;else Re(r)&&(m=r.leading,p="maxWait"in r&&(St(t,r.maxWait)||0),d="trailing"in r?r.trailing:d);return function(){if(o=arguments,h=Xt(),l=this,u=d&&(c||!m),!1===p)var r=m&&!c;else{a||m||(E=h);var f=p-(h-E),g=0>=f;g?(a&&(a=ft(a)),E=h,s=e.apply(l,o)):a||(a=vt(i,f))}return g&&c?c=ft(c):c||t===p||(c=vt(n,t)),r&&(g=!0,s=e.apply(l,o)),!g||c||a||(o=l=null),s}}function Xe(e){return e}function qe(e,t,r){var i=!0,n=t&&Te(t);t&&(r||n.length)||(null==r&&(r=t),o=Q,t=e,e=K,n=Te(t)),!1===r?i=!1:Re(r)&&"chain"in r&&(i=r.chain);var o=e,a=ye(o);Ce(n,function(r){var n=e[r]=t[r];a&&(o.prototype[r]=function(){var t=this.__chain__,r=this.__wrapped__,a=[r];if(Tt.apply(a,arguments),a=n.apply(e,a),i||t){if(r===a&&Re(a))return this;a=new o(a),a.__chain__=t}return a})})}function Ye(){}function Ke(e){return function(t){return t[e]}}function Qe(){return this.__wrapped__}r=r?J.defaults(q.Object(),r,J.pick(q,P)):q;var Ze=r.Array,Je=r.Boolean,$e=r.Date,et=r.Function,tt=r.Math,rt=r.Number,it=r.Object,nt=r.RegExp,ot=r.String,at=r.TypeError,st=[],ht=it.prototype,lt=r._,ct=ht.toString,ut=nt("^"+ot(ct).replace(/[.*+?^${}()|[\]\\]/g,"\\$&").replace(/toString| for [^\]]+/g,".*?")+"$"),Et=tt.ceil,ft=r.clearTimeout,pt=tt.floor,dt=et.prototype.toString,mt=fe(mt=it.getPrototypeOf)&&mt,gt=ht.hasOwnProperty,Tt=st.push,vt=r.setTimeout,yt=st.splice,Rt=st.unshift,Ht=function(){try{var e={},t=fe(t=it.defineProperty)&&t,r=t(e,e,e)&&t}catch(i){}return r}(),xt=fe(xt=it.create)&&xt,bt=fe(bt=Ze.isArray)&&bt,_t=r.isFinite,wt=r.isNaN,Mt=fe(Mt=it.keys)&&Mt,St=tt.max,Ct=tt.min,At=r.parseInt,Lt=tt.random,Pt={};Pt[B]=Ze,Pt[U]=Je,Pt[D]=$e,Pt[V]=et,Pt[N]=it,Pt[k]=rt,Pt[z]=nt,Pt[O]=ot,Q.prototype=K.prototype;var Ft=K.support={};Ft.funcDecomp=!fe(r.a)&&A.test(E),Ft.funcNames="string"==typeof et.name,K.templateSettings={escape:/<%-([\s\S]+?)%>/g,evaluate:/<%([\s\S]+?)%>/g,interpolate:M,variable:"",imports:{_:K}},xt||(ee=function(){function e(){}return function(t){if(Re(t)){e.prototype=t;var i=new e;e.prototype=null}return i||r.Object()}}());var Bt=Ht?function(e,t){W.value=t,Ht(e,"__bindData__",W)}:Ye,Ut=bt||function(e){return e&&"object"==typeof e&&"number"==typeof e.length&&ct.call(e)==B||!1},Dt=Mt?function(e){return Re(e)?Mt(e):[]}:Y,Vt={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},kt=ve(Vt),Nt=nt("("+Dt(kt).join("|")+")","g"),zt=nt("["+Dt(Vt).join("")+"]","g"),Ot=mt?function(e){if(!e||ct.call(e)!=N)return!1;var t=e.valueOf,r=fe(t)&&(r=mt(t))&&mt(r);return r?e==r||mt(e)==r:pe(e)}:pe,Gt=le(function(e,t,r){gt.call(e,r)?e[r]++:e[r]=1}),It=le(function(e,t,r){(gt.call(e,r)?e[r]:e[r]=[]).push(t)}),Wt=le(function(e,t,r){e[r]=t}),jt=Le,Xt=fe(Xt=$e.now)&&Xt||function(){return(new $e).getTime()},qt=8==At(y+"08")?At:function(e,t){return At(xe(e)?e.replace(S,""):e,t||0)};return K.after=function(e,t){if(!ye(t))throw new at;return function(){return 1>--e?t.apply(this,arguments):void 0}},K.assign=X,K.at=function(e){for(var t=arguments,r=-1,i=ne(t,!0,!1,1),t=t[2]&&t[2][t[1]]===e?1:i.length,n=Ze(t);++r<t;)n[r]=e[i[r]];return n},K.bind=We,K.bindAll=function(e){for(var t=1<arguments.length?ne(arguments,!0,!1,1):Te(e),r=-1,i=t.length;++r<i;){var n=t[r];e[n]=ce(e[n],1,null,null,e)}return e},K.bindKey=function(e,t){return 2<arguments.length?ce(t,19,u(arguments,2),null,e):ce(t,3,null,null,e)},K.chain=function(e){return e=new Q(e),e.__chain__=!0,e},K.compact=function(e){for(var t=-1,r=e?e.length:0,i=[];++t<r;){var n=e[t];n&&i.push(n)}return i},K.compose=function(){for(var e=arguments,t=e.length;t--;)if(!ye(e[t]))throw new at;return function(){for(var t=arguments,r=e.length;r--;)t=[e[r].apply(this,t)];return t[0]}},K.constant=function(e){return function(){return e}},K.countBy=Gt,K.create=function(e,t){var r=ee(e);return t?X(r,t):r},K.createCallback=function(e,t,r){var i=typeof e;if(null==e||"function"==i)return te(e,t,r);if("object"!=i)return Ke(e);var n=Dt(e),o=n[0],a=e[o];return 1!=n.length||a!==a||Re(a)?function(t){for(var r=n.length,i=!1;r--&&(i=oe(t[n[r]],e[n[r]],null,!0)););return i}:function(e){return e=e[o],a===e&&(0!==a||1/a==1/e)}},K.curry=function(e,t){return t="number"==typeof t?t:+t||e.length,ce(e,4,null,null,null,t)},K.debounce=je,K.defaults=v,K.defer=function(e){if(!ye(e))throw new at;var t=u(arguments,1);return vt(function(){e.apply(f,t)},1)},K.delay=function(e,t){if(!ye(e))throw new at;var r=u(arguments,2);return vt(function(){e.apply(f,r)},t)},K.difference=function(e){return ie(e,ne(arguments,!0,!0,1))},K.filter=Me,K.flatten=function(e,t,r,i){return"boolean"!=typeof t&&null!=t&&(i=r,r="function"!=typeof t&&i&&i[t]===e?null:t,t=!1),null!=r&&(e=Le(e,r,i)),ne(e,t)},K.forEach=Ce,K.forEachRight=Ae,K.forIn=d,K.forInRight=function(e,t,r){var i=[];d(e,function(e,t){i.push(t,e)});var n=i.length;for(t=te(t,r,3);n--&&!1!==t(i[n--],i[n],e););return e},K.forOwn=p,K.forOwnRight=ge,K.functions=Te,K.groupBy=It,K.indexBy=Wt,K.initial=function(e,t,r){var i=0,n=e?e.length:0;if("number"!=typeof t&&null!=t){var o=n;for(t=K.createCallback(t,r,3);o--&&t(e[o],o,e);)i++}else i=null==t||r?1:t||i;return u(e,0,Ct(St(0,n-i),n))},K.intersection=function(){for(var r=[],i=-1,n=arguments.length,a=s(),h=Ee(),u=h===e,E=s();++i<n;){var f=arguments[i];(Ut(f)||me(f))&&(r.push(f),a.push(u&&f.length>=T&&o(i?r[i]:E)))}var u=r[0],p=-1,d=u?u.length:0,m=[];e:for(;++p<d;){var g=a[0],f=u[p];if(0>(g?t(g,f):h(E,f))){for(i=n,(g||E).push(f);--i;)if(g=a[i],0>(g?t(g,f):h(r[i],f)))continue e;m.push(f)}}for(;n--;)(g=a[n])&&c(g);return l(a),l(E),m},K.invert=ve,K.invoke=function(e,t){var r=u(arguments,2),i=-1,n="function"==typeof t,o=e?e.length:0,a=Ze("number"==typeof o?o:0);return Ce(e,function(e){a[++i]=(n?t:e[t]).apply(e,r)}),a},K.keys=Dt,K.map=Le,K.mapValues=function(e,t,r){var i={};return t=K.createCallback(t,r,3),p(e,function(e,r,n){i[r]=t(e,r,n)}),i},K.max=Pe,K.memoize=function(e,t){function r(){var i=r.cache,n=t?t.apply(this,arguments):g+arguments[0];return gt.call(i,n)?i[n]:i[n]=e.apply(this,arguments)}if(!ye(e))throw new at;return r.cache={},r},K.merge=function(e){var t=arguments,r=2;if(!Re(e))return e;if("number"!=typeof t[2]&&(r=t.length),r>3&&"function"==typeof t[r-2])var i=te(t[--r-1],t[r--],2);else r>2&&"function"==typeof t[r-1]&&(i=t[--r]);for(var t=u(arguments,1,r),n=-1,o=s(),a=s();++n<r;)ae(e,t[n],i,o,a);return l(o),l(a),e},K.min=function(e,t,r){var n=1/0,o=n;if("function"!=typeof t&&r&&r[t]===e&&(t=null),null==t&&Ut(e)){r=-1;for(var a=e.length;++r<a;){var s=e[r];o>s&&(o=s)}}else t=null==t&&xe(e)?i:K.createCallback(t,r,3),Ce(e,function(e,r,i){r=t(e,r,i),n>r&&(n=r,o=e)});return o},K.omit=function(e,t,r){var i={};if("function"!=typeof t){var n=[];d(e,function(e,t){n.push(t)});for(var n=ie(n,ne(arguments,!0,!1,1)),o=-1,a=n.length;++o<a;){var s=n[o];i[s]=e[s]}}else t=K.createCallback(t,r,3),d(e,function(e,r,n){t(e,r,n)||(i[r]=e)});return i},K.once=function(e){var t,r;if(!ye(e))throw new at;return function(){return t?r:(t=!0,r=e.apply(this,arguments),e=null,r)}},K.pairs=function(e){for(var t=-1,r=Dt(e),i=r.length,n=Ze(i);++t<i;){var o=r[t];n[t]=[o,e[o]]}return n},K.partial=function(e){return ce(e,16,u(arguments,1))},K.partialRight=function(e){return ce(e,32,null,u(arguments,1))},K.pick=function(e,t,r){var i={};if("function"!=typeof t)for(var n=-1,o=ne(arguments,!0,!1,1),a=Re(e)?o.length:0;++n<a;){var s=o[n];s in e&&(i[s]=e[s])}else t=K.createCallback(t,r,3),d(e,function(e,r,n){t(e,r,n)&&(i[r]=e)});return i},K.pluck=jt,K.property=Ke,K.pull=function(e){for(var t=arguments,r=0,i=t.length,n=e?e.length:0;++r<i;)for(var o=-1,a=t[r];++o<n;)e[o]===a&&(yt.call(e,o--,1),n--);return e},K.range=function(e,t,r){e=+e||0,r="number"==typeof r?r:+r||1,null==t&&(t=e,e=0);var i=-1;t=St(0,Et((t-e)/(r||1)));for(var n=Ze(t);++i<t;)n[i]=e,e+=r;return n},K.reject=function(e,t,r){return t=K.createCallback(t,r,3),Me(e,function(e,r,i){return!t(e,r,i)})},K.remove=function(e,t,r){var i=-1,n=e?e.length:0,o=[];for(t=K.createCallback(t,r,3);++i<n;)r=e[i],t(r,i,e)&&(o.push(r),yt.call(e,i--,1),n--);return o},K.rest=Ne,K.shuffle=Ue,K.sortBy=function(e,t,r){var i=-1,o=Ut(t),a=e?e.length:0,u=Ze("number"==typeof a?a:0);for(o||(t=K.createCallback(t,r,3)),Ce(e,function(e,r,n){var a=u[++i]=h();o?a.m=Le(t,function(t){return e[t]}):(a.m=s())[0]=t(e,r,n),a.n=i,a.o=e}),a=u.length,u.sort(n);a--;)e=u[a],u[a]=e.o,o||l(e.m),c(e);return u},K.tap=function(e,t){return t(e),e},K.throttle=function(e,t,r){var i=!0,n=!0;if(!ye(e))throw new at;return!1===r?i=!1:Re(r)&&(i="leading"in r?r.leading:i,n="trailing"in r?r.trailing:n),I.leading=i,I.maxWait=t,I.trailing=n,je(e,t,I)},K.times=function(e,t,r){e=-1<(e=+e)?e:0;var i=-1,n=Ze(e);for(t=te(t,r,1);++i<e;)n[i]=t(i);return n},K.toArray=function(e){return e&&"number"==typeof e.length?u(e):be(e)},K.transform=function(e,t,r,i){var n=Ut(e);if(null==r)if(n)r=[];else{var o=e&&e.constructor;r=ee(o&&o.prototype)}return t&&(t=K.createCallback(t,i,4),(n?Ce:p)(e,function(e,i,n){return t(r,e,i,n)})),r},K.union=function(){return he(ne(arguments,!0,!0))},K.uniq=Oe,K.values=be,K.where=Me,K.without=function(e){return ie(e,u(arguments,1))},K.wrap=function(e,t){return ce(t,16,[e])},K.xor=function(){for(var e=-1,t=arguments.length;++e<t;){var r=arguments[e];if(Ut(r)||me(r))var i=i?he(ie(i,r).concat(ie(r,i))):r}return i||[]},K.zip=Ge,K.zipObject=Ie,K.collect=Le,K.drop=Ne,K.each=Ce,K.eachRight=Ae,K.extend=X,K.methods=Te,K.object=Ie,K.select=Me,K.tail=Ne,K.unique=Oe,K.unzip=Ge,qe(K),K.clone=function(e,t,r,i){return"boolean"!=typeof t&&null!=t&&(i=r,r=t,t=!1),$(e,t,"function"==typeof r&&te(r,i,1))},K.cloneDeep=function(e,t,r){return $(e,!0,"function"==typeof t&&te(t,r,1))},K.contains=_e,K.escape=function(e){return null==e?"":ot(e).replace(zt,ue)},K.every=we,K.find=Se,K.findIndex=function(e,t,r){var i=-1,n=e?e.length:0;for(t=K.createCallback(t,r,3);++i<n;)if(t(e[i],i,e))return i;return-1},K.findKey=function(e,t,r){var i;return t=K.createCallback(t,r,3),p(e,function(e,r,n){return t(e,r,n)?(i=r,!1):void 0}),i},K.findLast=function(e,t,r){var i;return t=K.createCallback(t,r,3),Ae(e,function(e,r,n){return t(e,r,n)?(i=e,!1):void 0}),i},K.findLastIndex=function(e,t,r){var i=e?e.length:0;for(t=K.createCallback(t,r,3);i--;)if(t(e[i],i,e))return i;return-1},K.findLastKey=function(e,t,r){var i;return t=K.createCallback(t,r,3),ge(e,function(e,r,n){return t(e,r,n)?(i=r,!1):void 0}),i},K.has=function(e,t){return e?gt.call(e,t):!1},K.identity=Xe,K.indexOf=ke,K.isArguments=me,K.isArray=Ut,K.isBoolean=function(e){return!0===e||!1===e||e&&"object"==typeof e&&ct.call(e)==U||!1},K.isDate=function(e){return e&&"object"==typeof e&&ct.call(e)==D||!1},K.isElement=function(e){return e&&1===e.nodeType||!1},K.isEmpty=function(e){var t=!0;if(!e)return t;var r=ct.call(e),i=e.length;return r==B||r==O||r==F||r==N&&"number"==typeof i&&ye(e.splice)?!i:(p(e,function(){return t=!1}),t)},K.isEqual=function(e,t,r,i){return oe(e,t,"function"==typeof r&&te(r,i,2))},K.isFinite=function(e){return _t(e)&&!wt(parseFloat(e))},K.isFunction=ye,K.isNaN=function(e){return He(e)&&e!=+e},K.isNull=function(e){return null===e},K.isNumber=He,K.isObject=Re,K.isPlainObject=Ot,K.isRegExp=function(e){return e&&"object"==typeof e&&ct.call(e)==z||!1},K.isString=xe,K.isUndefined=function(e){return"undefined"==typeof e},K.lastIndexOf=function(e,t,r){var i=e?e.length:0;for("number"==typeof r&&(i=(0>r?St(0,i+r):Ct(r,i-1))+1);i--;)if(e[i]===t)return i;return-1},K.mixin=qe,K.noConflict=function(){return r._=lt,this},K.noop=Ye,K.now=Xt,K.parseInt=qt,K.random=function(e,t,r){var i=null==e,n=null==t;return null==r&&("boolean"==typeof e&&n?(r=e,e=1):n||"boolean"!=typeof t||(r=t,n=!0)),i&&n&&(t=1),e=+e||0,n?(t=e,e=0):t=+t||0,r||e%1||t%1?(r=Lt(),Ct(e+r*(t-e+parseFloat("1e-"+((r+"").length-1))),t)):se(e,t)},K.reduce=Fe,K.reduceRight=Be,K.result=function(e,t){if(e){var r=e[t];return ye(r)?e[t]():r}},K.runInContext=E,K.size=function(e){var t=e?e.length:0;return"number"==typeof t?t:Dt(e).length},K.some=De,K.sortedIndex=ze,K.template=function(e,t,r){var i=K.templateSettings;e=ot(e||""),r=v({},r,i);var n,o=v({},r.imports,i.imports),i=Dt(o),o=be(o),s=0,h=r.interpolate||C,l="__p+='",h=nt((r.escape||C).source+"|"+h.source+"|"+(h===M?b:C).source+"|"+(r.evaluate||C).source+"|$","g");e.replace(h,function(t,r,i,o,h,c){return i||(i=o),l+=e.slice(s,c).replace(L,a),r&&(l+="'+__e("+r+")+'"),h&&(n=!0,l+="';"+h+";\n__p+='"),i&&(l+="'+((__t=("+i+"))==null?'':__t)+'"),s=c+t.length,t}),l+="';",h=r=r.variable,h||(r="obj",l="with("+r+"){"+l+"}"),l=(n?l.replace(R,""):l).replace(H,"$1").replace(x,"$1;"),l="function("+r+"){"+(h?"":r+"||("+r+"={});")+"var __t,__p='',__e=_.escape"+(n?",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}":";")+l+"return __p}";try{var c=et(i,"return "+l).apply(f,o)}catch(u){throw u.source=l,u}return t?c(t):(c.source=l,c)},K.unescape=function(e){return null==e?"":ot(e).replace(Nt,de)},K.uniqueId=function(e){var t=++m;return ot(null==e?"":e)+t},K.all=we,K.any=De,K.detect=Se,K.findWhere=Se,K.foldl=Fe,K.foldr=Be,K.include=_e,K.inject=Fe,qe(function(){var e={};return p(K,function(t,r){K.prototype[r]||(e[r]=t)}),e}(),!1),K.first=Ve,K.last=function(e,t,r){var i=0,n=e?e.length:0;if("number"!=typeof t&&null!=t){var o=n;for(t=K.createCallback(t,r,3);o--&&t(e[o],o,e);)i++}else if(i=t,null==i||r)return e?e[n-1]:f;return u(e,St(0,n-i))},K.sample=function(e,t,r){return e&&"number"!=typeof e.length&&(e=be(e)),null==t||r?e?e[se(0,e.length-1)]:f:(e=Ue(e),e.length=Ct(St(0,t),e.length),e)},K.take=Ve,K.head=Ve,p(K,function(e,t){var r="sample"!==t;K.prototype[t]||(K.prototype[t]=function(t,i){var n=this.__chain__,o=e(this.__wrapped__,t,i);return n||null!=t&&(!i||r&&"function"==typeof t)?new Q(o,n):o})}),K.VERSION="2.4.1",K.prototype.chain=function(){return this.__chain__=!0,this},K.prototype.toString=function(){return ot(this.__wrapped__)},K.prototype.value=Qe,K.prototype.valueOf=Qe,Ce(["join","pop","shift"],function(e){var t=st[e];K.prototype[e]=function(){var e=this.__chain__,r=t.apply(this.__wrapped__,arguments);return e?new Q(r,e):r}}),Ce(["push","reverse","sort","unshift"],function(e){var t=st[e];K.prototype[e]=function(){return t.apply(this.__wrapped__,arguments),this}}),Ce(["concat","slice","splice"],function(e){var t=st[e];K.prototype[e]=function(){return new Q(t.apply(this.__wrapped__,arguments),this.__chain__)}}),K}var f,p=[],d=[],m=0,g=+new Date+"",T=75,v=40,y=" 	\f \ufeff\n\r\u2028\u2029 ᠎             　",R=/\b__p\+='';/g,H=/\b(__p\+=)''\+/g,x=/(__e\(.*?\)|\b__t\))\+'';/g,b=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,_=/\w*$/,w=/^\s*function[ \n\r\t]+\w/,M=/<%=([\s\S]+?)%>/g,S=RegExp("^["+y+"]*0+(?=.$)"),C=/($^)/,A=/\bthis\b/,L=/['\n\r\t\u2028\u2029\\]/g,P="Array Boolean Date Function Math Number Object RegExp String _ attachEvent clearTimeout isFinite isNaN parseInt setTimeout".split(" "),F="[object Arguments]",B="[object Array]",U="[object Boolean]",D="[object Date]",V="[object Function]",k="[object Number]",N="[object Object]",z="[object RegExp]",O="[object String]",G={};G[V]=!1,G[F]=G[B]=G[U]=G[D]=G[k]=G[N]=G[z]=G[O]=!0;var I={leading:!1,maxWait:0,trailing:!1},W={configurable:!1,enumerable:!1,value:null,writable:!1},j={"boolean":!1,"function":!0,object:!0,number:!1,string:!1,undefined:!1},X={"\\":"\\","'":"'","\n":"n","\r":"r","	":"t","\u2028":"u2028","\u2029":"u2029"},q=j[typeof window]&&window||this,Y=j[typeof exports]&&exports&&!exports.nodeType&&exports,K=j[typeof module]&&module&&!module.nodeType&&module,Q=K&&K.exports===Y&&Y,Z=j[typeof global]&&global;!Z||Z.global!==Z&&Z.window!==Z||(q=Z);var J=E();"function"==typeof define&&"object"==typeof define.amd&&define.amd?(q._=J,define(function(){return J})):Y&&K?Q?(K.exports=J)._=J:Y._=J:q._=J}.call(this),Hud.prototype.update=function(){},Hud.prototype.keyup=function(e){e in this.hints&&(this.hints[e].classList.add("hide"),delete this.hints[e],this.hints.length--,this.hints.length<=0&&(this.keyup=function(){}))},Hud.prototype.makeHintLetters=function(){for(var e,t,r=0,i={length:0},n=document.querySelectorAll(".hints");r<n.length;r++)e=document.createDocumentFragment(),t=n[r].textContent.split(" "),t.forEach(function(t){i[t]=document.createElement("span"),i[t].textContent=t,e.appendChild(i[t]),i.length++}),n[r].innerHTML="&nbsp;",n[r].appendChild(e);return i},window.FRAG_SHADER=["","varying vec4 colour;","","void main() {","  gl_FragColor = colour;","}"].join("\n"),window.VERT_SHADER=["","varying vec4 colour;","uniform float tick;","","void main() {","  float q = abs(position.y + 300.0) / 550.0;","  q = q - floor(q);","  colour = vec4(0.21 * q + 0.1, sin(q * 6.8 + cos(tick/300.0)*0.75), 0.9 * q, 1.0);","","  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","  gl_Position.y += 0.3;","}"].join("\n");var Noise={base:function(e){return function(t){var r=t.createBufferSource(),i=3*t.sampleRate,n=t.createBuffer(1,i,t.sampleRate),o=n.getChannelData(0);return e(o,i),r.buffer=n,r.loop=!0,r}}};Noise.pink=Noise.base(function(e,t){for(var r=[0,0,0,0,0,0,0],i=0;t>i;i++){var n=2*Math.random()-1;r[0]=.99886*r[0]+.0555179*n,r[1]=.99332*r[1]+.0750759*n,r[2]=.969*r[2]+.153852*n,r[3]=.8665*r[3]+.3104856*n,r[4]=.55*r[4]+.5329522*n,r[5]=-.7616*r[5]-.016898*n,e[i]=.11*(sum(r)+.5362*n),r[6]=.115926*n}}),Noise.brown=Noise.base(function(e,t){for(var r=0,i=0;t>i;i++){var n=2*Math.random()-1;e[i]=(r+.02*n)/1.02,r=e[i],e[i]*=3.5}}),Noise.white=Noise.base(function(e,t){for(var r=0;t>r;r++)e[r]=Math.sin(Math.random()*Math.PI*2)});var JellyStats=function(e){this.plane=e,this.delta_sum=0,this.sliding=new Float32Array(e.width)};_.extend(JellyStats.prototype,{update:function(){var e=this.plane;this.delta_sum=sum(e.deltas),this.update_sliding(e)},update_sliding:function(e){var t=this.sliding;t[0]=e.deltas[0]+e.deltas[1]+e.deltas[2];for(var r=1;r<e.width;r++)t[r]=t[r-1]+default_at(r+2,e.deltas,0)-default_at(r-3,e.deltas,0)}});var Plane=function(e){this.three_plane=e,this.w_seg=e.parameters.widthSegments,this.width=this.w_seg+1,this.h_seg=e.parameters.heightSegments,this.vertices=e.attributes.position.array,e.addAttribute("position",new THREE.DynamicBufferAttribute(e.getAttribute("position").array,3)),this.original=this.map(function(e,t){return this.vertices[e+1]},this,new Int32Array(this.w_seg+1)),this.next=new Float32Array(this.original.length),this.deltas=new Float32Array(this.next.length),this.each(function(e,t){this.vertices[e+2]+=1},this)};_.extend(Plane.prototype,{each:function(e,t){for(var r=0;r<this.w_seg+1;r++)e.call(t,3*r,r)},map:function(e,t,r){for(var i=r||new Array(this.w_seg),n=0;n<this.width;n++)i[n]=e.call(t,3*n,n);return i},pull:function(){this.deltas=this.map(function(e,t){return this.next[t]=0,this.original[t]-this.vertices[e+1]},this,this.deltas)},push:function(){var e;for(e=0;e<this.width;e++)this.vertices[3*(e+this.width)+1]=this.vertices[3*e+1]-150,this.vertices[3*e+1]+=this.next[e];this.three_plane.attributes.position.needsUpdate=!0}});var default_at=function(e,t,r){return 0>e||e>=t.length?r:t[e]},sum=function(e,t){var r=0,i=0;for(t=t||function(e){return e};i<e.length;i++)r+=t(e[i]);return r},clamped=function(e,t,r){return Math.max(e,Math.min(r,t))},fmod=function(e,t){var r=e/t;return Math.floor(r)-r},JellyPhysics=function(e){var t=new Float32Array(e.width);this.momentum=t,this.update=function(e,r){for(var i=0;i<e.width;i++){var n=e.deltas[i]/20,o=r.sliding[i]/5/-21.3,a=t[i],s=a+n+o;t[i]=.49*(t[i]+s),e.next[i]=s}},this.drop=function(r,i){var n,o=Math.floor((e.width-9)*i),a=Math.abs(r),s=r/a,h=Math.log(a)/Math.log(4);

for(n=-4;4>=n;n++){var l=Math.abs(n),c=(r-s*Math.pow(l,h))/8;t[n+o+4]-=c}}},WaveNoises=function(e,t){this.physics=e,this.noise=Noise.pink(t),this.gain=t.createGain(),this.gain.gain.value=.35,this.noise.connect(this.gain),this.gain.connect(t.destination),this.noise.start()};_.extend(WaveNoises.prototype,{update:function(){var e=sum(this.physics.momentum,Math.abs);this.noise.playbackRate.value=Math.max(Math.log(Math.sqrt(e/50)+1)/2,.004),this.gain.gain.value=Math.min(Math.log(e/170+1)/4,1.4)}});var Game=function(e){var t=500,r=400,i=new THREE.Scene,n=new THREE.OrthographicCamera(t/-2,t/2,r/2,r/-2,1,1e3),o=new THREE.WebGLRenderer;o.setSize(250,600),o.setClearColor(1640809,1),document.getElementById("gfx").appendChild(o.domElement),o.domElement.style.width=window.innerWidth+"px",o.domElement.style.height=window.innerHeight+"px";var a=new THREE.PlaneBufferGeometry(t,r/2,91,1),s=new Plane(a),h=new JellyStats(s),l=new JellyPhysics(s),c=new(window.AudioContext||window.webkitAudioContext),u=new WaveNoises(l,c),E=new THREE.ShaderMaterial({uniforms:{tick:{type:"f",value:1}},attributes:{},vertexShader:window.VERT_SHADER,fragmentShader:window.FRAG_SHADER}),f=new THREE.Mesh(a,E);E.side=THREE.DoubleSide,i.add(f),i.add(new THREE.AmbientLight(16777215)),n.position.z=5;var p=function(){s.pull(),h.update(),l.update(s,h),u.update(),s.push(),E.uniforms.tick.value++},d=[65,83,68,70,71,72,74,75,76],m="asdfghjkl".split(""),g=m.map(function(e){return e.toUpperCase()}),T=_.map(d,function(){return 0}),v=function(){requestAnimationFrame(v),o.render(i,n),p();for(var e=0;e<d.length;e++){var t=e/(d.length-1);0!==T[e]&&(l.drop(10*T[e],t),T[e]=Math.abs(T[e])/T[e])}};window.onkeyup=function(t){var r,i=_.indexOf(d,t.keyCode);return-1>=i?!0:(T[i]=0,r=(t.shiftKey?g:m)[i],e.keyup(r),!1)},window.onkeydown=function(e){var t=_.indexOf(d,e.keyCode);return t>-1?(T[t]=e.shiftKey?-3:3,!1):void 0},p(),v()};window.onload=function(){new Game(new Hud)};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRocmVlLm1pbi5qcyIsImh1ZC5qcyIsImxvZGFzaC5taW4uanMiLCJzaGFkZXJzLmpzIiwibm9pc2UuanMiLCJwbGFuZS5qcyIsImFwcC5qcyJdLCJuYW1lcyI6WyJIdWQiLCJ0aGlzIiwiaGludHMiLCJtYWtlSGludExldHRlcnMiLCJUSFJFRSIsIlJFVklTSU9OIiwibW9kdWxlIiwiZXhwb3J0cyIsIk1hdGgiLCJzaWduIiwiYSIsImxvZyIsImNvbnNvbGUiLCJhcHBseSIsImFyZ3VtZW50cyIsIndhcm4iLCJlcnJvciIsIk1PVVNFIiwiTEVGVCIsIk1JRERMRSIsIlJJR0hUIiwiQ3VsbEZhY2VOb25lIiwiQ3VsbEZhY2VCYWNrIiwiQ3VsbEZhY2VGcm9udCIsIkN1bGxGYWNlRnJvbnRCYWNrIiwiRnJvbnRGYWNlRGlyZWN0aW9uQ1ciLCJGcm9udEZhY2VEaXJlY3Rpb25DQ1ciLCJCYXNpY1NoYWRvd01hcCIsIlBDRlNoYWRvd01hcCIsIlBDRlNvZnRTaGFkb3dNYXAiLCJGcm9udFNpZGUiLCJCYWNrU2lkZSIsIkRvdWJsZVNpZGUiLCJOb1NoYWRpbmciLCJGbGF0U2hhZGluZyIsIlNtb290aFNoYWRpbmciLCJOb0NvbG9ycyIsIkZhY2VDb2xvcnMiLCJWZXJ0ZXhDb2xvcnMiLCJOb0JsZW5kaW5nIiwiTm9ybWFsQmxlbmRpbmciLCJBZGRpdGl2ZUJsZW5kaW5nIiwiU3VidHJhY3RpdmVCbGVuZGluZyIsIk11bHRpcGx5QmxlbmRpbmciLCJDdXN0b21CbGVuZGluZyIsIkFkZEVxdWF0aW9uIiwiU3VidHJhY3RFcXVhdGlvbiIsIlJldmVyc2VTdWJ0cmFjdEVxdWF0aW9uIiwiTWluRXF1YXRpb24iLCJNYXhFcXVhdGlvbiIsIlplcm9GYWN0b3IiLCJPbmVGYWN0b3IiLCJTcmNDb2xvckZhY3RvciIsIk9uZU1pbnVzU3JjQ29sb3JGYWN0b3IiLCJTcmNBbHBoYUZhY3RvciIsIk9uZU1pbnVzU3JjQWxwaGFGYWN0b3IiLCJEc3RBbHBoYUZhY3RvciIsIk9uZU1pbnVzRHN0QWxwaGFGYWN0b3IiLCJEc3RDb2xvckZhY3RvciIsIk9uZU1pbnVzRHN0Q29sb3JGYWN0b3IiLCJTcmNBbHBoYVNhdHVyYXRlRmFjdG9yIiwiTXVsdGlwbHlPcGVyYXRpb24iLCJNaXhPcGVyYXRpb24iLCJBZGRPcGVyYXRpb24iLCJVVk1hcHBpbmciLCJDdWJlUmVmbGVjdGlvbk1hcHBpbmciLCJDdWJlUmVmcmFjdGlvbk1hcHBpbmciLCJFcXVpcmVjdGFuZ3VsYXJSZWZsZWN0aW9uTWFwcGluZyIsIkVxdWlyZWN0YW5ndWxhclJlZnJhY3Rpb25NYXBwaW5nIiwiU3BoZXJpY2FsUmVmbGVjdGlvbk1hcHBpbmciLCJSZXBlYXRXcmFwcGluZyIsIkNsYW1wVG9FZGdlV3JhcHBpbmciLCJNaXJyb3JlZFJlcGVhdFdyYXBwaW5nIiwiTmVhcmVzdEZpbHRlciIsIk5lYXJlc3RNaXBNYXBOZWFyZXN0RmlsdGVyIiwiTmVhcmVzdE1pcE1hcExpbmVhckZpbHRlciIsIkxpbmVhckZpbHRlciIsIkxpbmVhck1pcE1hcE5lYXJlc3RGaWx0ZXIiLCJMaW5lYXJNaXBNYXBMaW5lYXJGaWx0ZXIiLCJVbnNpZ25lZEJ5dGVUeXBlIiwiQnl0ZVR5cGUiLCJTaG9ydFR5cGUiLCJVbnNpZ25lZFNob3J0VHlwZSIsIkludFR5cGUiLCJVbnNpZ25lZEludFR5cGUiLCJGbG9hdFR5cGUiLCJIYWxmRmxvYXRUeXBlIiwiVW5zaWduZWRTaG9ydDQ0NDRUeXBlIiwiVW5zaWduZWRTaG9ydDU1NTFUeXBlIiwiVW5zaWduZWRTaG9ydDU2NVR5cGUiLCJBbHBoYUZvcm1hdCIsIlJHQkZvcm1hdCIsIlJHQkFGb3JtYXQiLCJMdW1pbmFuY2VGb3JtYXQiLCJMdW1pbmFuY2VBbHBoYUZvcm1hdCIsIlJHQkVGb3JtYXQiLCJSR0JfUzNUQ19EWFQxX0Zvcm1hdCIsIlJHQkFfUzNUQ19EWFQxX0Zvcm1hdCIsIlJHQkFfUzNUQ19EWFQzX0Zvcm1hdCIsIlJHQkFfUzNUQ19EWFQ1X0Zvcm1hdCIsIlJHQl9QVlJUQ180QlBQVjFfRm9ybWF0IiwiUkdCX1BWUlRDXzJCUFBWMV9Gb3JtYXQiLCJSR0JBX1BWUlRDXzRCUFBWMV9Gb3JtYXQiLCJSR0JBX1BWUlRDXzJCUFBWMV9Gb3JtYXQiLCJQcm9qZWN0b3IiLCJwcm9qZWN0VmVjdG9yIiwiYiIsInByb2plY3QiLCJ1bnByb2plY3RWZWN0b3IiLCJ1bnByb2plY3QiLCJwaWNraW5nUmF5IiwiQ2FudmFzUmVuZGVyZXIiLCJkb21FbGVtZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY2xlYXIiLCJyZW5kZXIiLCJzZXRDbGVhckNvbG9yIiwic2V0U2l6ZSIsIkNvbG9yIiwibGVuZ3RoIiwic2V0UkdCIiwic2V0IiwicHJvdG90eXBlIiwiY29uc3RydWN0b3IiLCJyIiwiZyIsImNvcHkiLCJzZXRIZXgiLCJzZXRTdHlsZSIsImZsb29yIiwiYyIsInNldEhTTCIsImQiLCJ0ZXN0IiwiZXhlYyIsIm1pbiIsInBhcnNlSW50IiwiQ29sb3JLZXl3b3JkcyIsImNvcHlHYW1tYVRvTGluZWFyIiwicG93IiwiY29weUxpbmVhclRvR2FtbWEiLCJjb252ZXJ0R2FtbWFUb0xpbmVhciIsImNvbnZlcnRMaW5lYXJUb0dhbW1hIiwic3FydCIsImdldEhleCIsImdldEhleFN0cmluZyIsInRvU3RyaW5nIiwic2xpY2UiLCJnZXRIU0wiLCJoIiwicyIsImwiLCJlIiwibWF4IiwiZiIsImsiLCJnZXRTdHlsZSIsIm9mZnNldEhTTCIsImFkZCIsImFkZENvbG9ycyIsImFkZFNjYWxhciIsIm11bHRpcGx5IiwibXVsdGlwbHlTY2FsYXIiLCJsZXJwIiwiZXF1YWxzIiwiZnJvbUFycmF5IiwidG9BcnJheSIsImNsb25lIiwiYWxpY2VibHVlIiwiYW50aXF1ZXdoaXRlIiwiYXF1YSIsImFxdWFtYXJpbmUiLCJhenVyZSIsImJlaWdlIiwiYmlzcXVlIiwiYmxhY2siLCJibGFuY2hlZGFsbW9uZCIsImJsdWUiLCJibHVldmlvbGV0IiwiYnJvd24iLCJidXJseXdvb2QiLCJjYWRldGJsdWUiLCJjaGFydHJldXNlIiwiY2hvY29sYXRlIiwiY29yYWwiLCJjb3JuZmxvd2VyYmx1ZSIsImNvcm5zaWxrIiwiY3JpbXNvbiIsImN5YW4iLCJkYXJrYmx1ZSIsImRhcmtjeWFuIiwiZGFya2dvbGRlbnJvZCIsImRhcmtncmF5IiwiZGFya2dyZWVuIiwiZGFya2dyZXkiLCJkYXJra2hha2kiLCJkYXJrbWFnZW50YSIsImRhcmtvbGl2ZWdyZWVuIiwiZGFya29yYW5nZSIsImRhcmtvcmNoaWQiLCJkYXJrcmVkIiwiZGFya3NhbG1vbiIsImRhcmtzZWFncmVlbiIsImRhcmtzbGF0ZWJsdWUiLCJkYXJrc2xhdGVncmF5IiwiZGFya3NsYXRlZ3JleSIsImRhcmt0dXJxdW9pc2UiLCJkYXJrdmlvbGV0IiwiZGVlcHBpbmsiLCJkZWVwc2t5Ymx1ZSIsImRpbWdyYXkiLCJkaW1ncmV5IiwiZG9kZ2VyYmx1ZSIsImZpcmVicmljayIsImZsb3JhbHdoaXRlIiwiZm9yZXN0Z3JlZW4iLCJmdWNoc2lhIiwiZ2FpbnNib3JvIiwiZ2hvc3R3aGl0ZSIsImdvbGQiLCJnb2xkZW5yb2QiLCJncmF5IiwiZ3JlZW4iLCJncmVlbnllbGxvdyIsImdyZXkiLCJob25leWRldyIsImhvdHBpbmsiLCJpbmRpYW5yZWQiLCJpbmRpZ28iLCJpdm9yeSIsImtoYWtpIiwibGF2ZW5kZXIiLCJsYXZlbmRlcmJsdXNoIiwibGF3bmdyZWVuIiwibGVtb25jaGlmZm9uIiwibGlnaHRibHVlIiwibGlnaHRjb3JhbCIsImxpZ2h0Y3lhbiIsImxpZ2h0Z29sZGVucm9keWVsbG93IiwibGlnaHRncmF5IiwibGlnaHRncmVlbiIsImxpZ2h0Z3JleSIsImxpZ2h0cGluayIsImxpZ2h0c2FsbW9uIiwibGlnaHRzZWFncmVlbiIsImxpZ2h0c2t5Ymx1ZSIsImxpZ2h0c2xhdGVncmF5IiwibGlnaHRzbGF0ZWdyZXkiLCJsaWdodHN0ZWVsYmx1ZSIsImxpZ2h0eWVsbG93IiwibGltZSIsImxpbWVncmVlbiIsImxpbmVuIiwibWFnZW50YSIsIm1hcm9vbiIsIm1lZGl1bWFxdWFtYXJpbmUiLCJtZWRpdW1ibHVlIiwibWVkaXVtb3JjaGlkIiwibWVkaXVtcHVycGxlIiwibWVkaXVtc2VhZ3JlZW4iLCJtZWRpdW1zbGF0ZWJsdWUiLCJtZWRpdW1zcHJpbmdncmVlbiIsIm1lZGl1bXR1cnF1b2lzZSIsIm1lZGl1bXZpb2xldHJlZCIsIm1pZG5pZ2h0Ymx1ZSIsIm1pbnRjcmVhbSIsIm1pc3R5cm9zZSIsIm1vY2Nhc2luIiwibmF2YWpvd2hpdGUiLCJuYXZ5Iiwib2xkbGFjZSIsIm9saXZlIiwib2xpdmVkcmFiIiwib3JhbmdlIiwib3JhbmdlcmVkIiwib3JjaGlkIiwicGFsZWdvbGRlbnJvZCIsInBhbGVncmVlbiIsInBhbGV0dXJxdW9pc2UiLCJwYWxldmlvbGV0cmVkIiwicGFwYXlhd2hpcCIsInBlYWNocHVmZiIsInBlcnUiLCJwaW5rIiwicGx1bSIsInBvd2RlcmJsdWUiLCJwdXJwbGUiLCJyZWQiLCJyb3N5YnJvd24iLCJyb3lhbGJsdWUiLCJzYWRkbGVicm93biIsInNhbG1vbiIsInNhbmR5YnJvd24iLCJzZWFncmVlbiIsInNlYXNoZWxsIiwic2llbm5hIiwic2lsdmVyIiwic2t5Ymx1ZSIsInNsYXRlYmx1ZSIsInNsYXRlZ3JheSIsInNsYXRlZ3JleSIsInNub3ciLCJzcHJpbmdncmVlbiIsInN0ZWVsYmx1ZSIsInRhbiIsInRlYWwiLCJ0aGlzdGxlIiwidG9tYXRvIiwidHVycXVvaXNlIiwidmlvbGV0Iiwid2hlYXQiLCJ3aGl0ZSIsIndoaXRlc21va2UiLCJ5ZWxsb3ciLCJ5ZWxsb3dncmVlbiIsIlF1YXRlcm5pb24iLCJfeCIsIl95IiwiX3oiLCJfdyIseyJlbmQiOnsiZmlsZSI6Ij8iLCJjb21tZW50c19iZWZvcmUiOltdLCJubGIiOmZhbHNlLCJlbmRwb3MiOjk4NzQsImVuZGNvbCI6ODIsImVuZGxpbmUiOjIzLCJwb3MiOjk4NzMsImNvbCI6ODEsImxpbmUiOjIzLCJ2YWx1ZSI6IngiLCJ0eXBlIjoibmFtZSJ9LCJzdGFydCI6eyJmaWxlIjoiPyIsImNvbW1lbnRzX2JlZm9yZSI6W10sIm5sYiI6ZmFsc2UsImVuZHBvcyI6OTg3NCwiZW5kY29sIjo4MiwiZW5kbGluZSI6MjMsInBvcyI6OTg3MywiY29sIjo4MSwibGluZSI6MjMsInZhbHVlIjoieCIsInR5cGUiOiJuYW1lIn0sIm5hbWUiOiJ4In0sIngiLCJvbkNoYW5nZUNhbGxiYWNrIiwieSIsInoiLCJ3Iiwic2V0RnJvbUV1bGVyIiwiRXVsZXIiLCJFcnJvciIsImNvcyIsInNpbiIsIm9yZGVyIiwic2V0RnJvbUF4aXNBbmdsZSIsInNldEZyb21Sb3RhdGlvbk1hdHJpeCIsImVsZW1lbnRzIiwic2V0RnJvbVVuaXRWZWN0b3JzIiwiVmVjdG9yMyIsImRvdCIsImFicyIsImNyb3NzVmVjdG9ycyIsIm5vcm1hbGl6ZSIsImludmVyc2UiLCJjb25qdWdhdGUiLCJsZW5ndGhTcSIsIm11bHRpcGx5UXVhdGVybmlvbnMiLCJtdWx0aXBseVZlY3RvcjMiLCJhcHBseVF1YXRlcm5pb24iLCJzbGVycCIsImFjb3MiLCJvbkNoYW5nZSIsIlZlY3RvcjIiLCJzZXRYIiwic2V0WSIsInNldENvbXBvbmVudCIsImdldENvbXBvbmVudCIsImFkZFZlY3RvcnMiLCJzdWIiLCJzdWJWZWN0b3JzIiwic3ViU2NhbGFyIiwiZGl2aWRlIiwiZGl2aWRlU2NhbGFyIiwiY2xhbXAiLCJjbGFtcFNjYWxhciIsImNlaWwiLCJyb3VuZCIsInJvdW5kVG9aZXJvIiwibmVnYXRlIiwiZGlzdGFuY2VUbyIsImRpc3RhbmNlVG9TcXVhcmVkIiwic2V0TGVuZ3RoIiwibGVycFZlY3RvcnMiLCJmcm9tQXR0cmlidXRlIiwiaXRlbVNpemUiLCJhcnJheSIsInNldFoiLCJtdWx0aXBseVZlY3RvcnMiLCJhcHBseUV1bGVyIiwiYXBwbHlBeGlzQW5nbGUiLCJhcHBseU1hdHJpeDMiLCJhcHBseU1hdHJpeDQiLCJhcHBseVByb2plY3Rpb24iLCJNYXRyaXg0IiwibXVsdGlwbHlNYXRyaWNlcyIsInByb2plY3Rpb25NYXRyaXgiLCJnZXRJbnZlcnNlIiwibWF0cml4V29ybGQiLCJ0cmFuc2Zvcm1EaXJlY3Rpb24iLCJsZW5ndGhNYW5oYXR0YW4iLCJjcm9zcyIsInByb2plY3RPblZlY3RvciIsInByb2plY3RPblBsYW5lIiwicmVmbGVjdCIsImFuZ2xlVG8iLCJzZXRFdWxlckZyb21Sb3RhdGlvbk1hdHJpeCIsInNldEV1bGVyRnJvbVF1YXRlcm5pb24iLCJnZXRQb3NpdGlvbkZyb21NYXRyaXgiLCJzZXRGcm9tTWF0cml4UG9zaXRpb24iLCJnZXRTY2FsZUZyb21NYXRyaXgiLCJzZXRGcm9tTWF0cml4U2NhbGUiLCJnZXRDb2x1bW5Gcm9tTWF0cml4Iiwic2V0RnJvbU1hdHJpeENvbHVtbiIsIlZlY3RvcjQiLCJzZXRXIiwic2V0QXhpc0FuZ2xlRnJvbVF1YXRlcm5pb24iLCJzZXRBeGlzQW5nbGVGcm9tUm90YXRpb25NYXRyaXgiLCJQSSIsIl9vcmRlciIsIkRlZmF1bHRPcmRlciIsIlJvdGF0aW9uT3JkZXJzIiwic3BsaXQiLCJwIiwicSIsImFzaW4iLCJhdGFuMiIsInNldEZyb21RdWF0ZXJuaW9uIiwibWFrZVJvdGF0aW9uRnJvbVF1YXRlcm5pb24iLCJzZXRGcm9tVmVjdG9yMyIsInJlb3JkZXIiLCJ0b1ZlY3RvcjMiLCJMaW5lMyIsInN0YXJ0IiwiZW5kIiwiY2VudGVyIiwiZGVsdGEiLCJkaXN0YW5jZVNxIiwiZGlzdGFuY2UiLCJhdCIsImNsb3Nlc3RQb2ludFRvUG9pbnRQYXJhbWV0ZXIiLCJjbG9zZXN0UG9pbnRUb1BvaW50IiwiQm94MiIsIkluZmluaXR5Iiwic2V0RnJvbVBvaW50cyIsIm1ha2VFbXB0eSIsImV4cGFuZEJ5UG9pbnQiLCJzZXRGcm9tQ2VudGVyQW5kU2l6ZSIsImVtcHR5Iiwic2l6ZSIsImV4cGFuZEJ5VmVjdG9yIiwiZXhwYW5kQnlTY2FsYXIiLCJjb250YWluc1BvaW50IiwiY29udGFpbnNCb3giLCJnZXRQYXJhbWV0ZXIiLCJpc0ludGVyc2VjdGlvbkJveCIsImNsYW1wUG9pbnQiLCJkaXN0YW5jZVRvUG9pbnQiLCJpbnRlcnNlY3QiLCJ1bmlvbiIsInRyYW5zbGF0ZSIsIkJveDMiLCJzZXRGcm9tT2JqZWN0IiwidXBkYXRlTWF0cml4V29ybGQiLCJ0cmF2ZXJzZSIsImdlb21ldHJ5IiwiR2VvbWV0cnkiLCJ2ZXJ0aWNlcyIsIkJ1ZmZlckdlb21ldHJ5IiwiYXR0cmlidXRlcyIsInBvc2l0aW9uIiwiZ2V0Qm91bmRpbmdTcGhlcmUiLCJTcGhlcmUiLCJyYWRpdXMiLCJNYXRyaXgzIiwiRmxvYXQzMkFycmF5IiwiaWRlbnRpdHkiLCJtdWx0aXBseVZlY3RvcjNBcnJheSIsImFwcGx5VG9WZWN0b3IzQXJyYXkiLCJkZXRlcm1pbmFudCIsInRyYW5zcG9zZSIsImZsYXR0ZW5Ub0FycmF5T2Zmc2V0IiwiZ2V0Tm9ybWFsTWF0cml4IiwidHJhbnNwb3NlSW50b0FycmF5IiwibiIsInQiLCJ1IiwiZXh0cmFjdFBvc2l0aW9uIiwiY29weVBvc2l0aW9uIiwiZXh0cmFjdEJhc2lzIiwibWFrZUJhc2lzIiwiZXh0cmFjdFJvdGF0aW9uIiwibWFrZVJvdGF0aW9uRnJvbUV1bGVyIiwic2V0Um90YXRpb25Gcm9tUXVhdGVybmlvbiIsImxvb2tBdCIsInYiLCJEIiwiQSIsIkUiLCJHIiwiRiIsIkkiLCJVIiwiTSIsIkgiLCJMIiwiUCIsIk4iLCJSIiwibXVsdGlwbHlUb0FycmF5IiwibXVsdGlwbHlWZWN0b3I0Iiwicm90YXRlQXhpcyIsImNyb3NzVmVjdG9yIiwiZ2V0UG9zaXRpb24iLCJzZXRQb3NpdGlvbiIsInJvdGF0ZVgiLCJyb3RhdGVZIiwicm90YXRlWiIsInJvdGF0ZUJ5QXhpcyIsInNjYWxlIiwiZ2V0TWF4U2NhbGVPbkF4aXMiLCJtYWtlVHJhbnNsYXRpb24iLCJtYWtlUm90YXRpb25YIiwibWFrZVJvdGF0aW9uWSIsIm1ha2VSb3RhdGlvbloiLCJtYWtlUm90YXRpb25BeGlzIiwibWFrZVNjYWxlIiwiY29tcG9zZSIsImRlY29tcG9zZSIsIm1ha2VGcnVzdHVtIiwibWFrZVBlcnNwZWN0aXZlIiwiZGVnVG9SYWQiLCJtYWtlT3J0aG9ncmFwaGljIiwiUmF5Iiwib3JpZ2luIiwiZGlyZWN0aW9uIiwicmVjYXN0IiwiZGlzdGFuY2VTcVRvU2VnbWVudCIsImlzSW50ZXJzZWN0aW9uU3BoZXJlIiwiaW50ZXJzZWN0U3BoZXJlIiwiaXNJbnRlcnNlY3Rpb25QbGFuZSIsIm5vcm1hbCIsImRpc3RhbmNlVG9QbGFuZSIsImNvbnN0YW50IiwiaW50ZXJzZWN0UGxhbmUiLCJpbnRlcnNlY3RCb3giLCJpbnRlcnNlY3RUcmlhbmdsZSIsImludGVyc2VjdHNTcGhlcmUiLCJnZXRCb3VuZGluZ0JveCIsIkZydXN0dW0iLCJwbGFuZXMiLCJQbGFuZSIsInNldEZyb21NYXRyaXgiLCJzZXRDb21wb25lbnRzIiwiaW50ZXJzZWN0c09iamVjdCIsImJvdW5kaW5nU3BoZXJlIiwiY29tcHV0ZUJvdW5kaW5nU3BoZXJlIiwiaW50ZXJzZWN0c0JveCIsInNldEZyb21Ob3JtYWxBbmRDb3BsYW5hclBvaW50Iiwic2V0RnJvbUNvcGxhbmFyUG9pbnRzIiwiZGlzdGFuY2VUb1NwaGVyZSIsInByb2plY3RQb2ludCIsIm9ydGhvUG9pbnQiLCJpc0ludGVyc2VjdGlvbkxpbmUiLCJpbnRlcnNlY3RMaW5lIiwiY29wbGFuYXJQb2ludCIsImdlbmVyYXRlVVVJRCIsIkFycmF5IiwicmFuZG9tIiwiam9pbiIsImNsYW1wQm90dG9tIiwibWFwTGluZWFyIiwic21vb3Roc3RlcCIsInNtb290aGVyc3RlcCIsInJhbmRvbTE2IiwicmFuZEludCIsInJhbmRGbG9hdCIsInJhbmRGbG9hdFNwcmVhZCIsInJhZFRvRGVnIiwiaXNQb3dlck9mVHdvIiwibmV4dFBvd2VyT2ZUd28iLCJTcGxpbmUiLCJwb2ludHMiLCJpbml0RnJvbUFycmF5IiwiZ2V0UG9pbnQiLCJnZXRDb250cm9sUG9pbnRzQXJyYXkiLCJnZXRMZW5ndGgiLCJjaHVua3MiLCJ0b3RhbCIsInJlcGFyYW1ldHJpemVCeUFyY0xlbmd0aCIsInB1c2giLCJUcmlhbmdsZSIsImJhcnljb29yZEZyb21Qb2ludCIsInNldEZyb21Qb2ludHNBbmRJbmRpY2VzIiwiYXJlYSIsIm1pZHBvaW50IiwicGxhbmUiLCJDbG9jayIsImF1dG9TdGFydCIsImVsYXBzZWRUaW1lIiwib2xkVGltZSIsInN0YXJ0VGltZSIsInJ1bm5pbmciLCJzZWxmIiwicGVyZm9ybWFuY2UiLCJub3ciLCJEYXRlIiwic3RvcCIsImdldEVsYXBzZWRUaW1lIiwiZ2V0RGVsdGEiLCJFdmVudERpc3BhdGNoZXIiLCJhZGRFdmVudExpc3RlbmVyIiwiaGFzRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkaXNwYXRjaEV2ZW50IiwiX2xpc3RlbmVycyIsImluZGV4T2YiLCJzcGxpY2UiLCJ0eXBlIiwidGFyZ2V0IiwiY2FsbCIsIlJheWNhc3RlciIsInJheSIsIm5lYXIiLCJmYXIiLCJwYXJhbXMiLCJTcHJpdGUiLCJNZXNoIiwiUG9pbnRDbG91ZCIsInRocmVzaG9sZCIsIkxPRCIsIkxpbmUiLCJyYXljYXN0IiwiY2hpbGRyZW4iLCJwcmVjaXNpb24iLCJsaW5lUHJlY2lzaW9uIiwic2V0RnJvbUNhbWVyYSIsIlBlcnNwZWN0aXZlQ2FtZXJhIiwiT3J0aG9ncmFwaGljQ2FtZXJhIiwiaW50ZXJzZWN0T2JqZWN0Iiwic29ydCIsImludGVyc2VjdE9iamVjdHMiLCJPYmplY3QzRCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJPYmplY3QzRElkQ291bnQiLCJ1dWlkIiwibmFtZSIsInBhcmVudCIsInVwIiwiRGVmYXVsdFVwIiwiZGVmaW5lUHJvcGVydGllcyIsImVudW1lcmFibGUiLCJyb3RhdGlvbiIsInF1YXRlcm5pb24iLCJyb3RhdGlvbkF1dG9VcGRhdGUiLCJtYXRyaXgiLCJtYXRyaXhBdXRvVXBkYXRlIiwibWF0cml4V29ybGROZWVkc1VwZGF0ZSIsInZpc2libGUiLCJyZWNlaXZlU2hhZG93IiwiY2FzdFNoYWRvdyIsImZydXN0dW1DdWxsZWQiLCJyZW5kZXJPcmRlciIsInVzZXJEYXRhIiwiZXVsZXJPcmRlciIsInVzZVF1YXRlcm5pb24iLCJhcHBseU1hdHJpeCIsInNldFJvdGF0aW9uRnJvbUF4aXNBbmdsZSIsInNldFJvdGF0aW9uRnJvbUV1bGVyIiwic2V0Um90YXRpb25Gcm9tTWF0cml4Iiwicm90YXRlT25BeGlzIiwidHJhbnNsYXRlT25BeGlzIiwidHJhbnNsYXRlWCIsInRyYW5zbGF0ZVkiLCJ0cmFuc2xhdGVaIiwibG9jYWxUb1dvcmxkIiwid29ybGRUb0xvY2FsIiwicmVtb3ZlIiwiZ2V0Q2hpbGRCeU5hbWUiLCJnZXRPYmplY3RCeU5hbWUiLCJnZXRPYmplY3RCeUlkIiwiZ2V0T2JqZWN0QnlQcm9wZXJ0eSIsImdldFdvcmxkUG9zaXRpb24iLCJnZXRXb3JsZFF1YXRlcm5pb24iLCJnZXRXb3JsZFJvdGF0aW9uIiwiZ2V0V29ybGRTY2FsZSIsImdldFdvcmxkRGlyZWN0aW9uIiwidHJhdmVyc2VWaXNpYmxlIiwidHJhdmVyc2VBbmNlc3RvcnMiLCJ1cGRhdGVNYXRyaXgiLCJ0b0pTT04iLCJtZXRhZGF0YSIsInZlcnNpb24iLCJnZW5lcmF0b3IiLCJtYXRlcmlhbHMiLCJKU09OIiwic3RyaW5naWZ5IiwiZm92IiwiYXNwZWN0IiwibGVmdCIsInJpZ2h0IiwidG9wIiwiYm90dG9tIiwiQW1iaWVudExpZ2h0IiwiY29sb3IiLCJEaXJlY3Rpb25hbExpZ2h0IiwiaW50ZW5zaXR5IiwiUG9pbnRMaWdodCIsImRlY2F5IiwiU3BvdExpZ2h0IiwiYW5nbGUiLCJleHBvbmVudCIsIkhlbWlzcGhlcmVMaWdodCIsImdyb3VuZENvbG9yIiwiZ2VvbWV0cmllcyIsIm1hdGVyaWFsIiwibW9kZSIsIm9iamVjdCIsInBhcnNlIiwiRmFjZTMiLCJ2ZXJ0ZXhOb3JtYWxzIiwidmVydGV4Q29sb3JzIiwidmVydGV4VGFuZ2VudHMiLCJtYXRlcmlhbEluZGV4IiwiRmFjZTQiLCJCdWZmZXJBdHRyaWJ1dGUiLCJuZWVkc1VwZGF0ZSIsImNvcHlBdCIsInNldFhZIiwic2V0WFlaIiwic2V0WFlaVyIsIkludDhBdHRyaWJ1dGUiLCJVaW50OEF0dHJpYnV0ZSIsIlVpbnQ4Q2xhbXBlZEF0dHJpYnV0ZSIsIkludDE2QXR0cmlidXRlIiwiVWludDE2QXR0cmlidXRlIiwiSW50MzJBdHRyaWJ1dGUiLCJVaW50MzJBdHRyaWJ1dGUiLCJGbG9hdDMyQXR0cmlidXRlIiwiRmxvYXQ2NEF0dHJpYnV0ZSIsIkR5bmFtaWNCdWZmZXJBdHRyaWJ1dGUiLCJ1cGRhdGVSYW5nZSIsIm9mZnNldCIsImNvdW50IiwiY3JlYXRlIiwiR2VvbWV0cnlJZENvdW50IiwiYXR0cmlidXRlc0tleXMiLCJvZmZzZXRzIiwiZHJhd2NhbGxzIiwiYm91bmRpbmdCb3giLCJhZGRBdHRyaWJ1dGUiLCJrZXlzIiwiZ2V0QXR0cmlidXRlIiwiYWRkRHJhd0NhbGwiLCJpbmRleCIsImNvbXB1dGVCb3VuZGluZ0JveCIsImZyb21HZW9tZXRyeSIsImZhY2VzIiwiZmFjZVZlcnRleFV2cyIsImlzTmFOIiwiY29tcHV0ZUZhY2VOb3JtYWxzIiwiY29tcHV0ZVZlcnRleE5vcm1hbHMiLCJub3JtYWxpemVOb3JtYWxzIiwiY29tcHV0ZVRhbmdlbnRzIiwiaGEiLCJPIiwiYmEiLCJvYSIsImphIiwicWEiLCJjYSIsInV2IiwidGFuZ2VudCIsIlYiLCJKIiwiY29tcHV0ZU9mZnNldHMiLCJVaW50MTZBcnJheSIsIkludDMyQXJyYXkiLCJyZW9yZGVyQnVmZmVycyIsIm1lcmdlIiwibnVtSXRlbXMiLCJkYXRhIiwiZGlzcG9zZSIsImNvbG9ycyIsIm1vcnBoVGFyZ2V0cyIsIm1vcnBoQ29sb3JzIiwibW9ycGhOb3JtYWxzIiwic2tpbldlaWdodHMiLCJza2luSW5kaWNlcyIsImxpbmVEaXN0YW5jZXMiLCJoYXNUYW5nZW50cyIsImR5bmFtaWMiLCJncm91cHNOZWVkVXBkYXRlIiwibGluZURpc3RhbmNlc05lZWRVcGRhdGUiLCJjb2xvcnNOZWVkVXBkYXRlIiwidGFuZ2VudHNOZWVkVXBkYXRlIiwibm9ybWFsc05lZWRVcGRhdGUiLCJ1dnNOZWVkVXBkYXRlIiwiZWxlbWVudHNOZWVkVXBkYXRlIiwidmVydGljZXNOZWVkVXBkYXRlIiwiZnJvbUJ1ZmZlckdlb21ldHJ5IiwiY29tcHV0ZU1vcnBoTm9ybWFscyIsIl9fb3JpZ2luYWxGYWNlTm9ybWFsIiwiX19vcmlnaW5hbFZlcnRleE5vcm1hbHMiLCJmYWNlTm9ybWFscyIsImNvbXB1dGVMaW5lRGlzdGFuY2VzIiwibWVyZ2VNZXNoIiwibWVyZ2VWZXJ0aWNlcyIsInBhcmFtZXRlcnMiLCJub3JtYWxzIiwidXZzIiwiQ2FtZXJhIiwibWF0cml4V29ybGRJbnZlcnNlIiwiQ3ViZUNhbWVyYSIsInJlbmRlclRhcmdldCIsIldlYkdMUmVuZGVyVGFyZ2V0Q3ViZSIsImZvcm1hdCIsIm1hZ0ZpbHRlciIsIm1pbkZpbHRlciIsInVwZGF0ZUN1YmVNYXAiLCJnZW5lcmF0ZU1pcG1hcHMiLCJhY3RpdmVDdWJlRmFjZSIsInpvb20iLCJ1cGRhdGVQcm9qZWN0aW9uTWF0cml4Iiwic2V0TGVucyIsImF0YW4iLCJzZXRWaWV3T2Zmc2V0IiwiZnVsbFdpZHRoIiwiZnVsbEhlaWdodCIsIndpZHRoIiwiaGVpZ2h0IiwiTGlnaHQiLCJBcmVhTGlnaHQiLCJjb25zdGFudEF0dGVudWF0aW9uIiwibGluZWFyQXR0ZW51YXRpb24iLCJxdWFkcmF0aWNBdHRlbnVhdGlvbiIsIm9ubHlTaGFkb3ciLCJzaGFkb3dDYW1lcmFOZWFyIiwic2hhZG93Q2FtZXJhRmFyIiwic2hhZG93Q2FtZXJhTGVmdCIsInNoYWRvd0NhbWVyYVRvcCIsInNoYWRvd0NhbWVyYVJpZ2h0Iiwic2hhZG93Q2FtZXJhQm90dG9tIiwic2hhZG93Q2FtZXJhVmlzaWJsZSIsInNoYWRvd0JpYXMiLCJzaGFkb3dEYXJrbmVzcyIsInNoYWRvd01hcEhlaWdodCIsInNoYWRvd01hcFdpZHRoIiwic2hhZG93Q2FzY2FkZSIsInNoYWRvd0Nhc2NhZGVPZmZzZXQiLCJzaGFkb3dDYXNjYWRlQ291bnQiLCJzaGFkb3dDYXNjYWRlQmlhcyIsInNoYWRvd0Nhc2NhZGVXaWR0aCIsInNoYWRvd0Nhc2NhZGVIZWlnaHQiLCJzaGFkb3dDYXNjYWRlTmVhcloiLCJzaGFkb3dDYXNjYWRlRmFyWiIsInNoYWRvd0Nhc2NhZGVBcnJheSIsInNoYWRvd01hdHJpeCIsInNoYWRvd0NhbWVyYSIsInNoYWRvd01hcFNpemUiLCJzaGFkb3dNYXAiLCJzaGFkb3dDYW1lcmFGb3YiLCJDYWNoZSIsImZpbGVzIiwiZ2V0IiwiTG9hZGVyIiwic3RhdHVzRG9tRWxlbWVudCIsInNob3dTdGF0dXMiLCJhZGRTdGF0dXNFbGVtZW50IiwiaW1hZ2VMb2FkZXIiLCJJbWFnZUxvYWRlciIsIm9uTG9hZFN0YXJ0Iiwib25Mb2FkUHJvZ3Jlc3MiLCJvbkxvYWRDb21wbGV0ZSIsImNyb3NzT3JpZ2luIiwic3R5bGUiLCJmb250U2l6ZSIsInRleHRBbGlnbiIsImJhY2tncm91bmQiLCJwYWRkaW5nIiwiekluZGV4IiwiaW5uZXJIVE1MIiwidXBkYXRlUHJvZ3Jlc3MiLCJsb2FkZWQiLCJ0b0ZpeGVkIiwiZXh0cmFjdFVybEJhc2UiLCJwb3AiLCJpbml0TWF0ZXJpYWxzIiwiY3JlYXRlTWF0ZXJpYWwiLCJuZWVkc1RhbmdlbnRzIiwiU2hhZGVyTWF0ZXJpYWwiLCJMTjIiLCJIYW5kbGVycyIsImxvYWQiLCJUZXh0dXJlIiwiZ2V0Q29udGV4dCIsImRyYXdJbWFnZSIsImltYWdlIiwic291cmNlRmlsZSIsInJlcGVhdCIsIndyYXBTIiwid3JhcFQiLCJtaXJyb3IiLCJhbmlzb3Ryb3B5Iiwib3BhY2l0eSIsIm1hcCIsImxpZ2h0TWFwIiwibm9ybWFsTWFwIiwiYnVtcE1hcCIsIndpcmVmcmFtZSIsInNoYWRpbmciLCJ0b0xvd2VyQ2FzZSIsImJsZW5kaW5nIiwidHJhbnNwYXJlbnQiLCJkZXB0aFRlc3QiLCJkZXB0aFdyaXRlIiwiZmxpcFNpZGVkIiwic2lkZSIsImRvdWJsZVNpZGVkIiwiY29sb3JEaWZmdXNlIiwiRGJnQ29sb3IiLCJjb2xvclNwZWN1bGFyIiwic3BlY3VsYXIiLCJjb2xvckVtaXNzaXZlIiwiZW1pc3NpdmUiLCJ0cmFuc3BhcmVuY3kiLCJzcGVjdWxhckNvZWYiLCJzaGluaW5lc3MiLCJtYXBEaWZmdXNlIiwibWFwRGlmZnVzZVJlcGVhdCIsIm1hcERpZmZ1c2VPZmZzZXQiLCJtYXBEaWZmdXNlV3JhcCIsIm1hcERpZmZ1c2VBbmlzb3Ryb3B5IiwibWFwTGlnaHQiLCJtYXBMaWdodFJlcGVhdCIsIm1hcExpZ2h0T2Zmc2V0IiwibWFwTGlnaHRXcmFwIiwibWFwTGlnaHRBbmlzb3Ryb3B5IiwibWFwQnVtcCIsIm1hcEJ1bXBSZXBlYXQiLCJtYXBCdW1wT2Zmc2V0IiwibWFwQnVtcFdyYXAiLCJtYXBCdW1wQW5pc290cm9weSIsIm1hcE5vcm1hbCIsIm1hcE5vcm1hbFJlcGVhdCIsIm1hcE5vcm1hbE9mZnNldCIsIm1hcE5vcm1hbFdyYXAiLCJtYXBOb3JtYWxBbmlzb3Ryb3B5IiwibWFwU3BlY3VsYXIiLCJtYXBTcGVjdWxhclJlcGVhdCIsIm1hcFNwZWN1bGFyT2Zmc2V0IiwibWFwU3BlY3VsYXJXcmFwIiwibWFwU3BlY3VsYXJBbmlzb3Ryb3B5IiwibWFwQWxwaGEiLCJtYXBBbHBoYVJlcGVhdCIsIm1hcEFscGhhT2Zmc2V0IiwibWFwQWxwaGFXcmFwIiwibWFwQWxwaGFBbmlzb3Ryb3B5IiwibWFwQnVtcFNjYWxlIiwiYnVtcFNjYWxlIiwibWFwTm9ybWFsRmFjdG9yIiwibm9ybWFsU2NhbGUiLCJEYmdOYW1lIiwiaGFuZGxlcnMiLCJYSFJMb2FkZXIiLCJtYW5hZ2VyIiwiRGVmYXVsdExvYWRpbmdNYW5hZ2VyIiwiWE1MSHR0cFJlcXVlc3QiLCJvcGVuIiwicmVzcG9uc2UiLCJpdGVtRW5kIiwicmVzcG9uc2VUeXBlIiwic2VuZCIsIml0ZW1TdGFydCIsInNldFJlc3BvbnNlVHlwZSIsInNldENyb3NzT3JpZ2luIiwic3JjIiwiSlNPTkxvYWRlciIsIndpdGhDcmVkZW50aWFscyIsImxvYWRBamF4SlNPTiIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJET05FIiwic3RhdHVzIiwicmVzcG9uc2VUZXh0IiwiTE9BRElORyIsImdldFJlc3BvbnNlSGVhZGVyIiwiSEVBREVSU19SRUNFSVZFRCIsImluZmx1ZW5jZXNQZXJWZXJ0ZXgiLCJib25lcyIsImFuaW1hdGlvbiIsImFuaW1hdGlvbnMiLCJMb2FkaW5nTWFuYWdlciIsIm9uTG9hZCIsIm9uUHJvZ3Jlc3MiLCJvbkVycm9yIiwiQnVmZmVyR2VvbWV0cnlMb2FkZXIiLCJNYXRlcmlhbExvYWRlciIsInVuaWZvcm1zIiwidmVydGV4U2hhZGVyIiwiZnJhZ21lbnRTaGFkZXIiLCJzaXplQXR0ZW51YXRpb24iLCJPYmplY3RMb2FkZXIiLCJ0ZXh0dXJlUGF0aCIsInN1YnN0cmluZyIsImxhc3RJbmRleE9mIiwic2V0VGV4dHVyZVBhdGgiLCJwYXJzZUdlb21ldHJpZXMiLCJwYXJzZUltYWdlcyIsImltYWdlcyIsInBhcnNlVGV4dHVyZXMiLCJ0ZXh0dXJlcyIsInBhcnNlTWF0ZXJpYWxzIiwicGFyc2VPYmplY3QiLCJ3aWR0aFNlZ21lbnRzIiwiaGVpZ2h0U2VnbWVudHMiLCJCb3hHZW9tZXRyeSIsImRlcHRoIiwiZGVwdGhTZWdtZW50cyIsIkNpcmNsZUdlb21ldHJ5Iiwic2VnbWVudHMiLCJDeWxpbmRlckdlb21ldHJ5IiwicmFkaXVzVG9wIiwicmFkaXVzQm90dG9tIiwicmFkaWFsU2VnbWVudHMiLCJvcGVuRW5kZWQiLCJTcGhlcmVHZW9tZXRyeSIsInBoaVN0YXJ0IiwicGhpTGVuZ3RoIiwidGhldGFTdGFydCIsInRoZXRhTGVuZ3RoIiwiSWNvc2FoZWRyb25HZW9tZXRyeSIsImRldGFpbCIsIlRvcnVzR2VvbWV0cnkiLCJ0dWJlIiwidHVidWxhclNlZ21lbnRzIiwiYXJjIiwiVG9ydXNLbm90R2VvbWV0cnkiLCJoZWlnaHRTY2FsZSIsImFscGhhTWFwIiwiZW52TWFwIiwic3BlY3VsYXJNYXAiLCJ1cmwiLCJ3cmFwIiwiU2NlbmUiLCJHcm91cCIsIlRleHR1cmVMb2FkZXIiLCJEYXRhVGV4dHVyZUxvYWRlciIsIkJpbmFyeVRleHR1cmVMb2FkZXIiLCJfcGFyc2VyIiwiRGF0YVRleHR1cmUiLCJtaXBtYXBzIiwibWlwbWFwQ291bnQiLCJDb21wcmVzc2VkVGV4dHVyZUxvYWRlciIsIkNvbXByZXNzZWRUZXh0dXJlIiwiaXNDdWJlbWFwIiwiTWF0ZXJpYWwiLCJNYXRlcmlhbElkQ291bnQiLCJibGVuZFNyYyIsImJsZW5kRHN0IiwiYmxlbmRFcXVhdGlvbiIsImJsZW5kRXF1YXRpb25BbHBoYSIsImJsZW5kRHN0QWxwaGEiLCJibGVuZFNyY0FscGhhIiwiY29sb3JXcml0ZSIsInBvbHlnb25PZmZzZXQiLCJvdmVyZHJhdyIsImFscGhhVGVzdCIsInBvbHlnb25PZmZzZXRVbml0cyIsInBvbHlnb25PZmZzZXRGYWN0b3IiLCJfbmVlZHNVcGRhdGUiLCJ1cGRhdGUiLCJzZXRWYWx1ZXMiLCJOdW1iZXIiLCJNZXNoQmFzaWNNYXRlcmlhbCIsIk1lc2hMYW1iZXJ0TWF0ZXJpYWwiLCJNZXNoUGhvbmdNYXRlcmlhbCIsIk1lc2hOb3JtYWxNYXRlcmlhbCIsIk1lc2hEZXB0aE1hdGVyaWFsIiwiUG9pbnRDbG91ZE1hdGVyaWFsIiwiU3ByaXRlTWF0ZXJpYWwiLCJMaW5lQmFzaWNNYXRlcmlhbCIsImxpbmV3aWR0aCIsImxpbmVqb2luIiwibGluZWNhcCIsImZvZyIsIkxpbmVEYXNoZWRNYXRlcmlhbCIsImRhc2hTaXplIiwiZ2FwU2l6ZSIsImNvbWJpbmUiLCJyZWZsZWN0aXZpdHkiLCJyZWZyYWN0aW9uUmF0aW8iLCJ3aXJlZnJhbWVMaW5ld2lkdGgiLCJ3aXJlZnJhbWVMaW5lam9pbiIsIndpcmVmcmFtZUxpbmVjYXAiLCJza2lubmluZyIsIndyYXBBcm91bmQiLCJ3cmFwUkdCIiwibWV0YWwiLCJNZXNoRmFjZU1hdGVyaWFsIiwiUGFydGljbGVCYXNpY01hdGVyaWFsIiwiUGFydGljbGVTeXN0ZW1NYXRlcmlhbCIsImRlZmluZXMiLCJsaWdodHMiLCJkZWZhdWx0QXR0cmlidXRlVmFsdWVzIiwidXYyIiwiaW5kZXgwQXR0cmlidXRlTmFtZSIsIlVuaWZvcm1zVXRpbHMiLCJSYXdTaGFkZXJNYXRlcmlhbCIsIlRleHR1cmVJZENvdW50IiwiREVGQVVMVF9JTUFHRSIsIm1hcHBpbmciLCJERUZBVUxUX01BUFBJTkciLCJwcmVtdWx0aXBseUFscGhhIiwiZmxpcFkiLCJ1bnBhY2tBbGlnbm1lbnQiLCJvblVwZGF0ZSIsIkN1YmVUZXh0dXJlIiwiVmlkZW9UZXh0dXJlIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiSEFWRV9FTk9VR0hfREFUQSIsImRpc3RhbmNlVG9SYXkiLCJwb2ludCIsImZhY2UiLCJQYXJ0aWNsZVN5c3RlbSIsIkxpbmVTdHJpcCIsIkxpbmVQaWVjZXMiLCJvZmZzZXRJbmRleCIsImZhY2VJbmRleCIsInVwZGF0ZU1vcnBoVGFyZ2V0cyIsIm1vcnBoVGFyZ2V0QmFzZSIsIm1vcnBoVGFyZ2V0Rm9yY2VkT3JkZXIiLCJtb3JwaFRhcmdldEluZmx1ZW5jZXMiLCJtb3JwaFRhcmdldERpY3Rpb25hcnkiLCJnZXRNb3JwaFRhcmdldEluZGV4QnlOYW1lIiwiQm9uZSIsInNraW4iLCJTa2VsZXRvbiIsInVzZVZlcnRleFRleHR1cmUiLCJpZGVudGl0eU1hdHJpeCIsImJvbmVUZXh0dXJlSGVpZ2h0IiwiYm9uZVRleHR1cmVXaWR0aCIsImJvbmVNYXRyaWNlcyIsImJvbmVUZXh0dXJlIiwiY2FsY3VsYXRlSW52ZXJzZXMiLCJib25lSW52ZXJzZXMiLCJwb3NlIiwiU2tpbm5lZE1lc2giLCJiaW5kTW9kZSIsImJpbmRNYXRyaXgiLCJiaW5kTWF0cml4SW52ZXJzZSIsInBvcyIsInJvdHEiLCJzY2wiLCJub3JtYWxpemVTa2luV2VpZ2h0cyIsImJpbmQiLCJza2VsZXRvbiIsIk1vcnBoQW5pbU1lc2giLCJkdXJhdGlvbiIsIm1pcnJvcmVkTG9vcCIsImN1cnJlbnRLZXlmcmFtZSIsImxhc3RLZXlmcmFtZSIsInRpbWUiLCJkaXJlY3Rpb25CYWNrd2FyZHMiLCJzZXRGcmFtZVJhbmdlIiwic3RhcnRLZXlmcmFtZSIsImVuZEtleWZyYW1lIiwic2V0RGlyZWN0aW9uRm9yd2FyZCIsInNldERpcmVjdGlvbkJhY2t3YXJkIiwicGFyc2VBbmltYXRpb25zIiwibWF0Y2giLCJmaXJzdEFuaW1hdGlvbiIsInNldEFuaW1hdGlvbkxhYmVsIiwicGxheUFuaW1hdGlvbiIsInVwZGF0ZUFuaW1hdGlvbiIsImludGVycG9sYXRlVGFyZ2V0cyIsIm9iamVjdHMiLCJhZGRMZXZlbCIsImdldE9iamVjdEZvckRpc3RhbmNlIiwiUGFydGljbGUiLCJMZW5zRmxhcmUiLCJsZW5zRmxhcmVzIiwicG9zaXRpb25TY3JlZW4iLCJjdXN0b21VcGRhdGVDYWxsYmFjayIsInRleHR1cmUiLCJ1cGRhdGVMZW5zRmxhcmVzIiwid2FudGVkUm90YXRpb24iLCJvdmVycmlkZU1hdGVyaWFsIiwiYXV0b1VwZGF0ZSIsIkZvZyIsIkZvZ0V4cDIiLCJkZW5zaXR5IiwiU2hhZGVyQ2h1bmsiLCJjb21tb24iLCJhbHBoYXRlc3RfZnJhZ21lbnQiLCJsaWdodHNfbGFtYmVydF92ZXJ0ZXgiLCJtYXBfcGFydGljbGVfcGFyc19mcmFnbWVudCIsImRlZmF1bHRfdmVydGV4IiwibWFwX3BhcnNfZnJhZ21lbnQiLCJza2lubm9ybWFsX3ZlcnRleCIsImxvZ2RlcHRoYnVmX3BhcnNfdmVydGV4IiwibGlnaHRtYXBfcGFyc192ZXJ0ZXgiLCJsaWdodHNfcGhvbmdfZnJhZ21lbnQiLCJmb2dfcGFyc19mcmFnbWVudCIsIm1vcnBobm9ybWFsX3ZlcnRleCIsImVudm1hcF9wYXJzX2ZyYWdtZW50IiwibG9nZGVwdGhidWZfZnJhZ21lbnQiLCJub3JtYWxtYXBfcGFyc19mcmFnbWVudCIsImxpZ2h0c19waG9uZ19wYXJzX3ZlcnRleCIsImxpZ2h0bWFwX3BhcnNfZnJhZ21lbnQiLCJzaGFkb3dtYXBfdmVydGV4IiwibGlnaHRzX3Bob25nX3ZlcnRleCIsIm1hcF9mcmFnbWVudCIsImxpZ2h0bWFwX3ZlcnRleCIsIm1hcF9wYXJ0aWNsZV9mcmFnbWVudCIsImNvbG9yX3BhcnNfZnJhZ21lbnQiLCJjb2xvcl92ZXJ0ZXgiLCJza2lubmluZ192ZXJ0ZXgiLCJlbnZtYXBfcGFyc192ZXJ0ZXgiLCJsaW5lYXJfdG9fZ2FtbWFfZnJhZ21lbnQiLCJjb2xvcl9wYXJzX3ZlcnRleCIsImxpZ2h0c19sYW1iZXJ0X3BhcnNfdmVydGV4IiwibWFwX3BhcnNfdmVydGV4IiwiZW52bWFwX2ZyYWdtZW50Iiwic3BlY3VsYXJtYXBfcGFyc19mcmFnbWVudCIsImxvZ2RlcHRoYnVmX3ZlcnRleCIsIm1vcnBodGFyZ2V0X3BhcnNfdmVydGV4Iiwic3BlY3VsYXJtYXBfZnJhZ21lbnQiLCJmb2dfZnJhZ21lbnQiLCJidW1wbWFwX3BhcnNfZnJhZ21lbnQiLCJkZWZhdWx0bm9ybWFsX3ZlcnRleCIsImxpZ2h0c19waG9uZ19wYXJzX2ZyYWdtZW50Iiwic2tpbmJhc2VfdmVydGV4IiwibWFwX3ZlcnRleCIsImxpZ2h0bWFwX2ZyYWdtZW50Iiwic2hhZG93bWFwX3BhcnNfdmVydGV4IiwiY29sb3JfZnJhZ21lbnQiLCJtb3JwaHRhcmdldF92ZXJ0ZXgiLCJlbnZtYXBfdmVydGV4Iiwic2hhZG93bWFwX2ZyYWdtZW50Iiwid29ybGRwb3NfdmVydGV4Iiwic2hhZG93bWFwX3BhcnNfZnJhZ21lbnQiLCJza2lubmluZ19wYXJzX3ZlcnRleCIsImxvZ2RlcHRoYnVmX3BhcnNfZnJhZ21lbnQiLCJhbHBoYW1hcF9mcmFnbWVudCIsImFscGhhbWFwX3BhcnNfZnJhZ21lbnQiLCJVbmlmb3Jtc0xpYiIsImRpZmZ1c2UiLCJvZmZzZXRSZXBlYXQiLCJmbGlwRW52TWFwIiwiYnVtcCIsIm5vcm1hbG1hcCIsImZvZ0RlbnNpdHkiLCJmb2dOZWFyIiwiZm9nRmFyIiwiZm9nQ29sb3IiLCJhbWJpZW50TGlnaHRDb2xvciIsImRpcmVjdGlvbmFsTGlnaHREaXJlY3Rpb24iLCJkaXJlY3Rpb25hbExpZ2h0Q29sb3IiLCJoZW1pc3BoZXJlTGlnaHREaXJlY3Rpb24iLCJoZW1pc3BoZXJlTGlnaHRTa3lDb2xvciIsImhlbWlzcGhlcmVMaWdodEdyb3VuZENvbG9yIiwicG9pbnRMaWdodENvbG9yIiwicG9pbnRMaWdodFBvc2l0aW9uIiwicG9pbnRMaWdodERpc3RhbmNlIiwicG9pbnRMaWdodERlY2F5Iiwic3BvdExpZ2h0Q29sb3IiLCJzcG90TGlnaHRQb3NpdGlvbiIsInNwb3RMaWdodERpcmVjdGlvbiIsInNwb3RMaWdodERpc3RhbmNlIiwic3BvdExpZ2h0QW5nbGVDb3MiLCJzcG90TGlnaHRFeHBvbmVudCIsInNwb3RMaWdodERlY2F5IiwicGFydGljbGUiLCJwc0NvbG9yIiwic2hhZG93bWFwIiwiU2hhZGVyTGliIiwiYmFzaWMiLCJsYW1iZXJ0IiwicGhvbmciLCJwYXJ0aWNsZV9iYXNpYyIsImRhc2hlZCIsInRvdGFsU2l6ZSIsIm1OZWFyIiwibUZhciIsImN1YmUiLCJ0Q3ViZSIsInRGbGlwIiwiZXF1aXJlY3QiLCJ0RXF1aXJlY3QiLCJkZXB0aFJHQkEiLCJXZWJHTFJlbmRlcmVyIiwiX193ZWJnbEN1c3RvbUF0dHJpYnV0ZXNMaXN0IiwiX193ZWJnbEluaXRpYWxpemVkIiwiY3JlYXRlVW5pcXVlQnVmZmVycyIsImJ1ZmZlciIsIm0iLCJjcmVhdGVCdWZmZXIiLCJiZWxvbmdzVG9BdHRyaWJ1dGUiLCJiaW5kQnVmZmVyIiwiQVJSQVlfQlVGRkVSIiwiVyIsImVuYWJsZUF0dHJpYnV0ZSIsInZlcnRleEF0dHJpYlBvaW50ZXIiLCJGTE9BVCIsInZlcnRleEF0dHJpYjJmdiIsInZlcnRleEF0dHJpYjNmdiIsImRpc2FibGVVbnVzZWRBdHRyaWJ1dGVzIiwiaWQiLCJfX3dlYmdsSW5pdCIsIl9tb2RlbFZpZXdNYXRyaXgiLCJfbm9ybWFsTWF0cml4Iiwid2IiLCJqYiIsIkIiLCJpbmZvIiwibWVtb3J5IiwiX193ZWJnbFZlcnRleEJ1ZmZlciIsIl9fd2ViZ2xDb2xvckJ1ZmZlciIsIl9fd2ViZ2xMaW5lRGlzdGFuY2VCdWZmZXIiLCJfX3ZlcnRleEFycmF5IiwiX19jb2xvckFycmF5IiwiX19saW5lRGlzdGFuY2VBcnJheSIsIl9fd2ViZ2xMaW5lQ291bnQiLCJfX3dlYmdsUGFydGljbGVDb3VudCIsIl9fd2ViZ2xBY3RpdmUiLCJVYSIsIkltbWVkaWF0ZVJlbmRlck9iamVjdCIsImltbWVkaWF0ZVJlbmRlckNhbGxiYWNrIiwib3BhcXVlIiwiWGEiLCJZYSIsImNiIiwiUWEiLCJLYSIsInNvcnRPYmplY3RzIiwid2EiLCJkYiIsInNldE1hdGVyaWFsRmFjZXMiLCJyZW5kZXJCdWZmZXJEaXJlY3QiLCJyZW5kZXJCdWZmZXIiLCJyZW5kZXJJbW1lZGlhdGVPYmplY3QiLCJkYSIsImhhc2giLCJjb3VudGVyIiwiUWIiLCJmYWNlczMiLCJudW1Nb3JwaFRhcmdldHMiLCJudW1Nb3JwaE5vcm1hbHMiLCJfX3dlYmdsTm9ybWFsQnVmZmVyIiwiX193ZWJnbFRhbmdlbnRCdWZmZXIiLCJfX3dlYmdsVVZCdWZmZXIiLCJfX3dlYmdsVVYyQnVmZmVyIiwiX193ZWJnbFNraW5JbmRpY2VzQnVmZmVyIiwiX193ZWJnbFNraW5XZWlnaHRzQnVmZmVyIiwiX193ZWJnbEZhY2VCdWZmZXIiLCJfX3dlYmdsTGluZUJ1ZmZlciIsIl9fd2ViZ2xNb3JwaFRhcmdldHNCdWZmZXJzIiwiX193ZWJnbE1vcnBoTm9ybWFsc0J1ZmZlcnMiLCJfX25vcm1hbEFycmF5IiwiX191dkFycmF5IiwiX191djJBcnJheSIsIl9fdGFuZ2VudEFycmF5IiwiX19za2luSW5kZXhBcnJheSIsIl9fc2tpbldlaWdodEFycmF5IiwiVWludDMyQXJyYXkiLCJfX3R5cGVBcnJheSIsIl9fZmFjZUFycmF5IiwiX19saW5lQXJyYXkiLCJfX21vcnBoVGFyZ2V0c0FycmF5cyIsIl9fbW9ycGhOb3JtYWxzQXJyYXlzIiwiX193ZWJnbEZhY2VDb3VudCIsIl9fb3JpZ2luYWwiLCJfX2luaXR0ZWRBcnJheXMiLCJtb3JwaFRhcmdldHNOZWVkVXBkYXRlIiwiRUxFTUVOVF9BUlJBWV9CVUZGRVIiLCJidWZmZXJEYXRhIiwiRFlOQU1JQ19EUkFXIiwiU1RBVElDX0RSQVciLCJidWZmZXJTdWJEYXRhIiwiQllURVNfUEVSX0VMRU1FTlQiLCJzdWJhcnJheSIsIlBhIiwia2EiLCJRIiwiaWEiLCJvYiIsIlkiLCJ1YiIsInBhIiwiYWIiLCJDYSIsInRhIiwibmEiLCJMYSIsIk1hIiwia2IiLCJ5YiIsInpiIiwiUmEiLCJBYSIsImViIiwiSGEiLCJsYSIsInJhIiwiSyIsInphIiwiU2EiLCJBYiIsImxiIiwiTmEiLCJzYSIsIkRhIiwiRWEiLCJGYSIsIkdiIiwiQmIiLCJtYiIsIkMiLCJWYSIsIlRhIiwiZWEiLCJmYiIsInZiIiwiTWIiLCJPYiIsImliIiwic2IiLCJDYiIsIiQiLCJ4YSIsIkhiIiwiT2EiLCIkYSIsIkdhIiwibmIiLCJiYiIsImJvdW5kVG8iLCJUIiwiUyIsImFhIiwiWiIsIkJhIiwiWCIsIkViIiwiSmIiLCJ1YSIsIktiIiwiSWEiLCJmYSIsIkRiIiwiUmIiLCJJYiIsImdiIiwieWEiLCJwYiIsInFiIiwiV2EiLCJ0YiIsImhiIiwiJGIiLCJGYiIsIlNiIiwiVGIiLCJVYiIsImFjIiwibWEiLCJiYyIsImVjIiwidmEiLCJMYiIsIkphIiwiZ2EiLCJOYiIsIlZiIiwiUGIiLCJyYiIsImNjIiwiZGMiLCJnYyIsInNldEJsZW5kaW5nIiwic2V0RGVwdGhUZXN0Iiwic2V0RGVwdGhXcml0ZSIsInNldENvbG9yV3JpdGUiLCJzZXRQb2x5Z29uT2Zmc2V0IiwicHJvZ3JhbSIsImhjIiwiaWMiLCJwYyIsIl9fd2ViZ2xTaGFkZXIiLCJNQVhfVkVSVEVYX1VOSUZPUk1fVkVDVE9SUyIsInN1cHBvcnRzVmVydGV4VGV4dHVyZXMiLCJlbnZNYXBNb2RlIiwidXNlRm9nIiwiZm9nRXhwIiwiZmxhdFNoYWRpbmciLCJsb2dhcml0aG1pY0RlcHRoQnVmZmVyIiwibWF4Qm9uZXMiLCJtYXhNb3JwaFRhcmdldHMiLCJtYXhNb3JwaE5vcm1hbHMiLCJtYXhEaXJMaWdodHMiLCJtYXhQb2ludExpZ2h0cyIsIm1heFNwb3RMaWdodHMiLCJtYXhIZW1pTGlnaHRzIiwibWF4U2hhZG93cyIsInNoYWRvd01hcEVuYWJsZWQiLCJzaGFkb3dNYXBUeXBlIiwic2hhZG93TWFwRGVidWciLCJzaGFkb3dNYXBDYXNjYWRlIiwiY29kZSIsInVzZWRUaW1lcyIsIldlYkdMUHJvZ3JhbSIsInByb2dyYW1zIiwibnVtU3VwcG9ydGVkTW9ycGhUYXJnZXRzIiwibnVtU3VwcG9ydGVkTW9ycGhOb3JtYWxzIiwidW5pZm9ybXNMaXN0IiwiX193ZWJnbE1vcnBoVGFyZ2V0SW5mbHVlbmNlcyIsInVzZVByb2dyYW0iLCJ1bmlmb3JtTWF0cml4NGZ2IiwidW5pZm9ybTFmIiwibG9nRGVwdGhCdWZGQyIsImNhbWVyYVBvc2l0aW9uIiwidW5pZm9ybTNmIiwidmlld01hdHJpeCIsInVuaWZvcm0xaSIsInNldFRleHR1cmUiLCJib25lR2xvYmFsTWF0cmljZXMiLCJaYSIsInhiIiwiamMiLCJkaXJlY3Rpb25hbCIsInBvc2l0aW9ucyIsImRpc3RhbmNlcyIsImRlY2F5cyIsInNwb3QiLCJkaXJlY3Rpb25zIiwiYW5nbGVzQ29zIiwiZXhwb25lbnRzIiwiaGVtaSIsInNreUNvbG9ycyIsImdyb3VuZENvbG9ycyIsImFtYmllbnQiLCJXYiIsIlhiIiwiX3NoYWRvd1Bhc3MiLCJmYyIsInVuaWZvcm0yZiIsInVuaWZvcm00ZiIsInVuaWZvcm0xaXYiLCJ1bmlmb3JtM2l2IiwidW5pZm9ybTFmdiIsInVuaWZvcm0yZnYiLCJ1bmlmb3JtM2Z2IiwidW5pZm9ybTRmdiIsInVuaWZvcm1NYXRyaXgzZnYiLCJfYXJyYXkiLCJfX3dlYmdsVGV4dHVyZUN1YmUiLCJjcmVhdGVUZXh0dXJlIiwiYWN0aXZlVGV4dHVyZSIsIlRFWFRVUkUwIiwiYmluZFRleHR1cmUiLCJURVhUVVJFX0NVQkVfTUFQIiwicGl4ZWxTdG9yZWkiLCJVTlBBQ0tfRkxJUF9ZX1dFQkdMIiwiYXV0b1NjYWxlQ3ViZW1hcHMiLCJxYyIsIlliIiwiWmIiLCJrYyIsImNvbXByZXNzZWRUZXhJbWFnZTJEIiwiVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YIiwidGV4SW1hZ2UyRCIsImdlbmVyYXRlTWlwbWFwIiwiX193ZWJnbFRleHR1cmUiLCJtb2RlbFZpZXdNYXRyaXgiLCJub3JtYWxNYXRyaXgiLCJtb2RlbE1hdHJpeCIsInRleFBhcmFtZXRlcmkiLCJURVhUVVJFX1dSQVBfUyIsIlRFWFRVUkVfV1JBUF9UIiwiVEVYVFVSRV9NQUdfRklMVEVSIiwiVEVYVFVSRV9NSU5fRklMVEVSIiwiQ0xBTVBfVE9fRURHRSIsIl9fY3VycmVudEFuaXNvdHJvcHkiLCJ0ZXhQYXJhbWV0ZXJmIiwiVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQiLCJnZXRNYXhBbmlzb3Ryb3B5IiwiYmluZFJlbmRlcmJ1ZmZlciIsIlJFTkRFUkJVRkZFUiIsImRlcHRoQnVmZmVyIiwic3RlbmNpbEJ1ZmZlciIsInJlbmRlcmJ1ZmZlclN0b3JhZ2UiLCJERVBUSF9DT01QT05FTlQxNiIsImZyYW1lYnVmZmVyUmVuZGVyYnVmZmVyIiwiRlJBTUVCVUZGRVIiLCJERVBUSF9BVFRBQ0hNRU5UIiwiREVQVEhfU1RFTkNJTCIsIkRFUFRIX1NURU5DSUxfQVRUQUNITUVOVCIsIlJHQkE0IiwiVEVYVFVSRV8yRCIsIk5FQVJFU1QiLCJMSU5FQVIiLCJSRVBFQVQiLCJNSVJST1JFRF9SRVBFQVQiLCJORUFSRVNUX01JUE1BUF9ORUFSRVNUIiwiTkVBUkVTVF9NSVBNQVBfTElORUFSIiwiTElORUFSX01JUE1BUF9ORUFSRVNUIiwiTElORUFSX01JUE1BUF9MSU5FQVIiLCJVTlNJR05FRF9CWVRFIiwiVU5TSUdORURfU0hPUlRfNF80XzRfNCIsIlVOU0lHTkVEX1NIT1JUXzVfNV81XzEiLCJVTlNJR05FRF9TSE9SVF81XzZfNSIsIkJZVEUiLCJTSE9SVCIsIlVOU0lHTkVEX1NIT1JUIiwiSU5UIiwiVU5TSUdORURfSU5UIiwiSEFMRl9GTE9BVF9PRVMiLCJBTFBIQSIsIlJHQiIsIlJHQkEiLCJMVU1JTkFOQ0UiLCJMVU1JTkFOQ0VfQUxQSEEiLCJGVU5DX0FERCIsIkZVTkNfU1VCVFJBQ1QiLCJGVU5DX1JFVkVSU0VfU1VCVFJBQ1QiLCJaRVJPIiwiT05FIiwiU1JDX0NPTE9SIiwiT05FX01JTlVTX1NSQ19DT0xPUiIsIlNSQ19BTFBIQSIsIk9ORV9NSU5VU19TUkNfQUxQSEEiLCJEU1RfQUxQSEEiLCJPTkVfTUlOVVNfRFNUX0FMUEhBIiwiRFNUX0NPTE9SIiwiT05FX01JTlVTX0RTVF9DT0xPUiIsIlNSQ19BTFBIQV9TQVRVUkFURSIsIkNPTVBSRVNTRURfUkdCX1MzVENfRFhUMV9FWFQiLCJDT01QUkVTU0VEX1JHQkFfUzNUQ19EWFQxX0VYVCIsIkNPTVBSRVNTRURfUkdCQV9TM1RDX0RYVDNfRVhUIiwiQ09NUFJFU1NFRF9SR0JBX1MzVENfRFhUNV9FWFQiLCJDT01QUkVTU0VEX1JHQl9QVlJUQ180QlBQVjFfSU1HIiwiQ09NUFJFU1NFRF9SR0JfUFZSVENfMkJQUFYxX0lNRyIsIkNPTVBSRVNTRURfUkdCQV9QVlJUQ180QlBQVjFfSU1HIiwiQ09NUFJFU1NFRF9SR0JBX1BWUlRDXzJCUFBWMV9JTUciLCJNSU5fRVhUIiwiTUFYX0VYVCIsImNhbnZhcyIsImNvbnRleHQiLCJhbHBoYSIsInN0ZW5jaWwiLCJhbnRpYWxpYXMiLCJwcmVtdWx0aXBsaWVkQWxwaGEiLCJwcmVzZXJ2ZURyYXdpbmdCdWZmZXIiLCJhdXRvQ2xlYXJTdGVuY2lsIiwiYXV0b0NsZWFyRGVwdGgiLCJhdXRvQ2xlYXJDb2xvciIsImF1dG9DbGVhciIsImdhbW1hRmFjdG9yIiwiZ2FtbWFPdXRwdXQiLCJnYW1tYUlucHV0Iiwic2hhZG93TWFwQ3VsbEZhY2UiLCJjYWxscyIsInByZXZlbnREZWZhdWx0IiwibGMiLCJyYyIsIldlYkdMU3RhdGUiLCJnZXRTaGFkZXJQcmVjaXNpb25Gb3JtYXQiLCJyYW5nZU1pbiIsInJhbmdlTWF4IiwiV2ViR0xFeHRlbnNpb25zIiwiY2xlYXJDb2xvciIsImNsZWFyRGVwdGgiLCJjbGVhclN0ZW5jaWwiLCJlbmFibGUiLCJERVBUSF9URVNUIiwiZGVwdGhGdW5jIiwiTEVRVUFMIiwiZnJvbnRGYWNlIiwiQ0NXIiwiY3VsbEZhY2UiLCJCQUNLIiwiQ1VMTF9GQUNFIiwiQkxFTkQiLCJibGVuZEZ1bmMiLCJ2aWV3cG9ydCIsInJlc2V0Iiwic3RhdGUiLCJNQVhfVEVYVFVSRV9JTUFHRV9VTklUUyIsInNjIiwiTUFYX1ZFUlRFWF9URVhUVVJFX0lNQUdFX1VOSVRTIiwidGMiLCJNQVhfVEVYVFVSRV9TSVpFIiwiTUFYX0NVQkVfTUFQX1RFWFRVUkVfU0laRSIsInVjIiwiVkVSVEVYX1NIQURFUiIsIkhJR0hfRkxPQVQiLCJ2YyIsIk1FRElVTV9GTE9BVCIsIndjIiwiRlJBR01FTlRfU0hBREVSIiwieGMiLCJDT01QUkVTU0VEX1RFWFRVUkVfRk9STUFUUyIsInljIiwibWMiLCJ6YyIsIlNoYWRvd01hcFBsdWdpbiIsIkFjIiwiU3ByaXRlUGx1Z2luIiwiQmMiLCJMZW5zRmxhcmVQbHVnaW4iLCJmb3JjZUNvbnRleHRMb3NzIiwibG9zZUNvbnRleHQiLCJzdXBwb3J0c0Zsb2F0VGV4dHVyZXMiLCJzdXBwb3J0c0hhbGZGbG9hdFRleHR1cmVzIiwic3VwcG9ydHNTdGFuZGFyZERlcml2YXRpdmVzIiwic3VwcG9ydHNDb21wcmVzc2VkVGV4dHVyZVMzVEMiLCJzdXBwb3J0c0NvbXByZXNzZWRUZXh0dXJlUFZSVEMiLCJzdXBwb3J0c0JsZW5kTWluTWF4IiwiTUFYX1RFWFRVUkVfTUFYX0FOSVNPVFJPUFlfRVhUIiwiZ2V0UHJlY2lzaW9uIiwiZ2V0UGl4ZWxSYXRpbyIsInNldFBpeGVsUmF0aW8iLCJzZXRWaWV3cG9ydCIsInNldFNjaXNzb3IiLCJzY2lzc29yIiwiZW5hYmxlU2Npc3NvclRlc3QiLCJTQ0lTU09SX1RFU1QiLCJkaXNhYmxlIiwiZ2V0Q2xlYXJDb2xvciIsImdldENsZWFyQWxwaGEiLCJzZXRDbGVhckFscGhhIiwiQ09MT1JfQlVGRkVSX0JJVCIsIkRFUFRIX0JVRkZFUl9CSVQiLCJTVEVOQ0lMX0JVRkZFUl9CSVQiLCJjbGVhclRhcmdldCIsInNldFJlbmRlclRhcmdldCIsInJlc2V0R0xTdGF0ZSIsImRlbGV0ZUJ1ZmZlciIsIm5jIiwiZGVsZXRlVGV4dHVyZSIsIm9jIiwiZGVsZXRlRnJhbWVidWZmZXIiLCJfX3dlYmdsRnJhbWVidWZmZXIiLCJkZWxldGVSZW5kZXJidWZmZXIiLCJfX3dlYmdsUmVuZGVyYnVmZmVyIiwiZGVsZXRlUHJvZ3JhbSIsInJlbmRlckJ1ZmZlckltbWVkaWF0ZSIsImluaXRBdHRyaWJ1dGVzIiwiaGFzUG9zaXRpb25zIiwiaGFzTm9ybWFscyIsImhhc1V2cyIsIl9fd2ViZ2xVdkJ1ZmZlciIsImhhc0NvbG9ycyIsInBvc2l0aW9uQXJyYXkiLCJub3JtYWxBcnJheSIsInV2QXJyYXkiLCJjb2xvckFycmF5IiwiZHJhd0FycmF5cyIsIlRSSUFOR0xFUyIsIkxJTkVTIiwiZHJhd0VsZW1lbnRzIiwiUE9JTlRTIiwiTElORV9TVFJJUCIsInNldExpbmVXaWR0aCIsInNraW5JbmRleCIsInNraW5XZWlnaHQiLCJsaW5lRGlzdGFuY2UiLCJzZXRGYWNlQ3VsbGluZyIsIkNXIiwiRlJPTlQiLCJGUk9OVF9BTkRfQkFDSyIsInNldERvdWJsZVNpZGVkIiwic2V0RmxpcFNpZGVkIiwidXBsb2FkVGV4dHVyZSIsIlVOUEFDS19QUkVNVUxUSVBMWV9BTFBIQV9XRUJHTCIsIlVOUEFDS19BTElHTk1FTlQiLCJjcmVhdGVGcmFtZWJ1ZmZlciIsImNyZWF0ZVJlbmRlcmJ1ZmZlciIsImJpbmRGcmFtZWJ1ZmZlciIsImZyYW1lYnVmZmVyVGV4dHVyZTJEIiwiQ09MT1JfQVRUQUNITUVOVDAiLCJzaGFyZURlcHRoRnJvbSIsInJlYWRSZW5kZXJUYXJnZXRQaXhlbHMiLCJXZWJHTFJlbmRlclRhcmdldCIsImNoZWNrRnJhbWVidWZmZXJTdGF0dXMiLCJGUkFNRUJVRkZFUl9DT01QTEVURSIsInJlYWRQaXhlbHMiLCJpbml0TWF0ZXJpYWwiLCJhZGRQcmVQbHVnaW4iLCJhZGRQb3N0UGx1Z2luIiwidXBkYXRlU2hhZG93TWFwIiwiZ2V0RXh0ZW5zaW9uIiwiY3JlYXRlUHJvZ3JhbSIsIldlYkdMU2hhZGVyIiwiYXR0YWNoU2hhZGVyIiwiYmluZEF0dHJpYkxvY2F0aW9uIiwibGlua1Byb2dyYW0iLCJnZXRQcm9ncmFtSW5mb0xvZyIsImdldFByb2dyYW1QYXJhbWV0ZXIiLCJMSU5LX1NUQVRVUyIsImdldEVycm9yIiwiVkFMSURBVEVfU1RBVFVTIiwiZGVsZXRlU2hhZGVyIiwiZ2V0VW5pZm9ybUxvY2F0aW9uIiwiZ2V0QXR0cmliTG9jYXRpb24iLCJjcmVhdGVTaGFkZXIiLCJzaGFkZXJTb3VyY2UiLCJjb21waWxlU2hhZGVyIiwiZ2V0U2hhZGVyUGFyYW1ldGVyIiwiQ09NUElMRV9TVEFUVVMiLCJnZXRTaGFkZXJJbmZvTG9nIiwiVWludDhBcnJheSIsImVuYWJsZVZlcnRleEF0dHJpYkFycmF5IiwiZGlzYWJsZVZlcnRleEF0dHJpYkFycmF5IiwiYmxlbmRFcXVhdGlvblNlcGFyYXRlIiwiYmxlbmRGdW5jU2VwYXJhdGUiLCJkZXB0aE1hc2siLCJjb2xvck1hc2siLCJsaW5lV2lkdGgiLCJQT0xZR09OX09GRlNFVF9GSUxMIiwiVEVYVFVSRTEiLCJjb3B5VGV4SW1hZ2UyRCIsImlzVmlydHVhbCIsInBvaW50c1dvcmxkIiwicG9pbnRzRnJ1c3R1bSIsIm9yaWdpbmFsQ2FtZXJhIiwiR3lyb3Njb3BlIiwiY2FtZXJhSGVscGVyIiwiQ2FtZXJhSGVscGVyIiwiY3VzdG9tRGVwdGhNYXRlcmlhbCIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwiR2VvbWV0cnlVdGlscyIsIkltYWdlVXRpbHMiLCJsb2FkVGV4dHVyZSIsImxvYWRUZXh0dXJlQ3ViZSIsImxvYWRDb21wcmVzc2VkVGV4dHVyZSIsImxvYWRDb21wcmVzc2VkVGV4dHVyZUN1YmUiLCJnZXROb3JtYWxNYXAiLCJnZXRJbWFnZURhdGEiLCJjcmVhdGVJbWFnZURhdGEiLCJwdXRJbWFnZURhdGEiLCJnZW5lcmF0ZURhdGFUZXh0dXJlIiwiU2NlbmVVdGlscyIsImNyZWF0ZU11bHRpTWF0ZXJpYWxPYmplY3QiLCJkZXRhY2giLCJhdHRhY2giLCJGb250VXRpbHMiLCJ3ZWlnaHQiLCJkaXZpc2lvbnMiLCJnZXRGYWNlIiwibG9hZEZhY2UiLCJmYW1pbHlOYW1lIiwiY3NzRm9udFdlaWdodCIsImNzc0ZvbnRTdHlsZSIsImRyYXdUZXh0IiwicmVzb2x1dGlvbiIsIlN0cmluZyIsIlBhdGgiLCJleHRyYWN0R2x5cGhQb2ludHMiLCJwYXRoIiwicGF0aHMiLCJnbHlwaHMiLCJvIiwiX2NhY2hlZE91dGxpbmUiLCJtb3ZlVG8iLCJsaW5lVG8iLCJxdWFkcmF0aWNDdXJ2ZVRvIiwiU2hhcGUiLCJVdGlscyIsImIyIiwiYmV6aWVyQ3VydmVUbyIsImIzIiwiZ2VuZXJhdGVTaGFwZXMiLCJjdXJ2ZVNlZ21lbnRzIiwiZm9udCIsInRvU2hhcGVzIiwiVHJpYW5ndWxhdGUiLCJfdHlwZWZhY2VfanMiLCJ0eXBlZmFjZV9qcyIsIkF1ZGlvIiwic291cmNlIiwiY3JlYXRlQnVmZmVyU291cmNlIiwib25lbmRlZCIsIm9uRW5kZWQiLCJnYWluIiwiY3JlYXRlR2FpbiIsImNvbm5lY3QiLCJkZXN0aW5hdGlvbiIsInBhbm5lciIsImNyZWF0ZVBhbm5lciIsImF1dG9wbGF5IiwiaXNQbGF5aW5nIiwib25sb2FkIiwiZGVjb2RlQXVkaW9EYXRhIiwicGxheSIsImxvb3AiLCJwYXVzZSIsImN1cnJlbnRUaW1lIiwic2V0TG9vcCIsInNldFJlZkRpc3RhbmNlIiwicmVmRGlzdGFuY2UiLCJzZXRSb2xsb2ZmRmFjdG9yIiwicm9sbG9mZkZhY3RvciIsInNldFZvbHVtZSIsIkF1ZGlvTGlzdGVuZXIiLCJ3aW5kb3ciLCJBdWRpb0NvbnRleHQiLCJ3ZWJraXRBdWRpb0NvbnRleHQiLCJsaXN0ZW5lciIsInNldE9yaWVudGF0aW9uIiwic2V0VmVsb2NpdHkiLCJDdXJ2ZSIsImdldFBvaW50QXQiLCJnZXRVdG9UbWFwcGluZyIsImdldFBvaW50cyIsImdldFNwYWNlZFBvaW50cyIsImdldExlbmd0aHMiLCJfX2FyY0xlbmd0aERpdmlzaW9ucyIsImNhY2hlQXJjTGVuZ3RocyIsInVwZGF0ZUFyY0xlbmd0aHMiLCJnZXRUYW5nZW50IiwiZ2V0VGFuZ2VudEF0IiwidGFuZ2VudFF1YWRyYXRpY0JlemllciIsInRhbmdlbnRDdWJpY0JlemllciIsInRhbmdlbnRTcGxpbmUiLCJpbnRlcnBvbGF0ZSIsIkN1cnZlUGF0aCIsImN1cnZlcyIsImJlbmRzIiwiYXV0b0Nsb3NlIiwiY2hlY2tDb25uZWN0aW9uIiwiY2xvc2VQYXRoIiwiTGluZUN1cnZlIiwiZ2V0Q3VydmVMZW5ndGhzIiwiY2FjaGVMZW5ndGhzIiwiTkVHQVRJVkVfSU5GSU5JVFkiLCJQT1NJVElWRV9JTkZJTklUWSIsIm1pblgiLCJtaW5ZIiwibWF4WCIsIm1heFkiLCJtYXhaIiwibWluWiIsImNyZWF0ZVBvaW50c0dlb21ldHJ5IiwiY3JlYXRlR2VvbWV0cnkiLCJjcmVhdGVTcGFjZWRQb2ludHNHZW9tZXRyeSIsImFkZFdyYXBQYXRoIiwiZ2V0VHJhbnNmb3JtZWRQb2ludHMiLCJnZXRXcmFwUG9pbnRzIiwiZ2V0VHJhbnNmb3JtZWRTcGFjZWRQb2ludHMiLCJhY3Rpb25zIiwiZnJvbVBvaW50cyIsIlBhdGhBY3Rpb25zIiwiTU9WRV9UTyIsIkxJTkVfVE8iLCJRVUFEUkFUSUNfQ1VSVkVfVE8iLCJCRVpJRVJfQ1VSVkVfVE8iLCJDU1BMSU5FX1RIUlUiLCJBUkMiLCJFTExJUFNFIiwiYWN0aW9uIiwiYXJncyIsIlF1YWRyYXRpY0JlemllckN1cnZlIiwiQ3ViaWNCZXppZXJDdXJ2ZSIsInNwbGluZVRocnUiLCJTcGxpbmVDdXJ2ZSIsImFic2FyYyIsImFic2VsbGlwc2UiLCJlbGxpcHNlIiwiRWxsaXBzZUN1cnZlIiwidXNlU3BhY2VkUG9pbnRzIiwiY29uY2F0IiwiaXNDbG9ja1dpc2UiLCJmcm9tcyIsInRvcyIsImhvbGUiLCJob2xlcyIsImV4dHJ1ZGUiLCJFeHRydWRlR2VvbWV0cnkiLCJtYWtlR2VvbWV0cnkiLCJTaGFwZUdlb21ldHJ5IiwiZ2V0UG9pbnRzSG9sZXMiLCJnZXRTcGFjZWRQb2ludHNIb2xlcyIsImV4dHJhY3RBbGxQb2ludHMiLCJzaGFwZSIsImV4dHJhY3RQb2ludHMiLCJleHRyYWN0QWxsU3BhY2VkUG9pbnRzIiwidHJpYW5ndWxhdGVTaGFwZSIsImIycDAiLCJiMnAxIiwiYjJwMiIsImIzcDAiLCJiM3AxIiwiYjNwMiIsImIzcDMiLCJ2MSIsInYyIiwidjAiLCJ2MyIsImFYIiwiYVkiLCJ4UmFkaXVzIiwieVJhZGl1cyIsImFTdGFydEFuZ2xlIiwiYUVuZEFuZ2xlIiwiYUNsb2Nrd2lzZSIsIkFyY0N1cnZlIiwiTGluZUN1cnZlMyIsIlF1YWRyYXRpY0JlemllckN1cnZlMyIsIkN1YmljQmV6aWVyQ3VydmUzIiwiU3BsaW5lQ3VydmUzIiwiQ2xvc2VkU3BsaW5lQ3VydmUzIiwiQW5pbWF0aW9uSGFuZGxlciIsIkNBVE1VTExST00iLCJDQVRNVUxMUk9NX0ZPUldBUkQiLCJpbml0IiwiaW5pdGlhbGl6ZWQiLCJoaWVyYXJjaHkiLCJyb3QiLCJ1c2VkTW9ycGhUYXJnZXRzIiwibW9ycGhUYXJnZXRzSW5mbHVlbmNlcyIsInJlc2V0QmxlbmRXZWlnaHRzIiwiQW5pbWF0aW9uIiwicm9vdCIsInRpbWVTY2FsZSIsImludGVycG9sYXRpb25UeXBlIiwia2V5VHlwZXMiLCJhbmltYXRpb25DYWNoZSIsInBvc2l0aW9uV2VpZ2h0IiwicXVhdGVybmlvbldlaWdodCIsInNjYWxlV2VpZ2h0IiwicHJldktleSIsIm5leHRLZXkiLCJvcmlnaW5hbE1hdHJpeCIsImdldE5leHRLZXlXaXRoIiwiZ2V0UHJldktleVdpdGgiLCJLZXlGcmFtZUFuaW1hdGlvbiIsIm5vZGUiLCJpc1BhdXNlZCIsInNpZHMiLCJlbmRUaW1lIiwiaGFzVGFyZ2V0IiwiTW9ycGhBbmltYXRpb24iLCJtZXNoIiwiZnJhbWVzIiwiY3VycmVudEZyYW1lIiwibGFzdEZyYW1lIiwiQ3ViZUdlb21ldHJ5IiwiYWRkU2hhcGVMaXN0IiwiYWRkU2hhcGUiLCJnZW5lcmF0ZVNpZGVXYWxsVVYiLCJnZW5lcmF0ZVRvcFVWIiwiYW1vdW50IiwiYmV2ZWxUaGlja25lc3MiLCJiZXZlbFNpemUiLCJiZXZlbFNlZ21lbnRzIiwiYmV2ZWxFbmFibGVkIiwic3RlcHMiLCJleHRydWRlUGF0aCIsImV4dHJ1ZGVNYXRlcmlhbCIsIlVWR2VuZXJhdG9yIiwiV29ybGRVVkdlbmVyYXRvciIsIlR1YmVHZW9tZXRyeSIsIkZyZW5ldEZyYW1lcyIsInJldmVyc2UiLCJiaW5vcm1hbHMiLCJMYXRoZUdlb21ldHJ5IiwiUGxhbmVHZW9tZXRyeSIsIlBsYW5lQnVmZmVyR2VvbWV0cnkiLCJSaW5nR2VvbWV0cnkiLCJpbm5lclJhZGl1cyIsIm91dGVyUmFkaXVzIiwidGhldGFTZWdtZW50cyIsInBoaVNlZ21lbnRzIiwiVGV4dEdlb21ldHJ5IiwiY2xvc2VkIiwiTm9UYXBlciIsInRhbmdlbnRzIiwiU2ludXNvaWRhbFRhcGVyIiwiTUFYX1ZBTFVFIiwiUG9seWhlZHJvbkdlb21ldHJ5IiwiaW5kaWNlcyIsIkRvZGVjYWhlZHJvbkdlb21ldHJ5IiwiT2N0YWhlZHJvbkdlb21ldHJ5IiwiVGV0cmFoZWRyb25HZW9tZXRyeSIsIlBhcmFtZXRyaWNHZW9tZXRyeSIsImZ1bmMiLCJzbGljZXMiLCJzdGFja3MiLCJBeGlzSGVscGVyIiwiQXJyb3dIZWxwZXIiLCJsaW5lIiwiY29uZSIsInNldERpcmVjdGlvbiIsInNldENvbG9yIiwiQm94SGVscGVyIiwiQm91bmRpbmdCb3hIZWxwZXIiLCJib3giLCJjYW1lcmEiLCJwb2ludE1hcCIsIkRpcmVjdGlvbmFsTGlnaHRIZWxwZXIiLCJsaWdodCIsImxpZ2h0UGxhbmUiLCJ0YXJnZXRMaW5lIiwiRWRnZXNIZWxwZXIiLCJ2ZXJ0MSIsInZlcnQyIiwiZmFjZTEiLCJmYWNlMiIsIkZhY2VOb3JtYWxzSGVscGVyIiwiR3JpZEhlbHBlciIsImNvbG9yMSIsImNvbG9yMiIsInNldENvbG9ycyIsIkhlbWlzcGhlcmVMaWdodEhlbHBlciIsImxpZ2h0U3BoZXJlIiwiUG9pbnRMaWdodEhlbHBlciIsIlNrZWxldG9uSGVscGVyIiwiZ2V0Qm9uZUxpc3QiLCJTcG90TGlnaHRIZWxwZXIiLCJWZXJ0ZXhOb3JtYWxzSGVscGVyIiwiVmVydGV4VGFuZ2VudHNIZWxwZXIiLCJXaXJlZnJhbWVIZWxwZXIiLCJNb3JwaEJsZW5kTWVzaCIsImFuaW1hdGlvbnNNYXAiLCJhbmltYXRpb25zTGlzdCIsImNyZWF0ZUFuaW1hdGlvbiIsInNldEFuaW1hdGlvbldlaWdodCIsInN0YXJ0RnJhbWUiLCJlbmRGcmFtZSIsImZwcyIsImFjdGl2ZSIsImF1dG9DcmVhdGVBbmltYXRpb25zIiwic2V0QW5pbWF0aW9uRGlyZWN0aW9uRm9yd2FyZCIsInNldEFuaW1hdGlvbkRpcmVjdGlvbkJhY2t3YXJkIiwic2V0QW5pbWF0aW9uRlBTIiwic2V0QW5pbWF0aW9uRHVyYXRpb24iLCJzZXRBbmltYXRpb25UaW1lIiwiZ2V0QW5pbWF0aW9uVGltZSIsImdldEFuaW1hdGlvbkR1cmF0aW9uIiwic3RvcEFuaW1hdGlvbiIsImNoYXJDb2RlQXQiLCJpIiwidW5kZWZpbmVkIiwiZmFsc2UiLCJudWxsIiwibnVtYmVyIiwic3RyaW5nIiwidHJ1ZSIsIl8iLCJ0dCIsIkZlIiwibWUiLCJUZSIsIl9fY2hhaW5fXyIsIl9fd3JhcHBlZF9fIiwiYmUiLCJudCIsInd0IiwiJGUiLCJjZSIsIkFlIiwibGFzdEluZGV4IiwiaW5wdXQiLCJTdCIsImtlIiwiVXQiLCJfX2JpbmREYXRhX18iLCJEZSIsImZ1bmNOYW1lcyIsImZ1bmNEZWNvbXAiLCJnZSIsIk10IiwiZXQiLCJydCIsInN0IiwidXQiLCJ5dCIsIm90Iiwib2UiLCJkdCIsIml0IiwiUGUiLCJoZSIsIlJlIiwiZnQiLCJsdCIsImNyZWF0ZUNhbGxiYWNrIiwiY3QiLCJpZSIsIndlIiwicHQiLCJCZSIsIld0IiwidnQiLCJwZSIsImh0IiwiZ3QiLCJXZSIsIm10IiwiYnQiLCJfdCIsImp0Iiwia3QiLCJ4dCIsIlh0IiwiQ3QiLCJJZSIsIk90IiwiTnQiLCJJdCIsIkV0IiwiUnQiLCJBdCIsIkR0IiwiJHQiLCJUdCIsIkZ0IiwiQnQiLCJTZSIsInp0IiwicXQiLCJQdCIsIkt0IiwiVmUiLCJMdCIsIlZ0IiwidmUiLCJVZSIsIl9lIiwibGVhZGluZyIsIm1heFdhaXQiLCJ0cmFpbGluZyIsIkd0IiwiY2hhaW4iLCJIdCIsIkp0IiwiUXQiLCJkZWZhdWx0cyIsInBpY2siLCJZdCIsIkJvb2xlYW4iLCJadCIsIm5lIiwiRnVuY3Rpb24iLCJ0ZSIsImVlIiwicmUiLCJ1ZSIsIlJlZ0V4cCIsIlR5cGVFcnJvciIsImFlIiwiZmUiLCJsZSIsInJlcGxhY2UiLCJzZSIsImNsZWFyVGltZW91dCIsInllIiwiZ2V0UHJvdG90eXBlT2YiLCJoYXNPd25Qcm9wZXJ0eSIsInNldFRpbWVvdXQiLCJkZSIsInVuc2hpZnQiLCJqZSIsInhlIiwiaXNBcnJheSIsIkNlIiwiaXNGaW5pdGUiLCJPZSIsIk5lIiwiRWUiLCJzdXBwb3J0IiwidGVtcGxhdGVTZXR0aW5ncyIsImVzY2FwZSIsImV2YWx1YXRlIiwidmFyaWFibGUiLCJpbXBvcnRzIiwiJiIsIjwiLCI+IiwiXCIiLCInIiwicWUiLCJ6ZSIsInZhbHVlT2YiLCJLZSIsIkxlIiwiTWUiLCJnZXRUaW1lIiwiR2UiLCJhZnRlciIsImFzc2lnbiIsImJpbmRBbGwiLCJiaW5kS2V5IiwiY29tcGFjdCIsImNvdW50QnkiLCJjdXJyeSIsImRlYm91bmNlIiwiZGVmZXIiLCJkZWxheSIsImRpZmZlcmVuY2UiLCJmaWx0ZXIiLCJmbGF0dGVuIiwiZm9yRWFjaCIsImZvckVhY2hSaWdodCIsImZvckluIiwiZm9ySW5SaWdodCIsImZvck93biIsImZvck93blJpZ2h0IiwiZnVuY3Rpb25zIiwiZ3JvdXBCeSIsImluZGV4QnkiLCJpbml0aWFsIiwiaW50ZXJzZWN0aW9uIiwiaW52ZXJ0IiwiaW52b2tlIiwibWFwVmFsdWVzIiwibWVtb2l6ZSIsImNhY2hlIiwib21pdCIsIm9uY2UiLCJwYWlycyIsInBhcnRpYWwiLCJwYXJ0aWFsUmlnaHQiLCJwbHVjayIsInByb3BlcnR5IiwicHVsbCIsInJhbmdlIiwicmVqZWN0IiwicmVzdCIsInNodWZmbGUiLCJzb3J0QnkiLCJ0YXAiLCJ0aHJvdHRsZSIsInRpbWVzIiwidHJhbnNmb3JtIiwidW5pcSIsInZhbHVlcyIsIndoZXJlIiwid2l0aG91dCIsInhvciIsInppcCIsInppcE9iamVjdCIsImNvbGxlY3QiLCJkcm9wIiwiZWFjaCIsImVhY2hSaWdodCIsImV4dGVuZCIsIm1ldGhvZHMiLCJzZWxlY3QiLCJ0YWlsIiwidW5pcXVlIiwidW56aXAiLCJjbG9uZURlZXAiLCJjb250YWlucyIsImV2ZXJ5IiwiZmluZCIsImZpbmRJbmRleCIsImZpbmRLZXkiLCJmaW5kTGFzdCIsImZpbmRMYXN0SW5kZXgiLCJmaW5kTGFzdEtleSIsImhhcyIsImlzQXJndW1lbnRzIiwiaXNCb29sZWFuIiwiaXNEYXRlIiwiaXNFbGVtZW50Iiwibm9kZVR5cGUiLCJpc0VtcHR5IiwiaXNFcXVhbCIsInBhcnNlRmxvYXQiLCJpc0Z1bmN0aW9uIiwiaXNOdWxsIiwiaXNOdW1iZXIiLCJpc09iamVjdCIsImlzUGxhaW5PYmplY3QiLCJpc1JlZ0V4cCIsImlzU3RyaW5nIiwiaXNVbmRlZmluZWQiLCJtaXhpbiIsIm5vQ29uZmxpY3QiLCJub29wIiwicmVkdWNlIiwicmVkdWNlUmlnaHQiLCJyZXN1bHQiLCJydW5JbkNvbnRleHQiLCJzb21lIiwic29ydGVkSW5kZXgiLCJ0ZW1wbGF0ZSIsImoiLCJ1bmVzY2FwZSIsInVuaXF1ZUlkIiwiYWxsIiwiYW55IiwiZGV0ZWN0IiwiZmluZFdoZXJlIiwiZm9sZGwiLCJmb2xkciIsImluY2x1ZGUiLCJpbmplY3QiLCJmaXJzdCIsImxhc3QiLCJzYW1wbGUiLCJ0YWtlIiwiaGVhZCIsIlZFUlNJT04iLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImJvb2xlYW4iLCJmdW5jdGlvbiIsIlxcIiwiXG4iLCJcciIsIlx0Iiwi4oCoIiwi4oCpIiwiZ2xvYmFsIiwiZGVmaW5lIiwiYW1kIiwia2V5dXAiLCJsZXR0ZXIiLCJjbGFzc0xpc3QiLCJmcmFnIiwibGV0dGVycyIsImJpdHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsInRleHRDb250ZW50IiwiYXBwZW5kQ2hpbGQiLCJGUkFHX1NIQURFUiIsIlZFUlRfU0hBREVSIiwiTm9pc2UiLCJiYXNlIiwiZmlsbGVyIiwiQlVGRkVSX1NJWkUiLCJzYW1wbGVSYXRlIiwiZ2V0Q2hhbm5lbERhdGEiLCJzdW0iLCJwcmV2aW91cyIsIkplbGx5U3RhdHMiLCJkZWx0YV9zdW0iLCJzbGlkaW5nIiwiZGVsdGFzIiwidXBkYXRlX3NsaWRpbmciLCJkZWZhdWx0X2F0IiwidGhyZWVfcGxhbmUiLCJ3X3NlZyIsImhfc2VnIiwib3JpZ2luYWwiLCJuZXh0IiwiY3R4IiwiaW50byIsImFyciIsImNsYW1wZWQiLCJmbW9kIiwibW9kIiwiSmVsbHlQaHlzaWNzIiwibW9tZW50dW0iLCJzdGF0cyIsInJldHVybl9jb21wb25lbnQiLCJzbGlkaW5nX2NvbXBvbmVudCIsIm1vbWVudHVtX2NvbXBvbmVudCIsIl93aGVyZSIsImFic19hbW91bnQiLCJhbW91bnRfc2lnbiIsInBvd2VyIiwiYWJzX2kiLCJtb2RpZmllciIsIldhdmVOb2lzZXMiLCJwaHlzaWNzIiwibm9pc2UiLCJtb21lbnR1bV9zdW0iLCJwbGF5YmFja1JhdGUiLCJHYW1lIiwiaHVkIiwiV0lEVEgiLCJIRUlHSFQiLCJzY2VuZSIsInJlbmRlcmVyIiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJtdXRhdG9yIiwiYXVkaW9fY29udGV4dCIsIndhdmVfbm9pc2VzIiwidGljayIsInVwZGF0ZV9hdWRpbyIsImtleWNvZGVfbWFwIiwia2V5Y29kZV9jaGFycyIsImtleWNvZGVfY2hhcnNfdXAiLCJ0b1VwcGVyQ2FzZSIsImtleV9zdGF0ZSIsInJlbmRlcl9mdW5jIiwib25rZXl1cCIsImV2ZW50Iiwia2V5Q29kZSIsInNoaWZ0S2V5Iiwib25rZXlkb3duIl0sIm1hcHBpbmdzIjoiQUFDQSxZQ0RBLFNBQUFBLE9BQ0FDLEtBQUFDLE1BQUFELEtBQUFFLGtCREFBLEdBQUFDLFFBQUFDLFNBQUEsS0FBQSxpQkFBQUMsVUFBQUEsT0FBQUMsUUFBQUgsT0FBQSxTQUFBSSxLQUFBQyxPQUFBRCxLQUFBQyxLQUFBLFNBQUFDLEdBQUEsTUFBQSxHQUFBQSxFQUFBLEdBQUFBLEVBQUEsRUFBQSxHQUFBQSxJQUFBTixNQUFBTyxJQUFBLFdBQUFDLFFBQUFELElBQUFFLE1BQUFELFFBQUFFLFlBQUFWLE1BQUFXLEtBQUEsV0FBQUgsUUFBQUcsS0FBQUYsTUFBQUQsUUFBQUUsWUFBQVYsTUFBQVksTUFBQSxXQUFBSixRQUFBSSxNQUFBSCxNQUFBRCxRQUFBRSxZQUFBVixNQUFBYSxPQUFBQyxLQUFBLEVBQUFDLE9BQUEsRUFBQUMsTUFBQSxHQUFBaEIsTUFBQWlCLGFBQUEsRUFBQWpCLE1BQUFrQixhQUFBLEVBQUFsQixNQUFBbUIsY0FBQSxFQUFBbkIsTUFBQW9CLGtCQUFBLEVBQUFwQixNQUFBcUIscUJBQUEsRUFDQXJCLE1BQUFzQixzQkFBQSxFQUFBdEIsTUFBQXVCLGVBQUEsRUFBQXZCLE1BQUF3QixhQUFBLEVBQUF4QixNQUFBeUIsaUJBQUEsRUFBQXpCLE1BQUEwQixVQUFBLEVBQUExQixNQUFBMkIsU0FBQSxFQUFBM0IsTUFBQTRCLFdBQUEsRUFBQTVCLE1BQUE2QixVQUFBLEVBQUE3QixNQUFBOEIsWUFBQSxFQUFBOUIsTUFBQStCLGNBQUEsRUFBQS9CLE1BQUFnQyxTQUFBLEVBQUFoQyxNQUFBaUMsV0FBQSxFQUFBakMsTUFBQWtDLGFBQUEsRUFBQWxDLE1BQUFtQyxXQUFBLEVBQUFuQyxNQUFBb0MsZUFBQSxFQUFBcEMsTUFBQXFDLGlCQUFBLEVBQUFyQyxNQUFBc0Msb0JBQUEsRUFBQXRDLE1BQUF1QyxpQkFBQSxFQUFBdkMsTUFBQXdDLGVBQUEsRUFBQXhDLE1BQUF5QyxZQUFBLElBQUF6QyxNQUFBMEMsaUJBQUEsSUFBQTFDLE1BQUEyQyx3QkFBQSxJQUNBM0MsTUFBQTRDLFlBQUEsSUFBQTVDLE1BQUE2QyxZQUFBLElBQUE3QyxNQUFBOEMsV0FBQSxJQUFBOUMsTUFBQStDLFVBQUEsSUFBQS9DLE1BQUFnRCxlQUFBLElBQUFoRCxNQUFBaUQsdUJBQUEsSUFBQWpELE1BQUFrRCxlQUFBLElBQUFsRCxNQUFBbUQsdUJBQUEsSUFBQW5ELE1BQUFvRCxlQUFBLElBQUFwRCxNQUFBcUQsdUJBQUEsSUFBQXJELE1BQUFzRCxlQUFBLElBQUF0RCxNQUFBdUQsdUJBQUEsSUFBQXZELE1BQUF3RCx1QkFBQSxJQUFBeEQsTUFBQXlELGtCQUFBLEVBQUF6RCxNQUFBMEQsYUFBQSxFQUFBMUQsTUFBQTJELGFBQUEsRUFBQTNELE1BQUE0RCxVQUFBLElBQUE1RCxNQUFBNkQsc0JBQUEsSUFBQTdELE1BQUE4RCxzQkFBQSxJQUNBOUQsTUFBQStELGlDQUFBLElBQUEvRCxNQUFBZ0UsaUNBQUEsSUFBQWhFLE1BQUFpRSwyQkFBQSxJQUFBakUsTUFBQWtFLGVBQUEsSUFBQWxFLE1BQUFtRSxvQkFBQSxLQUFBbkUsTUFBQW9FLHVCQUFBLEtBQUFwRSxNQUFBcUUsY0FBQSxLQUFBckUsTUFBQXNFLDJCQUFBLEtBQUF0RSxNQUFBdUUsMEJBQUEsS0FBQXZFLE1BQUF3RSxhQUFBLEtBQUF4RSxNQUFBeUUsMEJBQUEsS0FBQXpFLE1BQUEwRSx5QkFBQSxLQUFBMUUsTUFBQTJFLGlCQUFBLEtBQUEzRSxNQUFBNEUsU0FBQSxLQUFBNUUsTUFBQTZFLFVBQUEsS0FDQTdFLE1BQUE4RSxrQkFBQSxLQUFBOUUsTUFBQStFLFFBQUEsS0FBQS9FLE1BQUFnRixnQkFBQSxLQUFBaEYsTUFBQWlGLFVBQUEsS0FBQWpGLE1BQUFrRixjQUFBLEtBQUFsRixNQUFBbUYsc0JBQUEsS0FBQW5GLE1BQUFvRixzQkFBQSxLQUFBcEYsTUFBQXFGLHFCQUFBLEtBQUFyRixNQUFBc0YsWUFBQSxLQUFBdEYsTUFBQXVGLFVBQUEsS0FBQXZGLE1BQUF3RixXQUFBLEtBQUF4RixNQUFBeUYsZ0JBQUEsS0FBQXpGLE1BQUEwRixxQkFBQSxLQUFBMUYsTUFBQTJGLFdBQUEzRixNQUFBd0YsV0FBQXhGLE1BQUE0RixxQkFBQSxLQUFBNUYsTUFBQTZGLHNCQUFBLEtBQUE3RixNQUFBOEYsc0JBQUEsS0FDQTlGLE1BQUErRixzQkFBQSxLQUFBL0YsTUFBQWdHLHdCQUFBLEtBQUFoRyxNQUFBaUcsd0JBQUEsS0FBQWpHLE1BQUFrRyx5QkFBQSxLQUFBbEcsTUFBQW1HLHlCQUFBLEtBQ0FuRyxNQUFBb0csVUFBQSxXQUFBcEcsTUFBQVksTUFBQSwwRUFBQWYsS0FBQXdHLGNBQUEsU0FBQS9GLEVBQUFnRyxHQUFBdEcsTUFBQVcsS0FBQSw4REFBQUwsRUFBQWlHLFFBQUFELElBQUF6RyxLQUFBMkcsZ0JBQUEsU0FBQWxHLEVBQUFnRyxHQUFBdEcsTUFBQVcsS0FBQSxrRUFBQUwsRUFBQW1HLFVBQUFILElBQUF6RyxLQUFBNkcsV0FBQSxTQUFBcEcsRUFBQWdHLEdBQUF0RyxNQUFBWSxNQUFBLHNFQUNBWixNQUFBMkcsZUFBQSxXQUFBM0csTUFBQVksTUFBQSxtRkFBQWYsS0FBQStHLFdBQUFDLFNBQUFDLGNBQUEsVUFBQWpILEtBQUFrSCxNQUFBLGFBQUFsSCxLQUFBbUgsT0FBQSxhQUFBbkgsS0FBQW9ILGNBQUEsYUFBQXBILEtBQUFxSCxRQUFBLGNBQUFsSCxNQUFBbUgsTUFBQSxTQUFBN0csR0FBQSxNQUFBLEtBQUFJLFVBQUEwRyxPQUFBdkgsS0FBQXdILE9BQUEzRyxVQUFBLEdBQUFBLFVBQUEsR0FBQUEsVUFBQSxJQUFBYixLQUFBeUgsSUFBQWhILElBQ0FOLE1BQUFtSCxNQUFBSSxXQUFBQyxZQUFBeEgsTUFBQW1ILE1BQUFNLEVBQUEsRUFBQUMsRUFBQSxFQUFBcEIsRUFBQSxFQUFBZ0IsSUFBQSxTQUFBaEgsR0FBQSxNQUFBQSxhQUFBTixPQUFBbUgsTUFBQXRILEtBQUE4SCxLQUFBckgsR0FBQSxnQkFBQUEsR0FBQVQsS0FBQStILE9BQUF0SCxHQUFBLGdCQUFBQSxJQUFBVCxLQUFBZ0ksU0FBQXZILEdBQUFULE1BQUErSCxPQUFBLFNBQUF0SCxHQUFBLE1BQUFBLEdBQUFGLEtBQUEwSCxNQUFBeEgsR0FBQVQsS0FBQTRILEdBQUFuSCxHQUFBLEdBQUEsS0FBQSxJQUFBVCxLQUFBNkgsR0FBQXBILEdBQUEsRUFBQSxLQUFBLElBQUFULEtBQUF5RyxHQUFBLElBQUFoRyxHQUFBLElBQUFULE1BQUF3SCxPQUFBLFNBQUEvRyxFQUFBZ0csRUFBQXlCLEdBQUEsTUFBQWxJLE1BQUE0SCxFQUFBbkgsRUFBQVQsS0FBQTZILEVBQUFwQixFQUFBekcsS0FBQXlHLEVBQUF5QixFQUFBbEksTUFBQW1JLE9BQUEsU0FBQTFILEVBQUFnRyxFQUFBeUIsR0FBQSxHQUFBLElBQUF6QixFQUFBekcsS0FBQTRILEVBQUE1SCxLQUFBNkgsRUFBQTdILEtBQUF5RyxFQUFBeUIsTUFBQSxDQUFBLEdBQUFFLEdBQUEsU0FBQTNILEVBQUFnRyxFQUFBeUIsR0FBQSxNQUFBLEdBQUFBLElBQUFBLEdBQUEsR0FBQUEsRUFBQSxJQUFBQSxHQUFBLEdBQUEsRUFBQSxFQUFBQSxFQUFBekgsRUFBQSxHQUFBZ0csRUFBQWhHLEdBQ0F5SCxFQUFBLEdBQUFBLEVBQUF6QixFQUFBLEVBQUEsRUFBQXlCLEVBQUF6SCxFQUFBLEdBQUFnRyxFQUFBaEcsSUFBQSxFQUFBLEVBQUF5SCxHQUFBekgsRUFBQWdHLEdBQUEsSUFBQXlCLEVBQUFBLEdBQUEsRUFBQXpCLEdBQUF5QixFQUFBekIsRUFBQXlCLEVBQUF6QixFQUFBeUIsRUFBQSxFQUFBQSxFQUFBekIsRUFBQXpHLEtBQUE0SCxFQUFBUSxFQUFBRixFQUFBekIsRUFBQWhHLEVBQUEsRUFBQSxHQUFBVCxLQUFBNkgsRUFBQU8sRUFBQUYsRUFBQXpCLEVBQUFoRyxHQUFBVCxLQUFBeUcsRUFBQTJCLEVBQUFGLEVBQUF6QixFQUFBaEcsRUFBQSxFQUFBLEdBQUEsTUFBQVQsT0FBQWdJLFNBQUEsU0FBQXZILEdBQUEsTUFBQSxrQ0FBQTRILEtBQUE1SCxJQUFBQSxFQUFBLGtDQUFBNkgsS0FBQTdILEdBQUFULEtBQUE0SCxFQUFBckgsS0FBQWdJLElBQUEsSUFBQUMsU0FBQS9ILEVBQUEsR0FBQSxLQUFBLElBQUFULEtBQUE2SCxFQUFBdEgsS0FBQWdJLElBQUEsSUFBQUMsU0FBQS9ILEVBQUEsR0FBQSxLQUFBLElBQUFULEtBQUF5RyxFQUFBbEcsS0FBQWdJLElBQUEsSUFBQUMsU0FBQS9ILEVBQUEsR0FBQSxLQUFBLElBQUFULE1BQUEsd0NBQUFxSSxLQUFBNUgsSUFBQUEsRUFBQSx3Q0FBQTZILEtBQUE3SCxHQUFBVCxLQUFBNEgsRUFDQXJILEtBQUFnSSxJQUFBLElBQUFDLFNBQUEvSCxFQUFBLEdBQUEsS0FBQSxJQUFBVCxLQUFBNkgsRUFBQXRILEtBQUFnSSxJQUFBLElBQUFDLFNBQUEvSCxFQUFBLEdBQUEsS0FBQSxJQUFBVCxLQUFBeUcsRUFBQWxHLEtBQUFnSSxJQUFBLElBQUFDLFNBQUEvSCxFQUFBLEdBQUEsS0FBQSxJQUFBVCxNQUFBLHFCQUFBcUksS0FBQTVILElBQUFBLEVBQUEscUJBQUE2SCxLQUFBN0gsR0FBQVQsS0FBQStILE9BQUFTLFNBQUEvSCxFQUFBLEdBQUEsS0FBQVQsTUFBQSxzQ0FBQXFJLEtBQUE1SCxJQUFBQSxFQUFBLHNDQUFBNkgsS0FBQTdILEdBQUFULEtBQUErSCxPQUFBUyxTQUFBL0gsRUFBQSxHQUFBQSxFQUFBLEdBQUFBLEVBQUEsR0FBQUEsRUFBQSxHQUFBQSxFQUFBLEdBQUFBLEVBQUEsR0FBQSxLQUFBVCxNQUFBLFdBQUFxSSxLQUFBNUgsSUFBQVQsS0FBQStILE9BQUE1SCxNQUFBc0ksY0FBQWhJLElBQUFULE1BQUEsUUFBQThILEtBQUEsU0FBQXJILEdBQ0EsTUFEQVQsTUFBQTRILEVBQUFuSCxFQUFBbUgsRUFBQTVILEtBQUE2SCxFQUNBcEgsRUFBQW9ILEVBQUE3SCxLQUFBeUcsRUFBQWhHLEVBQUFnRyxFQUFBekcsTUFBQTBJLGtCQUFBLFNBQUFqSSxFQUFBZ0csR0FBQSxNQUFBLFVBQUFBLElBQUFBLEVBQUEsR0FBQXpHLEtBQUE0SCxFQUFBckgsS0FBQW9JLElBQUFsSSxFQUFBbUgsRUFBQW5CLEdBQUF6RyxLQUFBNkgsRUFBQXRILEtBQUFvSSxJQUFBbEksRUFBQW9ILEVBQUFwQixHQUFBekcsS0FBQXlHLEVBQUFsRyxLQUFBb0ksSUFBQWxJLEVBQUFnRyxFQUFBQSxHQUFBekcsTUFBQTRJLGtCQUFBLFNBQUFuSSxFQUFBZ0csR0FBQSxTQUFBQSxJQUFBQSxFQUFBLEVBQUEsSUFBQXlCLEdBQUF6QixFQUFBLEVBQUEsRUFBQUEsRUFBQSxDQUFBLE9BQUF6RyxNQUFBNEgsRUFBQXJILEtBQUFvSSxJQUFBbEksRUFBQW1ILEVBQUFNLEdBQUFsSSxLQUFBNkgsRUFBQXRILEtBQUFvSSxJQUFBbEksRUFBQW9ILEVBQUFLLEdBQUFsSSxLQUFBeUcsRUFBQWxHLEtBQUFvSSxJQUFBbEksRUFBQWdHLEVBQUF5QixHQUFBbEksTUFBQTZJLHFCQUFBLFdBQUEsR0FBQXBJLEdBQUFULEtBQUE0SCxFQUFBbkIsRUFBQXpHLEtBQUE2SCxFQUFBSyxFQUFBbEksS0FBQXlHLENBQUEsT0FBQXpHLE1BQUE0SCxFQUFBbkgsRUFBQUEsRUFBQVQsS0FBQTZILEVBQUFwQixFQUFBQSxFQUFBekcsS0FBQXlHLEVBQUF5QixFQUFBQSxFQUFBbEksTUFBQThJLHFCQUFBLFdBQ0EsTUFEQTlJLE1BQUE0SCxFQUFBckgsS0FBQXdJLEtBQUEvSSxLQUFBNEgsR0FBQTVILEtBQUE2SCxFQUFBdEgsS0FBQXdJLEtBQUEvSSxLQUFBNkgsR0FBQTdILEtBQUF5RyxFQUNBbEcsS0FBQXdJLEtBQUEvSSxLQUFBeUcsR0FBQXpHLE1BQUFnSixPQUFBLFdBQUEsTUFBQSxLQUFBaEosS0FBQTRILEdBQUEsR0FBQSxJQUFBNUgsS0FBQTZILEdBQUEsRUFBQSxJQUFBN0gsS0FBQXlHLEdBQUEsR0FBQXdDLGFBQUEsV0FBQSxPQUFBLFNBQUFqSixLQUFBZ0osU0FBQUUsU0FBQSxLQUFBQyxNQUFBLEtBQUFDLE9BQUEsU0FBQTNJLEdBQUFBLEVBQUFBLElBQUE0SSxFQUFBLEVBQUFDLEVBQUEsRUFBQUMsRUFBQSxFQUFBLElBQUExQixHQUFBcEIsRUFBQXpHLEtBQUE0SCxFQUFBTSxFQUFBbEksS0FBQTZILEVBQUFPLEVBQUFwSSxLQUFBeUcsRUFBQStDLEVBQUFqSixLQUFBa0osSUFBQWhELEVBQUF5QixFQUFBRSxHQUFBc0IsRUFBQW5KLEtBQUFnSSxJQUFBOUIsRUFBQXlCLEVBQUFFLEdBQUFpQixHQUFBSyxFQUFBRixHQUFBLENBQUEsSUFBQUUsSUFBQUYsRUFBQUUsRUFBQTdCLEVBQUEsTUFBQSxDQUFBLEdBQUE4QixHQUFBSCxFQUFBRSxFQUFBQSxFQUFBLElBQUFMLEVBQUFNLEdBQUFILEVBQUFFLEdBQUFDLEdBQUEsRUFBQUgsRUFBQUUsRUFBQSxRQUFBRixHQUFBLElBQUEvQyxHQUFBb0IsR0FBQUssRUFBQUUsR0FBQXVCLEdBQUF2QixFQUFBRixFQUFBLEVBQUEsRUFBQSxNQUFBLEtBQUFBLEdBQUFMLEdBQUFPLEVBQUEzQixHQUFBa0QsRUFBQSxDQUFBLE1BQUEsS0FBQXZCLEdBQUFQLEdBQUFwQixFQUFBeUIsR0FBQXlCLEVBQUEsRUFBQTlCLEdBQUEsRUFBQSxNQUFBcEgsR0FBQTRJLEVBQUF4QixFQUFBcEgsRUFBQTZJLEVBQUFJLEVBQUFqSixFQUFBOEksRUFBQUYsRUFBQTVJLEdBQUFtSixTQUFBLFdBQUEsTUFBQSxRQUNBLElBQUE1SixLQUFBNEgsRUFBQSxHQUFBLEtBQUEsSUFBQTVILEtBQUE2SCxFQUFBLEdBQUEsS0FBQSxJQUFBN0gsS0FBQXlHLEVBQUEsR0FBQSxLQUFBb0QsVUFBQSxTQUFBcEosRUFBQWdHLEVBQUF5QixHQUFBLEdBQUFFLEdBQUFwSSxLQUFBb0osUUFBQSxPQUFBaEIsR0FBQWlCLEdBQUE1SSxFQUFBMkgsRUFBQWtCLEdBQUE3QyxFQUFBMkIsRUFBQW1CLEdBQUFyQixFQUFBbEksS0FBQW1JLE9BQUFDLEVBQUFpQixFQUFBakIsRUFBQWtCLEVBQUFsQixFQUFBbUIsR0FBQXZKLE1BQUE4SixJQUFBLFNBQUFySixHQUFBLE1BQUFULE1BQUE0SCxHQUFBbkgsRUFBQW1ILEVBQUE1SCxLQUFBNkgsR0FBQXBILEVBQUFvSCxFQUFBN0gsS0FBQXlHLEdBQUFoRyxFQUFBZ0csRUFBQXpHLE1BQUErSixVQUFBLFNBQUF0SixFQUFBZ0csR0FBQSxNQUFBekcsTUFBQTRILEVBQUFuSCxFQUFBbUgsRUFBQW5CLEVBQUFtQixFQUFBNUgsS0FBQTZILEVBQUFwSCxFQUFBb0gsRUFBQXBCLEVBQUFvQixFQUFBN0gsS0FBQXlHLEVBQUFoRyxFQUFBZ0csRUFBQUEsRUFBQUEsRUFBQXpHLE1BQUFnSyxVQUFBLFNBQUF2SixHQUFBLE1BQUFULE1BQUE0SCxHQUFBbkgsRUFBQVQsS0FBQTZILEdBQUFwSCxFQUFBVCxLQUFBeUcsR0FBQWhHLEVBQUFULE1BQUFpSyxTQUFBLFNBQUF4SixHQUFBLE1BQUFULE1BQUE0SCxHQUFBbkgsRUFBQW1ILEVBQUE1SCxLQUFBNkgsR0FBQXBILEVBQUFvSCxFQUFBN0gsS0FBQXlHLEdBQUFoRyxFQUFBZ0csRUFBQXpHLE1BQUFrSyxlQUFBLFNBQUF6SixHQUNBLE1BREFULE1BQUE0SCxHQUFBbkgsRUFBQVQsS0FBQTZILEdBQUFwSCxFQUFBVCxLQUFBeUcsR0FBQWhHLEVBQ0FULE1BQUFtSyxLQUFBLFNBQUExSixFQUFBZ0csR0FBQSxNQUFBekcsTUFBQTRILElBQUFuSCxFQUFBbUgsRUFBQTVILEtBQUE0SCxHQUFBbkIsRUFBQXpHLEtBQUE2SCxJQUFBcEgsRUFBQW9ILEVBQUE3SCxLQUFBNkgsR0FBQXBCLEVBQUF6RyxLQUFBeUcsSUFBQWhHLEVBQUFnRyxFQUFBekcsS0FBQXlHLEdBQUFBLEVBQUF6RyxNQUFBb0ssT0FBQSxTQUFBM0osR0FBQSxNQUFBQSxHQUFBbUgsSUFBQTVILEtBQUE0SCxHQUFBbkgsRUFBQW9ILElBQUE3SCxLQUFBNkgsR0FBQXBILEVBQUFnRyxJQUFBekcsS0FBQXlHLEdBQUE0RCxVQUFBLFNBQUE1SixHQUFBLE1BQUFULE1BQUE0SCxFQUFBbkgsRUFBQSxHQUFBVCxLQUFBNkgsRUFBQXBILEVBQUEsR0FBQVQsS0FBQXlHLEVBQUFoRyxFQUFBLEdBQUFULE1BQUFzSyxRQUFBLFNBQUE3SixFQUFBZ0csR0FBQSxNQUFBLFVBQUFoRyxJQUFBQSxNQUFBLFNBQUFnRyxJQUFBQSxFQUFBLEdBQUFoRyxFQUFBZ0csR0FBQXpHLEtBQUE0SCxFQUFBbkgsRUFBQWdHLEVBQUEsR0FBQXpHLEtBQUE2SCxFQUFBcEgsRUFBQWdHLEVBQUEsR0FBQXpHLEtBQUF5RyxFQUFBaEcsR0FBQThKLE1BQUEsV0FBQSxPQUFBLEdBQUFwSyxPQUFBbUgsT0FBQUUsT0FBQXhILEtBQUE0SCxFQUFBNUgsS0FBQTZILEVBQUE3SCxLQUFBeUcsS0FDQXRHLE1BQUFzSSxlQUFBK0IsVUFBQSxTQUFBQyxhQUFBLFNBQUFDLEtBQUEsTUFBQUMsV0FBQSxRQUFBQyxNQUFBLFNBQUFDLE1BQUEsU0FBQUMsT0FBQSxTQUFBQyxNQUFBLEVBQUFDLGVBQUEsU0FBQUMsS0FBQSxJQUFBQyxXQUFBLFFBQUFDLE1BQUEsU0FBQUMsVUFBQSxTQUFBQyxVQUFBLFFBQUFDLFdBQUEsUUFBQUMsVUFBQSxTQUFBQyxNQUFBLFNBQUFDLGVBQUEsUUFBQUMsU0FBQSxTQUFBQyxRQUFBLFNBQUFDLEtBQUEsTUFBQUMsU0FBQSxJQUFBQyxTQUFBLE1BQUFDLGNBQUEsU0FBQUMsU0FBQSxTQUFBQyxVQUFBLE1BQUFDLFNBQUEsU0FBQUMsVUFBQSxTQUFBQyxZQUFBLFFBQ0FDLGVBQUEsUUFBQUMsV0FBQSxTQUFBQyxXQUFBLFNBQUFDLFFBQUEsUUFBQUMsV0FBQSxTQUFBQyxhQUFBLFFBQUFDLGNBQUEsUUFBQUMsY0FBQSxRQUFBQyxjQUFBLFFBQUFDLGNBQUEsTUFBQUMsV0FBQSxRQUFBQyxTQUFBLFNBQUFDLFlBQUEsTUFBQUMsUUFBQSxRQUFBQyxRQUFBLFFBQUFDLFdBQUEsUUFBQUMsVUFBQSxTQUFBQyxZQUFBLFNBQUFDLFlBQUEsUUFBQUMsUUFBQSxTQUFBQyxVQUFBLFNBQUFDLFdBQUEsU0FBQUMsS0FBQSxTQUFBQyxVQUFBLFNBQUFDLEtBQUEsUUFBQUMsTUFBQSxNQUFBQyxZQUFBLFNBQ0FDLEtBQUEsUUFBQUMsU0FBQSxTQUFBQyxRQUFBLFNBQUFDLFVBQUEsU0FBQUMsT0FBQSxRQUFBQyxNQUFBLFNBQUFDLE1BQUEsU0FBQUMsU0FBQSxTQUFBQyxjQUFBLFNBQUFDLFVBQUEsUUFBQUMsYUFBQSxTQUFBQyxVQUFBLFNBQUFDLFdBQUEsU0FBQUMsVUFBQSxTQUFBQyxxQkFBQSxTQUFBQyxVQUFBLFNBQUFDLFdBQUEsUUFBQUMsVUFBQSxTQUFBQyxVQUFBLFNBQUFDLFlBQUEsU0FBQUMsY0FBQSxRQUFBQyxhQUFBLFFBQUFDLGVBQUEsUUFBQUMsZUFBQSxRQUFBQyxlQUFBLFNBQUFDLFlBQUEsU0FDQUMsS0FBQSxNQUFBQyxVQUFBLFFBQUFDLE1BQUEsU0FBQUMsUUFBQSxTQUFBQyxPQUFBLFFBQUFDLGlCQUFBLFFBQUFDLFdBQUEsSUFBQUMsYUFBQSxTQUFBQyxhQUFBLFFBQUFDLGVBQUEsUUFBQUMsZ0JBQUEsUUFBQUMsa0JBQUEsTUFBQUMsZ0JBQUEsUUFBQUMsZ0JBQUEsU0FBQUMsYUFBQSxRQUFBQyxVQUFBLFNBQUFDLFVBQUEsU0FBQUMsU0FBQSxTQUFBQyxZQUFBLFNBQUFDLEtBQUEsSUFBQUMsUUFBQSxTQUFBQyxNQUFBLFFBQUFDLFVBQUEsUUFBQUMsT0FBQSxTQUFBQyxVQUFBLFNBQUFDLE9BQUEsU0FBQUMsY0FBQSxTQUNBQyxVQUFBLFNBQUFDLGNBQUEsU0FBQUMsY0FBQSxTQUFBQyxXQUFBLFNBQUFDLFVBQUEsU0FBQUMsS0FBQSxTQUFBQyxLQUFBLFNBQUFDLEtBQUEsU0FBQUMsV0FBQSxTQUFBQyxPQUFBLFFBQUFDLElBQUEsU0FBQUMsVUFBQSxTQUFBQyxVQUFBLFFBQUFDLFlBQUEsUUFBQUMsT0FBQSxTQUFBQyxXQUFBLFNBQUFDLFNBQUEsUUFBQUMsU0FBQSxTQUFBQyxPQUFBLFNBQUFDLE9BQUEsU0FBQUMsUUFBQSxRQUFBQyxVQUFBLFFBQUFDLFVBQUEsUUFBQUMsVUFBQSxRQUFBQyxLQUFBLFNBQUFDLFlBQUEsTUFBQUMs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QUEreUUsZ0JBRUFDLEVBQUF0VixFQUFBOXRDLElBQUFnakQsRUFBQSxXQUNBLE1BQUEsS0FFQUssRUFBQSxXQUNBLzFDLHNCQUFBKzFDLEdBQ0FkLEVBQUFsekUsT0FBQWl6RSxFQUFBM1gsR0FFQW9ZLEdBRUEsS0FBQSxHQUFBeFYsR0FBQSxFQUFBQSxFQUFBeVYsRUFBQXZ6RSxPQUFBODlELElBQUEsQ0FDQSxHQUFBb00sR0FBQXBNLEdBQUF5VixFQUFBdnpFLE9BQUEsRUFDQSxLQUFBMnpFLEVBQUE3VixLQUNBb1YsRUFBQTFJLEtBQUEsR0FBQW1KLEVBQUE3VixHQUFBb00sR0FDQXlKLEVBQUE3VixHQUFBOWtFLEtBQUEyVSxJQUFBZ21FLEVBQUE3VixJQUFBNlYsRUFBQTdWLEtBS0E3TyxRQUFBNGtCLFFBQUEsU0FBQUMsR0FDQSxHQUNBMUUsR0FEQWxGLEVBQUE3TCxFQUFBamdELFFBQUFtMUQsRUFBQU8sRUFBQUMsUUFFQSxPQUFBLElBQUE3SixHQUNBLEdBR0F5SixFQUFBekosR0FBQSxFQUNBa0YsR0FBQTBFLEVBQUFFLFNBQUFQLEVBQUFELEdBQUF0SixHQUNBd0ksRUFBQXZELE1BQUFDLElBRUEsSUFFQW5nQixPQUFBZ2xCLFVBQUEsU0FBQUgsR0FDQSxHQUFBNUosR0FBQTdMLEVBQUFqZ0QsUUFBQW0xRCxFQUFBTyxFQUFBQyxRQUNBLE9BQUE3SixHQUFBLElBQ0F5SixFQUFBekosR0FBQTRKLEVBQUFFLFNBQUEsR0FBQSxHQUNBLEdBRkEsUUFNQVYsSUFDQU0sSUFHQTNrQixRQUFBYixPQUFBLFdBQ0EsR0FBQXFrQixNQUFBLEdBQUFqNkUiLCJmaWxlIjoiYWxsLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRocmVlanMub3JnL2xpY2Vuc2Vcbid1c2Ugc3RyaWN0Jzt2YXIgVEhSRUU9e1JFVklTSU9OOlwiNzFcIn07XCJvYmplY3RcIj09PXR5cGVvZiBtb2R1bGUmJihtb2R1bGUuZXhwb3J0cz1USFJFRSk7dm9pZCAwPT09TWF0aC5zaWduJiYoTWF0aC5zaWduPWZ1bmN0aW9uKGEpe3JldHVybiAwPmE/LTE6MDxhPzE6K2F9KTtUSFJFRS5sb2c9ZnVuY3Rpb24oKXtjb25zb2xlLmxvZy5hcHBseShjb25zb2xlLGFyZ3VtZW50cyl9O1RIUkVFLndhcm49ZnVuY3Rpb24oKXtjb25zb2xlLndhcm4uYXBwbHkoY29uc29sZSxhcmd1bWVudHMpfTtUSFJFRS5lcnJvcj1mdW5jdGlvbigpe2NvbnNvbGUuZXJyb3IuYXBwbHkoY29uc29sZSxhcmd1bWVudHMpfTtUSFJFRS5NT1VTRT17TEVGVDowLE1JRERMRToxLFJJR0hUOjJ9O1RIUkVFLkN1bGxGYWNlTm9uZT0wO1RIUkVFLkN1bGxGYWNlQmFjaz0xO1RIUkVFLkN1bGxGYWNlRnJvbnQ9MjtUSFJFRS5DdWxsRmFjZUZyb250QmFjaz0zO1RIUkVFLkZyb250RmFjZURpcmVjdGlvbkNXPTA7XG5USFJFRS5Gcm9udEZhY2VEaXJlY3Rpb25DQ1c9MTtUSFJFRS5CYXNpY1NoYWRvd01hcD0wO1RIUkVFLlBDRlNoYWRvd01hcD0xO1RIUkVFLlBDRlNvZnRTaGFkb3dNYXA9MjtUSFJFRS5Gcm9udFNpZGU9MDtUSFJFRS5CYWNrU2lkZT0xO1RIUkVFLkRvdWJsZVNpZGU9MjtUSFJFRS5Ob1NoYWRpbmc9MDtUSFJFRS5GbGF0U2hhZGluZz0xO1RIUkVFLlNtb290aFNoYWRpbmc9MjtUSFJFRS5Ob0NvbG9ycz0wO1RIUkVFLkZhY2VDb2xvcnM9MTtUSFJFRS5WZXJ0ZXhDb2xvcnM9MjtUSFJFRS5Ob0JsZW5kaW5nPTA7VEhSRUUuTm9ybWFsQmxlbmRpbmc9MTtUSFJFRS5BZGRpdGl2ZUJsZW5kaW5nPTI7VEhSRUUuU3VidHJhY3RpdmVCbGVuZGluZz0zO1RIUkVFLk11bHRpcGx5QmxlbmRpbmc9NDtUSFJFRS5DdXN0b21CbGVuZGluZz01O1RIUkVFLkFkZEVxdWF0aW9uPTEwMDtUSFJFRS5TdWJ0cmFjdEVxdWF0aW9uPTEwMTtUSFJFRS5SZXZlcnNlU3VidHJhY3RFcXVhdGlvbj0xMDI7XG5USFJFRS5NaW5FcXVhdGlvbj0xMDM7VEhSRUUuTWF4RXF1YXRpb249MTA0O1RIUkVFLlplcm9GYWN0b3I9MjAwO1RIUkVFLk9uZUZhY3Rvcj0yMDE7VEhSRUUuU3JjQ29sb3JGYWN0b3I9MjAyO1RIUkVFLk9uZU1pbnVzU3JjQ29sb3JGYWN0b3I9MjAzO1RIUkVFLlNyY0FscGhhRmFjdG9yPTIwNDtUSFJFRS5PbmVNaW51c1NyY0FscGhhRmFjdG9yPTIwNTtUSFJFRS5Ec3RBbHBoYUZhY3Rvcj0yMDY7VEhSRUUuT25lTWludXNEc3RBbHBoYUZhY3Rvcj0yMDc7VEhSRUUuRHN0Q29sb3JGYWN0b3I9MjA4O1RIUkVFLk9uZU1pbnVzRHN0Q29sb3JGYWN0b3I9MjA5O1RIUkVFLlNyY0FscGhhU2F0dXJhdGVGYWN0b3I9MjEwO1RIUkVFLk11bHRpcGx5T3BlcmF0aW9uPTA7VEhSRUUuTWl4T3BlcmF0aW9uPTE7VEhSRUUuQWRkT3BlcmF0aW9uPTI7VEhSRUUuVVZNYXBwaW5nPTMwMDtUSFJFRS5DdWJlUmVmbGVjdGlvbk1hcHBpbmc9MzAxO1RIUkVFLkN1YmVSZWZyYWN0aW9uTWFwcGluZz0zMDI7XG5USFJFRS5FcXVpcmVjdGFuZ3VsYXJSZWZsZWN0aW9uTWFwcGluZz0zMDM7VEhSRUUuRXF1aXJlY3Rhbmd1bGFyUmVmcmFjdGlvbk1hcHBpbmc9MzA0O1RIUkVFLlNwaGVyaWNhbFJlZmxlY3Rpb25NYXBwaW5nPTMwNTtUSFJFRS5SZXBlYXRXcmFwcGluZz0xRTM7VEhSRUUuQ2xhbXBUb0VkZ2VXcmFwcGluZz0xMDAxO1RIUkVFLk1pcnJvcmVkUmVwZWF0V3JhcHBpbmc9MTAwMjtUSFJFRS5OZWFyZXN0RmlsdGVyPTEwMDM7VEhSRUUuTmVhcmVzdE1pcE1hcE5lYXJlc3RGaWx0ZXI9MTAwNDtUSFJFRS5OZWFyZXN0TWlwTWFwTGluZWFyRmlsdGVyPTEwMDU7VEhSRUUuTGluZWFyRmlsdGVyPTEwMDY7VEhSRUUuTGluZWFyTWlwTWFwTmVhcmVzdEZpbHRlcj0xMDA3O1RIUkVFLkxpbmVhck1pcE1hcExpbmVhckZpbHRlcj0xMDA4O1RIUkVFLlVuc2lnbmVkQnl0ZVR5cGU9MTAwOTtUSFJFRS5CeXRlVHlwZT0xMDEwO1RIUkVFLlNob3J0VHlwZT0xMDExO1xuVEhSRUUuVW5zaWduZWRTaG9ydFR5cGU9MTAxMjtUSFJFRS5JbnRUeXBlPTEwMTM7VEhSRUUuVW5zaWduZWRJbnRUeXBlPTEwMTQ7VEhSRUUuRmxvYXRUeXBlPTEwMTU7VEhSRUUuSGFsZkZsb2F0VHlwZT0xMDI1O1RIUkVFLlVuc2lnbmVkU2hvcnQ0NDQ0VHlwZT0xMDE2O1RIUkVFLlVuc2lnbmVkU2hvcnQ1NTUxVHlwZT0xMDE3O1RIUkVFLlVuc2lnbmVkU2hvcnQ1NjVUeXBlPTEwMTg7VEhSRUUuQWxwaGFGb3JtYXQ9MTAxOTtUSFJFRS5SR0JGb3JtYXQ9MTAyMDtUSFJFRS5SR0JBRm9ybWF0PTEwMjE7VEhSRUUuTHVtaW5hbmNlRm9ybWF0PTEwMjI7VEhSRUUuTHVtaW5hbmNlQWxwaGFGb3JtYXQ9MTAyMztUSFJFRS5SR0JFRm9ybWF0PVRIUkVFLlJHQkFGb3JtYXQ7VEhSRUUuUkdCX1MzVENfRFhUMV9Gb3JtYXQ9MjAwMTtUSFJFRS5SR0JBX1MzVENfRFhUMV9Gb3JtYXQ9MjAwMjtUSFJFRS5SR0JBX1MzVENfRFhUM19Gb3JtYXQ9MjAwMztcblRIUkVFLlJHQkFfUzNUQ19EWFQ1X0Zvcm1hdD0yMDA0O1RIUkVFLlJHQl9QVlJUQ180QlBQVjFfRm9ybWF0PTIxMDA7VEhSRUUuUkdCX1BWUlRDXzJCUFBWMV9Gb3JtYXQ9MjEwMTtUSFJFRS5SR0JBX1BWUlRDXzRCUFBWMV9Gb3JtYXQ9MjEwMjtUSFJFRS5SR0JBX1BWUlRDXzJCUFBWMV9Gb3JtYXQ9MjEwMztcblRIUkVFLlByb2plY3Rvcj1mdW5jdGlvbigpe1RIUkVFLmVycm9yKFwiVEhSRUUuUHJvamVjdG9yIGhhcyBiZWVuIG1vdmVkIHRvIC9leGFtcGxlcy9qcy9yZW5kZXJlcnMvUHJvamVjdG9yLmpzLlwiKTt0aGlzLnByb2plY3RWZWN0b3I9ZnVuY3Rpb24oYSxiKXtUSFJFRS53YXJuKFwiVEhSRUUuUHJvamVjdG9yOiAucHJvamVjdFZlY3RvcigpIGlzIG5vdyB2ZWN0b3IucHJvamVjdCgpLlwiKTthLnByb2plY3QoYil9O3RoaXMudW5wcm9qZWN0VmVjdG9yPWZ1bmN0aW9uKGEsYil7VEhSRUUud2FybihcIlRIUkVFLlByb2plY3RvcjogLnVucHJvamVjdFZlY3RvcigpIGlzIG5vdyB2ZWN0b3IudW5wcm9qZWN0KCkuXCIpO2EudW5wcm9qZWN0KGIpfTt0aGlzLnBpY2tpbmdSYXk9ZnVuY3Rpb24oYSxiKXtUSFJFRS5lcnJvcihcIlRIUkVFLlByb2plY3RvcjogLnBpY2tpbmdSYXkoKSBpcyBub3cgcmF5Y2FzdGVyLnNldEZyb21DYW1lcmEoKS5cIil9fTtcblRIUkVFLkNhbnZhc1JlbmRlcmVyPWZ1bmN0aW9uKCl7VEhSRUUuZXJyb3IoXCJUSFJFRS5DYW52YXNSZW5kZXJlciBoYXMgYmVlbiBtb3ZlZCB0byAvZXhhbXBsZXMvanMvcmVuZGVyZXJzL0NhbnZhc1JlbmRlcmVyLmpzXCIpO3RoaXMuZG9tRWxlbWVudD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO3RoaXMuY2xlYXI9ZnVuY3Rpb24oKXt9O3RoaXMucmVuZGVyPWZ1bmN0aW9uKCl7fTt0aGlzLnNldENsZWFyQ29sb3I9ZnVuY3Rpb24oKXt9O3RoaXMuc2V0U2l6ZT1mdW5jdGlvbigpe319O1RIUkVFLkNvbG9yPWZ1bmN0aW9uKGEpe3JldHVybiAzPT09YXJndW1lbnRzLmxlbmd0aD90aGlzLnNldFJHQihhcmd1bWVudHNbMF0sYXJndW1lbnRzWzFdLGFyZ3VtZW50c1syXSk6dGhpcy5zZXQoYSl9O1xuVEhSRUUuQ29sb3IucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUSFJFRS5Db2xvcixyOjEsZzoxLGI6MSxzZXQ6ZnVuY3Rpb24oYSl7YSBpbnN0YW5jZW9mIFRIUkVFLkNvbG9yP3RoaXMuY29weShhKTpcIm51bWJlclwiPT09dHlwZW9mIGE/dGhpcy5zZXRIZXgoYSk6XCJzdHJpbmdcIj09PXR5cGVvZiBhJiZ0aGlzLnNldFN0eWxlKGEpO3JldHVybiB0aGlzfSxzZXRIZXg6ZnVuY3Rpb24oYSl7YT1NYXRoLmZsb29yKGEpO3RoaXMucj0oYT4+MTYmMjU1KS8yNTU7dGhpcy5nPShhPj44JjI1NSkvMjU1O3RoaXMuYj0oYSYyNTUpLzI1NTtyZXR1cm4gdGhpc30sc2V0UkdCOmZ1bmN0aW9uKGEsYixjKXt0aGlzLnI9YTt0aGlzLmc9Yjt0aGlzLmI9YztyZXR1cm4gdGhpc30sc2V0SFNMOmZ1bmN0aW9uKGEsYixjKXtpZigwPT09Yil0aGlzLnI9dGhpcy5nPXRoaXMuYj1jO2Vsc2V7dmFyIGQ9ZnVuY3Rpb24oYSxiLGMpezA+YyYmKGMrPTEpOzE8YyYmKGMtPTEpO3JldHVybiBjPDEvNj9hKzYqKGItYSkqXG5jOi41PmM/YjpjPDIvMz9hKzYqKGItYSkqKDIvMy1jKTphfTtiPS41Pj1jP2MqKDErYik6YytiLWMqYjtjPTIqYy1iO3RoaXMucj1kKGMsYixhKzEvMyk7dGhpcy5nPWQoYyxiLGEpO3RoaXMuYj1kKGMsYixhLTEvMyl9cmV0dXJuIHRoaXN9LHNldFN0eWxlOmZ1bmN0aW9uKGEpe2lmKC9ecmdiXFwoKFxcZCspLCA/KFxcZCspLCA/KFxcZCspXFwpJC9pLnRlc3QoYSkpcmV0dXJuIGE9L15yZ2JcXCgoXFxkKyksID8oXFxkKyksID8oXFxkKylcXCkkL2kuZXhlYyhhKSx0aGlzLnI9TWF0aC5taW4oMjU1LHBhcnNlSW50KGFbMV0sMTApKS8yNTUsdGhpcy5nPU1hdGgubWluKDI1NSxwYXJzZUludChhWzJdLDEwKSkvMjU1LHRoaXMuYj1NYXRoLm1pbigyNTUscGFyc2VJbnQoYVszXSwxMCkpLzI1NSx0aGlzO2lmKC9ecmdiXFwoKFxcZCspXFwlLCA/KFxcZCspXFwlLCA/KFxcZCspXFwlXFwpJC9pLnRlc3QoYSkpcmV0dXJuIGE9L15yZ2JcXCgoXFxkKylcXCUsID8oXFxkKylcXCUsID8oXFxkKylcXCVcXCkkL2kuZXhlYyhhKSx0aGlzLnI9XG5NYXRoLm1pbigxMDAscGFyc2VJbnQoYVsxXSwxMCkpLzEwMCx0aGlzLmc9TWF0aC5taW4oMTAwLHBhcnNlSW50KGFbMl0sMTApKS8xMDAsdGhpcy5iPU1hdGgubWluKDEwMCxwYXJzZUludChhWzNdLDEwKSkvMTAwLHRoaXM7aWYoL15cXCMoWzAtOWEtZl17Nn0pJC9pLnRlc3QoYSkpcmV0dXJuIGE9L15cXCMoWzAtOWEtZl17Nn0pJC9pLmV4ZWMoYSksdGhpcy5zZXRIZXgocGFyc2VJbnQoYVsxXSwxNikpLHRoaXM7aWYoL15cXCMoWzAtOWEtZl0pKFswLTlhLWZdKShbMC05YS1mXSkkL2kudGVzdChhKSlyZXR1cm4gYT0vXlxcIyhbMC05YS1mXSkoWzAtOWEtZl0pKFswLTlhLWZdKSQvaS5leGVjKGEpLHRoaXMuc2V0SGV4KHBhcnNlSW50KGFbMV0rYVsxXSthWzJdK2FbMl0rYVszXSthWzNdLDE2KSksdGhpcztpZigvXihcXHcrKSQvaS50ZXN0KGEpKXJldHVybiB0aGlzLnNldEhleChUSFJFRS5Db2xvcktleXdvcmRzW2FdKSx0aGlzfSxjb3B5OmZ1bmN0aW9uKGEpe3RoaXMucj1hLnI7dGhpcy5nPVxuYS5nO3RoaXMuYj1hLmI7cmV0dXJuIHRoaXN9LGNvcHlHYW1tYVRvTGluZWFyOmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9Mik7dGhpcy5yPU1hdGgucG93KGEucixiKTt0aGlzLmc9TWF0aC5wb3coYS5nLGIpO3RoaXMuYj1NYXRoLnBvdyhhLmIsYik7cmV0dXJuIHRoaXN9LGNvcHlMaW5lYXJUb0dhbW1hOmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9Mik7dmFyIGM9MDxiPzEvYjoxO3RoaXMucj1NYXRoLnBvdyhhLnIsYyk7dGhpcy5nPU1hdGgucG93KGEuZyxjKTt0aGlzLmI9TWF0aC5wb3coYS5iLGMpO3JldHVybiB0aGlzfSxjb252ZXJ0R2FtbWFUb0xpbmVhcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMucixiPXRoaXMuZyxjPXRoaXMuYjt0aGlzLnI9YSphO3RoaXMuZz1iKmI7dGhpcy5iPWMqYztyZXR1cm4gdGhpc30sY29udmVydExpbmVhclRvR2FtbWE6ZnVuY3Rpb24oKXt0aGlzLnI9TWF0aC5zcXJ0KHRoaXMucik7dGhpcy5nPU1hdGguc3FydCh0aGlzLmcpO3RoaXMuYj1cbk1hdGguc3FydCh0aGlzLmIpO3JldHVybiB0aGlzfSxnZXRIZXg6ZnVuY3Rpb24oKXtyZXR1cm4gMjU1KnRoaXMucjw8MTZeMjU1KnRoaXMuZzw8OF4yNTUqdGhpcy5iPDwwfSxnZXRIZXhTdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4oXCIwMDAwMDBcIit0aGlzLmdldEhleCgpLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTYpfSxnZXRIU0w6ZnVuY3Rpb24oYSl7YT1hfHx7aDowLHM6MCxsOjB9O3ZhciBiPXRoaXMucixjPXRoaXMuZyxkPXRoaXMuYixlPU1hdGgubWF4KGIsYyxkKSxmPU1hdGgubWluKGIsYyxkKSxnLGg9KGYrZSkvMjtpZihmPT09ZSlmPWc9MDtlbHNle3ZhciBrPWUtZixmPS41Pj1oP2svKGUrZik6ay8oMi1lLWYpO3N3aXRjaChlKXtjYXNlIGI6Zz0oYy1kKS9rKyhjPGQ/NjowKTticmVhaztjYXNlIGM6Zz0oZC1iKS9rKzI7YnJlYWs7Y2FzZSBkOmc9KGItYykvays0fWcvPTZ9YS5oPWc7YS5zPWY7YS5sPWg7cmV0dXJuIGF9LGdldFN0eWxlOmZ1bmN0aW9uKCl7cmV0dXJuXCJyZ2IoXCIrXG4oMjU1KnRoaXMucnwwKStcIixcIisoMjU1KnRoaXMuZ3wwKStcIixcIisoMjU1KnRoaXMuYnwwKStcIilcIn0sb2Zmc2V0SFNMOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLmdldEhTTCgpO2QuaCs9YTtkLnMrPWI7ZC5sKz1jO3RoaXMuc2V0SFNMKGQuaCxkLnMsZC5sKTtyZXR1cm4gdGhpc30sYWRkOmZ1bmN0aW9uKGEpe3RoaXMucis9YS5yO3RoaXMuZys9YS5nO3RoaXMuYis9YS5iO3JldHVybiB0aGlzfSxhZGRDb2xvcnM6ZnVuY3Rpb24oYSxiKXt0aGlzLnI9YS5yK2Iucjt0aGlzLmc9YS5nK2IuZzt0aGlzLmI9YS5iK2IuYjtyZXR1cm4gdGhpc30sYWRkU2NhbGFyOmZ1bmN0aW9uKGEpe3RoaXMucis9YTt0aGlzLmcrPWE7dGhpcy5iKz1hO3JldHVybiB0aGlzfSxtdWx0aXBseTpmdW5jdGlvbihhKXt0aGlzLnIqPWEucjt0aGlzLmcqPWEuZzt0aGlzLmIqPWEuYjtyZXR1cm4gdGhpc30sbXVsdGlwbHlTY2FsYXI6ZnVuY3Rpb24oYSl7dGhpcy5yKj1hO3RoaXMuZyo9YTt0aGlzLmIqPWE7XG5yZXR1cm4gdGhpc30sbGVycDpmdW5jdGlvbihhLGIpe3RoaXMucis9KGEuci10aGlzLnIpKmI7dGhpcy5nKz0oYS5nLXRoaXMuZykqYjt0aGlzLmIrPShhLmItdGhpcy5iKSpiO3JldHVybiB0aGlzfSxlcXVhbHM6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucj09PXRoaXMuciYmYS5nPT09dGhpcy5nJiZhLmI9PT10aGlzLmJ9LGZyb21BcnJheTpmdW5jdGlvbihhKXt0aGlzLnI9YVswXTt0aGlzLmc9YVsxXTt0aGlzLmI9YVsyXTtyZXR1cm4gdGhpc30sdG9BcnJheTpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWEmJihhPVtdKTt2b2lkIDA9PT1iJiYoYj0wKTthW2JdPXRoaXMucjthW2IrMV09dGhpcy5nO2FbYisyXT10aGlzLmI7cmV0dXJuIGF9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBUSFJFRS5Db2xvcikuc2V0UkdCKHRoaXMucix0aGlzLmcsdGhpcy5iKX19O1xuVEhSRUUuQ29sb3JLZXl3b3Jkcz17YWxpY2VibHVlOjE1NzkyMzgzLGFudGlxdWV3aGl0ZToxNjQ0NDM3NSxhcXVhOjY1NTM1LGFxdWFtYXJpbmU6ODM4ODU2NCxhenVyZToxNTc5NDE3NSxiZWlnZToxNjExOTI2MCxiaXNxdWU6MTY3NzAyNDQsYmxhY2s6MCxibGFuY2hlZGFsbW9uZDoxNjc3MjA0NSxibHVlOjI1NSxibHVldmlvbGV0OjkwNTUyMDIsYnJvd246MTA4MjQyMzQsYnVybHl3b29kOjE0NTk2MjMxLGNhZGV0Ymx1ZTo2MjY2NTI4LGNoYXJ0cmV1c2U6ODM4ODM1MixjaG9jb2xhdGU6MTM3ODk0NzAsY29yYWw6MTY3NDQyNzIsY29ybmZsb3dlcmJsdWU6NjU5MTk4MSxjb3Juc2lsazoxNjc3NTM4OCxjcmltc29uOjE0NDIzMTAwLGN5YW46NjU1MzUsZGFya2JsdWU6MTM5LGRhcmtjeWFuOjM1NzIzLGRhcmtnb2xkZW5yb2Q6MTIwOTI5MzksZGFya2dyYXk6MTExMTkwMTcsZGFya2dyZWVuOjI1NjAwLGRhcmtncmV5OjExMTE5MDE3LGRhcmtraGFraToxMjQzMzI1OSxkYXJrbWFnZW50YTo5MTA5NjQzLFxuZGFya29saXZlZ3JlZW46NTU5Nzk5OSxkYXJrb3JhbmdlOjE2NzQ3NTIwLGRhcmtvcmNoaWQ6MTAwNDAwMTIsZGFya3JlZDo5MTA5NTA0LGRhcmtzYWxtb246MTUzMDg0MTAsZGFya3NlYWdyZWVuOjk0MTk5MTksZGFya3NsYXRlYmx1ZTo0NzM0MzQ3LGRhcmtzbGF0ZWdyYXk6MzEwMDQ5NSxkYXJrc2xhdGVncmV5OjMxMDA0OTUsZGFya3R1cnF1b2lzZTo1Mjk0NSxkYXJrdmlvbGV0Ojk2OTk1MzksZGVlcHBpbms6MTY3MTY5NDcsZGVlcHNreWJsdWU6NDkxNTEsZGltZ3JheTo2OTA4MjY1LGRpbWdyZXk6NjkwODI2NSxkb2RnZXJibHVlOjIwMDMxOTksZmlyZWJyaWNrOjExNjc0MTQ2LGZsb3JhbHdoaXRlOjE2Nzc1OTIwLGZvcmVzdGdyZWVuOjIyNjM4NDIsZnVjaHNpYToxNjcxMTkzNSxnYWluc2Jvcm86MTQ0NzQ0NjAsZ2hvc3R3aGl0ZToxNjMxNjY3MSxnb2xkOjE2NzY2NzIwLGdvbGRlbnJvZDoxNDMyOTEyMCxncmF5Ojg0MjE1MDQsZ3JlZW46MzI3NjgsZ3JlZW55ZWxsb3c6MTE0MDMwNTUsXG5ncmV5Ojg0MjE1MDQsaG9uZXlkZXc6MTU3OTQxNjAsaG90cGluazoxNjczODc0MCxpbmRpYW5yZWQ6MTM0NTg1MjQsaW5kaWdvOjQ5MTUzMzAsaXZvcnk6MTY3NzcyMDAsa2hha2k6MTU3ODc2NjAsbGF2ZW5kZXI6MTUxMzI0MTAsbGF2ZW5kZXJibHVzaDoxNjc3MzM2NSxsYXduZ3JlZW46ODE5MDk3NixsZW1vbmNoaWZmb246MTY3NzU4ODUsbGlnaHRibHVlOjExMzkzMjU0LGxpZ2h0Y29yYWw6MTU3NjE1MzYsbGlnaHRjeWFuOjE0NzQ1NTk5LGxpZ2h0Z29sZGVucm9keWVsbG93OjE2NDQ4MjEwLGxpZ2h0Z3JheToxMzg4MjMyMyxsaWdodGdyZWVuOjk0OTgyNTYsbGlnaHRncmV5OjEzODgyMzIzLGxpZ2h0cGluazoxNjc1ODQ2NSxsaWdodHNhbG1vbjoxNjc1Mjc2MixsaWdodHNlYWdyZWVuOjIxNDI4OTAsbGlnaHRza3libHVlOjg5MDAzNDYsbGlnaHRzbGF0ZWdyYXk6NzgzMzc1MyxsaWdodHNsYXRlZ3JleTo3ODMzNzUzLGxpZ2h0c3RlZWxibHVlOjExNTg0NzM0LGxpZ2h0eWVsbG93OjE2Nzc3MTg0LFxubGltZTo2NTI4MCxsaW1lZ3JlZW46MzMyOTMzMCxsaW5lbjoxNjQ0NTY3MCxtYWdlbnRhOjE2NzExOTM1LG1hcm9vbjo4Mzg4NjA4LG1lZGl1bWFxdWFtYXJpbmU6NjczNzMyMixtZWRpdW1ibHVlOjIwNSxtZWRpdW1vcmNoaWQ6MTIyMTE2NjcsbWVkaXVtcHVycGxlOjk2NjI2ODMsbWVkaXVtc2VhZ3JlZW46Mzk3ODA5NyxtZWRpdW1zbGF0ZWJsdWU6ODA4Nzc5MCxtZWRpdW1zcHJpbmdncmVlbjo2NDE1NCxtZWRpdW10dXJxdW9pc2U6NDc3MjMwMCxtZWRpdW12aW9sZXRyZWQ6MTMwNDcxNzMsbWlkbmlnaHRibHVlOjE2NDQ5MTIsbWludGNyZWFtOjE2MTIxODUwLG1pc3R5cm9zZToxNjc3MDI3Myxtb2NjYXNpbjoxNjc3MDIyOSxuYXZham93aGl0ZToxNjc2ODY4NSxuYXZ5OjEyOCxvbGRsYWNlOjE2NjQzNTU4LG9saXZlOjg0MjEzNzYsb2xpdmVkcmFiOjcwNDg3Mzksb3JhbmdlOjE2NzUzOTIwLG9yYW5nZXJlZDoxNjcyOTM0NCxvcmNoaWQ6MTQzMTU3MzQscGFsZWdvbGRlbnJvZDoxNTY1NzEzMCxcbnBhbGVncmVlbjoxMDAyNTg4MCxwYWxldHVycXVvaXNlOjExNTI5OTY2LHBhbGV2aW9sZXRyZWQ6MTQzODEyMDMscGFwYXlhd2hpcDoxNjc3MzA3NyxwZWFjaHB1ZmY6MTY3Njc2NzMscGVydToxMzQ2ODk5MSxwaW5rOjE2NzYxMDM1LHBsdW06MTQ1MjQ2MzcscG93ZGVyYmx1ZToxMTU5MTkxMCxwdXJwbGU6ODM4ODczNixyZWQ6MTY3MTE2ODAscm9zeWJyb3duOjEyMzU3NTE5LHJveWFsYmx1ZTo0Mjg2OTQ1LHNhZGRsZWJyb3duOjkxMjcxODcsc2FsbW9uOjE2NDE2ODgyLHNhbmR5YnJvd246MTYwMzI4NjQsc2VhZ3JlZW46MzA1MDMyNyxzZWFzaGVsbDoxNjc3NDYzOCxzaWVubmE6MTA1MDY3OTcsc2lsdmVyOjEyNjMyMjU2LHNreWJsdWU6ODkwMDMzMSxzbGF0ZWJsdWU6Njk3MDA2MSxzbGF0ZWdyYXk6NzM3Mjk0NCxzbGF0ZWdyZXk6NzM3Mjk0NCxzbm93OjE2Nzc1OTMwLHNwcmluZ2dyZWVuOjY1NDA3LHN0ZWVsYmx1ZTo0NjIwOTgwLHRhbjoxMzgwODc4MCx0ZWFsOjMyODk2LHRoaXN0bGU6MTQyMDQ4ODgsXG50b21hdG86MTY3MzcwOTUsdHVycXVvaXNlOjQyNTE4NTYsdmlvbGV0OjE1NjMxMDg2LHdoZWF0OjE2MTEzMzMxLHdoaXRlOjE2Nzc3MjE1LHdoaXRlc21va2U6MTYxMTkyODUseWVsbG93OjE2Nzc2OTYwLHllbGxvd2dyZWVuOjEwMTQ1MDc0fTtUSFJFRS5RdWF0ZXJuaW9uPWZ1bmN0aW9uKGEsYixjLGQpe3RoaXMuX3g9YXx8MDt0aGlzLl95PWJ8fDA7dGhpcy5fej1jfHwwO3RoaXMuX3c9dm9pZCAwIT09ZD9kOjF9O1xuVEhSRUUuUXVhdGVybmlvbi5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRIUkVFLlF1YXRlcm5pb24sX3g6MCxfeTowLF96OjAsX3c6MCxnZXQgeCgpe3JldHVybiB0aGlzLl94fSxzZXQgeChhKXt0aGlzLl94PWE7dGhpcy5vbkNoYW5nZUNhbGxiYWNrKCl9LGdldCB5KCl7cmV0dXJuIHRoaXMuX3l9LHNldCB5KGEpe3RoaXMuX3k9YTt0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKX0sZ2V0IHooKXtyZXR1cm4gdGhpcy5fen0sc2V0IHooYSl7dGhpcy5fej1hO3RoaXMub25DaGFuZ2VDYWxsYmFjaygpfSxnZXQgdygpe3JldHVybiB0aGlzLl93fSxzZXQgdyhhKXt0aGlzLl93PWE7dGhpcy5vbkNoYW5nZUNhbGxiYWNrKCl9LHNldDpmdW5jdGlvbihhLGIsYyxkKXt0aGlzLl94PWE7dGhpcy5feT1iO3RoaXMuX3o9Yzt0aGlzLl93PWQ7dGhpcy5vbkNoYW5nZUNhbGxiYWNrKCk7cmV0dXJuIHRoaXN9LGNvcHk6ZnVuY3Rpb24oYSl7dGhpcy5feD1hLng7dGhpcy5feT1hLnk7dGhpcy5fej1hLno7XG50aGlzLl93PWEudzt0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKTtyZXR1cm4gdGhpc30sc2V0RnJvbUV1bGVyOmZ1bmN0aW9uKGEsYil7aWYoITE9PT1hIGluc3RhbmNlb2YgVEhSRUUuRXVsZXIpdGhyb3cgRXJyb3IoXCJUSFJFRS5RdWF0ZXJuaW9uOiAuc2V0RnJvbUV1bGVyKCkgbm93IGV4cGVjdHMgYSBFdWxlciByb3RhdGlvbiByYXRoZXIgdGhhbiBhIFZlY3RvcjMgYW5kIG9yZGVyLlwiKTt2YXIgYz1NYXRoLmNvcyhhLl94LzIpLGQ9TWF0aC5jb3MoYS5feS8yKSxlPU1hdGguY29zKGEuX3ovMiksZj1NYXRoLnNpbihhLl94LzIpLGc9TWF0aC5zaW4oYS5feS8yKSxoPU1hdGguc2luKGEuX3ovMik7XCJYWVpcIj09PWEub3JkZXI/KHRoaXMuX3g9ZipkKmUrYypnKmgsdGhpcy5feT1jKmcqZS1mKmQqaCx0aGlzLl96PWMqZCpoK2YqZyplLHRoaXMuX3c9YypkKmUtZipnKmgpOlwiWVhaXCI9PT1hLm9yZGVyPyh0aGlzLl94PWYqZCplK2MqZypoLHRoaXMuX3k9YypnKmUtZipkKmgsdGhpcy5fej1cbmMqZCpoLWYqZyplLHRoaXMuX3c9YypkKmUrZipnKmgpOlwiWlhZXCI9PT1hLm9yZGVyPyh0aGlzLl94PWYqZCplLWMqZypoLHRoaXMuX3k9YypnKmUrZipkKmgsdGhpcy5fej1jKmQqaCtmKmcqZSx0aGlzLl93PWMqZCplLWYqZypoKTpcIlpZWFwiPT09YS5vcmRlcj8odGhpcy5feD1mKmQqZS1jKmcqaCx0aGlzLl95PWMqZyplK2YqZCpoLHRoaXMuX3o9YypkKmgtZipnKmUsdGhpcy5fdz1jKmQqZStmKmcqaCk6XCJZWlhcIj09PWEub3JkZXI/KHRoaXMuX3g9ZipkKmUrYypnKmgsdGhpcy5feT1jKmcqZStmKmQqaCx0aGlzLl96PWMqZCpoLWYqZyplLHRoaXMuX3c9YypkKmUtZipnKmgpOlwiWFpZXCI9PT1hLm9yZGVyJiYodGhpcy5feD1mKmQqZS1jKmcqaCx0aGlzLl95PWMqZyplLWYqZCpoLHRoaXMuX3o9YypkKmgrZipnKmUsdGhpcy5fdz1jKmQqZStmKmcqaCk7aWYoITEhPT1iKXRoaXMub25DaGFuZ2VDYWxsYmFjaygpO3JldHVybiB0aGlzfSxzZXRGcm9tQXhpc0FuZ2xlOmZ1bmN0aW9uKGEsXG5iKXt2YXIgYz1iLzIsZD1NYXRoLnNpbihjKTt0aGlzLl94PWEueCpkO3RoaXMuX3k9YS55KmQ7dGhpcy5fej1hLnoqZDt0aGlzLl93PU1hdGguY29zKGMpO3RoaXMub25DaGFuZ2VDYWxsYmFjaygpO3JldHVybiB0aGlzfSxzZXRGcm9tUm90YXRpb25NYXRyaXg6ZnVuY3Rpb24oYSl7dmFyIGI9YS5lbGVtZW50cyxjPWJbMF07YT1iWzRdO3ZhciBkPWJbOF0sZT1iWzFdLGY9Yls1XSxnPWJbOV0saD1iWzJdLGs9Yls2XSxiPWJbMTBdLGw9YytmK2I7MDxsPyhjPS41L01hdGguc3FydChsKzEpLHRoaXMuX3c9LjI1L2MsdGhpcy5feD0oay1nKSpjLHRoaXMuX3k9KGQtaCkqYyx0aGlzLl96PShlLWEpKmMpOmM+ZiYmYz5iPyhjPTIqTWF0aC5zcXJ0KDErYy1mLWIpLHRoaXMuX3c9KGstZykvYyx0aGlzLl94PS4yNSpjLHRoaXMuX3k9KGErZSkvYyx0aGlzLl96PShkK2gpL2MpOmY+Yj8oYz0yKk1hdGguc3FydCgxK2YtYy1iKSx0aGlzLl93PShkLWgpL2MsdGhpcy5feD0oYStlKS9jLHRoaXMuX3k9XG4uMjUqYyx0aGlzLl96PShnK2spL2MpOihjPTIqTWF0aC5zcXJ0KDErYi1jLWYpLHRoaXMuX3c9KGUtYSkvYyx0aGlzLl94PShkK2gpL2MsdGhpcy5feT0oZytrKS9jLHRoaXMuX3o9LjI1KmMpO3RoaXMub25DaGFuZ2VDYWxsYmFjaygpO3JldHVybiB0aGlzfSxzZXRGcm9tVW5pdFZlY3RvcnM6ZnVuY3Rpb24oKXt2YXIgYSxiO3JldHVybiBmdW5jdGlvbihjLGQpe3ZvaWQgMD09PWEmJihhPW5ldyBUSFJFRS5WZWN0b3IzKTtiPWMuZG90KGQpKzE7MUUtNj5iPyhiPTAsTWF0aC5hYnMoYy54KT5NYXRoLmFicyhjLnopP2Euc2V0KC1jLnksYy54LDApOmEuc2V0KDAsLWMueixjLnkpKTphLmNyb3NzVmVjdG9ycyhjLGQpO3RoaXMuX3g9YS54O3RoaXMuX3k9YS55O3RoaXMuX3o9YS56O3RoaXMuX3c9Yjt0aGlzLm5vcm1hbGl6ZSgpO3JldHVybiB0aGlzfX0oKSxpbnZlcnNlOmZ1bmN0aW9uKCl7dGhpcy5jb25qdWdhdGUoKS5ub3JtYWxpemUoKTtyZXR1cm4gdGhpc30sY29uanVnYXRlOmZ1bmN0aW9uKCl7dGhpcy5feCo9XG4tMTt0aGlzLl95Kj0tMTt0aGlzLl96Kj0tMTt0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKTtyZXR1cm4gdGhpc30sZG90OmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLl94KmEuX3grdGhpcy5feSphLl95K3RoaXMuX3oqYS5feit0aGlzLl93KmEuX3d9LGxlbmd0aFNxOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3gqdGhpcy5feCt0aGlzLl95KnRoaXMuX3krdGhpcy5feip0aGlzLl96K3RoaXMuX3cqdGhpcy5fd30sbGVuZ3RoOmZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguc3FydCh0aGlzLl94KnRoaXMuX3grdGhpcy5feSp0aGlzLl95K3RoaXMuX3oqdGhpcy5feit0aGlzLl93KnRoaXMuX3cpfSxub3JtYWxpemU6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmxlbmd0aCgpOzA9PT1hPyh0aGlzLl96PXRoaXMuX3k9dGhpcy5feD0wLHRoaXMuX3c9MSk6KGE9MS9hLHRoaXMuX3gqPWEsdGhpcy5feSo9YSx0aGlzLl96Kj1hLHRoaXMuX3cqPWEpO3RoaXMub25DaGFuZ2VDYWxsYmFjaygpO3JldHVybiB0aGlzfSxcbm11bHRpcGx5OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHZvaWQgMCE9PWI/KFRIUkVFLndhcm4oXCJUSFJFRS5RdWF0ZXJuaW9uOiAubXVsdGlwbHkoKSBub3cgb25seSBhY2NlcHRzIG9uZSBhcmd1bWVudC4gVXNlIC5tdWx0aXBseVF1YXRlcm5pb25zKCBhLCBiICkgaW5zdGVhZC5cIiksdGhpcy5tdWx0aXBseVF1YXRlcm5pb25zKGEsYikpOnRoaXMubXVsdGlwbHlRdWF0ZXJuaW9ucyh0aGlzLGEpfSxtdWx0aXBseVF1YXRlcm5pb25zOmZ1bmN0aW9uKGEsYil7dmFyIGM9YS5feCxkPWEuX3ksZT1hLl96LGY9YS5fdyxnPWIuX3gsaD1iLl95LGs9Yi5feixsPWIuX3c7dGhpcy5feD1jKmwrZipnK2Qqay1lKmg7dGhpcy5feT1kKmwrZipoK2UqZy1jKms7dGhpcy5fej1lKmwrZiprK2MqaC1kKmc7dGhpcy5fdz1mKmwtYypnLWQqaC1lKms7dGhpcy5vbkNoYW5nZUNhbGxiYWNrKCk7cmV0dXJuIHRoaXN9LG11bHRpcGx5VmVjdG9yMzpmdW5jdGlvbihhKXtUSFJFRS53YXJuKFwiVEhSRUUuUXVhdGVybmlvbjogLm11bHRpcGx5VmVjdG9yMygpIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBpcyBub3cgdmVjdG9yLmFwcGx5UXVhdGVybmlvbiggcXVhdGVybmlvbiApIGluc3RlYWQuXCIpO1xucmV0dXJuIGEuYXBwbHlRdWF0ZXJuaW9uKHRoaXMpfSxzbGVycDpmdW5jdGlvbihhLGIpe2lmKDA9PT1iKXJldHVybiB0aGlzO2lmKDE9PT1iKXJldHVybiB0aGlzLmNvcHkoYSk7dmFyIGM9dGhpcy5feCxkPXRoaXMuX3ksZT10aGlzLl96LGY9dGhpcy5fdyxnPWYqYS5fdytjKmEuX3grZCphLl95K2UqYS5fejswPmc/KHRoaXMuX3c9LWEuX3csdGhpcy5feD0tYS5feCx0aGlzLl95PS1hLl95LHRoaXMuX3o9LWEuX3osZz0tZyk6dGhpcy5jb3B5KGEpO2lmKDE8PWcpcmV0dXJuIHRoaXMuX3c9Zix0aGlzLl94PWMsdGhpcy5feT1kLHRoaXMuX3o9ZSx0aGlzO3ZhciBoPU1hdGguYWNvcyhnKSxrPU1hdGguc3FydCgxLWcqZyk7aWYoLjAwMT5NYXRoLmFicyhrKSlyZXR1cm4gdGhpcy5fdz0uNSooZit0aGlzLl93KSx0aGlzLl94PS41KihjK3RoaXMuX3gpLHRoaXMuX3k9LjUqKGQrdGhpcy5feSksdGhpcy5fej0uNSooZSt0aGlzLl96KSx0aGlzO2c9TWF0aC5zaW4oKDEtYikqaCkvaztoPVxuTWF0aC5zaW4oYipoKS9rO3RoaXMuX3c9ZipnK3RoaXMuX3cqaDt0aGlzLl94PWMqZyt0aGlzLl94Kmg7dGhpcy5feT1kKmcrdGhpcy5feSpoO3RoaXMuX3o9ZSpnK3RoaXMuX3oqaDt0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKTtyZXR1cm4gdGhpc30sZXF1YWxzOmZ1bmN0aW9uKGEpe3JldHVybiBhLl94PT09dGhpcy5feCYmYS5feT09PXRoaXMuX3kmJmEuX3o9PT10aGlzLl96JiZhLl93PT09dGhpcy5fd30sZnJvbUFycmF5OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9MCk7dGhpcy5feD1hW2JdO3RoaXMuX3k9YVtiKzFdO3RoaXMuX3o9YVtiKzJdO3RoaXMuX3c9YVtiKzNdO3RoaXMub25DaGFuZ2VDYWxsYmFjaygpO3JldHVybiB0aGlzfSx0b0FycmF5OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YSYmKGE9W10pO3ZvaWQgMD09PWImJihiPTApO2FbYl09dGhpcy5feDthW2IrMV09dGhpcy5feTthW2IrMl09dGhpcy5fejthW2IrM109dGhpcy5fdztyZXR1cm4gYX0sb25DaGFuZ2U6ZnVuY3Rpb24oYSl7dGhpcy5vbkNoYW5nZUNhbGxiYWNrPVxuYTtyZXR1cm4gdGhpc30sb25DaGFuZ2VDYWxsYmFjazpmdW5jdGlvbigpe30sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFRIUkVFLlF1YXRlcm5pb24odGhpcy5feCx0aGlzLl95LHRoaXMuX3osdGhpcy5fdyl9fTtUSFJFRS5RdWF0ZXJuaW9uLnNsZXJwPWZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiBjLmNvcHkoYSkuc2xlcnAoYixkKX07VEhSRUUuVmVjdG9yMj1mdW5jdGlvbihhLGIpe3RoaXMueD1hfHwwO3RoaXMueT1ifHwwfTtcblRIUkVFLlZlY3RvcjIucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUSFJFRS5WZWN0b3IyLHNldDpmdW5jdGlvbihhLGIpe3RoaXMueD1hO3RoaXMueT1iO3JldHVybiB0aGlzfSxzZXRYOmZ1bmN0aW9uKGEpe3RoaXMueD1hO3JldHVybiB0aGlzfSxzZXRZOmZ1bmN0aW9uKGEpe3RoaXMueT1hO3JldHVybiB0aGlzfSxzZXRDb21wb25lbnQ6ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAwOnRoaXMueD1iO2JyZWFrO2Nhc2UgMTp0aGlzLnk9YjticmVhaztkZWZhdWx0OnRocm93IEVycm9yKFwiaW5kZXggaXMgb3V0IG9mIHJhbmdlOiBcIithKTt9fSxnZXRDb21wb25lbnQ6ZnVuY3Rpb24oYSl7c3dpdGNoKGEpe2Nhc2UgMDpyZXR1cm4gdGhpcy54O2Nhc2UgMTpyZXR1cm4gdGhpcy55O2RlZmF1bHQ6dGhyb3cgRXJyb3IoXCJpbmRleCBpcyBvdXQgb2YgcmFuZ2U6IFwiK2EpO319LGNvcHk6ZnVuY3Rpb24oYSl7dGhpcy54PWEueDt0aGlzLnk9YS55O3JldHVybiB0aGlzfSxhZGQ6ZnVuY3Rpb24oYSxcbmIpe2lmKHZvaWQgMCE9PWIpcmV0dXJuIFRIUkVFLndhcm4oXCJUSFJFRS5WZWN0b3IyOiAuYWRkKCkgbm93IG9ubHkgYWNjZXB0cyBvbmUgYXJndW1lbnQuIFVzZSAuYWRkVmVjdG9ycyggYSwgYiApIGluc3RlYWQuXCIpLHRoaXMuYWRkVmVjdG9ycyhhLGIpO3RoaXMueCs9YS54O3RoaXMueSs9YS55O3JldHVybiB0aGlzfSxhZGRTY2FsYXI6ZnVuY3Rpb24oYSl7dGhpcy54Kz1hO3RoaXMueSs9YTtyZXR1cm4gdGhpc30sYWRkVmVjdG9yczpmdW5jdGlvbihhLGIpe3RoaXMueD1hLngrYi54O3RoaXMueT1hLnkrYi55O3JldHVybiB0aGlzfSxzdWI6ZnVuY3Rpb24oYSxiKXtpZih2b2lkIDAhPT1iKXJldHVybiBUSFJFRS53YXJuKFwiVEhSRUUuVmVjdG9yMjogLnN1YigpIG5vdyBvbmx5IGFjY2VwdHMgb25lIGFyZ3VtZW50LiBVc2UgLnN1YlZlY3RvcnMoIGEsIGIgKSBpbnN0ZWFkLlwiKSx0aGlzLnN1YlZlY3RvcnMoYSxiKTt0aGlzLngtPWEueDt0aGlzLnktPWEueTtyZXR1cm4gdGhpc30sXG5zdWJTY2FsYXI6ZnVuY3Rpb24oYSl7dGhpcy54LT1hO3RoaXMueS09YTtyZXR1cm4gdGhpc30sc3ViVmVjdG9yczpmdW5jdGlvbihhLGIpe3RoaXMueD1hLngtYi54O3RoaXMueT1hLnktYi55O3JldHVybiB0aGlzfSxtdWx0aXBseTpmdW5jdGlvbihhKXt0aGlzLngqPWEueDt0aGlzLnkqPWEueTtyZXR1cm4gdGhpc30sbXVsdGlwbHlTY2FsYXI6ZnVuY3Rpb24oYSl7dGhpcy54Kj1hO3RoaXMueSo9YTtyZXR1cm4gdGhpc30sZGl2aWRlOmZ1bmN0aW9uKGEpe3RoaXMueC89YS54O3RoaXMueS89YS55O3JldHVybiB0aGlzfSxkaXZpZGVTY2FsYXI6ZnVuY3Rpb24oYSl7MCE9PWE/KGE9MS9hLHRoaXMueCo9YSx0aGlzLnkqPWEpOnRoaXMueT10aGlzLng9MDtyZXR1cm4gdGhpc30sbWluOmZ1bmN0aW9uKGEpe3RoaXMueD5hLngmJih0aGlzLng9YS54KTt0aGlzLnk+YS55JiYodGhpcy55PWEueSk7cmV0dXJuIHRoaXN9LG1heDpmdW5jdGlvbihhKXt0aGlzLng8YS54JiYodGhpcy54PWEueCk7XG50aGlzLnk8YS55JiYodGhpcy55PWEueSk7cmV0dXJuIHRoaXN9LGNsYW1wOmZ1bmN0aW9uKGEsYil7dGhpcy54PGEueD90aGlzLng9YS54OnRoaXMueD5iLngmJih0aGlzLng9Yi54KTt0aGlzLnk8YS55P3RoaXMueT1hLnk6dGhpcy55PmIueSYmKHRoaXMueT1iLnkpO3JldHVybiB0aGlzfSxjbGFtcFNjYWxhcjpmdW5jdGlvbigpe3ZhciBhLGI7cmV0dXJuIGZ1bmN0aW9uKGMsZCl7dm9pZCAwPT09YSYmKGE9bmV3IFRIUkVFLlZlY3RvcjIsYj1uZXcgVEhSRUUuVmVjdG9yMik7YS5zZXQoYyxjKTtiLnNldChkLGQpO3JldHVybiB0aGlzLmNsYW1wKGEsYil9fSgpLGZsb29yOmZ1bmN0aW9uKCl7dGhpcy54PU1hdGguZmxvb3IodGhpcy54KTt0aGlzLnk9TWF0aC5mbG9vcih0aGlzLnkpO3JldHVybiB0aGlzfSxjZWlsOmZ1bmN0aW9uKCl7dGhpcy54PU1hdGguY2VpbCh0aGlzLngpO3RoaXMueT1NYXRoLmNlaWwodGhpcy55KTtyZXR1cm4gdGhpc30scm91bmQ6ZnVuY3Rpb24oKXt0aGlzLng9XG5NYXRoLnJvdW5kKHRoaXMueCk7dGhpcy55PU1hdGgucm91bmQodGhpcy55KTtyZXR1cm4gdGhpc30scm91bmRUb1plcm86ZnVuY3Rpb24oKXt0aGlzLng9MD50aGlzLng/TWF0aC5jZWlsKHRoaXMueCk6TWF0aC5mbG9vcih0aGlzLngpO3RoaXMueT0wPnRoaXMueT9NYXRoLmNlaWwodGhpcy55KTpNYXRoLmZsb29yKHRoaXMueSk7cmV0dXJuIHRoaXN9LG5lZ2F0ZTpmdW5jdGlvbigpe3RoaXMueD0tdGhpcy54O3RoaXMueT0tdGhpcy55O3JldHVybiB0aGlzfSxkb3Q6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMueCphLngrdGhpcy55KmEueX0sbGVuZ3RoU3E6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54KnRoaXMueCt0aGlzLnkqdGhpcy55fSxsZW5ndGg6ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5zcXJ0KHRoaXMueCp0aGlzLngrdGhpcy55KnRoaXMueSl9LG5vcm1hbGl6ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRpdmlkZVNjYWxhcih0aGlzLmxlbmd0aCgpKX0sZGlzdGFuY2VUbzpmdW5jdGlvbihhKXtyZXR1cm4gTWF0aC5zcXJ0KHRoaXMuZGlzdGFuY2VUb1NxdWFyZWQoYSkpfSxcbmRpc3RhbmNlVG9TcXVhcmVkOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMueC1hLng7YT10aGlzLnktYS55O3JldHVybiBiKmIrYSphfSxzZXRMZW5ndGg6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5sZW5ndGgoKTswIT09YiYmYSE9PWImJnRoaXMubXVsdGlwbHlTY2FsYXIoYS9iKTtyZXR1cm4gdGhpc30sbGVycDpmdW5jdGlvbihhLGIpe3RoaXMueCs9KGEueC10aGlzLngpKmI7dGhpcy55Kz0oYS55LXRoaXMueSkqYjtyZXR1cm4gdGhpc30sbGVycFZlY3RvcnM6ZnVuY3Rpb24oYSxiLGMpe3RoaXMuc3ViVmVjdG9ycyhiLGEpLm11bHRpcGx5U2NhbGFyKGMpLmFkZChhKTtyZXR1cm4gdGhpc30sZXF1YWxzOmZ1bmN0aW9uKGEpe3JldHVybiBhLng9PT10aGlzLngmJmEueT09PXRoaXMueX0sZnJvbUFycmF5OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9MCk7dGhpcy54PWFbYl07dGhpcy55PWFbYisxXTtyZXR1cm4gdGhpc30sdG9BcnJheTpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PVxuYSYmKGE9W10pO3ZvaWQgMD09PWImJihiPTApO2FbYl09dGhpcy54O2FbYisxXT10aGlzLnk7cmV0dXJuIGF9LGZyb21BdHRyaWJ1dGU6ZnVuY3Rpb24oYSxiLGMpe3ZvaWQgMD09PWMmJihjPTApO2I9YiphLml0ZW1TaXplK2M7dGhpcy54PWEuYXJyYXlbYl07dGhpcy55PWEuYXJyYXlbYisxXTtyZXR1cm4gdGhpc30sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFRIUkVFLlZlY3RvcjIodGhpcy54LHRoaXMueSl9fTtUSFJFRS5WZWN0b3IzPWZ1bmN0aW9uKGEsYixjKXt0aGlzLng9YXx8MDt0aGlzLnk9Ynx8MDt0aGlzLno9Y3x8MH07XG5USFJFRS5WZWN0b3IzLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuVmVjdG9yMyxzZXQ6ZnVuY3Rpb24oYSxiLGMpe3RoaXMueD1hO3RoaXMueT1iO3RoaXMuej1jO3JldHVybiB0aGlzfSxzZXRYOmZ1bmN0aW9uKGEpe3RoaXMueD1hO3JldHVybiB0aGlzfSxzZXRZOmZ1bmN0aW9uKGEpe3RoaXMueT1hO3JldHVybiB0aGlzfSxzZXRaOmZ1bmN0aW9uKGEpe3RoaXMuej1hO3JldHVybiB0aGlzfSxzZXRDb21wb25lbnQ6ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAwOnRoaXMueD1iO2JyZWFrO2Nhc2UgMTp0aGlzLnk9YjticmVhaztjYXNlIDI6dGhpcy56PWI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihcImluZGV4IGlzIG91dCBvZiByYW5nZTogXCIrYSk7fX0sZ2V0Q29tcG9uZW50OmZ1bmN0aW9uKGEpe3N3aXRjaChhKXtjYXNlIDA6cmV0dXJuIHRoaXMueDtjYXNlIDE6cmV0dXJuIHRoaXMueTtjYXNlIDI6cmV0dXJuIHRoaXMuejtkZWZhdWx0OnRocm93IEVycm9yKFwiaW5kZXggaXMgb3V0IG9mIHJhbmdlOiBcIitcbmEpO319LGNvcHk6ZnVuY3Rpb24oYSl7dGhpcy54PWEueDt0aGlzLnk9YS55O3RoaXMuej1hLno7cmV0dXJuIHRoaXN9LGFkZDpmdW5jdGlvbihhLGIpe2lmKHZvaWQgMCE9PWIpcmV0dXJuIFRIUkVFLndhcm4oXCJUSFJFRS5WZWN0b3IzOiAuYWRkKCkgbm93IG9ubHkgYWNjZXB0cyBvbmUgYXJndW1lbnQuIFVzZSAuYWRkVmVjdG9ycyggYSwgYiApIGluc3RlYWQuXCIpLHRoaXMuYWRkVmVjdG9ycyhhLGIpO3RoaXMueCs9YS54O3RoaXMueSs9YS55O3RoaXMueis9YS56O3JldHVybiB0aGlzfSxhZGRTY2FsYXI6ZnVuY3Rpb24oYSl7dGhpcy54Kz1hO3RoaXMueSs9YTt0aGlzLnorPWE7cmV0dXJuIHRoaXN9LGFkZFZlY3RvcnM6ZnVuY3Rpb24oYSxiKXt0aGlzLng9YS54K2IueDt0aGlzLnk9YS55K2IueTt0aGlzLno9YS56K2IuejtyZXR1cm4gdGhpc30sc3ViOmZ1bmN0aW9uKGEsYil7aWYodm9pZCAwIT09YilyZXR1cm4gVEhSRUUud2FybihcIlRIUkVFLlZlY3RvcjM6IC5zdWIoKSBub3cgb25seSBhY2NlcHRzIG9uZSBhcmd1bWVudC4gVXNlIC5zdWJWZWN0b3JzKCBhLCBiICkgaW5zdGVhZC5cIiksXG50aGlzLnN1YlZlY3RvcnMoYSxiKTt0aGlzLngtPWEueDt0aGlzLnktPWEueTt0aGlzLnotPWEuejtyZXR1cm4gdGhpc30sc3ViU2NhbGFyOmZ1bmN0aW9uKGEpe3RoaXMueC09YTt0aGlzLnktPWE7dGhpcy56LT1hO3JldHVybiB0aGlzfSxzdWJWZWN0b3JzOmZ1bmN0aW9uKGEsYil7dGhpcy54PWEueC1iLng7dGhpcy55PWEueS1iLnk7dGhpcy56PWEuei1iLno7cmV0dXJuIHRoaXN9LG11bHRpcGx5OmZ1bmN0aW9uKGEsYil7aWYodm9pZCAwIT09YilyZXR1cm4gVEhSRUUud2FybihcIlRIUkVFLlZlY3RvcjM6IC5tdWx0aXBseSgpIG5vdyBvbmx5IGFjY2VwdHMgb25lIGFyZ3VtZW50LiBVc2UgLm11bHRpcGx5VmVjdG9ycyggYSwgYiApIGluc3RlYWQuXCIpLHRoaXMubXVsdGlwbHlWZWN0b3JzKGEsYik7dGhpcy54Kj1hLng7dGhpcy55Kj1hLnk7dGhpcy56Kj1hLno7cmV0dXJuIHRoaXN9LG11bHRpcGx5U2NhbGFyOmZ1bmN0aW9uKGEpe3RoaXMueCo9YTt0aGlzLnkqPWE7dGhpcy56Kj1cbmE7cmV0dXJuIHRoaXN9LG11bHRpcGx5VmVjdG9yczpmdW5jdGlvbihhLGIpe3RoaXMueD1hLngqYi54O3RoaXMueT1hLnkqYi55O3RoaXMuej1hLnoqYi56O3JldHVybiB0aGlzfSxhcHBseUV1bGVyOmZ1bmN0aW9uKCl7dmFyIGE7cmV0dXJuIGZ1bmN0aW9uKGIpeyExPT09YiBpbnN0YW5jZW9mIFRIUkVFLkV1bGVyJiZUSFJFRS5lcnJvcihcIlRIUkVFLlZlY3RvcjM6IC5hcHBseUV1bGVyKCkgbm93IGV4cGVjdHMgYSBFdWxlciByb3RhdGlvbiByYXRoZXIgdGhhbiBhIFZlY3RvcjMgYW5kIG9yZGVyLlwiKTt2b2lkIDA9PT1hJiYoYT1uZXcgVEhSRUUuUXVhdGVybmlvbik7dGhpcy5hcHBseVF1YXRlcm5pb24oYS5zZXRGcm9tRXVsZXIoYikpO3JldHVybiB0aGlzfX0oKSxhcHBseUF4aXNBbmdsZTpmdW5jdGlvbigpe3ZhciBhO3JldHVybiBmdW5jdGlvbihiLGMpe3ZvaWQgMD09PWEmJihhPW5ldyBUSFJFRS5RdWF0ZXJuaW9uKTt0aGlzLmFwcGx5UXVhdGVybmlvbihhLnNldEZyb21BeGlzQW5nbGUoYixcbmMpKTtyZXR1cm4gdGhpc319KCksYXBwbHlNYXRyaXgzOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMueCxjPXRoaXMueSxkPXRoaXMuejthPWEuZWxlbWVudHM7dGhpcy54PWFbMF0qYithWzNdKmMrYVs2XSpkO3RoaXMueT1hWzFdKmIrYVs0XSpjK2FbN10qZDt0aGlzLno9YVsyXSpiK2FbNV0qYythWzhdKmQ7cmV0dXJuIHRoaXN9LGFwcGx5TWF0cml4NDpmdW5jdGlvbihhKXt2YXIgYj10aGlzLngsYz10aGlzLnksZD10aGlzLno7YT1hLmVsZW1lbnRzO3RoaXMueD1hWzBdKmIrYVs0XSpjK2FbOF0qZCthWzEyXTt0aGlzLnk9YVsxXSpiK2FbNV0qYythWzldKmQrYVsxM107dGhpcy56PWFbMl0qYithWzZdKmMrYVsxMF0qZCthWzE0XTtyZXR1cm4gdGhpc30sYXBwbHlQcm9qZWN0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMueCxjPXRoaXMueSxkPXRoaXMuejthPWEuZWxlbWVudHM7dmFyIGU9MS8oYVszXSpiK2FbN10qYythWzExXSpkK2FbMTVdKTt0aGlzLng9KGFbMF0qYithWzRdKlxuYythWzhdKmQrYVsxMl0pKmU7dGhpcy55PShhWzFdKmIrYVs1XSpjK2FbOV0qZCthWzEzXSkqZTt0aGlzLno9KGFbMl0qYithWzZdKmMrYVsxMF0qZCthWzE0XSkqZTtyZXR1cm4gdGhpc30sYXBwbHlRdWF0ZXJuaW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMueCxjPXRoaXMueSxkPXRoaXMueixlPWEueCxmPWEueSxnPWEuejthPWEudzt2YXIgaD1hKmIrZipkLWcqYyxrPWEqYytnKmItZSpkLGw9YSpkK2UqYy1mKmIsYj0tZSpiLWYqYy1nKmQ7dGhpcy54PWgqYStiKi1lK2sqLWctbCotZjt0aGlzLnk9ayphK2IqLWYrbCotZS1oKi1nO3RoaXMuej1sKmErYiotZytoKi1mLWsqLWU7cmV0dXJuIHRoaXN9LHByb2plY3Q6ZnVuY3Rpb24oKXt2YXIgYTtyZXR1cm4gZnVuY3Rpb24oYil7dm9pZCAwPT09YSYmKGE9bmV3IFRIUkVFLk1hdHJpeDQpO2EubXVsdGlwbHlNYXRyaWNlcyhiLnByb2plY3Rpb25NYXRyaXgsYS5nZXRJbnZlcnNlKGIubWF0cml4V29ybGQpKTtyZXR1cm4gdGhpcy5hcHBseVByb2plY3Rpb24oYSl9fSgpLFxudW5wcm9qZWN0OmZ1bmN0aW9uKCl7dmFyIGE7cmV0dXJuIGZ1bmN0aW9uKGIpe3ZvaWQgMD09PWEmJihhPW5ldyBUSFJFRS5NYXRyaXg0KTthLm11bHRpcGx5TWF0cmljZXMoYi5tYXRyaXhXb3JsZCxhLmdldEludmVyc2UoYi5wcm9qZWN0aW9uTWF0cml4KSk7cmV0dXJuIHRoaXMuYXBwbHlQcm9qZWN0aW9uKGEpfX0oKSx0cmFuc2Zvcm1EaXJlY3Rpb246ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy54LGM9dGhpcy55LGQ9dGhpcy56O2E9YS5lbGVtZW50czt0aGlzLng9YVswXSpiK2FbNF0qYythWzhdKmQ7dGhpcy55PWFbMV0qYithWzVdKmMrYVs5XSpkO3RoaXMuej1hWzJdKmIrYVs2XSpjK2FbMTBdKmQ7dGhpcy5ub3JtYWxpemUoKTtyZXR1cm4gdGhpc30sZGl2aWRlOmZ1bmN0aW9uKGEpe3RoaXMueC89YS54O3RoaXMueS89YS55O3RoaXMuei89YS56O3JldHVybiB0aGlzfSxkaXZpZGVTY2FsYXI6ZnVuY3Rpb24oYSl7MCE9PWE/KGE9MS9hLHRoaXMueCo9YSx0aGlzLnkqPWEsdGhpcy56Kj1cbmEpOnRoaXMuej10aGlzLnk9dGhpcy54PTA7cmV0dXJuIHRoaXN9LG1pbjpmdW5jdGlvbihhKXt0aGlzLng+YS54JiYodGhpcy54PWEueCk7dGhpcy55PmEueSYmKHRoaXMueT1hLnkpO3RoaXMuej5hLnomJih0aGlzLno9YS56KTtyZXR1cm4gdGhpc30sbWF4OmZ1bmN0aW9uKGEpe3RoaXMueDxhLngmJih0aGlzLng9YS54KTt0aGlzLnk8YS55JiYodGhpcy55PWEueSk7dGhpcy56PGEueiYmKHRoaXMuej1hLnopO3JldHVybiB0aGlzfSxjbGFtcDpmdW5jdGlvbihhLGIpe3RoaXMueDxhLng/dGhpcy54PWEueDp0aGlzLng+Yi54JiYodGhpcy54PWIueCk7dGhpcy55PGEueT90aGlzLnk9YS55OnRoaXMueT5iLnkmJih0aGlzLnk9Yi55KTt0aGlzLno8YS56P3RoaXMuej1hLno6dGhpcy56PmIueiYmKHRoaXMuej1iLnopO3JldHVybiB0aGlzfSxjbGFtcFNjYWxhcjpmdW5jdGlvbigpe3ZhciBhLGI7cmV0dXJuIGZ1bmN0aW9uKGMsZCl7dm9pZCAwPT09YSYmKGE9bmV3IFRIUkVFLlZlY3RvcjMsXG5iPW5ldyBUSFJFRS5WZWN0b3IzKTthLnNldChjLGMsYyk7Yi5zZXQoZCxkLGQpO3JldHVybiB0aGlzLmNsYW1wKGEsYil9fSgpLGZsb29yOmZ1bmN0aW9uKCl7dGhpcy54PU1hdGguZmxvb3IodGhpcy54KTt0aGlzLnk9TWF0aC5mbG9vcih0aGlzLnkpO3RoaXMuej1NYXRoLmZsb29yKHRoaXMueik7cmV0dXJuIHRoaXN9LGNlaWw6ZnVuY3Rpb24oKXt0aGlzLng9TWF0aC5jZWlsKHRoaXMueCk7dGhpcy55PU1hdGguY2VpbCh0aGlzLnkpO3RoaXMuej1NYXRoLmNlaWwodGhpcy56KTtyZXR1cm4gdGhpc30scm91bmQ6ZnVuY3Rpb24oKXt0aGlzLng9TWF0aC5yb3VuZCh0aGlzLngpO3RoaXMueT1NYXRoLnJvdW5kKHRoaXMueSk7dGhpcy56PU1hdGgucm91bmQodGhpcy56KTtyZXR1cm4gdGhpc30scm91bmRUb1plcm86ZnVuY3Rpb24oKXt0aGlzLng9MD50aGlzLng/TWF0aC5jZWlsKHRoaXMueCk6TWF0aC5mbG9vcih0aGlzLngpO3RoaXMueT0wPnRoaXMueT9NYXRoLmNlaWwodGhpcy55KTpcbk1hdGguZmxvb3IodGhpcy55KTt0aGlzLno9MD50aGlzLno/TWF0aC5jZWlsKHRoaXMueik6TWF0aC5mbG9vcih0aGlzLnopO3JldHVybiB0aGlzfSxuZWdhdGU6ZnVuY3Rpb24oKXt0aGlzLng9LXRoaXMueDt0aGlzLnk9LXRoaXMueTt0aGlzLno9LXRoaXMuejtyZXR1cm4gdGhpc30sZG90OmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLngqYS54K3RoaXMueSphLnkrdGhpcy56KmEuen0sbGVuZ3RoU3E6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54KnRoaXMueCt0aGlzLnkqdGhpcy55K3RoaXMueip0aGlzLnp9LGxlbmd0aDpmdW5jdGlvbigpe3JldHVybiBNYXRoLnNxcnQodGhpcy54KnRoaXMueCt0aGlzLnkqdGhpcy55K3RoaXMueip0aGlzLnopfSxsZW5ndGhNYW5oYXR0YW46ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5hYnModGhpcy54KStNYXRoLmFicyh0aGlzLnkpK01hdGguYWJzKHRoaXMueil9LG5vcm1hbGl6ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRpdmlkZVNjYWxhcih0aGlzLmxlbmd0aCgpKX0sXG5zZXRMZW5ndGg6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5sZW5ndGgoKTswIT09YiYmYSE9PWImJnRoaXMubXVsdGlwbHlTY2FsYXIoYS9iKTtyZXR1cm4gdGhpc30sbGVycDpmdW5jdGlvbihhLGIpe3RoaXMueCs9KGEueC10aGlzLngpKmI7dGhpcy55Kz0oYS55LXRoaXMueSkqYjt0aGlzLnorPShhLnotdGhpcy56KSpiO3JldHVybiB0aGlzfSxsZXJwVmVjdG9yczpmdW5jdGlvbihhLGIsYyl7dGhpcy5zdWJWZWN0b3JzKGIsYSkubXVsdGlwbHlTY2FsYXIoYykuYWRkKGEpO3JldHVybiB0aGlzfSxjcm9zczpmdW5jdGlvbihhLGIpe2lmKHZvaWQgMCE9PWIpcmV0dXJuIFRIUkVFLndhcm4oXCJUSFJFRS5WZWN0b3IzOiAuY3Jvc3MoKSBub3cgb25seSBhY2NlcHRzIG9uZSBhcmd1bWVudC4gVXNlIC5jcm9zc1ZlY3RvcnMoIGEsIGIgKSBpbnN0ZWFkLlwiKSx0aGlzLmNyb3NzVmVjdG9ycyhhLGIpO3ZhciBjPXRoaXMueCxkPXRoaXMueSxlPXRoaXMuejt0aGlzLng9ZCphLnotZSphLnk7dGhpcy55PVxuZSphLngtYyphLno7dGhpcy56PWMqYS55LWQqYS54O3JldHVybiB0aGlzfSxjcm9zc1ZlY3RvcnM6ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLngsZD1hLnksZT1hLnosZj1iLngsZz1iLnksaD1iLno7dGhpcy54PWQqaC1lKmc7dGhpcy55PWUqZi1jKmg7dGhpcy56PWMqZy1kKmY7cmV0dXJuIHRoaXN9LHByb2plY3RPblZlY3RvcjpmdW5jdGlvbigpe3ZhciBhLGI7cmV0dXJuIGZ1bmN0aW9uKGMpe3ZvaWQgMD09PWEmJihhPW5ldyBUSFJFRS5WZWN0b3IzKTthLmNvcHkoYykubm9ybWFsaXplKCk7Yj10aGlzLmRvdChhKTtyZXR1cm4gdGhpcy5jb3B5KGEpLm11bHRpcGx5U2NhbGFyKGIpfX0oKSxwcm9qZWN0T25QbGFuZTpmdW5jdGlvbigpe3ZhciBhO3JldHVybiBmdW5jdGlvbihiKXt2b2lkIDA9PT1hJiYoYT1uZXcgVEhSRUUuVmVjdG9yMyk7YS5jb3B5KHRoaXMpLnByb2plY3RPblZlY3RvcihiKTtyZXR1cm4gdGhpcy5zdWIoYSl9fSgpLHJlZmxlY3Q6ZnVuY3Rpb24oKXt2YXIgYTtyZXR1cm4gZnVuY3Rpb24oYil7dm9pZCAwPT09XG5hJiYoYT1uZXcgVEhSRUUuVmVjdG9yMyk7cmV0dXJuIHRoaXMuc3ViKGEuY29weShiKS5tdWx0aXBseVNjYWxhcigyKnRoaXMuZG90KGIpKSl9fSgpLGFuZ2xlVG86ZnVuY3Rpb24oYSl7YT10aGlzLmRvdChhKS8odGhpcy5sZW5ndGgoKSphLmxlbmd0aCgpKTtyZXR1cm4gTWF0aC5hY29zKFRIUkVFLk1hdGguY2xhbXAoYSwtMSwxKSl9LGRpc3RhbmNlVG86ZnVuY3Rpb24oYSl7cmV0dXJuIE1hdGguc3FydCh0aGlzLmRpc3RhbmNlVG9TcXVhcmVkKGEpKX0sZGlzdGFuY2VUb1NxdWFyZWQ6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy54LWEueCxjPXRoaXMueS1hLnk7YT10aGlzLnotYS56O3JldHVybiBiKmIrYypjK2EqYX0sc2V0RXVsZXJGcm9tUm90YXRpb25NYXRyaXg6ZnVuY3Rpb24oYSxiKXtUSFJFRS5lcnJvcihcIlRIUkVFLlZlY3RvcjM6IC5zZXRFdWxlckZyb21Sb3RhdGlvbk1hdHJpeCgpIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBFdWxlci5zZXRGcm9tUm90YXRpb25NYXRyaXgoKSBpbnN0ZWFkLlwiKX0sXG5zZXRFdWxlckZyb21RdWF0ZXJuaW9uOmZ1bmN0aW9uKGEsYil7VEhSRUUuZXJyb3IoXCJUSFJFRS5WZWN0b3IzOiAuc2V0RXVsZXJGcm9tUXVhdGVybmlvbigpIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBFdWxlci5zZXRGcm9tUXVhdGVybmlvbigpIGluc3RlYWQuXCIpfSxnZXRQb3NpdGlvbkZyb21NYXRyaXg6ZnVuY3Rpb24oYSl7VEhSRUUud2FybihcIlRIUkVFLlZlY3RvcjM6IC5nZXRQb3NpdGlvbkZyb21NYXRyaXgoKSBoYXMgYmVlbiByZW5hbWVkIHRvIC5zZXRGcm9tTWF0cml4UG9zaXRpb24oKS5cIik7cmV0dXJuIHRoaXMuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKGEpfSxnZXRTY2FsZUZyb21NYXRyaXg6ZnVuY3Rpb24oYSl7VEhSRUUud2FybihcIlRIUkVFLlZlY3RvcjM6IC5nZXRTY2FsZUZyb21NYXRyaXgoKSBoYXMgYmVlbiByZW5hbWVkIHRvIC5zZXRGcm9tTWF0cml4U2NhbGUoKS5cIik7cmV0dXJuIHRoaXMuc2V0RnJvbU1hdHJpeFNjYWxlKGEpfSxnZXRDb2x1bW5Gcm9tTWF0cml4OmZ1bmN0aW9uKGEsXG5iKXtUSFJFRS53YXJuKFwiVEhSRUUuVmVjdG9yMzogLmdldENvbHVtbkZyb21NYXRyaXgoKSBoYXMgYmVlbiByZW5hbWVkIHRvIC5zZXRGcm9tTWF0cml4Q29sdW1uKCkuXCIpO3JldHVybiB0aGlzLnNldEZyb21NYXRyaXhDb2x1bW4oYSxiKX0sc2V0RnJvbU1hdHJpeFBvc2l0aW9uOmZ1bmN0aW9uKGEpe3RoaXMueD1hLmVsZW1lbnRzWzEyXTt0aGlzLnk9YS5lbGVtZW50c1sxM107dGhpcy56PWEuZWxlbWVudHNbMTRdO3JldHVybiB0aGlzfSxzZXRGcm9tTWF0cml4U2NhbGU6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5zZXQoYS5lbGVtZW50c1swXSxhLmVsZW1lbnRzWzFdLGEuZWxlbWVudHNbMl0pLmxlbmd0aCgpLGM9dGhpcy5zZXQoYS5lbGVtZW50c1s0XSxhLmVsZW1lbnRzWzVdLGEuZWxlbWVudHNbNl0pLmxlbmd0aCgpO2E9dGhpcy5zZXQoYS5lbGVtZW50c1s4XSxhLmVsZW1lbnRzWzldLGEuZWxlbWVudHNbMTBdKS5sZW5ndGgoKTt0aGlzLng9Yjt0aGlzLnk9Yzt0aGlzLno9YTtcbnJldHVybiB0aGlzfSxzZXRGcm9tTWF0cml4Q29sdW1uOmZ1bmN0aW9uKGEsYil7dmFyIGM9NCphLGQ9Yi5lbGVtZW50czt0aGlzLng9ZFtjXTt0aGlzLnk9ZFtjKzFdO3RoaXMuej1kW2MrMl07cmV0dXJuIHRoaXN9LGVxdWFsczpmdW5jdGlvbihhKXtyZXR1cm4gYS54PT09dGhpcy54JiZhLnk9PT10aGlzLnkmJmEuej09PXRoaXMuen0sZnJvbUFycmF5OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9MCk7dGhpcy54PWFbYl07dGhpcy55PWFbYisxXTt0aGlzLno9YVtiKzJdO3JldHVybiB0aGlzfSx0b0FycmF5OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YSYmKGE9W10pO3ZvaWQgMD09PWImJihiPTApO2FbYl09dGhpcy54O2FbYisxXT10aGlzLnk7YVtiKzJdPXRoaXMuejtyZXR1cm4gYX0sZnJvbUF0dHJpYnV0ZTpmdW5jdGlvbihhLGIsYyl7dm9pZCAwPT09YyYmKGM9MCk7Yj1iKmEuaXRlbVNpemUrYzt0aGlzLng9YS5hcnJheVtiXTt0aGlzLnk9YS5hcnJheVtiKzFdO3RoaXMuej1cbmEuYXJyYXlbYisyXTtyZXR1cm4gdGhpc30sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFRIUkVFLlZlY3RvcjModGhpcy54LHRoaXMueSx0aGlzLnopfX07VEhSRUUuVmVjdG9yND1mdW5jdGlvbihhLGIsYyxkKXt0aGlzLng9YXx8MDt0aGlzLnk9Ynx8MDt0aGlzLno9Y3x8MDt0aGlzLnc9dm9pZCAwIT09ZD9kOjF9O1xuVEhSRUUuVmVjdG9yNC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRIUkVFLlZlY3RvcjQsc2V0OmZ1bmN0aW9uKGEsYixjLGQpe3RoaXMueD1hO3RoaXMueT1iO3RoaXMuej1jO3RoaXMudz1kO3JldHVybiB0aGlzfSxzZXRYOmZ1bmN0aW9uKGEpe3RoaXMueD1hO3JldHVybiB0aGlzfSxzZXRZOmZ1bmN0aW9uKGEpe3RoaXMueT1hO3JldHVybiB0aGlzfSxzZXRaOmZ1bmN0aW9uKGEpe3RoaXMuej1hO3JldHVybiB0aGlzfSxzZXRXOmZ1bmN0aW9uKGEpe3RoaXMudz1hO3JldHVybiB0aGlzfSxzZXRDb21wb25lbnQ6ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAwOnRoaXMueD1iO2JyZWFrO2Nhc2UgMTp0aGlzLnk9YjticmVhaztjYXNlIDI6dGhpcy56PWI7YnJlYWs7Y2FzZSAzOnRoaXMudz1iO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoXCJpbmRleCBpcyBvdXQgb2YgcmFuZ2U6IFwiK2EpO319LGdldENvbXBvbmVudDpmdW5jdGlvbihhKXtzd2l0Y2goYSl7Y2FzZSAwOnJldHVybiB0aGlzLng7XG5jYXNlIDE6cmV0dXJuIHRoaXMueTtjYXNlIDI6cmV0dXJuIHRoaXMuejtjYXNlIDM6cmV0dXJuIHRoaXMudztkZWZhdWx0OnRocm93IEVycm9yKFwiaW5kZXggaXMgb3V0IG9mIHJhbmdlOiBcIithKTt9fSxjb3B5OmZ1bmN0aW9uKGEpe3RoaXMueD1hLng7dGhpcy55PWEueTt0aGlzLno9YS56O3RoaXMudz12b2lkIDAhPT1hLnc/YS53OjE7cmV0dXJuIHRoaXN9LGFkZDpmdW5jdGlvbihhLGIpe2lmKHZvaWQgMCE9PWIpcmV0dXJuIFRIUkVFLndhcm4oXCJUSFJFRS5WZWN0b3I0OiAuYWRkKCkgbm93IG9ubHkgYWNjZXB0cyBvbmUgYXJndW1lbnQuIFVzZSAuYWRkVmVjdG9ycyggYSwgYiApIGluc3RlYWQuXCIpLHRoaXMuYWRkVmVjdG9ycyhhLGIpO3RoaXMueCs9YS54O3RoaXMueSs9YS55O3RoaXMueis9YS56O3RoaXMudys9YS53O3JldHVybiB0aGlzfSxhZGRTY2FsYXI6ZnVuY3Rpb24oYSl7dGhpcy54Kz1hO3RoaXMueSs9YTt0aGlzLnorPWE7dGhpcy53Kz1hO3JldHVybiB0aGlzfSxhZGRWZWN0b3JzOmZ1bmN0aW9uKGEsXG5iKXt0aGlzLng9YS54K2IueDt0aGlzLnk9YS55K2IueTt0aGlzLno9YS56K2Iuejt0aGlzLnc9YS53K2IudztyZXR1cm4gdGhpc30sc3ViOmZ1bmN0aW9uKGEsYil7aWYodm9pZCAwIT09YilyZXR1cm4gVEhSRUUud2FybihcIlRIUkVFLlZlY3RvcjQ6IC5zdWIoKSBub3cgb25seSBhY2NlcHRzIG9uZSBhcmd1bWVudC4gVXNlIC5zdWJWZWN0b3JzKCBhLCBiICkgaW5zdGVhZC5cIiksdGhpcy5zdWJWZWN0b3JzKGEsYik7dGhpcy54LT1hLng7dGhpcy55LT1hLnk7dGhpcy56LT1hLno7dGhpcy53LT1hLnc7cmV0dXJuIHRoaXN9LHN1YlNjYWxhcjpmdW5jdGlvbihhKXt0aGlzLngtPWE7dGhpcy55LT1hO3RoaXMuei09YTt0aGlzLnctPWE7cmV0dXJuIHRoaXN9LHN1YlZlY3RvcnM6ZnVuY3Rpb24oYSxiKXt0aGlzLng9YS54LWIueDt0aGlzLnk9YS55LWIueTt0aGlzLno9YS56LWIuejt0aGlzLnc9YS53LWIudztyZXR1cm4gdGhpc30sbXVsdGlwbHlTY2FsYXI6ZnVuY3Rpb24oYSl7dGhpcy54Kj1cbmE7dGhpcy55Kj1hO3RoaXMueio9YTt0aGlzLncqPWE7cmV0dXJuIHRoaXN9LGFwcGx5TWF0cml4NDpmdW5jdGlvbihhKXt2YXIgYj10aGlzLngsYz10aGlzLnksZD10aGlzLnosZT10aGlzLnc7YT1hLmVsZW1lbnRzO3RoaXMueD1hWzBdKmIrYVs0XSpjK2FbOF0qZCthWzEyXSplO3RoaXMueT1hWzFdKmIrYVs1XSpjK2FbOV0qZCthWzEzXSplO3RoaXMuej1hWzJdKmIrYVs2XSpjK2FbMTBdKmQrYVsxNF0qZTt0aGlzLnc9YVszXSpiK2FbN10qYythWzExXSpkK2FbMTVdKmU7cmV0dXJuIHRoaXN9LGRpdmlkZVNjYWxhcjpmdW5jdGlvbihhKXswIT09YT8oYT0xL2EsdGhpcy54Kj1hLHRoaXMueSo9YSx0aGlzLnoqPWEsdGhpcy53Kj1hKToodGhpcy56PXRoaXMueT10aGlzLng9MCx0aGlzLnc9MSk7cmV0dXJuIHRoaXN9LHNldEF4aXNBbmdsZUZyb21RdWF0ZXJuaW9uOmZ1bmN0aW9uKGEpe3RoaXMudz0yKk1hdGguYWNvcyhhLncpO3ZhciBiPU1hdGguc3FydCgxLWEudyphLncpOzFFLTQ+XG5iPyh0aGlzLng9MSx0aGlzLno9dGhpcy55PTApOih0aGlzLng9YS54L2IsdGhpcy55PWEueS9iLHRoaXMuej1hLnovYik7cmV0dXJuIHRoaXN9LHNldEF4aXNBbmdsZUZyb21Sb3RhdGlvbk1hdHJpeDpmdW5jdGlvbihhKXt2YXIgYixjLGQ7YT1hLmVsZW1lbnRzO3ZhciBlPWFbMF07ZD1hWzRdO3ZhciBmPWFbOF0sZz1hWzFdLGg9YVs1XSxrPWFbOV07Yz1hWzJdO2I9YVs2XTt2YXIgbD1hWzEwXTtpZiguMDE+TWF0aC5hYnMoZC1nKSYmLjAxPk1hdGguYWJzKGYtYykmJi4wMT5NYXRoLmFicyhrLWIpKXtpZiguMT5NYXRoLmFicyhkK2cpJiYuMT5NYXRoLmFicyhmK2MpJiYuMT5NYXRoLmFicyhrK2IpJiYuMT5NYXRoLmFicyhlK2grbC0zKSlyZXR1cm4gdGhpcy5zZXQoMSwwLDAsMCksdGhpczthPU1hdGguUEk7ZT0oZSsxKS8yO2g9KGgrMSkvMjtsPShsKzEpLzI7ZD0oZCtnKS80O2Y9KGYrYykvNDtrPShrK2IpLzQ7ZT5oJiZlPmw/LjAxPmU/KGI9MCxkPWM9LjcwNzEwNjc4MSk6KGI9XG5NYXRoLnNxcnQoZSksYz1kL2IsZD1mL2IpOmg+bD8uMDE+aD8oYj0uNzA3MTA2NzgxLGM9MCxkPS43MDcxMDY3ODEpOihjPU1hdGguc3FydChoKSxiPWQvYyxkPWsvYyk6LjAxPmw/KGM9Yj0uNzA3MTA2NzgxLGQ9MCk6KGQ9TWF0aC5zcXJ0KGwpLGI9Zi9kLGM9ay9kKTt0aGlzLnNldChiLGMsZCxhKTtyZXR1cm4gdGhpc31hPU1hdGguc3FydCgoYi1rKSooYi1rKSsoZi1jKSooZi1jKSsoZy1kKSooZy1kKSk7LjAwMT5NYXRoLmFicyhhKSYmKGE9MSk7dGhpcy54PShiLWspL2E7dGhpcy55PShmLWMpL2E7dGhpcy56PShnLWQpL2E7dGhpcy53PU1hdGguYWNvcygoZStoK2wtMSkvMik7cmV0dXJuIHRoaXN9LG1pbjpmdW5jdGlvbihhKXt0aGlzLng+YS54JiYodGhpcy54PWEueCk7dGhpcy55PmEueSYmKHRoaXMueT1hLnkpO3RoaXMuej5hLnomJih0aGlzLno9YS56KTt0aGlzLnc+YS53JiYodGhpcy53PWEudyk7cmV0dXJuIHRoaXN9LG1heDpmdW5jdGlvbihhKXt0aGlzLng8YS54JiZcbih0aGlzLng9YS54KTt0aGlzLnk8YS55JiYodGhpcy55PWEueSk7dGhpcy56PGEueiYmKHRoaXMuej1hLnopO3RoaXMudzxhLncmJih0aGlzLnc9YS53KTtyZXR1cm4gdGhpc30sY2xhbXA6ZnVuY3Rpb24oYSxiKXt0aGlzLng8YS54P3RoaXMueD1hLng6dGhpcy54PmIueCYmKHRoaXMueD1iLngpO3RoaXMueTxhLnk/dGhpcy55PWEueTp0aGlzLnk+Yi55JiYodGhpcy55PWIueSk7dGhpcy56PGEuej90aGlzLno9YS56OnRoaXMuej5iLnomJih0aGlzLno9Yi56KTt0aGlzLnc8YS53P3RoaXMudz1hLnc6dGhpcy53PmIudyYmKHRoaXMudz1iLncpO3JldHVybiB0aGlzfSxjbGFtcFNjYWxhcjpmdW5jdGlvbigpe3ZhciBhLGI7cmV0dXJuIGZ1bmN0aW9uKGMsZCl7dm9pZCAwPT09YSYmKGE9bmV3IFRIUkVFLlZlY3RvcjQsYj1uZXcgVEhSRUUuVmVjdG9yNCk7YS5zZXQoYyxjLGMsYyk7Yi5zZXQoZCxkLGQsZCk7cmV0dXJuIHRoaXMuY2xhbXAoYSxiKX19KCksZmxvb3I6ZnVuY3Rpb24oKXt0aGlzLng9XG5NYXRoLmZsb29yKHRoaXMueCk7dGhpcy55PU1hdGguZmxvb3IodGhpcy55KTt0aGlzLno9TWF0aC5mbG9vcih0aGlzLnopO3RoaXMudz1NYXRoLmZsb29yKHRoaXMudyk7cmV0dXJuIHRoaXN9LGNlaWw6ZnVuY3Rpb24oKXt0aGlzLng9TWF0aC5jZWlsKHRoaXMueCk7dGhpcy55PU1hdGguY2VpbCh0aGlzLnkpO3RoaXMuej1NYXRoLmNlaWwodGhpcy56KTt0aGlzLnc9TWF0aC5jZWlsKHRoaXMudyk7cmV0dXJuIHRoaXN9LHJvdW5kOmZ1bmN0aW9uKCl7dGhpcy54PU1hdGgucm91bmQodGhpcy54KTt0aGlzLnk9TWF0aC5yb3VuZCh0aGlzLnkpO3RoaXMuej1NYXRoLnJvdW5kKHRoaXMueik7dGhpcy53PU1hdGgucm91bmQodGhpcy53KTtyZXR1cm4gdGhpc30scm91bmRUb1plcm86ZnVuY3Rpb24oKXt0aGlzLng9MD50aGlzLng/TWF0aC5jZWlsKHRoaXMueCk6TWF0aC5mbG9vcih0aGlzLngpO3RoaXMueT0wPnRoaXMueT9NYXRoLmNlaWwodGhpcy55KTpNYXRoLmZsb29yKHRoaXMueSk7XG50aGlzLno9MD50aGlzLno/TWF0aC5jZWlsKHRoaXMueik6TWF0aC5mbG9vcih0aGlzLnopO3RoaXMudz0wPnRoaXMudz9NYXRoLmNlaWwodGhpcy53KTpNYXRoLmZsb29yKHRoaXMudyk7cmV0dXJuIHRoaXN9LG5lZ2F0ZTpmdW5jdGlvbigpe3RoaXMueD0tdGhpcy54O3RoaXMueT0tdGhpcy55O3RoaXMuej0tdGhpcy56O3RoaXMudz0tdGhpcy53O3JldHVybiB0aGlzfSxkb3Q6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMueCphLngrdGhpcy55KmEueSt0aGlzLnoqYS56K3RoaXMudyphLnd9LGxlbmd0aFNxOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueCp0aGlzLngrdGhpcy55KnRoaXMueSt0aGlzLnoqdGhpcy56K3RoaXMudyp0aGlzLnd9LGxlbmd0aDpmdW5jdGlvbigpe3JldHVybiBNYXRoLnNxcnQodGhpcy54KnRoaXMueCt0aGlzLnkqdGhpcy55K3RoaXMueip0aGlzLnordGhpcy53KnRoaXMudyl9LGxlbmd0aE1hbmhhdHRhbjpmdW5jdGlvbigpe3JldHVybiBNYXRoLmFicyh0aGlzLngpK1xuTWF0aC5hYnModGhpcy55KStNYXRoLmFicyh0aGlzLnopK01hdGguYWJzKHRoaXMudyl9LG5vcm1hbGl6ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRpdmlkZVNjYWxhcih0aGlzLmxlbmd0aCgpKX0sc2V0TGVuZ3RoOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMubGVuZ3RoKCk7MCE9PWImJmEhPT1iJiZ0aGlzLm11bHRpcGx5U2NhbGFyKGEvYik7cmV0dXJuIHRoaXN9LGxlcnA6ZnVuY3Rpb24oYSxiKXt0aGlzLngrPShhLngtdGhpcy54KSpiO3RoaXMueSs9KGEueS10aGlzLnkpKmI7dGhpcy56Kz0oYS56LXRoaXMueikqYjt0aGlzLncrPShhLnctdGhpcy53KSpiO3JldHVybiB0aGlzfSxsZXJwVmVjdG9yczpmdW5jdGlvbihhLGIsYyl7dGhpcy5zdWJWZWN0b3JzKGIsYSkubXVsdGlwbHlTY2FsYXIoYykuYWRkKGEpO3JldHVybiB0aGlzfSxlcXVhbHM6ZnVuY3Rpb24oYSl7cmV0dXJuIGEueD09PXRoaXMueCYmYS55PT09dGhpcy55JiZhLno9PT10aGlzLnomJmEudz09PXRoaXMud30sXG5mcm9tQXJyYXk6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj0wKTt0aGlzLng9YVtiXTt0aGlzLnk9YVtiKzFdO3RoaXMuej1hW2IrMl07dGhpcy53PWFbYiszXTtyZXR1cm4gdGhpc30sdG9BcnJheTpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWEmJihhPVtdKTt2b2lkIDA9PT1iJiYoYj0wKTthW2JdPXRoaXMueDthW2IrMV09dGhpcy55O2FbYisyXT10aGlzLno7YVtiKzNdPXRoaXMudztyZXR1cm4gYX0sZnJvbUF0dHJpYnV0ZTpmdW5jdGlvbihhLGIsYyl7dm9pZCAwPT09YyYmKGM9MCk7Yj1iKmEuaXRlbVNpemUrYzt0aGlzLng9YS5hcnJheVtiXTt0aGlzLnk9YS5hcnJheVtiKzFdO3RoaXMuej1hLmFycmF5W2IrMl07dGhpcy53PWEuYXJyYXlbYiszXTtyZXR1cm4gdGhpc30sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFRIUkVFLlZlY3RvcjQodGhpcy54LHRoaXMueSx0aGlzLnosdGhpcy53KX19O1xuVEhSRUUuRXVsZXI9ZnVuY3Rpb24oYSxiLGMsZCl7dGhpcy5feD1hfHwwO3RoaXMuX3k9Ynx8MDt0aGlzLl96PWN8fDA7dGhpcy5fb3JkZXI9ZHx8VEhSRUUuRXVsZXIuRGVmYXVsdE9yZGVyfTtUSFJFRS5FdWxlci5Sb3RhdGlvbk9yZGVycz1cIlhZWiBZWlggWlhZIFhaWSBZWFogWllYXCIuc3BsaXQoXCIgXCIpO1RIUkVFLkV1bGVyLkRlZmF1bHRPcmRlcj1cIlhZWlwiO1xuVEhSRUUuRXVsZXIucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUSFJFRS5FdWxlcixfeDowLF95OjAsX3o6MCxfb3JkZXI6VEhSRUUuRXVsZXIuRGVmYXVsdE9yZGVyLGdldCB4KCl7cmV0dXJuIHRoaXMuX3h9LHNldCB4KGEpe3RoaXMuX3g9YTt0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKX0sZ2V0IHkoKXtyZXR1cm4gdGhpcy5feX0sc2V0IHkoYSl7dGhpcy5feT1hO3RoaXMub25DaGFuZ2VDYWxsYmFjaygpfSxnZXQgeigpe3JldHVybiB0aGlzLl96fSxzZXQgeihhKXt0aGlzLl96PWE7dGhpcy5vbkNoYW5nZUNhbGxiYWNrKCl9LGdldCBvcmRlcigpe3JldHVybiB0aGlzLl9vcmRlcn0sc2V0IG9yZGVyKGEpe3RoaXMuX29yZGVyPWE7dGhpcy5vbkNoYW5nZUNhbGxiYWNrKCl9LHNldDpmdW5jdGlvbihhLGIsYyxkKXt0aGlzLl94PWE7dGhpcy5feT1iO3RoaXMuX3o9Yzt0aGlzLl9vcmRlcj1kfHx0aGlzLl9vcmRlcjt0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKTtyZXR1cm4gdGhpc30sY29weTpmdW5jdGlvbihhKXt0aGlzLl94PVxuYS5feDt0aGlzLl95PWEuX3k7dGhpcy5fej1hLl96O3RoaXMuX29yZGVyPWEuX29yZGVyO3RoaXMub25DaGFuZ2VDYWxsYmFjaygpO3JldHVybiB0aGlzfSxzZXRGcm9tUm90YXRpb25NYXRyaXg6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPVRIUkVFLk1hdGguY2xhbXAsZT1hLmVsZW1lbnRzO2E9ZVswXTt2YXIgZj1lWzRdLGc9ZVs4XSxoPWVbMV0saz1lWzVdLGw9ZVs5XSxwPWVbMl0scT1lWzZdLGU9ZVsxMF07Yj1ifHx0aGlzLl9vcmRlcjtcIlhZWlwiPT09Yj8odGhpcy5feT1NYXRoLmFzaW4oZChnLC0xLDEpKSwuOTk5OTk+TWF0aC5hYnMoZyk/KHRoaXMuX3g9TWF0aC5hdGFuMigtbCxlKSx0aGlzLl96PU1hdGguYXRhbjIoLWYsYSkpOih0aGlzLl94PU1hdGguYXRhbjIocSxrKSx0aGlzLl96PTApKTpcIllYWlwiPT09Yj8odGhpcy5feD1NYXRoLmFzaW4oLWQobCwtMSwxKSksLjk5OTk5Pk1hdGguYWJzKGwpPyh0aGlzLl95PU1hdGguYXRhbjIoZyxlKSx0aGlzLl96PU1hdGguYXRhbjIoaCxcbmspKToodGhpcy5feT1NYXRoLmF0YW4yKC1wLGEpLHRoaXMuX3o9MCkpOlwiWlhZXCI9PT1iPyh0aGlzLl94PU1hdGguYXNpbihkKHEsLTEsMSkpLC45OTk5OT5NYXRoLmFicyhxKT8odGhpcy5feT1NYXRoLmF0YW4yKC1wLGUpLHRoaXMuX3o9TWF0aC5hdGFuMigtZixrKSk6KHRoaXMuX3k9MCx0aGlzLl96PU1hdGguYXRhbjIoaCxhKSkpOlwiWllYXCI9PT1iPyh0aGlzLl95PU1hdGguYXNpbigtZChwLC0xLDEpKSwuOTk5OTk+TWF0aC5hYnMocCk/KHRoaXMuX3g9TWF0aC5hdGFuMihxLGUpLHRoaXMuX3o9TWF0aC5hdGFuMihoLGEpKToodGhpcy5feD0wLHRoaXMuX3o9TWF0aC5hdGFuMigtZixrKSkpOlwiWVpYXCI9PT1iPyh0aGlzLl96PU1hdGguYXNpbihkKGgsLTEsMSkpLC45OTk5OT5NYXRoLmFicyhoKT8odGhpcy5feD1NYXRoLmF0YW4yKC1sLGspLHRoaXMuX3k9TWF0aC5hdGFuMigtcCxhKSk6KHRoaXMuX3g9MCx0aGlzLl95PU1hdGguYXRhbjIoZyxlKSkpOlwiWFpZXCI9PT1iPyh0aGlzLl96PVxuTWF0aC5hc2luKC1kKGYsLTEsMSkpLC45OTk5OT5NYXRoLmFicyhmKT8odGhpcy5feD1NYXRoLmF0YW4yKHEsayksdGhpcy5feT1NYXRoLmF0YW4yKGcsYSkpOih0aGlzLl94PU1hdGguYXRhbjIoLWwsZSksdGhpcy5feT0wKSk6VEhSRUUud2FybihcIlRIUkVFLkV1bGVyOiAuc2V0RnJvbVJvdGF0aW9uTWF0cml4KCkgZ2l2ZW4gdW5zdXBwb3J0ZWQgb3JkZXI6IFwiK2IpO3RoaXMuX29yZGVyPWI7aWYoITEhPT1jKXRoaXMub25DaGFuZ2VDYWxsYmFjaygpO3JldHVybiB0aGlzfSxzZXRGcm9tUXVhdGVybmlvbjpmdW5jdGlvbigpe3ZhciBhO3JldHVybiBmdW5jdGlvbihiLGMsZCl7dm9pZCAwPT09YSYmKGE9bmV3IFRIUkVFLk1hdHJpeDQpO2EubWFrZVJvdGF0aW9uRnJvbVF1YXRlcm5pb24oYik7dGhpcy5zZXRGcm9tUm90YXRpb25NYXRyaXgoYSxjLGQpO3JldHVybiB0aGlzfX0oKSxzZXRGcm9tVmVjdG9yMzpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLnNldChhLngsYS55LGEueixcbmJ8fHRoaXMuX29yZGVyKX0scmVvcmRlcjpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5RdWF0ZXJuaW9uO3JldHVybiBmdW5jdGlvbihiKXthLnNldEZyb21FdWxlcih0aGlzKTt0aGlzLnNldEZyb21RdWF0ZXJuaW9uKGEsYil9fSgpLGVxdWFsczpmdW5jdGlvbihhKXtyZXR1cm4gYS5feD09PXRoaXMuX3gmJmEuX3k9PT10aGlzLl95JiZhLl96PT09dGhpcy5feiYmYS5fb3JkZXI9PT10aGlzLl9vcmRlcn0sZnJvbUFycmF5OmZ1bmN0aW9uKGEpe3RoaXMuX3g9YVswXTt0aGlzLl95PWFbMV07dGhpcy5fej1hWzJdO3ZvaWQgMCE9PWFbM10mJih0aGlzLl9vcmRlcj1hWzNdKTt0aGlzLm9uQ2hhbmdlQ2FsbGJhY2soKTtyZXR1cm4gdGhpc30sdG9BcnJheTpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWEmJihhPVtdKTt2b2lkIDA9PT1iJiYoYj0wKTthW2JdPXRoaXMuX3g7YVtiKzFdPXRoaXMuX3k7YVtiKzJdPXRoaXMuX3o7YVtiKzNdPXRoaXMuX29yZGVyO3JldHVybiBhfSx0b1ZlY3RvcjM6ZnVuY3Rpb24oYSl7cmV0dXJuIGE/XG5hLnNldCh0aGlzLl94LHRoaXMuX3ksdGhpcy5feik6bmV3IFRIUkVFLlZlY3RvcjModGhpcy5feCx0aGlzLl95LHRoaXMuX3opfSxvbkNoYW5nZTpmdW5jdGlvbihhKXt0aGlzLm9uQ2hhbmdlQ2FsbGJhY2s9YTtyZXR1cm4gdGhpc30sb25DaGFuZ2VDYWxsYmFjazpmdW5jdGlvbigpe30sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFRIUkVFLkV1bGVyKHRoaXMuX3gsdGhpcy5feSx0aGlzLl96LHRoaXMuX29yZGVyKX19O1RIUkVFLkxpbmUzPWZ1bmN0aW9uKGEsYil7dGhpcy5zdGFydD12b2lkIDAhPT1hP2E6bmV3IFRIUkVFLlZlY3RvcjM7dGhpcy5lbmQ9dm9pZCAwIT09Yj9iOm5ldyBUSFJFRS5WZWN0b3IzfTtcblRIUkVFLkxpbmUzLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuTGluZTMsc2V0OmZ1bmN0aW9uKGEsYil7dGhpcy5zdGFydC5jb3B5KGEpO3RoaXMuZW5kLmNvcHkoYik7cmV0dXJuIHRoaXN9LGNvcHk6ZnVuY3Rpb24oYSl7dGhpcy5zdGFydC5jb3B5KGEuc3RhcnQpO3RoaXMuZW5kLmNvcHkoYS5lbmQpO3JldHVybiB0aGlzfSxjZW50ZXI6ZnVuY3Rpb24oYSl7cmV0dXJuKGF8fG5ldyBUSFJFRS5WZWN0b3IzKS5hZGRWZWN0b3JzKHRoaXMuc3RhcnQsdGhpcy5lbmQpLm11bHRpcGx5U2NhbGFyKC41KX0sZGVsdGE6ZnVuY3Rpb24oYSl7cmV0dXJuKGF8fG5ldyBUSFJFRS5WZWN0b3IzKS5zdWJWZWN0b3JzKHRoaXMuZW5kLHRoaXMuc3RhcnQpfSxkaXN0YW5jZVNxOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3RhcnQuZGlzdGFuY2VUb1NxdWFyZWQodGhpcy5lbmQpfSxkaXN0YW5jZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnN0YXJ0LmRpc3RhbmNlVG8odGhpcy5lbmQpfSxhdDpmdW5jdGlvbihhLFxuYil7dmFyIGM9Ynx8bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIHRoaXMuZGVsdGEoYykubXVsdGlwbHlTY2FsYXIoYSkuYWRkKHRoaXMuc3RhcnQpfSxjbG9zZXN0UG9pbnRUb1BvaW50UGFyYW1ldGVyOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjMsYj1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oYyxkKXthLnN1YlZlY3RvcnMoYyx0aGlzLnN0YXJ0KTtiLnN1YlZlY3RvcnModGhpcy5lbmQsdGhpcy5zdGFydCk7dmFyIGU9Yi5kb3QoYiksZT1iLmRvdChhKS9lO2QmJihlPVRIUkVFLk1hdGguY2xhbXAoZSwwLDEpKTtyZXR1cm4gZX19KCksY2xvc2VzdFBvaW50VG9Qb2ludDpmdW5jdGlvbihhLGIsYyl7YT10aGlzLmNsb3Nlc3RQb2ludFRvUG9pbnRQYXJhbWV0ZXIoYSxiKTtjPWN8fG5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiB0aGlzLmRlbHRhKGMpLm11bHRpcGx5U2NhbGFyKGEpLmFkZCh0aGlzLnN0YXJ0KX0sYXBwbHlNYXRyaXg0OmZ1bmN0aW9uKGEpe3RoaXMuc3RhcnQuYXBwbHlNYXRyaXg0KGEpO1xudGhpcy5lbmQuYXBwbHlNYXRyaXg0KGEpO3JldHVybiB0aGlzfSxlcXVhbHM6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuc3RhcnQuZXF1YWxzKHRoaXMuc3RhcnQpJiZhLmVuZC5lcXVhbHModGhpcy5lbmQpfSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgVEhSRUUuTGluZTMpLmNvcHkodGhpcyl9fTtUSFJFRS5Cb3gyPWZ1bmN0aW9uKGEsYil7dGhpcy5taW49dm9pZCAwIT09YT9hOm5ldyBUSFJFRS5WZWN0b3IyKEluZmluaXR5LEluZmluaXR5KTt0aGlzLm1heD12b2lkIDAhPT1iP2I6bmV3IFRIUkVFLlZlY3RvcjIoLUluZmluaXR5LC1JbmZpbml0eSl9O1xuVEhSRUUuQm94Mi5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRIUkVFLkJveDIsc2V0OmZ1bmN0aW9uKGEsYil7dGhpcy5taW4uY29weShhKTt0aGlzLm1heC5jb3B5KGIpO3JldHVybiB0aGlzfSxzZXRGcm9tUG9pbnRzOmZ1bmN0aW9uKGEpe3RoaXMubWFrZUVtcHR5KCk7Zm9yKHZhciBiPTAsYz1hLmxlbmd0aDtiPGM7YisrKXRoaXMuZXhwYW5kQnlQb2ludChhW2JdKTtyZXR1cm4gdGhpc30sc2V0RnJvbUNlbnRlckFuZFNpemU6ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMjtyZXR1cm4gZnVuY3Rpb24oYixjKXt2YXIgZD1hLmNvcHkoYykubXVsdGlwbHlTY2FsYXIoLjUpO3RoaXMubWluLmNvcHkoYikuc3ViKGQpO3RoaXMubWF4LmNvcHkoYikuYWRkKGQpO3JldHVybiB0aGlzfX0oKSxjb3B5OmZ1bmN0aW9uKGEpe3RoaXMubWluLmNvcHkoYS5taW4pO3RoaXMubWF4LmNvcHkoYS5tYXgpO3JldHVybiB0aGlzfSxtYWtlRW1wdHk6ZnVuY3Rpb24oKXt0aGlzLm1pbi54PVxudGhpcy5taW4ueT1JbmZpbml0eTt0aGlzLm1heC54PXRoaXMubWF4Lnk9LUluZmluaXR5O3JldHVybiB0aGlzfSxlbXB0eTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1heC54PHRoaXMubWluLnh8fHRoaXMubWF4Lnk8dGhpcy5taW4ueX0sY2VudGVyOmZ1bmN0aW9uKGEpe3JldHVybihhfHxuZXcgVEhSRUUuVmVjdG9yMikuYWRkVmVjdG9ycyh0aGlzLm1pbix0aGlzLm1heCkubXVsdGlwbHlTY2FsYXIoLjUpfSxzaXplOmZ1bmN0aW9uKGEpe3JldHVybihhfHxuZXcgVEhSRUUuVmVjdG9yMikuc3ViVmVjdG9ycyh0aGlzLm1heCx0aGlzLm1pbil9LGV4cGFuZEJ5UG9pbnQ6ZnVuY3Rpb24oYSl7dGhpcy5taW4ubWluKGEpO3RoaXMubWF4Lm1heChhKTtyZXR1cm4gdGhpc30sZXhwYW5kQnlWZWN0b3I6ZnVuY3Rpb24oYSl7dGhpcy5taW4uc3ViKGEpO3RoaXMubWF4LmFkZChhKTtyZXR1cm4gdGhpc30sZXhwYW5kQnlTY2FsYXI6ZnVuY3Rpb24oYSl7dGhpcy5taW4uYWRkU2NhbGFyKC1hKTtcbnRoaXMubWF4LmFkZFNjYWxhcihhKTtyZXR1cm4gdGhpc30sY29udGFpbnNQb2ludDpmdW5jdGlvbihhKXtyZXR1cm4gYS54PHRoaXMubWluLnh8fGEueD50aGlzLm1heC54fHxhLnk8dGhpcy5taW4ueXx8YS55PnRoaXMubWF4Lnk/ITE6ITB9LGNvbnRhaW5zQm94OmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLm1pbi54PD1hLm1pbi54JiZhLm1heC54PD10aGlzLm1heC54JiZ0aGlzLm1pbi55PD1hLm1pbi55JiZhLm1heC55PD10aGlzLm1heC55PyEwOiExfSxnZXRQYXJhbWV0ZXI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4oYnx8bmV3IFRIUkVFLlZlY3RvcjIpLnNldCgoYS54LXRoaXMubWluLngpLyh0aGlzLm1heC54LXRoaXMubWluLngpLChhLnktdGhpcy5taW4ueSkvKHRoaXMubWF4LnktdGhpcy5taW4ueSkpfSxpc0ludGVyc2VjdGlvbkJveDpmdW5jdGlvbihhKXtyZXR1cm4gYS5tYXgueDx0aGlzLm1pbi54fHxhLm1pbi54PnRoaXMubWF4Lnh8fGEubWF4Lnk8dGhpcy5taW4ueXx8YS5taW4ueT5cbnRoaXMubWF4Lnk/ITE6ITB9LGNsYW1wUG9pbnQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4oYnx8bmV3IFRIUkVFLlZlY3RvcjIpLmNvcHkoYSkuY2xhbXAodGhpcy5taW4sdGhpcy5tYXgpfSxkaXN0YW5jZVRvUG9pbnQ6ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMjtyZXR1cm4gZnVuY3Rpb24oYil7cmV0dXJuIGEuY29weShiKS5jbGFtcCh0aGlzLm1pbix0aGlzLm1heCkuc3ViKGIpLmxlbmd0aCgpfX0oKSxpbnRlcnNlY3Q6ZnVuY3Rpb24oYSl7dGhpcy5taW4ubWF4KGEubWluKTt0aGlzLm1heC5taW4oYS5tYXgpO3JldHVybiB0aGlzfSx1bmlvbjpmdW5jdGlvbihhKXt0aGlzLm1pbi5taW4oYS5taW4pO3RoaXMubWF4Lm1heChhLm1heCk7cmV0dXJuIHRoaXN9LHRyYW5zbGF0ZTpmdW5jdGlvbihhKXt0aGlzLm1pbi5hZGQoYSk7dGhpcy5tYXguYWRkKGEpO3JldHVybiB0aGlzfSxlcXVhbHM6ZnVuY3Rpb24oYSl7cmV0dXJuIGEubWluLmVxdWFscyh0aGlzLm1pbikmJlxuYS5tYXguZXF1YWxzKHRoaXMubWF4KX0sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IFRIUkVFLkJveDIpLmNvcHkodGhpcyl9fTtUSFJFRS5Cb3gzPWZ1bmN0aW9uKGEsYil7dGhpcy5taW49dm9pZCAwIT09YT9hOm5ldyBUSFJFRS5WZWN0b3IzKEluZmluaXR5LEluZmluaXR5LEluZmluaXR5KTt0aGlzLm1heD12b2lkIDAhPT1iP2I6bmV3IFRIUkVFLlZlY3RvcjMoLUluZmluaXR5LC1JbmZpbml0eSwtSW5maW5pdHkpfTtcblRIUkVFLkJveDMucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUSFJFRS5Cb3gzLHNldDpmdW5jdGlvbihhLGIpe3RoaXMubWluLmNvcHkoYSk7dGhpcy5tYXguY29weShiKTtyZXR1cm4gdGhpc30sc2V0RnJvbVBvaW50czpmdW5jdGlvbihhKXt0aGlzLm1ha2VFbXB0eSgpO2Zvcih2YXIgYj0wLGM9YS5sZW5ndGg7YjxjO2IrKyl0aGlzLmV4cGFuZEJ5UG9pbnQoYVtiXSk7cmV0dXJuIHRoaXN9LHNldEZyb21DZW50ZXJBbmRTaXplOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKGIsYyl7dmFyIGQ9YS5jb3B5KGMpLm11bHRpcGx5U2NhbGFyKC41KTt0aGlzLm1pbi5jb3B5KGIpLnN1YihkKTt0aGlzLm1heC5jb3B5KGIpLmFkZChkKTtyZXR1cm4gdGhpc319KCksc2V0RnJvbU9iamVjdDpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbihiKXt2YXIgYz10aGlzO2IudXBkYXRlTWF0cml4V29ybGQoITApO1xudGhpcy5tYWtlRW1wdHkoKTtiLnRyYXZlcnNlKGZ1bmN0aW9uKGIpe3ZhciBlPWIuZ2VvbWV0cnk7aWYodm9pZCAwIT09ZSlpZihlIGluc3RhbmNlb2YgVEhSRUUuR2VvbWV0cnkpZm9yKHZhciBmPWUudmVydGljZXMsZT0wLGc9Zi5sZW5ndGg7ZTxnO2UrKylhLmNvcHkoZltlXSksYS5hcHBseU1hdHJpeDQoYi5tYXRyaXhXb3JsZCksYy5leHBhbmRCeVBvaW50KGEpO2Vsc2UgaWYoZSBpbnN0YW5jZW9mIFRIUkVFLkJ1ZmZlckdlb21ldHJ5JiZ2b2lkIDAhPT1lLmF0dHJpYnV0ZXMucG9zaXRpb24pZm9yKGY9ZS5hdHRyaWJ1dGVzLnBvc2l0aW9uLmFycmF5LGU9MCxnPWYubGVuZ3RoO2U8ZztlKz0zKWEuc2V0KGZbZV0sZltlKzFdLGZbZSsyXSksYS5hcHBseU1hdHJpeDQoYi5tYXRyaXhXb3JsZCksYy5leHBhbmRCeVBvaW50KGEpfSk7cmV0dXJuIHRoaXN9fSgpLGNvcHk6ZnVuY3Rpb24oYSl7dGhpcy5taW4uY29weShhLm1pbik7dGhpcy5tYXguY29weShhLm1heCk7cmV0dXJuIHRoaXN9LFxubWFrZUVtcHR5OmZ1bmN0aW9uKCl7dGhpcy5taW4ueD10aGlzLm1pbi55PXRoaXMubWluLno9SW5maW5pdHk7dGhpcy5tYXgueD10aGlzLm1heC55PXRoaXMubWF4Lno9LUluZmluaXR5O3JldHVybiB0aGlzfSxlbXB0eTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1heC54PHRoaXMubWluLnh8fHRoaXMubWF4Lnk8dGhpcy5taW4ueXx8dGhpcy5tYXguejx0aGlzLm1pbi56fSxjZW50ZXI6ZnVuY3Rpb24oYSl7cmV0dXJuKGF8fG5ldyBUSFJFRS5WZWN0b3IzKS5hZGRWZWN0b3JzKHRoaXMubWluLHRoaXMubWF4KS5tdWx0aXBseVNjYWxhciguNSl9LHNpemU6ZnVuY3Rpb24oYSl7cmV0dXJuKGF8fG5ldyBUSFJFRS5WZWN0b3IzKS5zdWJWZWN0b3JzKHRoaXMubWF4LHRoaXMubWluKX0sZXhwYW5kQnlQb2ludDpmdW5jdGlvbihhKXt0aGlzLm1pbi5taW4oYSk7dGhpcy5tYXgubWF4KGEpO3JldHVybiB0aGlzfSxleHBhbmRCeVZlY3RvcjpmdW5jdGlvbihhKXt0aGlzLm1pbi5zdWIoYSk7XG50aGlzLm1heC5hZGQoYSk7cmV0dXJuIHRoaXN9LGV4cGFuZEJ5U2NhbGFyOmZ1bmN0aW9uKGEpe3RoaXMubWluLmFkZFNjYWxhcigtYSk7dGhpcy5tYXguYWRkU2NhbGFyKGEpO3JldHVybiB0aGlzfSxjb250YWluc1BvaW50OmZ1bmN0aW9uKGEpe3JldHVybiBhLng8dGhpcy5taW4ueHx8YS54PnRoaXMubWF4Lnh8fGEueTx0aGlzLm1pbi55fHxhLnk+dGhpcy5tYXgueXx8YS56PHRoaXMubWluLnp8fGEuej50aGlzLm1heC56PyExOiEwfSxjb250YWluc0JveDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5taW4ueDw9YS5taW4ueCYmYS5tYXgueDw9dGhpcy5tYXgueCYmdGhpcy5taW4ueTw9YS5taW4ueSYmYS5tYXgueTw9dGhpcy5tYXgueSYmdGhpcy5taW4uejw9YS5taW4ueiYmYS5tYXguejw9dGhpcy5tYXguej8hMDohMX0sZ2V0UGFyYW1ldGVyOmZ1bmN0aW9uKGEsYil7cmV0dXJuKGJ8fG5ldyBUSFJFRS5WZWN0b3IzKS5zZXQoKGEueC10aGlzLm1pbi54KS8odGhpcy5tYXgueC1cbnRoaXMubWluLngpLChhLnktdGhpcy5taW4ueSkvKHRoaXMubWF4LnktdGhpcy5taW4ueSksKGEuei10aGlzLm1pbi56KS8odGhpcy5tYXguei10aGlzLm1pbi56KSl9LGlzSW50ZXJzZWN0aW9uQm94OmZ1bmN0aW9uKGEpe3JldHVybiBhLm1heC54PHRoaXMubWluLnh8fGEubWluLng+dGhpcy5tYXgueHx8YS5tYXgueTx0aGlzLm1pbi55fHxhLm1pbi55PnRoaXMubWF4Lnl8fGEubWF4Lno8dGhpcy5taW4uenx8YS5taW4uej50aGlzLm1heC56PyExOiEwfSxjbGFtcFBvaW50OmZ1bmN0aW9uKGEsYil7cmV0dXJuKGJ8fG5ldyBUSFJFRS5WZWN0b3IzKS5jb3B5KGEpLmNsYW1wKHRoaXMubWluLHRoaXMubWF4KX0sZGlzdGFuY2VUb1BvaW50OmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKGIpe3JldHVybiBhLmNvcHkoYikuY2xhbXAodGhpcy5taW4sdGhpcy5tYXgpLnN1YihiKS5sZW5ndGgoKX19KCksZ2V0Qm91bmRpbmdTcGhlcmU6ZnVuY3Rpb24oKXt2YXIgYT1cbm5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbihiKXtiPWJ8fG5ldyBUSFJFRS5TcGhlcmU7Yi5jZW50ZXI9dGhpcy5jZW50ZXIoKTtiLnJhZGl1cz0uNSp0aGlzLnNpemUoYSkubGVuZ3RoKCk7cmV0dXJuIGJ9fSgpLGludGVyc2VjdDpmdW5jdGlvbihhKXt0aGlzLm1pbi5tYXgoYS5taW4pO3RoaXMubWF4Lm1pbihhLm1heCk7cmV0dXJuIHRoaXN9LHVuaW9uOmZ1bmN0aW9uKGEpe3RoaXMubWluLm1pbihhLm1pbik7dGhpcy5tYXgubWF4KGEubWF4KTtyZXR1cm4gdGhpc30sYXBwbHlNYXRyaXg0OmZ1bmN0aW9uKCl7dmFyIGE9W25ldyBUSFJFRS5WZWN0b3IzLG5ldyBUSFJFRS5WZWN0b3IzLG5ldyBUSFJFRS5WZWN0b3IzLG5ldyBUSFJFRS5WZWN0b3IzLG5ldyBUSFJFRS5WZWN0b3IzLG5ldyBUSFJFRS5WZWN0b3IzLG5ldyBUSFJFRS5WZWN0b3IzLG5ldyBUSFJFRS5WZWN0b3IzXTtyZXR1cm4gZnVuY3Rpb24oYil7YVswXS5zZXQodGhpcy5taW4ueCx0aGlzLm1pbi55LFxudGhpcy5taW4ueikuYXBwbHlNYXRyaXg0KGIpO2FbMV0uc2V0KHRoaXMubWluLngsdGhpcy5taW4ueSx0aGlzLm1heC56KS5hcHBseU1hdHJpeDQoYik7YVsyXS5zZXQodGhpcy5taW4ueCx0aGlzLm1heC55LHRoaXMubWluLnopLmFwcGx5TWF0cml4NChiKTthWzNdLnNldCh0aGlzLm1pbi54LHRoaXMubWF4LnksdGhpcy5tYXgueikuYXBwbHlNYXRyaXg0KGIpO2FbNF0uc2V0KHRoaXMubWF4LngsdGhpcy5taW4ueSx0aGlzLm1pbi56KS5hcHBseU1hdHJpeDQoYik7YVs1XS5zZXQodGhpcy5tYXgueCx0aGlzLm1pbi55LHRoaXMubWF4LnopLmFwcGx5TWF0cml4NChiKTthWzZdLnNldCh0aGlzLm1heC54LHRoaXMubWF4LnksdGhpcy5taW4ueikuYXBwbHlNYXRyaXg0KGIpO2FbN10uc2V0KHRoaXMubWF4LngsdGhpcy5tYXgueSx0aGlzLm1heC56KS5hcHBseU1hdHJpeDQoYik7dGhpcy5tYWtlRW1wdHkoKTt0aGlzLnNldEZyb21Qb2ludHMoYSk7cmV0dXJuIHRoaXN9fSgpLHRyYW5zbGF0ZTpmdW5jdGlvbihhKXt0aGlzLm1pbi5hZGQoYSk7XG50aGlzLm1heC5hZGQoYSk7cmV0dXJuIHRoaXN9LGVxdWFsczpmdW5jdGlvbihhKXtyZXR1cm4gYS5taW4uZXF1YWxzKHRoaXMubWluKSYmYS5tYXguZXF1YWxzKHRoaXMubWF4KX0sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IFRIUkVFLkJveDMpLmNvcHkodGhpcyl9fTtUSFJFRS5NYXRyaXgzPWZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50cz1uZXcgRmxvYXQzMkFycmF5KFsxLDAsMCwwLDEsMCwwLDAsMV0pOzA8YXJndW1lbnRzLmxlbmd0aCYmVEhSRUUuZXJyb3IoXCJUSFJFRS5NYXRyaXgzOiB0aGUgY29uc3RydWN0b3Igbm8gbG9uZ2VyIHJlYWRzIGFyZ3VtZW50cy4gdXNlIC5zZXQoKSBpbnN0ZWFkLlwiKX07XG5USFJFRS5NYXRyaXgzLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuTWF0cml4MyxzZXQ6ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPXRoaXMuZWxlbWVudHM7bFswXT1hO2xbM109YjtsWzZdPWM7bFsxXT1kO2xbNF09ZTtsWzddPWY7bFsyXT1nO2xbNV09aDtsWzhdPWs7cmV0dXJuIHRoaXN9LGlkZW50aXR5OmZ1bmN0aW9uKCl7dGhpcy5zZXQoMSwwLDAsMCwxLDAsMCwwLDEpO3JldHVybiB0aGlzfSxjb3B5OmZ1bmN0aW9uKGEpe2E9YS5lbGVtZW50czt0aGlzLnNldChhWzBdLGFbM10sYVs2XSxhWzFdLGFbNF0sYVs3XSxhWzJdLGFbNV0sYVs4XSk7cmV0dXJuIHRoaXN9LG11bHRpcGx5VmVjdG9yMzpmdW5jdGlvbihhKXtUSFJFRS53YXJuKFwiVEhSRUUuTWF0cml4MzogLm11bHRpcGx5VmVjdG9yMygpIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSB2ZWN0b3IuYXBwbHlNYXRyaXgzKCBtYXRyaXggKSBpbnN0ZWFkLlwiKTtyZXR1cm4gYS5hcHBseU1hdHJpeDModGhpcyl9LFxubXVsdGlwbHlWZWN0b3IzQXJyYXk6ZnVuY3Rpb24oYSl7VEhSRUUud2FybihcIlRIUkVFLk1hdHJpeDM6IC5tdWx0aXBseVZlY3RvcjNBcnJheSgpIGhhcyBiZWVuIHJlbmFtZWQuIFVzZSBtYXRyaXguYXBwbHlUb1ZlY3RvcjNBcnJheSggYXJyYXkgKSBpbnN0ZWFkLlwiKTtyZXR1cm4gdGhpcy5hcHBseVRvVmVjdG9yM0FycmF5KGEpfSxhcHBseVRvVmVjdG9yM0FycmF5OmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKGIsYyxkKXt2b2lkIDA9PT1jJiYoYz0wKTt2b2lkIDA9PT1kJiYoZD1iLmxlbmd0aCk7Zm9yKHZhciBlPTA7ZTxkO2UrPTMsYys9MylhLng9YltjXSxhLnk9YltjKzFdLGEuej1iW2MrMl0sYS5hcHBseU1hdHJpeDModGhpcyksYltjXT1hLngsYltjKzFdPWEueSxiW2MrMl09YS56O3JldHVybiBifX0oKSxtdWx0aXBseVNjYWxhcjpmdW5jdGlvbihhKXt2YXIgYj10aGlzLmVsZW1lbnRzO2JbMF0qPWE7YlszXSo9YTtiWzZdKj1cbmE7YlsxXSo9YTtiWzRdKj1hO2JbN10qPWE7YlsyXSo9YTtiWzVdKj1hO2JbOF0qPWE7cmV0dXJuIHRoaXN9LGRldGVybWluYW50OmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5lbGVtZW50cyxiPWFbMF0sYz1hWzFdLGQ9YVsyXSxlPWFbM10sZj1hWzRdLGc9YVs1XSxoPWFbNl0saz1hWzddLGE9YVs4XTtyZXR1cm4gYipmKmEtYipnKmstYyplKmErYypnKmgrZCplKmstZCpmKmh9LGdldEludmVyc2U6ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLmVsZW1lbnRzLGQ9dGhpcy5lbGVtZW50cztkWzBdPWNbMTBdKmNbNV0tY1s2XSpjWzldO2RbMV09LWNbMTBdKmNbMV0rY1syXSpjWzldO2RbMl09Y1s2XSpjWzFdLWNbMl0qY1s1XTtkWzNdPS1jWzEwXSpjWzRdK2NbNl0qY1s4XTtkWzRdPWNbMTBdKmNbMF0tY1syXSpjWzhdO2RbNV09LWNbNl0qY1swXStjWzJdKmNbNF07ZFs2XT1jWzldKmNbNF0tY1s1XSpjWzhdO2RbN109LWNbOV0qY1swXStjWzFdKmNbOF07ZFs4XT1jWzVdKmNbMF0tY1sxXSpjWzRdO1xuYz1jWzBdKmRbMF0rY1sxXSpkWzNdK2NbMl0qZFs2XTtpZigwPT09Yyl7aWYoYil0aHJvdyBFcnJvcihcIk1hdHJpeDMuZ2V0SW52ZXJzZSgpOiBjYW4ndCBpbnZlcnQgbWF0cml4LCBkZXRlcm1pbmFudCBpcyAwXCIpO1RIUkVFLndhcm4oXCJNYXRyaXgzLmdldEludmVyc2UoKTogY2FuJ3QgaW52ZXJ0IG1hdHJpeCwgZGV0ZXJtaW5hbnQgaXMgMFwiKTt0aGlzLmlkZW50aXR5KCk7cmV0dXJuIHRoaXN9dGhpcy5tdWx0aXBseVNjYWxhcigxL2MpO3JldHVybiB0aGlzfSx0cmFuc3Bvc2U6ZnVuY3Rpb24oKXt2YXIgYSxiPXRoaXMuZWxlbWVudHM7YT1iWzFdO2JbMV09YlszXTtiWzNdPWE7YT1iWzJdO2JbMl09Yls2XTtiWzZdPWE7YT1iWzVdO2JbNV09Yls3XTtiWzddPWE7cmV0dXJuIHRoaXN9LGZsYXR0ZW5Ub0FycmF5T2Zmc2V0OmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5lbGVtZW50czthW2JdPWNbMF07YVtiKzFdPWNbMV07YVtiKzJdPWNbMl07YVtiKzNdPWNbM107YVtiKzRdPWNbNF07XG5hW2IrNV09Y1s1XTthW2IrNl09Y1s2XTthW2IrN109Y1s3XTthW2IrOF09Y1s4XTtyZXR1cm4gYX0sZ2V0Tm9ybWFsTWF0cml4OmZ1bmN0aW9uKGEpe3RoaXMuZ2V0SW52ZXJzZShhKS50cmFuc3Bvc2UoKTtyZXR1cm4gdGhpc30sdHJhbnNwb3NlSW50b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuZWxlbWVudHM7YVswXT1iWzBdO2FbMV09YlszXTthWzJdPWJbNl07YVszXT1iWzFdO2FbNF09Yls0XTthWzVdPWJbN107YVs2XT1iWzJdO2FbN109Yls1XTthWzhdPWJbOF07cmV0dXJuIHRoaXN9LGZyb21BcnJheTpmdW5jdGlvbihhKXt0aGlzLmVsZW1lbnRzLnNldChhKTtyZXR1cm4gdGhpc30sdG9BcnJheTpmdW5jdGlvbigpe3ZhciBhPXRoaXMuZWxlbWVudHM7cmV0dXJuW2FbMF0sYVsxXSxhWzJdLGFbM10sYVs0XSxhWzVdLGFbNl0sYVs3XSxhWzhdXX0sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IFRIUkVFLk1hdHJpeDMpLmZyb21BcnJheSh0aGlzLmVsZW1lbnRzKX19O1xuVEhSRUUuTWF0cml4ND1mdW5jdGlvbigpe3RoaXMuZWxlbWVudHM9bmV3IEZsb2F0MzJBcnJheShbMSwwLDAsMCwwLDEsMCwwLDAsMCwxLDAsMCwwLDAsMV0pOzA8YXJndW1lbnRzLmxlbmd0aCYmVEhSRUUuZXJyb3IoXCJUSFJFRS5NYXRyaXg0OiB0aGUgY29uc3RydWN0b3Igbm8gbG9uZ2VyIHJlYWRzIGFyZ3VtZW50cy4gdXNlIC5zZXQoKSBpbnN0ZWFkLlwiKX07XG5USFJFRS5NYXRyaXg0LnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuTWF0cml4NCxzZXQ6ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGssbCxwLHEsbix0LHIscyl7dmFyIHU9dGhpcy5lbGVtZW50czt1WzBdPWE7dVs0XT1iO3VbOF09Yzt1WzEyXT1kO3VbMV09ZTt1WzVdPWY7dVs5XT1nO3VbMTNdPWg7dVsyXT1rO3VbNl09bDt1WzEwXT1wO3VbMTRdPXE7dVszXT1uO3VbN109dDt1WzExXT1yO3VbMTVdPXM7cmV0dXJuIHRoaXN9LGlkZW50aXR5OmZ1bmN0aW9uKCl7dGhpcy5zZXQoMSwwLDAsMCwwLDEsMCwwLDAsMCwxLDAsMCwwLDAsMSk7cmV0dXJuIHRoaXN9LGNvcHk6ZnVuY3Rpb24oYSl7dGhpcy5lbGVtZW50cy5zZXQoYS5lbGVtZW50cyk7cmV0dXJuIHRoaXN9LGV4dHJhY3RQb3NpdGlvbjpmdW5jdGlvbihhKXtUSFJFRS53YXJuKFwiVEhSRUUuTWF0cml4NDogLmV4dHJhY3RQb3NpdGlvbigpIGhhcyBiZWVuIHJlbmFtZWQgdG8gLmNvcHlQb3NpdGlvbigpLlwiKTtyZXR1cm4gdGhpcy5jb3B5UG9zaXRpb24oYSl9LFxuY29weVBvc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuZWxlbWVudHM7YT1hLmVsZW1lbnRzO2JbMTJdPWFbMTJdO2JbMTNdPWFbMTNdO2JbMTRdPWFbMTRdO3JldHVybiB0aGlzfSxleHRyYWN0QmFzaXM6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuZWxlbWVudHM7YS5zZXQoZFswXSxkWzFdLGRbMl0pO2Iuc2V0KGRbNF0sZFs1XSxkWzZdKTtjLnNldChkWzhdLGRbOV0sZFsxMF0pO3JldHVybiB0aGlzfSxtYWtlQmFzaXM6ZnVuY3Rpb24oYSxiLGMpe3RoaXMuc2V0KGEueCxiLngsYy54LDAsYS55LGIueSxjLnksMCxhLnosYi56LGMueiwwLDAsMCwwLDEpO3JldHVybiB0aGlzfSxleHRyYWN0Um90YXRpb246ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oYil7dmFyIGM9dGhpcy5lbGVtZW50cztiPWIuZWxlbWVudHM7dmFyIGQ9MS9hLnNldChiWzBdLGJbMV0sYlsyXSkubGVuZ3RoKCksZT0xL2Euc2V0KGJbNF0sYls1XSxiWzZdKS5sZW5ndGgoKSxcbmY9MS9hLnNldChiWzhdLGJbOV0sYlsxMF0pLmxlbmd0aCgpO2NbMF09YlswXSpkO2NbMV09YlsxXSpkO2NbMl09YlsyXSpkO2NbNF09Yls0XSplO2NbNV09Yls1XSplO2NbNl09Yls2XSplO2NbOF09Yls4XSpmO2NbOV09Yls5XSpmO2NbMTBdPWJbMTBdKmY7cmV0dXJuIHRoaXN9fSgpLG1ha2VSb3RhdGlvbkZyb21FdWxlcjpmdW5jdGlvbihhKXshMT09PWEgaW5zdGFuY2VvZiBUSFJFRS5FdWxlciYmVEhSRUUuZXJyb3IoXCJUSFJFRS5NYXRyaXg6IC5tYWtlUm90YXRpb25Gcm9tRXVsZXIoKSBub3cgZXhwZWN0cyBhIEV1bGVyIHJvdGF0aW9uIHJhdGhlciB0aGFuIGEgVmVjdG9yMyBhbmQgb3JkZXIuXCIpO3ZhciBiPXRoaXMuZWxlbWVudHMsYz1hLngsZD1hLnksZT1hLnosZj1NYXRoLmNvcyhjKSxjPU1hdGguc2luKGMpLGc9TWF0aC5jb3MoZCksZD1NYXRoLnNpbihkKSxoPU1hdGguY29zKGUpLGU9TWF0aC5zaW4oZSk7aWYoXCJYWVpcIj09PWEub3JkZXIpe2E9ZipoO3ZhciBrPWYqZSxcbmw9YypoLHA9YyplO2JbMF09ZypoO2JbNF09LWcqZTtiWzhdPWQ7YlsxXT1rK2wqZDtiWzVdPWEtcCpkO2JbOV09LWMqZztiWzJdPXAtYSpkO2JbNl09bCtrKmQ7YlsxMF09ZipnfWVsc2VcIllYWlwiPT09YS5vcmRlcj8oYT1nKmgsaz1nKmUsbD1kKmgscD1kKmUsYlswXT1hK3AqYyxiWzRdPWwqYy1rLGJbOF09ZipkLGJbMV09ZiplLGJbNV09ZipoLGJbOV09LWMsYlsyXT1rKmMtbCxiWzZdPXArYSpjLGJbMTBdPWYqZyk6XCJaWFlcIj09PWEub3JkZXI/KGE9ZypoLGs9ZyplLGw9ZCpoLHA9ZCplLGJbMF09YS1wKmMsYls0XT0tZiplLGJbOF09bCtrKmMsYlsxXT1rK2wqYyxiWzVdPWYqaCxiWzldPXAtYSpjLGJbMl09LWYqZCxiWzZdPWMsYlsxMF09ZipnKTpcIlpZWFwiPT09YS5vcmRlcj8oYT1mKmgsaz1mKmUsbD1jKmgscD1jKmUsYlswXT1nKmgsYls0XT1sKmQtayxiWzhdPWEqZCtwLGJbMV09ZyplLGJbNV09cCpkK2EsYls5XT1rKmQtbCxiWzJdPS1kLGJbNl09YypnLGJbMTBdPWYqZyk6XCJZWlhcIj09PVxuYS5vcmRlcj8oYT1mKmcsaz1mKmQsbD1jKmcscD1jKmQsYlswXT1nKmgsYls0XT1wLWEqZSxiWzhdPWwqZStrLGJbMV09ZSxiWzVdPWYqaCxiWzldPS1jKmgsYlsyXT0tZCpoLGJbNl09ayplK2wsYlsxMF09YS1wKmUpOlwiWFpZXCI9PT1hLm9yZGVyJiYoYT1mKmcsaz1mKmQsbD1jKmcscD1jKmQsYlswXT1nKmgsYls0XT0tZSxiWzhdPWQqaCxiWzFdPWEqZStwLGJbNV09ZipoLGJbOV09ayplLWwsYlsyXT1sKmUtayxiWzZdPWMqaCxiWzEwXT1wKmUrYSk7YlszXT0wO2JbN109MDtiWzExXT0wO2JbMTJdPTA7YlsxM109MDtiWzE0XT0wO2JbMTVdPTE7cmV0dXJuIHRoaXN9LHNldFJvdGF0aW9uRnJvbVF1YXRlcm5pb246ZnVuY3Rpb24oYSl7VEhSRUUud2FybihcIlRIUkVFLk1hdHJpeDQ6IC5zZXRSb3RhdGlvbkZyb21RdWF0ZXJuaW9uKCkgaGFzIGJlZW4gcmVuYW1lZCB0byAubWFrZVJvdGF0aW9uRnJvbVF1YXRlcm5pb24oKS5cIik7cmV0dXJuIHRoaXMubWFrZVJvdGF0aW9uRnJvbVF1YXRlcm5pb24oYSl9LFxubWFrZVJvdGF0aW9uRnJvbVF1YXRlcm5pb246ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5lbGVtZW50cyxjPWEueCxkPWEueSxlPWEueixmPWEudyxnPWMrYyxoPWQrZCxrPWUrZTthPWMqZzt2YXIgbD1jKmgsYz1jKmsscD1kKmgsZD1kKmssZT1lKmssZz1mKmcsaD1mKmgsZj1mKms7YlswXT0xLShwK2UpO2JbNF09bC1mO2JbOF09YytoO2JbMV09bCtmO2JbNV09MS0oYStlKTtiWzldPWQtZztiWzJdPWMtaDtiWzZdPWQrZztiWzEwXT0xLShhK3ApO2JbM109MDtiWzddPTA7YlsxMV09MDtiWzEyXT0wO2JbMTNdPTA7YlsxNF09MDtiWzE1XT0xO3JldHVybiB0aGlzfSxsb29rQXQ6ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMyxiPW5ldyBUSFJFRS5WZWN0b3IzLGM9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKGQsZSxmKXt2YXIgZz10aGlzLmVsZW1lbnRzO2Muc3ViVmVjdG9ycyhkLGUpLm5vcm1hbGl6ZSgpOzA9PT1jLmxlbmd0aCgpJiYoYy56PTEpO2EuY3Jvc3NWZWN0b3JzKGYsXG5jKS5ub3JtYWxpemUoKTswPT09YS5sZW5ndGgoKSYmKGMueCs9MUUtNCxhLmNyb3NzVmVjdG9ycyhmLGMpLm5vcm1hbGl6ZSgpKTtiLmNyb3NzVmVjdG9ycyhjLGEpO2dbMF09YS54O2dbNF09Yi54O2dbOF09Yy54O2dbMV09YS55O2dbNV09Yi55O2dbOV09Yy55O2dbMl09YS56O2dbNl09Yi56O2dbMTBdPWMuejtyZXR1cm4gdGhpc319KCksbXVsdGlwbHk6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdm9pZCAwIT09Yj8oVEhSRUUud2FybihcIlRIUkVFLk1hdHJpeDQ6IC5tdWx0aXBseSgpIG5vdyBvbmx5IGFjY2VwdHMgb25lIGFyZ3VtZW50LiBVc2UgLm11bHRpcGx5TWF0cmljZXMoIGEsIGIgKSBpbnN0ZWFkLlwiKSx0aGlzLm11bHRpcGx5TWF0cmljZXMoYSxiKSk6dGhpcy5tdWx0aXBseU1hdHJpY2VzKHRoaXMsYSl9LG11bHRpcGx5TWF0cmljZXM6ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLmVsZW1lbnRzLGQ9Yi5lbGVtZW50cyxlPXRoaXMuZWxlbWVudHMsZj1jWzBdLGc9Y1s0XSxoPWNbOF0sXG5rPWNbMTJdLGw9Y1sxXSxwPWNbNV0scT1jWzldLG49Y1sxM10sdD1jWzJdLHI9Y1s2XSxzPWNbMTBdLHU9Y1sxNF0sdj1jWzNdLHg9Y1s3XSxEPWNbMTFdLGM9Y1sxNV0sdz1kWzBdLHk9ZFs0XSxBPWRbOF0sRT1kWzEyXSxHPWRbMV0sRj1kWzVdLHo9ZFs5XSxJPWRbMTNdLFU9ZFsyXSxNPWRbNl0sSD1kWzEwXSxMPWRbMTRdLFA9ZFszXSxOPWRbN10sUj1kWzExXSxkPWRbMTVdO2VbMF09Zip3K2cqRytoKlUraypQO2VbNF09Zip5K2cqRitoKk0raypOO2VbOF09ZipBK2cqeitoKkgraypSO2VbMTJdPWYqRStnKkkraCpMK2sqZDtlWzFdPWwqdytwKkcrcSpVK24qUDtlWzVdPWwqeStwKkYrcSpNK24qTjtlWzldPWwqQStwKnorcSpIK24qUjtlWzEzXT1sKkUrcCpJK3EqTCtuKmQ7ZVsyXT10KncrcipHK3MqVSt1KlA7ZVs2XT10KnkrcipGK3MqTSt1Kk47ZVsxMF09dCpBK3IqeitzKkgrdSpSO2VbMTRdPXQqRStyKkkrcypMK3UqZDtlWzNdPXYqdyt4KkcrRCpVK2MqUDtlWzddPXYqeStcbngqRitEKk0rYypOO2VbMTFdPXYqQSt4KnorRCpIK2MqUjtlWzE1XT12KkUreCpJK0QqTCtjKmQ7cmV0dXJuIHRoaXN9LG11bHRpcGx5VG9BcnJheTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5lbGVtZW50czt0aGlzLm11bHRpcGx5TWF0cmljZXMoYSxiKTtjWzBdPWRbMF07Y1sxXT1kWzFdO2NbMl09ZFsyXTtjWzNdPWRbM107Y1s0XT1kWzRdO2NbNV09ZFs1XTtjWzZdPWRbNl07Y1s3XT1kWzddO2NbOF09ZFs4XTtjWzldPWRbOV07Y1sxMF09ZFsxMF07Y1sxMV09ZFsxMV07Y1sxMl09ZFsxMl07Y1sxM109ZFsxM107Y1sxNF09ZFsxNF07Y1sxNV09ZFsxNV07cmV0dXJuIHRoaXN9LG11bHRpcGx5U2NhbGFyOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuZWxlbWVudHM7YlswXSo9YTtiWzRdKj1hO2JbOF0qPWE7YlsxMl0qPWE7YlsxXSo9YTtiWzVdKj1hO2JbOV0qPWE7YlsxM10qPWE7YlsyXSo9YTtiWzZdKj1hO2JbMTBdKj1hO2JbMTRdKj1hO2JbM10qPWE7Yls3XSo9YTtiWzExXSo9XG5hO2JbMTVdKj1hO3JldHVybiB0aGlzfSxtdWx0aXBseVZlY3RvcjM6ZnVuY3Rpb24oYSl7VEhSRUUud2FybihcIlRIUkVFLk1hdHJpeDQ6IC5tdWx0aXBseVZlY3RvcjMoKSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgdmVjdG9yLmFwcGx5TWF0cml4NCggbWF0cml4ICkgb3IgdmVjdG9yLmFwcGx5UHJvamVjdGlvbiggbWF0cml4ICkgaW5zdGVhZC5cIik7cmV0dXJuIGEuYXBwbHlQcm9qZWN0aW9uKHRoaXMpfSxtdWx0aXBseVZlY3RvcjQ6ZnVuY3Rpb24oYSl7VEhSRUUud2FybihcIlRIUkVFLk1hdHJpeDQ6IC5tdWx0aXBseVZlY3RvcjQoKSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgdmVjdG9yLmFwcGx5TWF0cml4NCggbWF0cml4ICkgaW5zdGVhZC5cIik7cmV0dXJuIGEuYXBwbHlNYXRyaXg0KHRoaXMpfSxtdWx0aXBseVZlY3RvcjNBcnJheTpmdW5jdGlvbihhKXtUSFJFRS53YXJuKFwiVEhSRUUuTWF0cml4NDogLm11bHRpcGx5VmVjdG9yM0FycmF5KCkgaGFzIGJlZW4gcmVuYW1lZC4gVXNlIG1hdHJpeC5hcHBseVRvVmVjdG9yM0FycmF5KCBhcnJheSApIGluc3RlYWQuXCIpO1xucmV0dXJuIHRoaXMuYXBwbHlUb1ZlY3RvcjNBcnJheShhKX0sYXBwbHlUb1ZlY3RvcjNBcnJheTpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbihiLGMsZCl7dm9pZCAwPT09YyYmKGM9MCk7dm9pZCAwPT09ZCYmKGQ9Yi5sZW5ndGgpO2Zvcih2YXIgZT0wO2U8ZDtlKz0zLGMrPTMpYS54PWJbY10sYS55PWJbYysxXSxhLno9YltjKzJdLGEuYXBwbHlNYXRyaXg0KHRoaXMpLGJbY109YS54LGJbYysxXT1hLnksYltjKzJdPWEuejtyZXR1cm4gYn19KCkscm90YXRlQXhpczpmdW5jdGlvbihhKXtUSFJFRS53YXJuKFwiVEhSRUUuTWF0cml4NDogLnJvdGF0ZUF4aXMoKSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgVmVjdG9yMy50cmFuc2Zvcm1EaXJlY3Rpb24oIG1hdHJpeCApIGluc3RlYWQuXCIpO2EudHJhbnNmb3JtRGlyZWN0aW9uKHRoaXMpfSxjcm9zc1ZlY3RvcjpmdW5jdGlvbihhKXtUSFJFRS53YXJuKFwiVEhSRUUuTWF0cml4NDogLmNyb3NzVmVjdG9yKCkgaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIHZlY3Rvci5hcHBseU1hdHJpeDQoIG1hdHJpeCApIGluc3RlYWQuXCIpO1xucmV0dXJuIGEuYXBwbHlNYXRyaXg0KHRoaXMpfSxkZXRlcm1pbmFudDpmdW5jdGlvbigpe3ZhciBhPXRoaXMuZWxlbWVudHMsYj1hWzBdLGM9YVs0XSxkPWFbOF0sZT1hWzEyXSxmPWFbMV0sZz1hWzVdLGg9YVs5XSxrPWFbMTNdLGw9YVsyXSxwPWFbNl0scT1hWzEwXSxuPWFbMTRdO3JldHVybiBhWzNdKigrZSpoKnAtZCprKnAtZSpnKnErYyprKnErZCpnKm4tYypoKm4pK2FbN10qKCtiKmgqbi1iKmsqcStlKmYqcS1kKmYqbitkKmsqbC1lKmgqbCkrYVsxMV0qKCtiKmsqcC1iKmcqbi1lKmYqcCtjKmYqbitlKmcqbC1jKmsqbCkrYVsxNV0qKC1kKmcqbC1iKmgqcCtiKmcqcStkKmYqcC1jKmYqcStjKmgqbCl9LHRyYW5zcG9zZTpmdW5jdGlvbigpe3ZhciBhPXRoaXMuZWxlbWVudHMsYjtiPWFbMV07YVsxXT1hWzRdO2FbNF09YjtiPWFbMl07YVsyXT1hWzhdO2FbOF09YjtiPWFbNl07YVs2XT1hWzldO2FbOV09YjtiPWFbM107YVszXT1hWzEyXTthWzEyXT1iO2I9YVs3XTthWzddPWFbMTNdO1xuYVsxM109YjtiPWFbMTFdO2FbMTFdPWFbMTRdO2FbMTRdPWI7cmV0dXJuIHRoaXN9LGZsYXR0ZW5Ub0FycmF5T2Zmc2V0OmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5lbGVtZW50czthW2JdPWNbMF07YVtiKzFdPWNbMV07YVtiKzJdPWNbMl07YVtiKzNdPWNbM107YVtiKzRdPWNbNF07YVtiKzVdPWNbNV07YVtiKzZdPWNbNl07YVtiKzddPWNbN107YVtiKzhdPWNbOF07YVtiKzldPWNbOV07YVtiKzEwXT1jWzEwXTthW2IrMTFdPWNbMTFdO2FbYisxMl09Y1sxMl07YVtiKzEzXT1jWzEzXTthW2IrMTRdPWNbMTRdO2FbYisxNV09Y1sxNV07cmV0dXJuIGF9LGdldFBvc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKCl7VEhSRUUud2FybihcIlRIUkVFLk1hdHJpeDQ6IC5nZXRQb3NpdGlvbigpIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBWZWN0b3IzLnNldEZyb21NYXRyaXhQb3NpdGlvbiggbWF0cml4ICkgaW5zdGVhZC5cIik7dmFyIGI9XG50aGlzLmVsZW1lbnRzO3JldHVybiBhLnNldChiWzEyXSxiWzEzXSxiWzE0XSl9fSgpLHNldFBvc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuZWxlbWVudHM7YlsxMl09YS54O2JbMTNdPWEueTtiWzE0XT1hLno7cmV0dXJuIHRoaXN9LGdldEludmVyc2U6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmVsZW1lbnRzLGQ9YS5lbGVtZW50cyxlPWRbMF0sZj1kWzRdLGc9ZFs4XSxoPWRbMTJdLGs9ZFsxXSxsPWRbNV0scD1kWzldLHE9ZFsxM10sbj1kWzJdLHQ9ZFs2XSxyPWRbMTBdLHM9ZFsxNF0sdT1kWzNdLHY9ZFs3XSx4PWRbMTFdLGQ9ZFsxNV07Y1swXT1wKnMqdi1xKnIqditxKnQqeC1sKnMqeC1wKnQqZCtsKnIqZDtjWzRdPWgqcip2LWcqcyp2LWgqdCp4K2Yqcyp4K2cqdCpkLWYqcipkO2NbOF09ZypxKnYtaCpwKnYraCpsKngtZipxKngtZypsKmQrZipwKmQ7Y1sxMl09aCpwKnQtZypxKnQtaCpsKnIrZipxKnIrZypsKnMtZipwKnM7Y1sxXT1xKnIqdS1wKnMqdS1xKm4qeCtcbmsqcyp4K3AqbipkLWsqcipkO2NbNV09ZypzKnUtaCpyKnUraCpuKngtZSpzKngtZypuKmQrZSpyKmQ7Y1s5XT1oKnAqdS1nKnEqdS1oKmsqeCtlKnEqeCtnKmsqZC1lKnAqZDtjWzEzXT1nKnEqbi1oKnAqbitoKmsqci1lKnEqci1nKmsqcytlKnAqcztjWzJdPWwqcyp1LXEqdCp1K3Eqbip2LWsqcyp2LWwqbipkK2sqdCpkO2NbNl09aCp0KnUtZipzKnUtaCpuKnYrZSpzKnYrZipuKmQtZSp0KmQ7Y1sxMF09ZipxKnUtaCpsKnUraCprKnYtZSpxKnYtZiprKmQrZSpsKmQ7Y1sxNF09aCpsKm4tZipxKm4taCprKnQrZSpxKnQrZiprKnMtZSpsKnM7Y1szXT1wKnQqdS1sKnIqdS1wKm4qditrKnIqditsKm4qeC1rKnQqeDtjWzddPWYqcip1LWcqdCp1K2cqbip2LWUqcip2LWYqbip4K2UqdCp4O2NbMTFdPWcqbCp1LWYqcCp1LWcqayp2K2UqcCp2K2Yqayp4LWUqbCp4O2NbMTVdPWYqcCpuLWcqbCpuK2cqayp0LWUqcCp0LWYqaypyK2UqbCpyO2M9ZSpjWzBdK2sqY1s0XStuKmNbOF0rdSpjWzEyXTtcbmlmKDA9PWMpe2lmKGIpdGhyb3cgRXJyb3IoXCJUSFJFRS5NYXRyaXg0LmdldEludmVyc2UoKTogY2FuJ3QgaW52ZXJ0IG1hdHJpeCwgZGV0ZXJtaW5hbnQgaXMgMFwiKTtUSFJFRS53YXJuKFwiVEhSRUUuTWF0cml4NC5nZXRJbnZlcnNlKCk6IGNhbid0IGludmVydCBtYXRyaXgsIGRldGVybWluYW50IGlzIDBcIik7dGhpcy5pZGVudGl0eSgpO3JldHVybiB0aGlzfXRoaXMubXVsdGlwbHlTY2FsYXIoMS9jKTtyZXR1cm4gdGhpc30sdHJhbnNsYXRlOmZ1bmN0aW9uKGEpe1RIUkVFLmVycm9yKFwiVEhSRUUuTWF0cml4NDogLnRyYW5zbGF0ZSgpIGhhcyBiZWVuIHJlbW92ZWQuXCIpfSxyb3RhdGVYOmZ1bmN0aW9uKGEpe1RIUkVFLmVycm9yKFwiVEhSRUUuTWF0cml4NDogLnJvdGF0ZVgoKSBoYXMgYmVlbiByZW1vdmVkLlwiKX0scm90YXRlWTpmdW5jdGlvbihhKXtUSFJFRS5lcnJvcihcIlRIUkVFLk1hdHJpeDQ6IC5yb3RhdGVZKCkgaGFzIGJlZW4gcmVtb3ZlZC5cIil9LHJvdGF0ZVo6ZnVuY3Rpb24oYSl7VEhSRUUuZXJyb3IoXCJUSFJFRS5NYXRyaXg0OiAucm90YXRlWigpIGhhcyBiZWVuIHJlbW92ZWQuXCIpfSxcbnJvdGF0ZUJ5QXhpczpmdW5jdGlvbihhLGIpe1RIUkVFLmVycm9yKFwiVEhSRUUuTWF0cml4NDogLnJvdGF0ZUJ5QXhpcygpIGhhcyBiZWVuIHJlbW92ZWQuXCIpfSxzY2FsZTpmdW5jdGlvbihhKXt2YXIgYj10aGlzLmVsZW1lbnRzLGM9YS54LGQ9YS55O2E9YS56O2JbMF0qPWM7Yls0XSo9ZDtiWzhdKj1hO2JbMV0qPWM7Yls1XSo9ZDtiWzldKj1hO2JbMl0qPWM7Yls2XSo9ZDtiWzEwXSo9YTtiWzNdKj1jO2JbN10qPWQ7YlsxMV0qPWE7cmV0dXJuIHRoaXN9LGdldE1heFNjYWxlT25BeGlzOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5lbGVtZW50cztyZXR1cm4gTWF0aC5zcXJ0KE1hdGgubWF4KGFbMF0qYVswXSthWzFdKmFbMV0rYVsyXSphWzJdLE1hdGgubWF4KGFbNF0qYVs0XSthWzVdKmFbNV0rYVs2XSphWzZdLGFbOF0qYVs4XSthWzldKmFbOV0rYVsxMF0qYVsxMF0pKSl9LG1ha2VUcmFuc2xhdGlvbjpmdW5jdGlvbihhLGIsYyl7dGhpcy5zZXQoMSwwLDAsYSwwLDEsMCxiLDAsMCwxLFxuYywwLDAsMCwxKTtyZXR1cm4gdGhpc30sbWFrZVJvdGF0aW9uWDpmdW5jdGlvbihhKXt2YXIgYj1NYXRoLmNvcyhhKTthPU1hdGguc2luKGEpO3RoaXMuc2V0KDEsMCwwLDAsMCxiLC1hLDAsMCxhLGIsMCwwLDAsMCwxKTtyZXR1cm4gdGhpc30sbWFrZVJvdGF0aW9uWTpmdW5jdGlvbihhKXt2YXIgYj1NYXRoLmNvcyhhKTthPU1hdGguc2luKGEpO3RoaXMuc2V0KGIsMCxhLDAsMCwxLDAsMCwtYSwwLGIsMCwwLDAsMCwxKTtyZXR1cm4gdGhpc30sbWFrZVJvdGF0aW9uWjpmdW5jdGlvbihhKXt2YXIgYj1NYXRoLmNvcyhhKTthPU1hdGguc2luKGEpO3RoaXMuc2V0KGIsLWEsMCwwLGEsYiwwLDAsMCwwLDEsMCwwLDAsMCwxKTtyZXR1cm4gdGhpc30sbWFrZVJvdGF0aW9uQXhpczpmdW5jdGlvbihhLGIpe3ZhciBjPU1hdGguY29zKGIpLGQ9TWF0aC5zaW4oYiksZT0xLWMsZj1hLngsZz1hLnksaD1hLnosaz1lKmYsbD1lKmc7dGhpcy5zZXQoaypmK2MsaypnLWQqaCxrKmgrZCpnLDAsaypnK1xuZCpoLGwqZytjLGwqaC1kKmYsMCxrKmgtZCpnLGwqaCtkKmYsZSpoKmgrYywwLDAsMCwwLDEpO3JldHVybiB0aGlzfSxtYWtlU2NhbGU6ZnVuY3Rpb24oYSxiLGMpe3RoaXMuc2V0KGEsMCwwLDAsMCxiLDAsMCwwLDAsYywwLDAsMCwwLDEpO3JldHVybiB0aGlzfSxjb21wb3NlOmZ1bmN0aW9uKGEsYixjKXt0aGlzLm1ha2VSb3RhdGlvbkZyb21RdWF0ZXJuaW9uKGIpO3RoaXMuc2NhbGUoYyk7dGhpcy5zZXRQb3NpdGlvbihhKTtyZXR1cm4gdGhpc30sZGVjb21wb3NlOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjMsYj1uZXcgVEhSRUUuTWF0cml4NDtyZXR1cm4gZnVuY3Rpb24oYyxkLGUpe3ZhciBmPXRoaXMuZWxlbWVudHMsZz1hLnNldChmWzBdLGZbMV0sZlsyXSkubGVuZ3RoKCksaD1hLnNldChmWzRdLGZbNV0sZls2XSkubGVuZ3RoKCksaz1hLnNldChmWzhdLGZbOV0sZlsxMF0pLmxlbmd0aCgpOzA+dGhpcy5kZXRlcm1pbmFudCgpJiYoZz0tZyk7Yy54PWZbMTJdO1xuYy55PWZbMTNdO2Muej1mWzE0XTtiLmVsZW1lbnRzLnNldCh0aGlzLmVsZW1lbnRzKTtjPTEvZzt2YXIgZj0xL2gsbD0xL2s7Yi5lbGVtZW50c1swXSo9YztiLmVsZW1lbnRzWzFdKj1jO2IuZWxlbWVudHNbMl0qPWM7Yi5lbGVtZW50c1s0XSo9ZjtiLmVsZW1lbnRzWzVdKj1mO2IuZWxlbWVudHNbNl0qPWY7Yi5lbGVtZW50c1s4XSo9bDtiLmVsZW1lbnRzWzldKj1sO2IuZWxlbWVudHNbMTBdKj1sO2Quc2V0RnJvbVJvdGF0aW9uTWF0cml4KGIpO2UueD1nO2UueT1oO2Uuej1rO3JldHVybiB0aGlzfX0oKSxtYWtlRnJ1c3R1bTpmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9dGhpcy5lbGVtZW50cztnWzBdPTIqZS8oYi1hKTtnWzRdPTA7Z1s4XT0oYithKS8oYi1hKTtnWzEyXT0wO2dbMV09MDtnWzVdPTIqZS8oZC1jKTtnWzldPShkK2MpLyhkLWMpO2dbMTNdPTA7Z1syXT0wO2dbNl09MDtnWzEwXT0tKGYrZSkvKGYtZSk7Z1sxNF09LTIqZiplLyhmLWUpO2dbM109MDtnWzddPTA7XG5nWzExXT0tMTtnWzE1XT0wO3JldHVybiB0aGlzfSxtYWtlUGVyc3BlY3RpdmU6ZnVuY3Rpb24oYSxiLGMsZCl7YT1jKk1hdGgudGFuKFRIUkVFLk1hdGguZGVnVG9SYWQoLjUqYSkpO3ZhciBlPS1hO3JldHVybiB0aGlzLm1ha2VGcnVzdHVtKGUqYixhKmIsZSxhLGMsZCl9LG1ha2VPcnRob2dyYXBoaWM6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPXRoaXMuZWxlbWVudHMsaD1iLWEsaz1jLWQsbD1mLWU7Z1swXT0yL2g7Z1s0XT0wO2dbOF09MDtnWzEyXT0tKChiK2EpL2gpO2dbMV09MDtnWzVdPTIvaztnWzldPTA7Z1sxM109LSgoYytkKS9rKTtnWzJdPTA7Z1s2XT0wO2dbMTBdPS0yL2w7Z1sxNF09LSgoZitlKS9sKTtnWzNdPTA7Z1s3XT0wO2dbMTFdPTA7Z1sxNV09MTtyZXR1cm4gdGhpc30sZnJvbUFycmF5OmZ1bmN0aW9uKGEpe3RoaXMuZWxlbWVudHMuc2V0KGEpO3JldHVybiB0aGlzfSx0b0FycmF5OmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5lbGVtZW50cztyZXR1cm5bYVswXSxcbmFbMV0sYVsyXSxhWzNdLGFbNF0sYVs1XSxhWzZdLGFbN10sYVs4XSxhWzldLGFbMTBdLGFbMTFdLGFbMTJdLGFbMTNdLGFbMTRdLGFbMTVdXX0sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IFRIUkVFLk1hdHJpeDQpLmZyb21BcnJheSh0aGlzLmVsZW1lbnRzKX19O1RIUkVFLlJheT1mdW5jdGlvbihhLGIpe3RoaXMub3JpZ2luPXZvaWQgMCE9PWE/YTpuZXcgVEhSRUUuVmVjdG9yMzt0aGlzLmRpcmVjdGlvbj12b2lkIDAhPT1iP2I6bmV3IFRIUkVFLlZlY3RvcjN9O1xuVEhSRUUuUmF5LnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuUmF5LHNldDpmdW5jdGlvbihhLGIpe3RoaXMub3JpZ2luLmNvcHkoYSk7dGhpcy5kaXJlY3Rpb24uY29weShiKTtyZXR1cm4gdGhpc30sY29weTpmdW5jdGlvbihhKXt0aGlzLm9yaWdpbi5jb3B5KGEub3JpZ2luKTt0aGlzLmRpcmVjdGlvbi5jb3B5KGEuZGlyZWN0aW9uKTtyZXR1cm4gdGhpc30sYXQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4oYnx8bmV3IFRIUkVFLlZlY3RvcjMpLmNvcHkodGhpcy5kaXJlY3Rpb24pLm11bHRpcGx5U2NhbGFyKGEpLmFkZCh0aGlzLm9yaWdpbil9LHJlY2FzdDpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbihiKXt0aGlzLm9yaWdpbi5jb3B5KHRoaXMuYXQoYixhKSk7cmV0dXJuIHRoaXN9fSgpLGNsb3Nlc3RQb2ludFRvUG9pbnQ6ZnVuY3Rpb24oYSxiKXt2YXIgYz1ifHxuZXcgVEhSRUUuVmVjdG9yMztjLnN1YlZlY3RvcnMoYSx0aGlzLm9yaWdpbik7XG52YXIgZD1jLmRvdCh0aGlzLmRpcmVjdGlvbik7cmV0dXJuIDA+ZD9jLmNvcHkodGhpcy5vcmlnaW4pOmMuY29weSh0aGlzLmRpcmVjdGlvbikubXVsdGlwbHlTY2FsYXIoZCkuYWRkKHRoaXMub3JpZ2luKX0sZGlzdGFuY2VUb1BvaW50OmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKGIpe3ZhciBjPWEuc3ViVmVjdG9ycyhiLHRoaXMub3JpZ2luKS5kb3QodGhpcy5kaXJlY3Rpb24pO2lmKDA+YylyZXR1cm4gdGhpcy5vcmlnaW4uZGlzdGFuY2VUbyhiKTthLmNvcHkodGhpcy5kaXJlY3Rpb24pLm11bHRpcGx5U2NhbGFyKGMpLmFkZCh0aGlzLm9yaWdpbik7cmV0dXJuIGEuZGlzdGFuY2VUbyhiKX19KCksZGlzdGFuY2VTcVRvU2VnbWVudDpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzLGI9bmV3IFRIUkVFLlZlY3RvcjMsYz1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oZCxlLGYsZyl7YS5jb3B5KGQpLmFkZChlKS5tdWx0aXBseVNjYWxhciguNSk7XG5iLmNvcHkoZSkuc3ViKGQpLm5vcm1hbGl6ZSgpO2MuY29weSh0aGlzLm9yaWdpbikuc3ViKGEpO3ZhciBoPS41KmQuZGlzdGFuY2VUbyhlKSxrPS10aGlzLmRpcmVjdGlvbi5kb3QoYiksbD1jLmRvdCh0aGlzLmRpcmVjdGlvbikscD0tYy5kb3QoYikscT1jLmxlbmd0aFNxKCksbj1NYXRoLmFicygxLWsqayksdDswPG4/KGQ9aypwLWwsZT1rKmwtcCx0PWgqbiwwPD1kP2U+PS10P2U8PXQ/KGg9MS9uLGQqPWgsZSo9aCxrPWQqKGQrayplKzIqbCkrZSooaypkK2UrMipwKStxKTooZT1oLGQ9TWF0aC5tYXgoMCwtKGsqZStsKSksaz0tZCpkK2UqKGUrMipwKStxKTooZT0taCxkPU1hdGgubWF4KDAsLShrKmUrbCkpLGs9LWQqZCtlKihlKzIqcCkrcSk6ZTw9LXQ/KGQ9TWF0aC5tYXgoMCwtKC1rKmgrbCkpLGU9MDxkPy1oOk1hdGgubWluKE1hdGgubWF4KC1oLC1wKSxoKSxrPS1kKmQrZSooZSsyKnApK3EpOmU8PXQ/KGQ9MCxlPU1hdGgubWluKE1hdGgubWF4KC1oLC1wKSxoKSxrPWUqKGUrXG4yKnApK3EpOihkPU1hdGgubWF4KDAsLShrKmgrbCkpLGU9MDxkP2g6TWF0aC5taW4oTWF0aC5tYXgoLWgsLXApLGgpLGs9LWQqZCtlKihlKzIqcCkrcSkpOihlPTA8az8taDpoLGQ9TWF0aC5tYXgoMCwtKGsqZStsKSksaz0tZCpkK2UqKGUrMipwKStxKTtmJiZmLmNvcHkodGhpcy5kaXJlY3Rpb24pLm11bHRpcGx5U2NhbGFyKGQpLmFkZCh0aGlzLm9yaWdpbik7ZyYmZy5jb3B5KGIpLm11bHRpcGx5U2NhbGFyKGUpLmFkZChhKTtyZXR1cm4ga319KCksaXNJbnRlcnNlY3Rpb25TcGhlcmU6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZGlzdGFuY2VUb1BvaW50KGEuY2VudGVyKTw9YS5yYWRpdXN9LGludGVyc2VjdFNwaGVyZTpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbihiLGMpe2Euc3ViVmVjdG9ycyhiLmNlbnRlcix0aGlzLm9yaWdpbik7dmFyIGQ9YS5kb3QodGhpcy5kaXJlY3Rpb24pLGU9YS5kb3QoYSktZCpkLGY9Yi5yYWRpdXMqYi5yYWRpdXM7XG5pZihlPmYpcmV0dXJuIG51bGw7Zj1NYXRoLnNxcnQoZi1lKTtlPWQtZjtkKz1mO3JldHVybiAwPmUmJjA+ZD9udWxsOjA+ZT90aGlzLmF0KGQsYyk6dGhpcy5hdChlLGMpfX0oKSxpc0ludGVyc2VjdGlvblBsYW5lOmZ1bmN0aW9uKGEpe3ZhciBiPWEuZGlzdGFuY2VUb1BvaW50KHRoaXMub3JpZ2luKTtyZXR1cm4gMD09PWJ8fDA+YS5ub3JtYWwuZG90KHRoaXMuZGlyZWN0aW9uKSpiPyEwOiExfSxkaXN0YW5jZVRvUGxhbmU6ZnVuY3Rpb24oYSl7dmFyIGI9YS5ub3JtYWwuZG90KHRoaXMuZGlyZWN0aW9uKTtpZigwPT1iKXJldHVybiAwPT1hLmRpc3RhbmNlVG9Qb2ludCh0aGlzLm9yaWdpbik/MDpudWxsO2E9LSh0aGlzLm9yaWdpbi5kb3QoYS5ub3JtYWwpK2EuY29uc3RhbnQpL2I7cmV0dXJuIDA8PWE/YTpudWxsfSxpbnRlcnNlY3RQbGFuZTpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuZGlzdGFuY2VUb1BsYW5lKGEpO3JldHVybiBudWxsPT09Yz9udWxsOnRoaXMuYXQoYyxiKX0sXG5pc0ludGVyc2VjdGlvbkJveDpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm4gbnVsbCE9PXRoaXMuaW50ZXJzZWN0Qm94KGIsYSl9fSgpLGludGVyc2VjdEJveDpmdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGc7ZD0xL3RoaXMuZGlyZWN0aW9uLng7Zj0xL3RoaXMuZGlyZWN0aW9uLnk7Zz0xL3RoaXMuZGlyZWN0aW9uLno7dmFyIGg9dGhpcy5vcmlnaW47MDw9ZD8oYz0oYS5taW4ueC1oLngpKmQsZCo9YS5tYXgueC1oLngpOihjPShhLm1heC54LWgueCkqZCxkKj1hLm1pbi54LWgueCk7MDw9Zj8oZT0oYS5taW4ueS1oLnkpKmYsZio9YS5tYXgueS1oLnkpOihlPShhLm1heC55LWgueSkqZixmKj1hLm1pbi55LWgueSk7aWYoYz5mfHxlPmQpcmV0dXJuIG51bGw7aWYoZT5jfHxjIT09YyljPWU7aWYoZjxkfHxkIT09ZClkPWY7MDw9Zz8oZT0oYS5taW4uei1oLnopKmcsZyo9YS5tYXguei1oLnopOihlPShhLm1heC56LWgueikqXG5nLGcqPWEubWluLnotaC56KTtpZihjPmd8fGU+ZClyZXR1cm4gbnVsbDtpZihlPmN8fGMhPT1jKWM9ZTtpZihnPGR8fGQhPT1kKWQ9ZztyZXR1cm4gMD5kP251bGw6dGhpcy5hdCgwPD1jP2M6ZCxiKX0saW50ZXJzZWN0VHJpYW5nbGU6ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMyxiPW5ldyBUSFJFRS5WZWN0b3IzLGM9bmV3IFRIUkVFLlZlY3RvcjMsZD1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oZSxmLGcsaCxrKXtiLnN1YlZlY3RvcnMoZixlKTtjLnN1YlZlY3RvcnMoZyxlKTtkLmNyb3NzVmVjdG9ycyhiLGMpO2Y9dGhpcy5kaXJlY3Rpb24uZG90KGQpO2lmKDA8Zil7aWYoaClyZXR1cm4gbnVsbDtoPTF9ZWxzZSBpZigwPmYpaD0tMSxmPS1mO2Vsc2UgcmV0dXJuIG51bGw7YS5zdWJWZWN0b3JzKHRoaXMub3JpZ2luLGUpO2U9aCp0aGlzLmRpcmVjdGlvbi5kb3QoYy5jcm9zc1ZlY3RvcnMoYSxjKSk7aWYoMD5lKXJldHVybiBudWxsO2c9aCp0aGlzLmRpcmVjdGlvbi5kb3QoYi5jcm9zcyhhKSk7XG5pZigwPmd8fGUrZz5mKXJldHVybiBudWxsO2U9LWgqYS5kb3QoZCk7cmV0dXJuIDA+ZT9udWxsOnRoaXMuYXQoZS9mLGspfX0oKSxhcHBseU1hdHJpeDQ6ZnVuY3Rpb24oYSl7dGhpcy5kaXJlY3Rpb24uYWRkKHRoaXMub3JpZ2luKS5hcHBseU1hdHJpeDQoYSk7dGhpcy5vcmlnaW4uYXBwbHlNYXRyaXg0KGEpO3RoaXMuZGlyZWN0aW9uLnN1Yih0aGlzLm9yaWdpbik7dGhpcy5kaXJlY3Rpb24ubm9ybWFsaXplKCk7cmV0dXJuIHRoaXN9LGVxdWFsczpmdW5jdGlvbihhKXtyZXR1cm4gYS5vcmlnaW4uZXF1YWxzKHRoaXMub3JpZ2luKSYmYS5kaXJlY3Rpb24uZXF1YWxzKHRoaXMuZGlyZWN0aW9uKX0sY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IFRIUkVFLlJheSkuY29weSh0aGlzKX19O1RIUkVFLlNwaGVyZT1mdW5jdGlvbihhLGIpe3RoaXMuY2VudGVyPXZvaWQgMCE9PWE/YTpuZXcgVEhSRUUuVmVjdG9yMzt0aGlzLnJhZGl1cz12b2lkIDAhPT1iP2I6MH07XG5USFJFRS5TcGhlcmUucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUSFJFRS5TcGhlcmUsc2V0OmZ1bmN0aW9uKGEsYil7dGhpcy5jZW50ZXIuY29weShhKTt0aGlzLnJhZGl1cz1iO3JldHVybiB0aGlzfSxzZXRGcm9tUG9pbnRzOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLkJveDM7cmV0dXJuIGZ1bmN0aW9uKGIsYyl7dmFyIGQ9dGhpcy5jZW50ZXI7dm9pZCAwIT09Yz9kLmNvcHkoYyk6YS5zZXRGcm9tUG9pbnRzKGIpLmNlbnRlcihkKTtmb3IodmFyIGU9MCxmPTAsZz1iLmxlbmd0aDtmPGc7ZisrKWU9TWF0aC5tYXgoZSxkLmRpc3RhbmNlVG9TcXVhcmVkKGJbZl0pKTt0aGlzLnJhZGl1cz1NYXRoLnNxcnQoZSk7cmV0dXJuIHRoaXN9fSgpLGNvcHk6ZnVuY3Rpb24oYSl7dGhpcy5jZW50ZXIuY29weShhLmNlbnRlcik7dGhpcy5yYWRpdXM9YS5yYWRpdXM7cmV0dXJuIHRoaXN9LGVtcHR5OmZ1bmN0aW9uKCl7cmV0dXJuIDA+PXRoaXMucmFkaXVzfSxjb250YWluc1BvaW50OmZ1bmN0aW9uKGEpe3JldHVybiBhLmRpc3RhbmNlVG9TcXVhcmVkKHRoaXMuY2VudGVyKTw9XG50aGlzLnJhZGl1cyp0aGlzLnJhZGl1c30sZGlzdGFuY2VUb1BvaW50OmZ1bmN0aW9uKGEpe3JldHVybiBhLmRpc3RhbmNlVG8odGhpcy5jZW50ZXIpLXRoaXMucmFkaXVzfSxpbnRlcnNlY3RzU3BoZXJlOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMucmFkaXVzK2EucmFkaXVzO3JldHVybiBhLmNlbnRlci5kaXN0YW5jZVRvU3F1YXJlZCh0aGlzLmNlbnRlcik8PWIqYn0sY2xhbXBQb2ludDpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuY2VudGVyLmRpc3RhbmNlVG9TcXVhcmVkKGEpLGQ9Ynx8bmV3IFRIUkVFLlZlY3RvcjM7ZC5jb3B5KGEpO2M+dGhpcy5yYWRpdXMqdGhpcy5yYWRpdXMmJihkLnN1Yih0aGlzLmNlbnRlcikubm9ybWFsaXplKCksZC5tdWx0aXBseVNjYWxhcih0aGlzLnJhZGl1cykuYWRkKHRoaXMuY2VudGVyKSk7cmV0dXJuIGR9LGdldEJvdW5kaW5nQm94OmZ1bmN0aW9uKGEpe2E9YXx8bmV3IFRIUkVFLkJveDM7YS5zZXQodGhpcy5jZW50ZXIsdGhpcy5jZW50ZXIpO2EuZXhwYW5kQnlTY2FsYXIodGhpcy5yYWRpdXMpO1xucmV0dXJuIGF9LGFwcGx5TWF0cml4NDpmdW5jdGlvbihhKXt0aGlzLmNlbnRlci5hcHBseU1hdHJpeDQoYSk7dGhpcy5yYWRpdXMqPWEuZ2V0TWF4U2NhbGVPbkF4aXMoKTtyZXR1cm4gdGhpc30sdHJhbnNsYXRlOmZ1bmN0aW9uKGEpe3RoaXMuY2VudGVyLmFkZChhKTtyZXR1cm4gdGhpc30sZXF1YWxzOmZ1bmN0aW9uKGEpe3JldHVybiBhLmNlbnRlci5lcXVhbHModGhpcy5jZW50ZXIpJiZhLnJhZGl1cz09PXRoaXMucmFkaXVzfSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgVEhSRUUuU3BoZXJlKS5jb3B5KHRoaXMpfX07XG5USFJFRS5GcnVzdHVtPWZ1bmN0aW9uKGEsYixjLGQsZSxmKXt0aGlzLnBsYW5lcz1bdm9pZCAwIT09YT9hOm5ldyBUSFJFRS5QbGFuZSx2b2lkIDAhPT1iP2I6bmV3IFRIUkVFLlBsYW5lLHZvaWQgMCE9PWM/YzpuZXcgVEhSRUUuUGxhbmUsdm9pZCAwIT09ZD9kOm5ldyBUSFJFRS5QbGFuZSx2b2lkIDAhPT1lP2U6bmV3IFRIUkVFLlBsYW5lLHZvaWQgMCE9PWY/ZjpuZXcgVEhSRUUuUGxhbmVdfTtcblRIUkVFLkZydXN0dW0ucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUSFJFRS5GcnVzdHVtLHNldDpmdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9dGhpcy5wbGFuZXM7Z1swXS5jb3B5KGEpO2dbMV0uY29weShiKTtnWzJdLmNvcHkoYyk7Z1szXS5jb3B5KGQpO2dbNF0uY29weShlKTtnWzVdLmNvcHkoZik7cmV0dXJuIHRoaXN9LGNvcHk6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPXRoaXMucGxhbmVzLGM9MDs2PmM7YysrKWJbY10uY29weShhLnBsYW5lc1tjXSk7cmV0dXJuIHRoaXN9LHNldEZyb21NYXRyaXg6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5wbGFuZXMsYz1hLmVsZW1lbnRzO2E9Y1swXTt2YXIgZD1jWzFdLGU9Y1syXSxmPWNbM10sZz1jWzRdLGg9Y1s1XSxrPWNbNl0sbD1jWzddLHA9Y1s4XSxxPWNbOV0sbj1jWzEwXSx0PWNbMTFdLHI9Y1sxMl0scz1jWzEzXSx1PWNbMTRdLGM9Y1sxNV07YlswXS5zZXRDb21wb25lbnRzKGYtYSxsLWcsdC1wLGMtcikubm9ybWFsaXplKCk7YlsxXS5zZXRDb21wb25lbnRzKGYrXG5hLGwrZyx0K3AsYytyKS5ub3JtYWxpemUoKTtiWzJdLnNldENvbXBvbmVudHMoZitkLGwraCx0K3EsYytzKS5ub3JtYWxpemUoKTtiWzNdLnNldENvbXBvbmVudHMoZi1kLGwtaCx0LXEsYy1zKS5ub3JtYWxpemUoKTtiWzRdLnNldENvbXBvbmVudHMoZi1lLGwtayx0LW4sYy11KS5ub3JtYWxpemUoKTtiWzVdLnNldENvbXBvbmVudHMoZitlLGwrayx0K24sYyt1KS5ub3JtYWxpemUoKTtyZXR1cm4gdGhpc30saW50ZXJzZWN0c09iamVjdDpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5TcGhlcmU7cmV0dXJuIGZ1bmN0aW9uKGIpe3ZhciBjPWIuZ2VvbWV0cnk7bnVsbD09PWMuYm91bmRpbmdTcGhlcmUmJmMuY29tcHV0ZUJvdW5kaW5nU3BoZXJlKCk7YS5jb3B5KGMuYm91bmRpbmdTcGhlcmUpO2EuYXBwbHlNYXRyaXg0KGIubWF0cml4V29ybGQpO3JldHVybiB0aGlzLmludGVyc2VjdHNTcGhlcmUoYSl9fSgpLGludGVyc2VjdHNTcGhlcmU6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5wbGFuZXMsXG5jPWEuY2VudGVyO2E9LWEucmFkaXVzO2Zvcih2YXIgZD0wOzY+ZDtkKyspaWYoYltkXS5kaXN0YW5jZVRvUG9pbnQoYyk8YSlyZXR1cm4hMTtyZXR1cm4hMH0saW50ZXJzZWN0c0JveDpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzLGI9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKGMpe2Zvcih2YXIgZD10aGlzLnBsYW5lcyxlPTA7Nj5lO2UrKyl7dmFyIGY9ZFtlXTthLng9MDxmLm5vcm1hbC54P2MubWluLng6Yy5tYXgueDtiLng9MDxmLm5vcm1hbC54P2MubWF4Lng6Yy5taW4ueDthLnk9MDxmLm5vcm1hbC55P2MubWluLnk6Yy5tYXgueTtiLnk9MDxmLm5vcm1hbC55P2MubWF4Lnk6Yy5taW4ueTthLno9MDxmLm5vcm1hbC56P2MubWluLno6Yy5tYXguejtiLno9MDxmLm5vcm1hbC56P2MubWF4Lno6Yy5taW4uejt2YXIgZz1mLmRpc3RhbmNlVG9Qb2ludChhKSxmPWYuZGlzdGFuY2VUb1BvaW50KGIpO2lmKDA+ZyYmMD5mKXJldHVybiExfXJldHVybiEwfX0oKSxcbmNvbnRhaW5zUG9pbnQ6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPXRoaXMucGxhbmVzLGM9MDs2PmM7YysrKWlmKDA+YltjXS5kaXN0YW5jZVRvUG9pbnQoYSkpcmV0dXJuITE7cmV0dXJuITB9LGNsb25lOmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBUSFJFRS5GcnVzdHVtKS5jb3B5KHRoaXMpfX07VEhSRUUuUGxhbmU9ZnVuY3Rpb24oYSxiKXt0aGlzLm5vcm1hbD12b2lkIDAhPT1hP2E6bmV3IFRIUkVFLlZlY3RvcjMoMSwwLDApO3RoaXMuY29uc3RhbnQ9dm9pZCAwIT09Yj9iOjB9O1xuVEhSRUUuUGxhbmUucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUSFJFRS5QbGFuZSxzZXQ6ZnVuY3Rpb24oYSxiKXt0aGlzLm5vcm1hbC5jb3B5KGEpO3RoaXMuY29uc3RhbnQ9YjtyZXR1cm4gdGhpc30sc2V0Q29tcG9uZW50czpmdW5jdGlvbihhLGIsYyxkKXt0aGlzLm5vcm1hbC5zZXQoYSxiLGMpO3RoaXMuY29uc3RhbnQ9ZDtyZXR1cm4gdGhpc30sc2V0RnJvbU5vcm1hbEFuZENvcGxhbmFyUG9pbnQ6ZnVuY3Rpb24oYSxiKXt0aGlzLm5vcm1hbC5jb3B5KGEpO3RoaXMuY29uc3RhbnQ9LWIuZG90KHRoaXMubm9ybWFsKTtyZXR1cm4gdGhpc30sc2V0RnJvbUNvcGxhbmFyUG9pbnRzOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjMsYj1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oYyxkLGUpe2Q9YS5zdWJWZWN0b3JzKGUsZCkuY3Jvc3MoYi5zdWJWZWN0b3JzKGMsZCkpLm5vcm1hbGl6ZSgpO3RoaXMuc2V0RnJvbU5vcm1hbEFuZENvcGxhbmFyUG9pbnQoZCxcbmMpO3JldHVybiB0aGlzfX0oKSxjb3B5OmZ1bmN0aW9uKGEpe3RoaXMubm9ybWFsLmNvcHkoYS5ub3JtYWwpO3RoaXMuY29uc3RhbnQ9YS5jb25zdGFudDtyZXR1cm4gdGhpc30sbm9ybWFsaXplOmZ1bmN0aW9uKCl7dmFyIGE9MS90aGlzLm5vcm1hbC5sZW5ndGgoKTt0aGlzLm5vcm1hbC5tdWx0aXBseVNjYWxhcihhKTt0aGlzLmNvbnN0YW50Kj1hO3JldHVybiB0aGlzfSxuZWdhdGU6ZnVuY3Rpb24oKXt0aGlzLmNvbnN0YW50Kj0tMTt0aGlzLm5vcm1hbC5uZWdhdGUoKTtyZXR1cm4gdGhpc30sZGlzdGFuY2VUb1BvaW50OmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLm5vcm1hbC5kb3QoYSkrdGhpcy5jb25zdGFudH0sZGlzdGFuY2VUb1NwaGVyZTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5kaXN0YW5jZVRvUG9pbnQoYS5jZW50ZXIpLWEucmFkaXVzfSxwcm9qZWN0UG9pbnQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5vcnRob1BvaW50KGEsYikuc3ViKGEpLm5lZ2F0ZSgpfSxvcnRob1BvaW50OmZ1bmN0aW9uKGEsXG5iKXt2YXIgYz10aGlzLmRpc3RhbmNlVG9Qb2ludChhKTtyZXR1cm4oYnx8bmV3IFRIUkVFLlZlY3RvcjMpLmNvcHkodGhpcy5ub3JtYWwpLm11bHRpcGx5U2NhbGFyKGMpfSxpc0ludGVyc2VjdGlvbkxpbmU6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5kaXN0YW5jZVRvUG9pbnQoYS5zdGFydCk7YT10aGlzLmRpc3RhbmNlVG9Qb2ludChhLmVuZCk7cmV0dXJuIDA+YiYmMDxhfHwwPmEmJjA8Yn0saW50ZXJzZWN0TGluZTpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbihiLGMpe3ZhciBkPWN8fG5ldyBUSFJFRS5WZWN0b3IzLGU9Yi5kZWx0YShhKSxmPXRoaXMubm9ybWFsLmRvdChlKTtpZigwPT1mKXtpZigwPT10aGlzLmRpc3RhbmNlVG9Qb2ludChiLnN0YXJ0KSlyZXR1cm4gZC5jb3B5KGIuc3RhcnQpfWVsc2UgcmV0dXJuIGY9LShiLnN0YXJ0LmRvdCh0aGlzLm5vcm1hbCkrdGhpcy5jb25zdGFudCkvZiwwPmZ8fDE8Zj92b2lkIDA6ZC5jb3B5KGUpLm11bHRpcGx5U2NhbGFyKGYpLmFkZChiLnN0YXJ0KX19KCksXG5jb3BsYW5hclBvaW50OmZ1bmN0aW9uKGEpe3JldHVybihhfHxuZXcgVEhSRUUuVmVjdG9yMykuY29weSh0aGlzLm5vcm1hbCkubXVsdGlwbHlTY2FsYXIoLXRoaXMuY29uc3RhbnQpfSxhcHBseU1hdHJpeDQ6ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMyxiPW5ldyBUSFJFRS5WZWN0b3IzLGM9bmV3IFRIUkVFLk1hdHJpeDM7cmV0dXJuIGZ1bmN0aW9uKGQsZSl7dmFyIGY9ZXx8Yy5nZXROb3JtYWxNYXRyaXgoZCksZj1hLmNvcHkodGhpcy5ub3JtYWwpLmFwcGx5TWF0cml4MyhmKSxnPXRoaXMuY29wbGFuYXJQb2ludChiKTtnLmFwcGx5TWF0cml4NChkKTt0aGlzLnNldEZyb21Ob3JtYWxBbmRDb3BsYW5hclBvaW50KGYsZyk7cmV0dXJuIHRoaXN9fSgpLHRyYW5zbGF0ZTpmdW5jdGlvbihhKXt0aGlzLmNvbnN0YW50LT1hLmRvdCh0aGlzLm5vcm1hbCk7cmV0dXJuIHRoaXN9LGVxdWFsczpmdW5jdGlvbihhKXtyZXR1cm4gYS5ub3JtYWwuZXF1YWxzKHRoaXMubm9ybWFsKSYmXG5hLmNvbnN0YW50PT10aGlzLmNvbnN0YW50fSxjbG9uZTpmdW5jdGlvbigpe3JldHVybihuZXcgVEhSRUUuUGxhbmUpLmNvcHkodGhpcyl9fTtcblRIUkVFLk1hdGg9e2dlbmVyYXRlVVVJRDpmdW5jdGlvbigpe3ZhciBhPVwiMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpcIi5zcGxpdChcIlwiKSxiPUFycmF5KDM2KSxjPTAsZDtyZXR1cm4gZnVuY3Rpb24oKXtmb3IodmFyIGU9MDszNj5lO2UrKyk4PT1lfHwxMz09ZXx8MTg9PWV8fDIzPT1lP2JbZV09XCItXCI6MTQ9PWU/YltlXT1cIjRcIjooMj49YyYmKGM9MzM1NTQ0MzIrMTY3NzcyMTYqTWF0aC5yYW5kb20oKXwwKSxkPWMmMTUsYz4+PTQsYltlXT1hWzE5PT1lP2QmM3w4OmRdKTtyZXR1cm4gYi5qb2luKFwiXCIpfX0oKSxjbGFtcDpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGE8Yj9iOmE+Yz9jOmF9LGNsYW1wQm90dG9tOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGE8Yj9iOmF9LG1hcExpbmVhcjpmdW5jdGlvbihhLGIsYyxkLGUpe3JldHVybiBkKyhhLWIpKihlLWQpLyhjLWIpfSxzbW9vdGhzdGVwOmZ1bmN0aW9uKGEsYixjKXtpZihhPD1cbmIpcmV0dXJuIDA7aWYoYT49YylyZXR1cm4gMTthPShhLWIpLyhjLWIpO3JldHVybiBhKmEqKDMtMiphKX0sc21vb3RoZXJzdGVwOmZ1bmN0aW9uKGEsYixjKXtpZihhPD1iKXJldHVybiAwO2lmKGE+PWMpcmV0dXJuIDE7YT0oYS1iKS8oYy1iKTtyZXR1cm4gYSphKmEqKGEqKDYqYS0xNSkrMTApfSxyYW5kb20xNjpmdW5jdGlvbigpe3JldHVybig2NTI4MCpNYXRoLnJhbmRvbSgpKzI1NSpNYXRoLnJhbmRvbSgpKS82NTUzNX0scmFuZEludDpmdW5jdGlvbihhLGIpe3JldHVybiBNYXRoLmZsb29yKHRoaXMucmFuZEZsb2F0KGEsYikpfSxyYW5kRmxvYXQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYStNYXRoLnJhbmRvbSgpKihiLWEpfSxyYW5kRmxvYXRTcHJlYWQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEqKC41LU1hdGgucmFuZG9tKCkpfSxkZWdUb1JhZDpmdW5jdGlvbigpe3ZhciBhPU1hdGguUEkvMTgwO3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm4gYiphfX0oKSxyYWRUb0RlZzpmdW5jdGlvbigpe3ZhciBhPVxuMTgwL01hdGguUEk7cmV0dXJuIGZ1bmN0aW9uKGIpe3JldHVybiBiKmF9fSgpLGlzUG93ZXJPZlR3bzpmdW5jdGlvbihhKXtyZXR1cm4gMD09PShhJmEtMSkmJjAhPT1hfSxuZXh0UG93ZXJPZlR3bzpmdW5jdGlvbihhKXthLS07YXw9YT4+MTthfD1hPj4yO2F8PWE+PjQ7YXw9YT4+ODthfD1hPj4xNjthKys7cmV0dXJuIGF9fTtcblRIUkVFLlNwbGluZT1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKGEsYixjLGQsZSxmLGcpe2E9LjUqKGMtYSk7ZD0uNSooZC1iKTtyZXR1cm4oMiooYi1jKSthK2QpKmcrKC0zKihiLWMpLTIqYS1kKSpmK2EqZStifXRoaXMucG9pbnRzPWE7dmFyIGM9W10sZD17eDowLHk6MCx6OjB9LGUsZixnLGgsayxsLHAscSxuO3RoaXMuaW5pdEZyb21BcnJheT1mdW5jdGlvbihhKXt0aGlzLnBvaW50cz1bXTtmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl0aGlzLnBvaW50c1tiXT17eDphW2JdWzBdLHk6YVtiXVsxXSx6OmFbYl1bMl19fTt0aGlzLmdldFBvaW50PWZ1bmN0aW9uKGEpe2U9KHRoaXMucG9pbnRzLmxlbmd0aC0xKSphO2Y9TWF0aC5mbG9vcihlKTtnPWUtZjtjWzBdPTA9PT1mP2Y6Zi0xO2NbMV09ZjtjWzJdPWY+dGhpcy5wb2ludHMubGVuZ3RoLTI/dGhpcy5wb2ludHMubGVuZ3RoLTE6ZisxO2NbM109Zj50aGlzLnBvaW50cy5sZW5ndGgtMz90aGlzLnBvaW50cy5sZW5ndGgtMTpmK1xuMjtsPXRoaXMucG9pbnRzW2NbMF1dO3A9dGhpcy5wb2ludHNbY1sxXV07cT10aGlzLnBvaW50c1tjWzJdXTtuPXRoaXMucG9pbnRzW2NbM11dO2g9ZypnO2s9ZypoO2QueD1iKGwueCxwLngscS54LG4ueCxnLGgsayk7ZC55PWIobC55LHAueSxxLnksbi55LGcsaCxrKTtkLno9YihsLnoscC56LHEueixuLnosZyxoLGspO3JldHVybiBkfTt0aGlzLmdldENvbnRyb2xQb2ludHNBcnJheT1mdW5jdGlvbigpe3ZhciBhLGIsYz10aGlzLnBvaW50cy5sZW5ndGgsZD1bXTtmb3IoYT0wO2E8YzthKyspYj10aGlzLnBvaW50c1thXSxkW2FdPVtiLngsYi55LGIuel07cmV0dXJuIGR9O3RoaXMuZ2V0TGVuZ3RoPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlPWI9Yj0wLGY9bmV3IFRIUkVFLlZlY3RvcjMsZz1uZXcgVEhSRUUuVmVjdG9yMyxoPVtdLGs9MDtoWzBdPTA7YXx8KGE9MTAwKTtjPXRoaXMucG9pbnRzLmxlbmd0aCphO2YuY29weSh0aGlzLnBvaW50c1swXSk7Zm9yKGE9MTthPGM7YSsrKWI9XG5hL2MsZD10aGlzLmdldFBvaW50KGIpLGcuY29weShkKSxrKz1nLmRpc3RhbmNlVG8oZiksZi5jb3B5KGQpLGIqPXRoaXMucG9pbnRzLmxlbmd0aC0xLGI9TWF0aC5mbG9vcihiKSxiIT1lJiYoaFtiXT1rLGU9Yik7aFtoLmxlbmd0aF09aztyZXR1cm57Y2h1bmtzOmgsdG90YWw6a319O3RoaXMucmVwYXJhbWV0cml6ZUJ5QXJjTGVuZ3RoPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGYsZyxoPVtdLGs9bmV3IFRIUkVFLlZlY3RvcjMsbj10aGlzLmdldExlbmd0aCgpO2gucHVzaChrLmNvcHkodGhpcy5wb2ludHNbMF0pLmNsb25lKCkpO2ZvcihiPTE7Yjx0aGlzLnBvaW50cy5sZW5ndGg7YisrKXtjPW4uY2h1bmtzW2JdLW4uY2h1bmtzW2ItMV07Zz1NYXRoLmNlaWwoYSpjL24udG90YWwpO2U9KGItMSkvKHRoaXMucG9pbnRzLmxlbmd0aC0xKTtmPWIvKHRoaXMucG9pbnRzLmxlbmd0aC0xKTtmb3IoYz0xO2M8Zy0xO2MrKylkPWUrMS9nKmMqKGYtZSksZD10aGlzLmdldFBvaW50KGQpLGgucHVzaChrLmNvcHkoZCkuY2xvbmUoKSk7XG5oLnB1c2goay5jb3B5KHRoaXMucG9pbnRzW2JdKS5jbG9uZSgpKX10aGlzLnBvaW50cz1ofX07VEhSRUUuVHJpYW5nbGU9ZnVuY3Rpb24oYSxiLGMpe3RoaXMuYT12b2lkIDAhPT1hP2E6bmV3IFRIUkVFLlZlY3RvcjM7dGhpcy5iPXZvaWQgMCE9PWI/YjpuZXcgVEhSRUUuVmVjdG9yMzt0aGlzLmM9dm9pZCAwIT09Yz9jOm5ldyBUSFJFRS5WZWN0b3IzfTtUSFJFRS5UcmlhbmdsZS5ub3JtYWw9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oYixjLGQsZSl7ZT1lfHxuZXcgVEhSRUUuVmVjdG9yMztlLnN1YlZlY3RvcnMoZCxjKTthLnN1YlZlY3RvcnMoYixjKTtlLmNyb3NzKGEpO2I9ZS5sZW5ndGhTcSgpO3JldHVybiAwPGI/ZS5tdWx0aXBseVNjYWxhcigxL01hdGguc3FydChiKSk6ZS5zZXQoMCwwLDApfX0oKTtcblRIUkVFLlRyaWFuZ2xlLmJhcnljb29yZEZyb21Qb2ludD1mdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzLGI9bmV3IFRIUkVFLlZlY3RvcjMsYz1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oZCxlLGYsZyxoKXthLnN1YlZlY3RvcnMoZyxlKTtiLnN1YlZlY3RvcnMoZixlKTtjLnN1YlZlY3RvcnMoZCxlKTtkPWEuZG90KGEpO2U9YS5kb3QoYik7Zj1hLmRvdChjKTt2YXIgaz1iLmRvdChiKTtnPWIuZG90KGMpO3ZhciBsPWQqay1lKmU7aD1ofHxuZXcgVEhSRUUuVmVjdG9yMztpZigwPT1sKXJldHVybiBoLnNldCgtMiwtMSwtMSk7bD0xL2w7az0oaypmLWUqZykqbDtkPShkKmctZSpmKSpsO3JldHVybiBoLnNldCgxLWstZCxkLGspfX0oKTtcblRIUkVFLlRyaWFuZ2xlLmNvbnRhaW5zUG9pbnQ9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oYixjLGQsZSl7Yj1USFJFRS5UcmlhbmdsZS5iYXJ5Y29vcmRGcm9tUG9pbnQoYixjLGQsZSxhKTtyZXR1cm4gMDw9Yi54JiYwPD1iLnkmJjE+PWIueCtiLnl9fSgpO1xuVEhSRUUuVHJpYW5nbGUucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUSFJFRS5UcmlhbmdsZSxzZXQ6ZnVuY3Rpb24oYSxiLGMpe3RoaXMuYS5jb3B5KGEpO3RoaXMuYi5jb3B5KGIpO3RoaXMuYy5jb3B5KGMpO3JldHVybiB0aGlzfSxzZXRGcm9tUG9pbnRzQW5kSW5kaWNlczpmdW5jdGlvbihhLGIsYyxkKXt0aGlzLmEuY29weShhW2JdKTt0aGlzLmIuY29weShhW2NdKTt0aGlzLmMuY29weShhW2RdKTtyZXR1cm4gdGhpc30sY29weTpmdW5jdGlvbihhKXt0aGlzLmEuY29weShhLmEpO3RoaXMuYi5jb3B5KGEuYik7dGhpcy5jLmNvcHkoYS5jKTtyZXR1cm4gdGhpc30sYXJlYTpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzLGI9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKCl7YS5zdWJWZWN0b3JzKHRoaXMuYyx0aGlzLmIpO2Iuc3ViVmVjdG9ycyh0aGlzLmEsdGhpcy5iKTtyZXR1cm4uNSphLmNyb3NzKGIpLmxlbmd0aCgpfX0oKSxtaWRwb2ludDpmdW5jdGlvbihhKXtyZXR1cm4oYXx8XG5uZXcgVEhSRUUuVmVjdG9yMykuYWRkVmVjdG9ycyh0aGlzLmEsdGhpcy5iKS5hZGQodGhpcy5jKS5tdWx0aXBseVNjYWxhcigxLzMpfSxub3JtYWw6ZnVuY3Rpb24oYSl7cmV0dXJuIFRIUkVFLlRyaWFuZ2xlLm5vcm1hbCh0aGlzLmEsdGhpcy5iLHRoaXMuYyxhKX0scGxhbmU6ZnVuY3Rpb24oYSl7cmV0dXJuKGF8fG5ldyBUSFJFRS5QbGFuZSkuc2V0RnJvbUNvcGxhbmFyUG9pbnRzKHRoaXMuYSx0aGlzLmIsdGhpcy5jKX0sYmFyeWNvb3JkRnJvbVBvaW50OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFRIUkVFLlRyaWFuZ2xlLmJhcnljb29yZEZyb21Qb2ludChhLHRoaXMuYSx0aGlzLmIsdGhpcy5jLGIpfSxjb250YWluc1BvaW50OmZ1bmN0aW9uKGEpe3JldHVybiBUSFJFRS5UcmlhbmdsZS5jb250YWluc1BvaW50KGEsdGhpcy5hLHRoaXMuYix0aGlzLmMpfSxlcXVhbHM6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuYS5lcXVhbHModGhpcy5hKSYmYS5iLmVxdWFscyh0aGlzLmIpJiZhLmMuZXF1YWxzKHRoaXMuYyl9LFxuY2xvbmU6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IFRIUkVFLlRyaWFuZ2xlKS5jb3B5KHRoaXMpfX07VEhSRUUuQ2xvY2s9ZnVuY3Rpb24oYSl7dGhpcy5hdXRvU3RhcnQ9dm9pZCAwIT09YT9hOiEwO3RoaXMuZWxhcHNlZFRpbWU9dGhpcy5vbGRUaW1lPXRoaXMuc3RhcnRUaW1lPTA7dGhpcy5ydW5uaW5nPSExfTtcblRIUkVFLkNsb2NrLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuQ2xvY2ssc3RhcnQ6ZnVuY3Rpb24oKXt0aGlzLm9sZFRpbWU9dGhpcy5zdGFydFRpbWU9dm9pZCAwIT09c2VsZi5wZXJmb3JtYW5jZSYmdm9pZCAwIT09c2VsZi5wZXJmb3JtYW5jZS5ub3c/c2VsZi5wZXJmb3JtYW5jZS5ub3coKTpEYXRlLm5vdygpO3RoaXMucnVubmluZz0hMH0sc3RvcDpmdW5jdGlvbigpe3RoaXMuZ2V0RWxhcHNlZFRpbWUoKTt0aGlzLnJ1bm5pbmc9ITF9LGdldEVsYXBzZWRUaW1lOmZ1bmN0aW9uKCl7dGhpcy5nZXREZWx0YSgpO3JldHVybiB0aGlzLmVsYXBzZWRUaW1lfSxnZXREZWx0YTpmdW5jdGlvbigpe3ZhciBhPTA7dGhpcy5hdXRvU3RhcnQmJiF0aGlzLnJ1bm5pbmcmJnRoaXMuc3RhcnQoKTtpZih0aGlzLnJ1bm5pbmcpe3ZhciBiPXZvaWQgMCE9PXNlbGYucGVyZm9ybWFuY2UmJnZvaWQgMCE9PXNlbGYucGVyZm9ybWFuY2Uubm93P3NlbGYucGVyZm9ybWFuY2Uubm93KCk6RGF0ZS5ub3coKSxcbmE9LjAwMSooYi10aGlzLm9sZFRpbWUpO3RoaXMub2xkVGltZT1iO3RoaXMuZWxhcHNlZFRpbWUrPWF9cmV0dXJuIGF9fTtUSFJFRS5FdmVudERpc3BhdGNoZXI9ZnVuY3Rpb24oKXt9O1xuVEhSRUUuRXZlbnREaXNwYXRjaGVyLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuRXZlbnREaXNwYXRjaGVyLGFwcGx5OmZ1bmN0aW9uKGEpe2EuYWRkRXZlbnRMaXN0ZW5lcj1USFJFRS5FdmVudERpc3BhdGNoZXIucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXI7YS5oYXNFdmVudExpc3RlbmVyPVRIUkVFLkV2ZW50RGlzcGF0Y2hlci5wcm90b3R5cGUuaGFzRXZlbnRMaXN0ZW5lcjthLnJlbW92ZUV2ZW50TGlzdGVuZXI9VEhSRUUuRXZlbnREaXNwYXRjaGVyLnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyO2EuZGlzcGF0Y2hFdmVudD1USFJFRS5FdmVudERpc3BhdGNoZXIucHJvdG90eXBlLmRpc3BhdGNoRXZlbnR9LGFkZEV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT10aGlzLl9saXN0ZW5lcnMmJih0aGlzLl9saXN0ZW5lcnM9e30pO3ZhciBjPXRoaXMuX2xpc3RlbmVyczt2b2lkIDA9PT1jW2FdJiYoY1thXT1bXSk7LTE9PT1jW2FdLmluZGV4T2YoYikmJlxuY1thXS5wdXNoKGIpfSxoYXNFdmVudExpc3RlbmVyOmZ1bmN0aW9uKGEsYil7aWYodm9pZCAwPT09dGhpcy5fbGlzdGVuZXJzKXJldHVybiExO3ZhciBjPXRoaXMuX2xpc3RlbmVycztyZXR1cm4gdm9pZCAwIT09Y1thXSYmLTEhPT1jW2FdLmluZGV4T2YoYik/ITA6ITF9LHJlbW92ZUV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24oYSxiKXtpZih2b2lkIDAhPT10aGlzLl9saXN0ZW5lcnMpe3ZhciBjPXRoaXMuX2xpc3RlbmVyc1thXTtpZih2b2lkIDAhPT1jKXt2YXIgZD1jLmluZGV4T2YoYik7LTEhPT1kJiZjLnNwbGljZShkLDEpfX19LGRpc3BhdGNoRXZlbnQ6ZnVuY3Rpb24oYSl7aWYodm9pZCAwIT09dGhpcy5fbGlzdGVuZXJzKXt2YXIgYj10aGlzLl9saXN0ZW5lcnNbYS50eXBlXTtpZih2b2lkIDAhPT1iKXthLnRhcmdldD10aGlzO2Zvcih2YXIgYz1bXSxkPWIubGVuZ3RoLGU9MDtlPGQ7ZSsrKWNbZV09YltlXTtmb3IoZT0wO2U8ZDtlKyspY1tlXS5jYWxsKHRoaXMsYSl9fX19O1xuKGZ1bmN0aW9uKGEpe2EuUmF5Y2FzdGVyPWZ1bmN0aW9uKGIsYyxmLGcpe3RoaXMucmF5PW5ldyBhLlJheShiLGMpO3RoaXMubmVhcj1mfHwwO3RoaXMuZmFyPWd8fEluZmluaXR5O3RoaXMucGFyYW1zPXtTcHJpdGU6e30sTWVzaDp7fSxQb2ludENsb3VkOnt0aHJlc2hvbGQ6MX0sTE9EOnt9LExpbmU6e319fTt2YXIgYj1mdW5jdGlvbihhLGIpe3JldHVybiBhLmRpc3RhbmNlLWIuZGlzdGFuY2V9LGM9ZnVuY3Rpb24oYSxiLGYsZyl7YS5yYXljYXN0KGIsZik7aWYoITA9PT1nKXthPWEuY2hpbGRyZW47Zz0wO2Zvcih2YXIgaD1hLmxlbmd0aDtnPGg7ZysrKWMoYVtnXSxiLGYsITApfX07YS5SYXljYXN0ZXIucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjphLlJheWNhc3RlcixwcmVjaXNpb246MUUtNCxsaW5lUHJlY2lzaW9uOjEsc2V0OmZ1bmN0aW9uKGEsYil7dGhpcy5yYXkuc2V0KGEsYil9LHNldEZyb21DYW1lcmE6ZnVuY3Rpb24oYixjKXtjIGluc3RhbmNlb2YgYS5QZXJzcGVjdGl2ZUNhbWVyYT9cbih0aGlzLnJheS5vcmlnaW4uY29weShjLnBvc2l0aW9uKSx0aGlzLnJheS5kaXJlY3Rpb24uc2V0KGIueCxiLnksLjUpLnVucHJvamVjdChjKS5zdWIoYy5wb3NpdGlvbikubm9ybWFsaXplKCkpOmMgaW5zdGFuY2VvZiBhLk9ydGhvZ3JhcGhpY0NhbWVyYT8odGhpcy5yYXkub3JpZ2luLnNldChiLngsYi55LC0xKS51bnByb2plY3QoYyksdGhpcy5yYXkuZGlyZWN0aW9uLnNldCgwLDAsLTEpLnRyYW5zZm9ybURpcmVjdGlvbihjLm1hdHJpeFdvcmxkKSk6YS5lcnJvcihcIlRIUkVFLlJheWNhc3RlcjogVW5zdXBwb3J0ZWQgY2FtZXJhIHR5cGUuXCIpfSxpbnRlcnNlY3RPYmplY3Q6ZnVuY3Rpb24oYSxlKXt2YXIgZj1bXTtjKGEsdGhpcyxmLGUpO2Yuc29ydChiKTtyZXR1cm4gZn0saW50ZXJzZWN0T2JqZWN0czpmdW5jdGlvbihkLGUpe3ZhciBmPVtdO2lmKCExPT09ZCBpbnN0YW5jZW9mIEFycmF5KXJldHVybiBhLndhcm4oXCJUSFJFRS5SYXljYXN0ZXIuaW50ZXJzZWN0T2JqZWN0czogb2JqZWN0cyBpcyBub3QgYW4gQXJyYXkuXCIpLFxuZjtmb3IodmFyIGc9MCxoPWQubGVuZ3RoO2c8aDtnKyspYyhkW2ddLHRoaXMsZixlKTtmLnNvcnQoYik7cmV0dXJuIGZ9fX0pKFRIUkVFKTtcblRIUkVFLk9iamVjdDNEPWZ1bmN0aW9uKCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJpZFwiLHt2YWx1ZTpUSFJFRS5PYmplY3QzRElkQ291bnQrK30pO3RoaXMudXVpZD1USFJFRS5NYXRoLmdlbmVyYXRlVVVJRCgpO3RoaXMubmFtZT1cIlwiO3RoaXMudHlwZT1cIk9iamVjdDNEXCI7dGhpcy5wYXJlbnQ9dm9pZCAwO3RoaXMuY2hpbGRyZW49W107dGhpcy51cD1USFJFRS5PYmplY3QzRC5EZWZhdWx0VXAuY2xvbmUoKTt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMyxiPW5ldyBUSFJFRS5FdWxlcixjPW5ldyBUSFJFRS5RdWF0ZXJuaW9uLGQ9bmV3IFRIUkVFLlZlY3RvcjMoMSwxLDEpO2Iub25DaGFuZ2UoZnVuY3Rpb24oKXtjLnNldEZyb21FdWxlcihiLCExKX0pO2Mub25DaGFuZ2UoZnVuY3Rpb24oKXtiLnNldEZyb21RdWF0ZXJuaW9uKGMsdm9pZCAwLCExKX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMse3Bvc2l0aW9uOntlbnVtZXJhYmxlOiEwLHZhbHVlOmF9LHJvdGF0aW9uOntlbnVtZXJhYmxlOiEwLFxudmFsdWU6Yn0scXVhdGVybmlvbjp7ZW51bWVyYWJsZTohMCx2YWx1ZTpjfSxzY2FsZTp7ZW51bWVyYWJsZTohMCx2YWx1ZTpkfX0pO3RoaXMucm90YXRpb25BdXRvVXBkYXRlPSEwO3RoaXMubWF0cml4PW5ldyBUSFJFRS5NYXRyaXg0O3RoaXMubWF0cml4V29ybGQ9bmV3IFRIUkVFLk1hdHJpeDQ7dGhpcy5tYXRyaXhBdXRvVXBkYXRlPSEwO3RoaXMubWF0cml4V29ybGROZWVkc1VwZGF0ZT0hMTt0aGlzLnZpc2libGU9ITA7dGhpcy5yZWNlaXZlU2hhZG93PXRoaXMuY2FzdFNoYWRvdz0hMTt0aGlzLmZydXN0dW1DdWxsZWQ9ITA7dGhpcy5yZW5kZXJPcmRlcj0wO3RoaXMudXNlckRhdGE9e319O1RIUkVFLk9iamVjdDNELkRlZmF1bHRVcD1uZXcgVEhSRUUuVmVjdG9yMygwLDEsMCk7XG5USFJFRS5PYmplY3QzRC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRIUkVFLk9iamVjdDNELGdldCBldWxlck9yZGVyKCl7VEhSRUUud2FybihcIlRIUkVFLk9iamVjdDNEOiAuZXVsZXJPcmRlciBoYXMgYmVlbiBtb3ZlZCB0byAucm90YXRpb24ub3JkZXIuXCIpO3JldHVybiB0aGlzLnJvdGF0aW9uLm9yZGVyfSxzZXQgZXVsZXJPcmRlcihhKXtUSFJFRS53YXJuKFwiVEhSRUUuT2JqZWN0M0Q6IC5ldWxlck9yZGVyIGhhcyBiZWVuIG1vdmVkIHRvIC5yb3RhdGlvbi5vcmRlci5cIik7dGhpcy5yb3RhdGlvbi5vcmRlcj1hfSxnZXQgdXNlUXVhdGVybmlvbigpe1RIUkVFLndhcm4oXCJUSFJFRS5PYmplY3QzRDogLnVzZVF1YXRlcm5pb24gaGFzIGJlZW4gcmVtb3ZlZC4gVGhlIGxpYnJhcnkgbm93IHVzZXMgcXVhdGVybmlvbnMgYnkgZGVmYXVsdC5cIil9LHNldCB1c2VRdWF0ZXJuaW9uKGEpe1RIUkVFLndhcm4oXCJUSFJFRS5PYmplY3QzRDogLnVzZVF1YXRlcm5pb24gaGFzIGJlZW4gcmVtb3ZlZC4gVGhlIGxpYnJhcnkgbm93IHVzZXMgcXVhdGVybmlvbnMgYnkgZGVmYXVsdC5cIil9LFxuYXBwbHlNYXRyaXg6ZnVuY3Rpb24oYSl7dGhpcy5tYXRyaXgubXVsdGlwbHlNYXRyaWNlcyhhLHRoaXMubWF0cml4KTt0aGlzLm1hdHJpeC5kZWNvbXBvc2UodGhpcy5wb3NpdGlvbix0aGlzLnF1YXRlcm5pb24sdGhpcy5zY2FsZSl9LHNldFJvdGF0aW9uRnJvbUF4aXNBbmdsZTpmdW5jdGlvbihhLGIpe3RoaXMucXVhdGVybmlvbi5zZXRGcm9tQXhpc0FuZ2xlKGEsYil9LHNldFJvdGF0aW9uRnJvbUV1bGVyOmZ1bmN0aW9uKGEpe3RoaXMucXVhdGVybmlvbi5zZXRGcm9tRXVsZXIoYSwhMCl9LHNldFJvdGF0aW9uRnJvbU1hdHJpeDpmdW5jdGlvbihhKXt0aGlzLnF1YXRlcm5pb24uc2V0RnJvbVJvdGF0aW9uTWF0cml4KGEpfSxzZXRSb3RhdGlvbkZyb21RdWF0ZXJuaW9uOmZ1bmN0aW9uKGEpe3RoaXMucXVhdGVybmlvbi5jb3B5KGEpfSxyb3RhdGVPbkF4aXM6ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuUXVhdGVybmlvbjtyZXR1cm4gZnVuY3Rpb24oYixjKXthLnNldEZyb21BeGlzQW5nbGUoYixcbmMpO3RoaXMucXVhdGVybmlvbi5tdWx0aXBseShhKTtyZXR1cm4gdGhpc319KCkscm90YXRlWDpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzKDEsMCwwKTtyZXR1cm4gZnVuY3Rpb24oYil7cmV0dXJuIHRoaXMucm90YXRlT25BeGlzKGEsYil9fSgpLHJvdGF0ZVk6ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMygwLDEsMCk7cmV0dXJuIGZ1bmN0aW9uKGIpe3JldHVybiB0aGlzLnJvdGF0ZU9uQXhpcyhhLGIpfX0oKSxyb3RhdGVaOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjMoMCwwLDEpO3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm4gdGhpcy5yb3RhdGVPbkF4aXMoYSxiKX19KCksdHJhbnNsYXRlT25BeGlzOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKGIsYyl7YS5jb3B5KGIpLmFwcGx5UXVhdGVybmlvbih0aGlzLnF1YXRlcm5pb24pO3RoaXMucG9zaXRpb24uYWRkKGEubXVsdGlwbHlTY2FsYXIoYykpO1xucmV0dXJuIHRoaXN9fSgpLHRyYW5zbGF0ZTpmdW5jdGlvbihhLGIpe1RIUkVFLndhcm4oXCJUSFJFRS5PYmplY3QzRDogLnRyYW5zbGF0ZSgpIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSAudHJhbnNsYXRlT25BeGlzKCBheGlzLCBkaXN0YW5jZSApIGluc3RlYWQuXCIpO3JldHVybiB0aGlzLnRyYW5zbGF0ZU9uQXhpcyhiLGEpfSx0cmFuc2xhdGVYOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjMoMSwwLDApO3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm4gdGhpcy50cmFuc2xhdGVPbkF4aXMoYSxiKX19KCksdHJhbnNsYXRlWTpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzKDAsMSwwKTtyZXR1cm4gZnVuY3Rpb24oYil7cmV0dXJuIHRoaXMudHJhbnNsYXRlT25BeGlzKGEsYil9fSgpLHRyYW5zbGF0ZVo6ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMygwLDAsMSk7cmV0dXJuIGZ1bmN0aW9uKGIpe3JldHVybiB0aGlzLnRyYW5zbGF0ZU9uQXhpcyhhLFxuYil9fSgpLGxvY2FsVG9Xb3JsZDpmdW5jdGlvbihhKXtyZXR1cm4gYS5hcHBseU1hdHJpeDQodGhpcy5tYXRyaXhXb3JsZCl9LHdvcmxkVG9Mb2NhbDpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5NYXRyaXg0O3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm4gYi5hcHBseU1hdHJpeDQoYS5nZXRJbnZlcnNlKHRoaXMubWF0cml4V29ybGQpKX19KCksbG9va0F0OmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLk1hdHJpeDQ7cmV0dXJuIGZ1bmN0aW9uKGIpe2EubG9va0F0KGIsdGhpcy5wb3NpdGlvbix0aGlzLnVwKTt0aGlzLnF1YXRlcm5pb24uc2V0RnJvbVJvdGF0aW9uTWF0cml4KGEpfX0oKSxhZGQ6ZnVuY3Rpb24oYSl7aWYoMTxhcmd1bWVudHMubGVuZ3RoKXtmb3IodmFyIGI9MDtiPGFyZ3VtZW50cy5sZW5ndGg7YisrKXRoaXMuYWRkKGFyZ3VtZW50c1tiXSk7cmV0dXJuIHRoaXN9aWYoYT09PXRoaXMpcmV0dXJuIFRIUkVFLmVycm9yKFwiVEhSRUUuT2JqZWN0M0QuYWRkOiBvYmplY3QgY2FuJ3QgYmUgYWRkZWQgYXMgYSBjaGlsZCBvZiBpdHNlbGYuXCIsXG5hKSx0aGlzO2EgaW5zdGFuY2VvZiBUSFJFRS5PYmplY3QzRD8odm9pZCAwIT09YS5wYXJlbnQmJmEucGFyZW50LnJlbW92ZShhKSxhLnBhcmVudD10aGlzLGEuZGlzcGF0Y2hFdmVudCh7dHlwZTpcImFkZGVkXCJ9KSx0aGlzLmNoaWxkcmVuLnB1c2goYSkpOlRIUkVFLmVycm9yKFwiVEhSRUUuT2JqZWN0M0QuYWRkOiBvYmplY3Qgbm90IGFuIGluc3RhbmNlIG9mIFRIUkVFLk9iamVjdDNELlwiLGEpO3JldHVybiB0aGlzfSxyZW1vdmU6ZnVuY3Rpb24oYSl7aWYoMTxhcmd1bWVudHMubGVuZ3RoKWZvcih2YXIgYj0wO2I8YXJndW1lbnRzLmxlbmd0aDtiKyspdGhpcy5yZW1vdmUoYXJndW1lbnRzW2JdKTtiPXRoaXMuY2hpbGRyZW4uaW5kZXhPZihhKTstMSE9PWImJihhLnBhcmVudD12b2lkIDAsYS5kaXNwYXRjaEV2ZW50KHt0eXBlOlwicmVtb3ZlZFwifSksdGhpcy5jaGlsZHJlbi5zcGxpY2UoYiwxKSl9LGdldENoaWxkQnlOYW1lOmZ1bmN0aW9uKGEpe1RIUkVFLndhcm4oXCJUSFJFRS5PYmplY3QzRDogLmdldENoaWxkQnlOYW1lKCkgaGFzIGJlZW4gcmVuYW1lZCB0byAuZ2V0T2JqZWN0QnlOYW1lKCkuXCIpO1xucmV0dXJuIHRoaXMuZ2V0T2JqZWN0QnlOYW1lKGEpfSxnZXRPYmplY3RCeUlkOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmdldE9iamVjdEJ5UHJvcGVydHkoXCJpZFwiLGEpfSxnZXRPYmplY3RCeU5hbWU6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZ2V0T2JqZWN0QnlQcm9wZXJ0eShcIm5hbWVcIixhKX0sZ2V0T2JqZWN0QnlQcm9wZXJ0eTpmdW5jdGlvbihhLGIpe2lmKHRoaXNbYV09PT1iKXJldHVybiB0aGlzO2Zvcih2YXIgYz0wLGQ9dGhpcy5jaGlsZHJlbi5sZW5ndGg7YzxkO2MrKyl7dmFyIGU9dGhpcy5jaGlsZHJlbltjXS5nZXRPYmplY3RCeVByb3BlcnR5KGEsYik7aWYodm9pZCAwIT09ZSlyZXR1cm4gZX19LGdldFdvcmxkUG9zaXRpb246ZnVuY3Rpb24oYSl7YT1hfHxuZXcgVEhSRUUuVmVjdG9yMzt0aGlzLnVwZGF0ZU1hdHJpeFdvcmxkKCEwKTtyZXR1cm4gYS5zZXRGcm9tTWF0cml4UG9zaXRpb24odGhpcy5tYXRyaXhXb3JsZCl9LGdldFdvcmxkUXVhdGVybmlvbjpmdW5jdGlvbigpe3ZhciBhPVxubmV3IFRIUkVFLlZlY3RvcjMsYj1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oYyl7Yz1jfHxuZXcgVEhSRUUuUXVhdGVybmlvbjt0aGlzLnVwZGF0ZU1hdHJpeFdvcmxkKCEwKTt0aGlzLm1hdHJpeFdvcmxkLmRlY29tcG9zZShhLGMsYik7cmV0dXJuIGN9fSgpLGdldFdvcmxkUm90YXRpb246ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuUXVhdGVybmlvbjtyZXR1cm4gZnVuY3Rpb24oYil7Yj1ifHxuZXcgVEhSRUUuRXVsZXI7dGhpcy5nZXRXb3JsZFF1YXRlcm5pb24oYSk7cmV0dXJuIGIuc2V0RnJvbVF1YXRlcm5pb24oYSx0aGlzLnJvdGF0aW9uLm9yZGVyLCExKX19KCksZ2V0V29ybGRTY2FsZTpmdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzLGI9bmV3IFRIUkVFLlF1YXRlcm5pb247cmV0dXJuIGZ1bmN0aW9uKGMpe2M9Y3x8bmV3IFRIUkVFLlZlY3RvcjM7dGhpcy51cGRhdGVNYXRyaXhXb3JsZCghMCk7dGhpcy5tYXRyaXhXb3JsZC5kZWNvbXBvc2UoYSxcbmIsYyk7cmV0dXJuIGN9fSgpLGdldFdvcmxkRGlyZWN0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlF1YXRlcm5pb247cmV0dXJuIGZ1bmN0aW9uKGIpe2I9Ynx8bmV3IFRIUkVFLlZlY3RvcjM7dGhpcy5nZXRXb3JsZFF1YXRlcm5pb24oYSk7cmV0dXJuIGIuc2V0KDAsMCwxKS5hcHBseVF1YXRlcm5pb24oYSl9fSgpLHJheWNhc3Q6ZnVuY3Rpb24oKXt9LHRyYXZlcnNlOmZ1bmN0aW9uKGEpe2EodGhpcyk7Zm9yKHZhciBiPTAsYz10aGlzLmNoaWxkcmVuLmxlbmd0aDtiPGM7YisrKXRoaXMuY2hpbGRyZW5bYl0udHJhdmVyc2UoYSl9LHRyYXZlcnNlVmlzaWJsZTpmdW5jdGlvbihhKXtpZighMSE9PXRoaXMudmlzaWJsZSl7YSh0aGlzKTtmb3IodmFyIGI9MCxjPXRoaXMuY2hpbGRyZW4ubGVuZ3RoO2I8YztiKyspdGhpcy5jaGlsZHJlbltiXS50cmF2ZXJzZVZpc2libGUoYSl9fSx0cmF2ZXJzZUFuY2VzdG9yczpmdW5jdGlvbihhKXt0aGlzLnBhcmVudCYmKGEodGhpcy5wYXJlbnQpLFxudGhpcy5wYXJlbnQudHJhdmVyc2VBbmNlc3RvcnMoYSkpfSx1cGRhdGVNYXRyaXg6ZnVuY3Rpb24oKXt0aGlzLm1hdHJpeC5jb21wb3NlKHRoaXMucG9zaXRpb24sdGhpcy5xdWF0ZXJuaW9uLHRoaXMuc2NhbGUpO3RoaXMubWF0cml4V29ybGROZWVkc1VwZGF0ZT0hMH0sdXBkYXRlTWF0cml4V29ybGQ6ZnVuY3Rpb24oYSl7ITA9PT10aGlzLm1hdHJpeEF1dG9VcGRhdGUmJnRoaXMudXBkYXRlTWF0cml4KCk7aWYoITA9PT10aGlzLm1hdHJpeFdvcmxkTmVlZHNVcGRhdGV8fCEwPT09YSl2b2lkIDA9PT10aGlzLnBhcmVudD90aGlzLm1hdHJpeFdvcmxkLmNvcHkodGhpcy5tYXRyaXgpOnRoaXMubWF0cml4V29ybGQubXVsdGlwbHlNYXRyaWNlcyh0aGlzLnBhcmVudC5tYXRyaXhXb3JsZCx0aGlzLm1hdHJpeCksdGhpcy5tYXRyaXhXb3JsZE5lZWRzVXBkYXRlPSExLGE9ITA7Zm9yKHZhciBiPTAsYz10aGlzLmNoaWxkcmVuLmxlbmd0aDtiPGM7YisrKXRoaXMuY2hpbGRyZW5bYl0udXBkYXRlTWF0cml4V29ybGQoYSl9LFxudG9KU09OOmZ1bmN0aW9uKCl7dmFyIGE9e21ldGFkYXRhOnt2ZXJzaW9uOjQuMyx0eXBlOlwiT2JqZWN0XCIsZ2VuZXJhdG9yOlwiT2JqZWN0RXhwb3J0ZXJcIn19LGI9e30sYz17fSxkPWZ1bmN0aW9uKGIpe3ZvaWQgMD09PWEubWF0ZXJpYWxzJiYoYS5tYXRlcmlhbHM9W10pO2lmKHZvaWQgMD09PWNbYi51dWlkXSl7dmFyIGQ9Yi50b0pTT04oKTtkZWxldGUgZC5tZXRhZGF0YTtjW2IudXVpZF09ZDthLm1hdGVyaWFscy5wdXNoKGQpfXJldHVybiBiLnV1aWR9LGU9ZnVuY3Rpb24oYyl7dmFyIGc9e307Zy51dWlkPWMudXVpZDtnLnR5cGU9Yy50eXBlO1wiXCIhPT1jLm5hbWUmJihnLm5hbWU9Yy5uYW1lKTtcInt9XCIhPT1KU09OLnN0cmluZ2lmeShjLnVzZXJEYXRhKSYmKGcudXNlckRhdGE9Yy51c2VyRGF0YSk7ITAhPT1jLnZpc2libGUmJihnLnZpc2libGU9Yy52aXNpYmxlKTtpZihjIGluc3RhbmNlb2YgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEpZy5mb3Y9Yy5mb3YsZy5hc3BlY3Q9Yy5hc3BlY3QsXG5nLm5lYXI9Yy5uZWFyLGcuZmFyPWMuZmFyO2Vsc2UgaWYoYyBpbnN0YW5jZW9mIFRIUkVFLk9ydGhvZ3JhcGhpY0NhbWVyYSlnLmxlZnQ9Yy5sZWZ0LGcucmlnaHQ9Yy5yaWdodCxnLnRvcD1jLnRvcCxnLmJvdHRvbT1jLmJvdHRvbSxnLm5lYXI9Yy5uZWFyLGcuZmFyPWMuZmFyO2Vsc2UgaWYoYyBpbnN0YW5jZW9mIFRIUkVFLkFtYmllbnRMaWdodClnLmNvbG9yPWMuY29sb3IuZ2V0SGV4KCk7ZWxzZSBpZihjIGluc3RhbmNlb2YgVEhSRUUuRGlyZWN0aW9uYWxMaWdodClnLmNvbG9yPWMuY29sb3IuZ2V0SGV4KCksZy5pbnRlbnNpdHk9Yy5pbnRlbnNpdHk7ZWxzZSBpZihjIGluc3RhbmNlb2YgVEhSRUUuUG9pbnRMaWdodClnLmNvbG9yPWMuY29sb3IuZ2V0SGV4KCksZy5pbnRlbnNpdHk9Yy5pbnRlbnNpdHksZy5kaXN0YW5jZT1jLmRpc3RhbmNlLGcuZGVjYXk9Yy5kZWNheTtlbHNlIGlmKGMgaW5zdGFuY2VvZiBUSFJFRS5TcG90TGlnaHQpZy5jb2xvcj1jLmNvbG9yLmdldEhleCgpLFxuZy5pbnRlbnNpdHk9Yy5pbnRlbnNpdHksZy5kaXN0YW5jZT1jLmRpc3RhbmNlLGcuYW5nbGU9Yy5hbmdsZSxnLmV4cG9uZW50PWMuZXhwb25lbnQsZy5kZWNheT1jLmRlY2F5O2Vsc2UgaWYoYyBpbnN0YW5jZW9mIFRIUkVFLkhlbWlzcGhlcmVMaWdodClnLmNvbG9yPWMuY29sb3IuZ2V0SGV4KCksZy5ncm91bmRDb2xvcj1jLmdyb3VuZENvbG9yLmdldEhleCgpO2Vsc2UgaWYoYyBpbnN0YW5jZW9mIFRIUkVFLk1lc2h8fGMgaW5zdGFuY2VvZiBUSFJFRS5MaW5lfHxjIGluc3RhbmNlb2YgVEhSRUUuUG9pbnRDbG91ZCl7dmFyIGg9Yy5nZW9tZXRyeTt2b2lkIDA9PT1hLmdlb21ldHJpZXMmJihhLmdlb21ldHJpZXM9W10pO2lmKHZvaWQgMD09PWJbaC51dWlkXSl7dmFyIGs9aC50b0pTT04oKTtkZWxldGUgay5tZXRhZGF0YTtiW2gudXVpZF09azthLmdlb21ldHJpZXMucHVzaChrKX1nLmdlb21ldHJ5PWgudXVpZDtnLm1hdGVyaWFsPWQoYy5tYXRlcmlhbCk7YyBpbnN0YW5jZW9mIFRIUkVFLkxpbmUmJlxuKGcubW9kZT1jLm1vZGUpfWVsc2UgYyBpbnN0YW5jZW9mIFRIUkVFLlNwcml0ZSYmKGcubWF0ZXJpYWw9ZChjLm1hdGVyaWFsKSk7Zy5tYXRyaXg9Yy5tYXRyaXgudG9BcnJheSgpO2lmKDA8Yy5jaGlsZHJlbi5sZW5ndGgpZm9yKGcuY2hpbGRyZW49W10saD0wO2g8Yy5jaGlsZHJlbi5sZW5ndGg7aCsrKWcuY2hpbGRyZW4ucHVzaChlKGMuY2hpbGRyZW5baF0pKTtyZXR1cm4gZ307YS5vYmplY3Q9ZSh0aGlzKTtyZXR1cm4gYX0sY2xvbmU6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1hJiYoYT1uZXcgVEhSRUUuT2JqZWN0M0QpO3ZvaWQgMD09PWImJihiPSEwKTthLm5hbWU9dGhpcy5uYW1lO2EudXAuY29weSh0aGlzLnVwKTthLnBvc2l0aW9uLmNvcHkodGhpcy5wb3NpdGlvbik7YS5xdWF0ZXJuaW9uLmNvcHkodGhpcy5xdWF0ZXJuaW9uKTthLnNjYWxlLmNvcHkodGhpcy5zY2FsZSk7YS5yb3RhdGlvbkF1dG9VcGRhdGU9dGhpcy5yb3RhdGlvbkF1dG9VcGRhdGU7YS5tYXRyaXguY29weSh0aGlzLm1hdHJpeCk7XG5hLm1hdHJpeFdvcmxkLmNvcHkodGhpcy5tYXRyaXhXb3JsZCk7YS5tYXRyaXhBdXRvVXBkYXRlPXRoaXMubWF0cml4QXV0b1VwZGF0ZTthLm1hdHJpeFdvcmxkTmVlZHNVcGRhdGU9dGhpcy5tYXRyaXhXb3JsZE5lZWRzVXBkYXRlO2EudmlzaWJsZT10aGlzLnZpc2libGU7YS5jYXN0U2hhZG93PXRoaXMuY2FzdFNoYWRvdzthLnJlY2VpdmVTaGFkb3c9dGhpcy5yZWNlaXZlU2hhZG93O2EuZnJ1c3R1bUN1bGxlZD10aGlzLmZydXN0dW1DdWxsZWQ7YS51c2VyRGF0YT1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMudXNlckRhdGEpKTtpZighMD09PWIpZm9yKHZhciBjPTA7Yzx0aGlzLmNoaWxkcmVuLmxlbmd0aDtjKyspYS5hZGQodGhpcy5jaGlsZHJlbltjXS5jbG9uZSgpKTtyZXR1cm4gYX19O1RIUkVFLkV2ZW50RGlzcGF0Y2hlci5wcm90b3R5cGUuYXBwbHkoVEhSRUUuT2JqZWN0M0QucHJvdG90eXBlKTtUSFJFRS5PYmplY3QzRElkQ291bnQ9MDtcblRIUkVFLkZhY2UzPWZ1bmN0aW9uKGEsYixjLGQsZSxmKXt0aGlzLmE9YTt0aGlzLmI9Yjt0aGlzLmM9Yzt0aGlzLm5vcm1hbD1kIGluc3RhbmNlb2YgVEhSRUUuVmVjdG9yMz9kOm5ldyBUSFJFRS5WZWN0b3IzO3RoaXMudmVydGV4Tm9ybWFscz1kIGluc3RhbmNlb2YgQXJyYXk/ZDpbXTt0aGlzLmNvbG9yPWUgaW5zdGFuY2VvZiBUSFJFRS5Db2xvcj9lOm5ldyBUSFJFRS5Db2xvcjt0aGlzLnZlcnRleENvbG9ycz1lIGluc3RhbmNlb2YgQXJyYXk/ZTpbXTt0aGlzLnZlcnRleFRhbmdlbnRzPVtdO3RoaXMubWF0ZXJpYWxJbmRleD12b2lkIDAhPT1mP2Y6MH07XG5USFJFRS5GYWNlMy5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRIUkVFLkZhY2UzLGNsb25lOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLkZhY2UzKHRoaXMuYSx0aGlzLmIsdGhpcy5jKTthLm5vcm1hbC5jb3B5KHRoaXMubm9ybWFsKTthLmNvbG9yLmNvcHkodGhpcy5jb2xvcik7YS5tYXRlcmlhbEluZGV4PXRoaXMubWF0ZXJpYWxJbmRleDtmb3IodmFyIGI9MCxjPXRoaXMudmVydGV4Tm9ybWFscy5sZW5ndGg7YjxjO2IrKylhLnZlcnRleE5vcm1hbHNbYl09dGhpcy52ZXJ0ZXhOb3JtYWxzW2JdLmNsb25lKCk7Yj0wO2ZvcihjPXRoaXMudmVydGV4Q29sb3JzLmxlbmd0aDtiPGM7YisrKWEudmVydGV4Q29sb3JzW2JdPXRoaXMudmVydGV4Q29sb3JzW2JdLmNsb25lKCk7Yj0wO2ZvcihjPXRoaXMudmVydGV4VGFuZ2VudHMubGVuZ3RoO2I8YztiKyspYS52ZXJ0ZXhUYW5nZW50c1tiXT10aGlzLnZlcnRleFRhbmdlbnRzW2JdLmNsb25lKCk7cmV0dXJuIGF9fTtcblRIUkVFLkZhY2U0PWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcpe1RIUkVFLndhcm4oXCJUSFJFRS5GYWNlNCBoYXMgYmVlbiByZW1vdmVkLiBBIFRIUkVFLkZhY2UzIHdpbGwgYmUgY3JlYXRlZCBpbnN0ZWFkLlwiKTtyZXR1cm4gbmV3IFRIUkVFLkZhY2UzKGEsYixjLGUsZixnKX07VEhSRUUuQnVmZmVyQXR0cmlidXRlPWZ1bmN0aW9uKGEsYil7dGhpcy5hcnJheT1hO3RoaXMuaXRlbVNpemU9Yjt0aGlzLm5lZWRzVXBkYXRlPSExfTtcblRIUkVFLkJ1ZmZlckF0dHJpYnV0ZS5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRIUkVFLkJ1ZmZlckF0dHJpYnV0ZSxnZXQgbGVuZ3RoKCl7cmV0dXJuIHRoaXMuYXJyYXkubGVuZ3RofSxjb3B5QXQ6ZnVuY3Rpb24oYSxiLGMpe2EqPXRoaXMuaXRlbVNpemU7Yyo9Yi5pdGVtU2l6ZTtmb3IodmFyIGQ9MCxlPXRoaXMuaXRlbVNpemU7ZDxlO2QrKyl0aGlzLmFycmF5W2ErZF09Yi5hcnJheVtjK2RdO3JldHVybiB0aGlzfSxzZXQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj0wKTt0aGlzLmFycmF5LnNldChhLGIpO3JldHVybiB0aGlzfSxzZXRYOmZ1bmN0aW9uKGEsYil7dGhpcy5hcnJheVthKnRoaXMuaXRlbVNpemVdPWI7cmV0dXJuIHRoaXN9LHNldFk6ZnVuY3Rpb24oYSxiKXt0aGlzLmFycmF5W2EqdGhpcy5pdGVtU2l6ZSsxXT1iO3JldHVybiB0aGlzfSxzZXRaOmZ1bmN0aW9uKGEsYil7dGhpcy5hcnJheVthKnRoaXMuaXRlbVNpemUrMl09YjtyZXR1cm4gdGhpc30sc2V0WFk6ZnVuY3Rpb24oYSxcbmIsYyl7YSo9dGhpcy5pdGVtU2l6ZTt0aGlzLmFycmF5W2FdPWI7dGhpcy5hcnJheVthKzFdPWM7cmV0dXJuIHRoaXN9LHNldFhZWjpmdW5jdGlvbihhLGIsYyxkKXthKj10aGlzLml0ZW1TaXplO3RoaXMuYXJyYXlbYV09Yjt0aGlzLmFycmF5W2ErMV09Yzt0aGlzLmFycmF5W2ErMl09ZDtyZXR1cm4gdGhpc30sc2V0WFlaVzpmdW5jdGlvbihhLGIsYyxkLGUpe2EqPXRoaXMuaXRlbVNpemU7dGhpcy5hcnJheVthXT1iO3RoaXMuYXJyYXlbYSsxXT1jO3RoaXMuYXJyYXlbYSsyXT1kO3RoaXMuYXJyYXlbYSszXT1lO3JldHVybiB0aGlzfSxjbG9uZTpmdW5jdGlvbigpe3JldHVybiBuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKG5ldyB0aGlzLmFycmF5LmNvbnN0cnVjdG9yKHRoaXMuYXJyYXkpLHRoaXMuaXRlbVNpemUpfX07XG5USFJFRS5JbnQ4QXR0cmlidXRlPWZ1bmN0aW9uKGEsYil7VEhSRUUud2FybihcIlRIUkVFLkludDhBdHRyaWJ1dGUgaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZSggYXJyYXksIGl0ZW1TaXplICkgaW5zdGVhZC5cIik7cmV0dXJuIG5ldyBUSFJFRS5CdWZmZXJBdHRyaWJ1dGUoYSxiKX07VEhSRUUuVWludDhBdHRyaWJ1dGU9ZnVuY3Rpb24oYSxiKXtUSFJFRS53YXJuKFwiVEhSRUUuVWludDhBdHRyaWJ1dGUgaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZSggYXJyYXksIGl0ZW1TaXplICkgaW5zdGVhZC5cIik7cmV0dXJuIG5ldyBUSFJFRS5CdWZmZXJBdHRyaWJ1dGUoYSxiKX07XG5USFJFRS5VaW50OENsYW1wZWRBdHRyaWJ1dGU9ZnVuY3Rpb24oYSxiKXtUSFJFRS53YXJuKFwiVEhSRUUuVWludDhDbGFtcGVkQXR0cmlidXRlIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBUSFJFRS5CdWZmZXJBdHRyaWJ1dGUoIGFycmF5LCBpdGVtU2l6ZSApIGluc3RlYWQuXCIpO3JldHVybiBuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKGEsYil9O1RIUkVFLkludDE2QXR0cmlidXRlPWZ1bmN0aW9uKGEsYil7VEhSRUUud2FybihcIlRIUkVFLkludDE2QXR0cmlidXRlIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBUSFJFRS5CdWZmZXJBdHRyaWJ1dGUoIGFycmF5LCBpdGVtU2l6ZSApIGluc3RlYWQuXCIpO3JldHVybiBuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKGEsYil9O1xuVEhSRUUuVWludDE2QXR0cmlidXRlPWZ1bmN0aW9uKGEsYil7VEhSRUUud2FybihcIlRIUkVFLlVpbnQxNkF0dHJpYnV0ZSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgVEhSRUUuQnVmZmVyQXR0cmlidXRlKCBhcnJheSwgaXRlbVNpemUgKSBpbnN0ZWFkLlwiKTtyZXR1cm4gbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShhLGIpfTtUSFJFRS5JbnQzMkF0dHJpYnV0ZT1mdW5jdGlvbihhLGIpe1RIUkVFLndhcm4oXCJUSFJFRS5JbnQzMkF0dHJpYnV0ZSBoYXMgYmVlbiByZW1vdmVkLiBVc2UgVEhSRUUuQnVmZmVyQXR0cmlidXRlKCBhcnJheSwgaXRlbVNpemUgKSBpbnN0ZWFkLlwiKTtyZXR1cm4gbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShhLGIpfTtcblRIUkVFLlVpbnQzMkF0dHJpYnV0ZT1mdW5jdGlvbihhLGIpe1RIUkVFLndhcm4oXCJUSFJFRS5VaW50MzJBdHRyaWJ1dGUgaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZSggYXJyYXksIGl0ZW1TaXplICkgaW5zdGVhZC5cIik7cmV0dXJuIG5ldyBUSFJFRS5CdWZmZXJBdHRyaWJ1dGUoYSxiKX07VEhSRUUuRmxvYXQzMkF0dHJpYnV0ZT1mdW5jdGlvbihhLGIpe1RIUkVFLndhcm4oXCJUSFJFRS5GbG9hdDMyQXR0cmlidXRlIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBUSFJFRS5CdWZmZXJBdHRyaWJ1dGUoIGFycmF5LCBpdGVtU2l6ZSApIGluc3RlYWQuXCIpO3JldHVybiBuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKGEsYil9O1xuVEhSRUUuRmxvYXQ2NEF0dHJpYnV0ZT1mdW5jdGlvbihhLGIpe1RIUkVFLndhcm4oXCJUSFJFRS5GbG9hdDY0QXR0cmlidXRlIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBUSFJFRS5CdWZmZXJBdHRyaWJ1dGUoIGFycmF5LCBpdGVtU2l6ZSApIGluc3RlYWQuXCIpO3JldHVybiBuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKGEsYil9O1RIUkVFLkR5bmFtaWNCdWZmZXJBdHRyaWJ1dGU9ZnVuY3Rpb24oYSxiKXtUSFJFRS5CdWZmZXJBdHRyaWJ1dGUuY2FsbCh0aGlzLGEsYik7dGhpcy51cGRhdGVSYW5nZT17b2Zmc2V0OjAsY291bnQ6LTF9fTtUSFJFRS5EeW5hbWljQnVmZmVyQXR0cmlidXRlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZS5wcm90b3R5cGUpO1RIUkVFLkR5bmFtaWNCdWZmZXJBdHRyaWJ1dGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkR5bmFtaWNCdWZmZXJBdHRyaWJ1dGU7XG5USFJFRS5EeW5hbWljQnVmZmVyQXR0cmlidXRlLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgVEhSRUUuRHluYW1pY0J1ZmZlckF0dHJpYnV0ZShuZXcgdGhpcy5hcnJheS5jb25zdHJ1Y3Rvcih0aGlzLmFycmF5KSx0aGlzLml0ZW1TaXplKX07VEhSRUUuQnVmZmVyR2VvbWV0cnk9ZnVuY3Rpb24oKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImlkXCIse3ZhbHVlOlRIUkVFLkdlb21ldHJ5SWRDb3VudCsrfSk7dGhpcy51dWlkPVRIUkVFLk1hdGguZ2VuZXJhdGVVVUlEKCk7dGhpcy5uYW1lPVwiXCI7dGhpcy50eXBlPVwiQnVmZmVyR2VvbWV0cnlcIjt0aGlzLmF0dHJpYnV0ZXM9e307dGhpcy5hdHRyaWJ1dGVzS2V5cz1bXTt0aGlzLm9mZnNldHM9dGhpcy5kcmF3Y2FsbHM9W107dGhpcy5ib3VuZGluZ1NwaGVyZT10aGlzLmJvdW5kaW5nQm94PW51bGx9O1xuVEhSRUUuQnVmZmVyR2VvbWV0cnkucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUSFJFRS5CdWZmZXJHZW9tZXRyeSxhZGRBdHRyaWJ1dGU6ZnVuY3Rpb24oYSxiLGMpeyExPT09YiBpbnN0YW5jZW9mIFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZT8oVEhSRUUud2FybihcIlRIUkVFLkJ1ZmZlckdlb21ldHJ5OiAuYWRkQXR0cmlidXRlKCkgbm93IGV4cGVjdHMgKCBuYW1lLCBhdHRyaWJ1dGUgKS5cIiksdGhpcy5hdHRyaWJ1dGVzW2FdPXthcnJheTpiLGl0ZW1TaXplOmN9KToodGhpcy5hdHRyaWJ1dGVzW2FdPWIsdGhpcy5hdHRyaWJ1dGVzS2V5cz1PYmplY3Qua2V5cyh0aGlzLmF0dHJpYnV0ZXMpKX0sZ2V0QXR0cmlidXRlOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmF0dHJpYnV0ZXNbYV19LGFkZERyYXdDYWxsOmZ1bmN0aW9uKGEsYixjKXt0aGlzLmRyYXdjYWxscy5wdXNoKHtzdGFydDphLGNvdW50OmIsaW5kZXg6dm9pZCAwIT09Yz9jOjB9KX0sYXBwbHlNYXRyaXg6ZnVuY3Rpb24oYSl7dmFyIGI9XG50aGlzLmF0dHJpYnV0ZXMucG9zaXRpb247dm9pZCAwIT09YiYmKGEuYXBwbHlUb1ZlY3RvcjNBcnJheShiLmFycmF5KSxiLm5lZWRzVXBkYXRlPSEwKTtiPXRoaXMuYXR0cmlidXRlcy5ub3JtYWw7dm9pZCAwIT09YiYmKChuZXcgVEhSRUUuTWF0cml4MykuZ2V0Tm9ybWFsTWF0cml4KGEpLmFwcGx5VG9WZWN0b3IzQXJyYXkoYi5hcnJheSksYi5uZWVkc1VwZGF0ZT0hMCk7bnVsbCE9PXRoaXMuYm91bmRpbmdCb3gmJnRoaXMuY29tcHV0ZUJvdW5kaW5nQm94KCk7bnVsbCE9PXRoaXMuYm91bmRpbmdTcGhlcmUmJnRoaXMuY29tcHV0ZUJvdW5kaW5nU3BoZXJlKCl9LGNlbnRlcjpmdW5jdGlvbigpe3RoaXMuY29tcHV0ZUJvdW5kaW5nQm94KCk7dmFyIGE9dGhpcy5ib3VuZGluZ0JveC5jZW50ZXIoKS5uZWdhdGUoKTt0aGlzLmFwcGx5TWF0cml4KChuZXcgVEhSRUUuTWF0cml4NCkuc2V0UG9zaXRpb24oYSkpO3JldHVybiBhfSxmcm9tR2VvbWV0cnk6ZnVuY3Rpb24oYSxiKXtiPWJ8fHt2ZXJ0ZXhDb2xvcnM6VEhSRUUuTm9Db2xvcnN9O1xudmFyIGM9YS52ZXJ0aWNlcyxkPWEuZmFjZXMsZT1hLmZhY2VWZXJ0ZXhVdnMsZj1iLnZlcnRleENvbG9ycyxnPTA8ZVswXS5sZW5ndGgsaD0zPT1kWzBdLnZlcnRleE5vcm1hbHMubGVuZ3RoLGs9bmV3IEZsb2F0MzJBcnJheSg5KmQubGVuZ3RoKTt0aGlzLmFkZEF0dHJpYnV0ZShcInBvc2l0aW9uXCIsbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShrLDMpKTt2YXIgbD1uZXcgRmxvYXQzMkFycmF5KDkqZC5sZW5ndGgpO3RoaXMuYWRkQXR0cmlidXRlKFwibm9ybWFsXCIsbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShsLDMpKTtpZihmIT09VEhSRUUuTm9Db2xvcnMpe3ZhciBwPW5ldyBGbG9hdDMyQXJyYXkoOSpkLmxlbmd0aCk7dGhpcy5hZGRBdHRyaWJ1dGUoXCJjb2xvclwiLG5ldyBUSFJFRS5CdWZmZXJBdHRyaWJ1dGUocCwzKSl9aWYoITA9PT1nKXt2YXIgcT1uZXcgRmxvYXQzMkFycmF5KDYqZC5sZW5ndGgpO3RoaXMuYWRkQXR0cmlidXRlKFwidXZcIixuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKHEsXG4yKSl9Zm9yKHZhciBuPTAsdD0wLHI9MDtuPGQubGVuZ3RoO24rKyx0Kz02LHIrPTkpe3ZhciBzPWRbbl0sdT1jW3MuYV0sdj1jW3MuYl0seD1jW3MuY107a1tyXT11Lng7a1tyKzFdPXUueTtrW3IrMl09dS56O2tbciszXT12Lng7a1tyKzRdPXYueTtrW3IrNV09di56O2tbcis2XT14Lng7a1tyKzddPXgueTtrW3IrOF09eC56OyEwPT09aD8odT1zLnZlcnRleE5vcm1hbHNbMF0sdj1zLnZlcnRleE5vcm1hbHNbMV0seD1zLnZlcnRleE5vcm1hbHNbMl0sbFtyXT11LngsbFtyKzFdPXUueSxsW3IrMl09dS56LGxbciszXT12LngsbFtyKzRdPXYueSxsW3IrNV09di56LGxbcis2XT14LngsbFtyKzddPXgueSxsW3IrOF09eC56KToodT1zLm5vcm1hbCxsW3JdPXUueCxsW3IrMV09dS55LGxbcisyXT11LnosbFtyKzNdPXUueCxsW3IrNF09dS55LGxbcis1XT11LnosbFtyKzZdPXUueCxsW3IrN109dS55LGxbcis4XT11LnopO2Y9PT1USFJFRS5GYWNlQ29sb3JzPyhzPXMuY29sb3IscFtyXT1cbnMucixwW3IrMV09cy5nLHBbcisyXT1zLmIscFtyKzNdPXMucixwW3IrNF09cy5nLHBbcis1XT1zLmIscFtyKzZdPXMucixwW3IrN109cy5nLHBbcis4XT1zLmIpOmY9PT1USFJFRS5WZXJ0ZXhDb2xvcnMmJih1PXMudmVydGV4Q29sb3JzWzBdLHY9cy52ZXJ0ZXhDb2xvcnNbMV0scz1zLnZlcnRleENvbG9yc1syXSxwW3JdPXUucixwW3IrMV09dS5nLHBbcisyXT11LmIscFtyKzNdPXYucixwW3IrNF09di5nLHBbcis1XT12LmIscFtyKzZdPXMucixwW3IrN109cy5nLHBbcis4XT1zLmIpOyEwPT09ZyYmKHM9ZVswXVtuXVswXSx1PWVbMF1bbl1bMV0sdj1lWzBdW25dWzJdLHFbdF09cy54LHFbdCsxXT1zLnkscVt0KzJdPXUueCxxW3QrM109dS55LHFbdCs0XT12LngscVt0KzVdPXYueSl9dGhpcy5jb21wdXRlQm91bmRpbmdTcGhlcmUoKTtyZXR1cm4gdGhpc30sY29tcHV0ZUJvdW5kaW5nQm94OmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKCl7bnVsbD09PVxudGhpcy5ib3VuZGluZ0JveCYmKHRoaXMuYm91bmRpbmdCb3g9bmV3IFRIUkVFLkJveDMpO3ZhciBiPXRoaXMuYXR0cmlidXRlcy5wb3NpdGlvbi5hcnJheTtpZihiKXt2YXIgYz10aGlzLmJvdW5kaW5nQm94O2MubWFrZUVtcHR5KCk7Zm9yKHZhciBkPTAsZT1iLmxlbmd0aDtkPGU7ZCs9MylhLnNldChiW2RdLGJbZCsxXSxiW2QrMl0pLGMuZXhwYW5kQnlQb2ludChhKX1pZih2b2lkIDA9PT1ifHwwPT09Yi5sZW5ndGgpdGhpcy5ib3VuZGluZ0JveC5taW4uc2V0KDAsMCwwKSx0aGlzLmJvdW5kaW5nQm94Lm1heC5zZXQoMCwwLDApOyhpc05hTih0aGlzLmJvdW5kaW5nQm94Lm1pbi54KXx8aXNOYU4odGhpcy5ib3VuZGluZ0JveC5taW4ueSl8fGlzTmFOKHRoaXMuYm91bmRpbmdCb3gubWluLnopKSYmVEhSRUUuZXJyb3IoJ1RIUkVFLkJ1ZmZlckdlb21ldHJ5LmNvbXB1dGVCb3VuZGluZ0JveDogQ29tcHV0ZWQgbWluL21heCBoYXZlIE5hTiB2YWx1ZXMuIFRoZSBcInBvc2l0aW9uXCIgYXR0cmlidXRlIGlzIGxpa2VseSB0byBoYXZlIE5hTiB2YWx1ZXMuJyl9fSgpLFxuY29tcHV0ZUJvdW5kaW5nU3BoZXJlOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLkJveDMsYj1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oKXtudWxsPT09dGhpcy5ib3VuZGluZ1NwaGVyZSYmKHRoaXMuYm91bmRpbmdTcGhlcmU9bmV3IFRIUkVFLlNwaGVyZSk7dmFyIGM9dGhpcy5hdHRyaWJ1dGVzLnBvc2l0aW9uLmFycmF5O2lmKGMpe2EubWFrZUVtcHR5KCk7Zm9yKHZhciBkPXRoaXMuYm91bmRpbmdTcGhlcmUuY2VudGVyLGU9MCxmPWMubGVuZ3RoO2U8ZjtlKz0zKWIuc2V0KGNbZV0sY1tlKzFdLGNbZSsyXSksYS5leHBhbmRCeVBvaW50KGIpO2EuY2VudGVyKGQpO2Zvcih2YXIgZz0wLGU9MCxmPWMubGVuZ3RoO2U8ZjtlKz0zKWIuc2V0KGNbZV0sY1tlKzFdLGNbZSsyXSksZz1NYXRoLm1heChnLGQuZGlzdGFuY2VUb1NxdWFyZWQoYikpO3RoaXMuYm91bmRpbmdTcGhlcmUucmFkaXVzPU1hdGguc3FydChnKTtpc05hTih0aGlzLmJvdW5kaW5nU3BoZXJlLnJhZGl1cykmJlxuVEhSRUUuZXJyb3IoJ1RIUkVFLkJ1ZmZlckdlb21ldHJ5LmNvbXB1dGVCb3VuZGluZ1NwaGVyZSgpOiBDb21wdXRlZCByYWRpdXMgaXMgTmFOLiBUaGUgXCJwb3NpdGlvblwiIGF0dHJpYnV0ZSBpcyBsaWtlbHkgdG8gaGF2ZSBOYU4gdmFsdWVzLicpfX19KCksY29tcHV0ZUZhY2VOb3JtYWxzOmZ1bmN0aW9uKCl7fSxjb21wdXRlVmVydGV4Tm9ybWFsczpmdW5jdGlvbigpe3ZhciBhPXRoaXMuYXR0cmlidXRlcztpZihhLnBvc2l0aW9uKXt2YXIgYj1hLnBvc2l0aW9uLmFycmF5O2lmKHZvaWQgMD09PWEubm9ybWFsKXRoaXMuYWRkQXR0cmlidXRlKFwibm9ybWFsXCIsbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShuZXcgRmxvYXQzMkFycmF5KGIubGVuZ3RoKSwzKSk7ZWxzZSBmb3IodmFyIGM9YS5ub3JtYWwuYXJyYXksZD0wLGU9Yy5sZW5ndGg7ZDxlO2QrKyljW2RdPTA7dmFyIGM9YS5ub3JtYWwuYXJyYXksZixnLGgsaz1uZXcgVEhSRUUuVmVjdG9yMyxsPW5ldyBUSFJFRS5WZWN0b3IzLFxucD1uZXcgVEhSRUUuVmVjdG9yMyxxPW5ldyBUSFJFRS5WZWN0b3IzLG49bmV3IFRIUkVFLlZlY3RvcjM7aWYoYS5pbmRleClmb3IodmFyIHQ9YS5pbmRleC5hcnJheSxyPTA8dGhpcy5vZmZzZXRzLmxlbmd0aD90aGlzLm9mZnNldHM6W3tzdGFydDowLGNvdW50OnQubGVuZ3RoLGluZGV4OjB9XSxzPTAsdT1yLmxlbmd0aDtzPHU7KytzKXtlPXJbc10uc3RhcnQ7Zj1yW3NdLmNvdW50O2Zvcih2YXIgdj1yW3NdLmluZGV4LGQ9ZSxlPWUrZjtkPGU7ZCs9MylmPTMqKHYrdFtkXSksZz0zKih2K3RbZCsxXSksaD0zKih2K3RbZCsyXSksay5mcm9tQXJyYXkoYixmKSxsLmZyb21BcnJheShiLGcpLHAuZnJvbUFycmF5KGIsaCkscS5zdWJWZWN0b3JzKHAsbCksbi5zdWJWZWN0b3JzKGssbCkscS5jcm9zcyhuKSxjW2ZdKz1xLngsY1tmKzFdKz1xLnksY1tmKzJdKz1xLnosY1tnXSs9cS54LGNbZysxXSs9cS55LGNbZysyXSs9cS56LGNbaF0rPXEueCxjW2grMV0rPXEueSxjW2grMl0rPXEuen1lbHNlIGZvcihkPVxuMCxlPWIubGVuZ3RoO2Q8ZTtkKz05KWsuZnJvbUFycmF5KGIsZCksbC5mcm9tQXJyYXkoYixkKzMpLHAuZnJvbUFycmF5KGIsZCs2KSxxLnN1YlZlY3RvcnMocCxsKSxuLnN1YlZlY3RvcnMoayxsKSxxLmNyb3NzKG4pLGNbZF09cS54LGNbZCsxXT1xLnksY1tkKzJdPXEueixjW2QrM109cS54LGNbZCs0XT1xLnksY1tkKzVdPXEueixjW2QrNl09cS54LGNbZCs3XT1xLnksY1tkKzhdPXEuejt0aGlzLm5vcm1hbGl6ZU5vcm1hbHMoKTthLm5vcm1hbC5uZWVkc1VwZGF0ZT0hMH19LGNvbXB1dGVUYW5nZW50czpmdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiLGMpe3EuZnJvbUFycmF5KGQsMyphKTtuLmZyb21BcnJheShkLDMqYik7dC5mcm9tQXJyYXkoZCwzKmMpO3IuZnJvbUFycmF5KGYsMiphKTtzLmZyb21BcnJheShmLDIqYik7dS5mcm9tQXJyYXkoZiwyKmMpO3Y9bi54LXEueDt4PXQueC1xLng7RD1uLnktcS55O3c9dC55LXEueTt5PW4uei1xLno7QT10LnotcS56O0U9cy54LXIueDtHPVxudS54LXIueDtGPXMueS1yLnk7ej11Lnktci55O0k9MS8oRSp6LUcqRik7VS5zZXQoKHoqdi1GKngpKkksKHoqRC1GKncpKkksKHoqeS1GKkEpKkkpO00uc2V0KChFKngtRyp2KSpJLChFKnctRypEKSpJLChFKkEtRyp5KSpJKTtrW2FdLmFkZChVKTtrW2JdLmFkZChVKTtrW2NdLmFkZChVKTtsW2FdLmFkZChNKTtsW2JdLmFkZChNKTtsW2NdLmFkZChNKX1mdW5jdGlvbiBiKGEpe2hhLmZyb21BcnJheShlLDMqYSk7Ty5jb3B5KGhhKTtiYT1rW2FdO29hLmNvcHkoYmEpO29hLnN1YihoYS5tdWx0aXBseVNjYWxhcihoYS5kb3QoYmEpKSkubm9ybWFsaXplKCk7amEuY3Jvc3NWZWN0b3JzKE8sYmEpO3FhPWphLmRvdChsW2FdKTtjYT0wPnFhPy0xOjE7aFs0KmFdPW9hLng7aFs0KmErMV09b2EueTtoWzQqYSsyXT1vYS56O2hbNCphKzNdPWNhfWlmKHZvaWQgMD09PXRoaXMuYXR0cmlidXRlcy5pbmRleHx8dm9pZCAwPT09dGhpcy5hdHRyaWJ1dGVzLnBvc2l0aW9ufHx2b2lkIDA9PT10aGlzLmF0dHJpYnV0ZXMubm9ybWFsfHxcbnZvaWQgMD09PXRoaXMuYXR0cmlidXRlcy51dilUSFJFRS53YXJuKFwiVEhSRUUuQnVmZmVyR2VvbWV0cnk6IE1pc3NpbmcgcmVxdWlyZWQgYXR0cmlidXRlcyAoaW5kZXgsIHBvc2l0aW9uLCBub3JtYWwgb3IgdXYpIGluIEJ1ZmZlckdlb21ldHJ5LmNvbXB1dGVUYW5nZW50cygpXCIpO2Vsc2V7dmFyIGM9dGhpcy5hdHRyaWJ1dGVzLmluZGV4LmFycmF5LGQ9dGhpcy5hdHRyaWJ1dGVzLnBvc2l0aW9uLmFycmF5LGU9dGhpcy5hdHRyaWJ1dGVzLm5vcm1hbC5hcnJheSxmPXRoaXMuYXR0cmlidXRlcy51di5hcnJheSxnPWQubGVuZ3RoLzM7dm9pZCAwPT09dGhpcy5hdHRyaWJ1dGVzLnRhbmdlbnQmJnRoaXMuYWRkQXR0cmlidXRlKFwidGFuZ2VudFwiLG5ldyBUSFJFRS5CdWZmZXJBdHRyaWJ1dGUobmV3IEZsb2F0MzJBcnJheSg0KmcpLDQpKTtmb3IodmFyIGg9dGhpcy5hdHRyaWJ1dGVzLnRhbmdlbnQuYXJyYXksaz1bXSxsPVtdLHA9MDtwPGc7cCsrKWtbcF09bmV3IFRIUkVFLlZlY3RvcjMsXG5sW3BdPW5ldyBUSFJFRS5WZWN0b3IzO3ZhciBxPW5ldyBUSFJFRS5WZWN0b3IzLG49bmV3IFRIUkVFLlZlY3RvcjMsdD1uZXcgVEhSRUUuVmVjdG9yMyxyPW5ldyBUSFJFRS5WZWN0b3IyLHM9bmV3IFRIUkVFLlZlY3RvcjIsdT1uZXcgVEhSRUUuVmVjdG9yMix2LHgsRCx3LHksQSxFLEcsRix6LEksVT1uZXcgVEhSRUUuVmVjdG9yMyxNPW5ldyBUSFJFRS5WZWN0b3IzLEgsTCxQLE4sUjswPT09dGhpcy5kcmF3Y2FsbHMubGVuZ3RoJiZ0aGlzLmFkZERyYXdDYWxsKDAsYy5sZW5ndGgsMCk7dmFyIFY9dGhpcy5kcmF3Y2FsbHMscD0wO2ZvcihMPVYubGVuZ3RoO3A8TDsrK3Ape0g9VltwXS5zdGFydDtQPVZbcF0uY291bnQ7dmFyIEo9VltwXS5pbmRleCxnPUg7Zm9yKEgrPVA7ZzxIO2crPTMpUD1KK2NbZ10sTj1KK2NbZysxXSxSPUorY1tnKzJdLGEoUCxOLFIpfXZhciBvYT1uZXcgVEhSRUUuVmVjdG9yMyxqYT1uZXcgVEhSRUUuVmVjdG9yMyxoYT1uZXcgVEhSRUUuVmVjdG9yMyxPPW5ldyBUSFJFRS5WZWN0b3IzLFxuY2EsYmEscWEscD0wO2ZvcihMPVYubGVuZ3RoO3A8TDsrK3ApZm9yKEg9VltwXS5zdGFydCxQPVZbcF0uY291bnQsSj1WW3BdLmluZGV4LGc9SCxIKz1QO2c8SDtnKz0zKVA9SitjW2ddLE49SitjW2crMV0sUj1KK2NbZysyXSxiKFApLGIoTiksYihSKX19LGNvbXB1dGVPZmZzZXRzOmZ1bmN0aW9uKGEpe3ZvaWQgMD09PWEmJihhPTY1NTM1KTtmb3IodmFyIGI9dGhpcy5hdHRyaWJ1dGVzLmluZGV4LmFycmF5LGM9dGhpcy5hdHRyaWJ1dGVzLnBvc2l0aW9uLmFycmF5LGQ9Yi5sZW5ndGgvMyxlPW5ldyBVaW50MTZBcnJheShiLmxlbmd0aCksZj0wLGc9MCxoPVt7c3RhcnQ6MCxjb3VudDowLGluZGV4OjB9XSxrPWhbMF0sbD0wLHA9MCxxPW5ldyBJbnQzMkFycmF5KDYpLG49bmV3IEludDMyQXJyYXkoYy5sZW5ndGgpLHQ9bmV3IEludDMyQXJyYXkoYy5sZW5ndGgpLHI9MDtyPGMubGVuZ3RoO3IrKyluW3JdPS0xLHRbcl09LTE7Zm9yKGM9MDtjPGQ7YysrKXtmb3IodmFyIHM9cD0wOzM+XG5zO3MrKylyPWJbMypjK3NdLC0xPT1uW3JdPyhxWzIqc109cixxWzIqcysxXT0tMSxwKyspOm5bcl08ay5pbmRleD8ocVsyKnNdPXIscVsyKnMrMV09LTEsbCsrKToocVsyKnNdPXIscVsyKnMrMV09bltyXSk7aWYoZytwPmsuaW5kZXgrYSlmb3Ioaz17c3RhcnQ6Zixjb3VudDowLGluZGV4Omd9LGgucHVzaChrKSxwPTA7Nj5wO3ArPTIpcz1xW3ArMV0sLTE8cyYmczxrLmluZGV4JiYocVtwKzFdPS0xKTtmb3IocD0wOzY+cDtwKz0yKXI9cVtwXSxzPXFbcCsxXSwtMT09PXMmJihzPWcrKyksbltyXT1zLHRbc109cixlW2YrK109cy1rLmluZGV4LGsuY291bnQrK310aGlzLnJlb3JkZXJCdWZmZXJzKGUsdCxnKTtyZXR1cm4gdGhpcy5kcmF3Y2FsbHM9dGhpcy5vZmZzZXRzPWh9LG1lcmdlOmZ1bmN0aW9uKGEsYil7aWYoITE9PT1hIGluc3RhbmNlb2YgVEhSRUUuQnVmZmVyR2VvbWV0cnkpVEhSRUUuZXJyb3IoXCJUSFJFRS5CdWZmZXJHZW9tZXRyeS5tZXJnZSgpOiBnZW9tZXRyeSBub3QgYW4gaW5zdGFuY2Ugb2YgVEhSRUUuQnVmZmVyR2VvbWV0cnkuXCIsXG5hKTtlbHNle3ZvaWQgMD09PWImJihiPTApO3ZhciBjPXRoaXMuYXR0cmlidXRlcyxkO2ZvcihkIGluIGMpaWYodm9pZCAwIT09YS5hdHRyaWJ1dGVzW2RdKWZvcih2YXIgZT1jW2RdLmFycmF5LGY9YS5hdHRyaWJ1dGVzW2RdLGc9Zi5hcnJheSxoPTAsZj1mLml0ZW1TaXplKmI7aDxnLmxlbmd0aDtoKyssZisrKWVbZl09Z1toXTtyZXR1cm4gdGhpc319LG5vcm1hbGl6ZU5vcm1hbHM6ZnVuY3Rpb24oKXtmb3IodmFyIGE9dGhpcy5hdHRyaWJ1dGVzLm5vcm1hbC5hcnJheSxiLGMsZCxlPTAsZj1hLmxlbmd0aDtlPGY7ZSs9MyliPWFbZV0sYz1hW2UrMV0sZD1hW2UrMl0sYj0xL01hdGguc3FydChiKmIrYypjK2QqZCksYVtlXSo9YixhW2UrMV0qPWIsYVtlKzJdKj1ifSxyZW9yZGVyQnVmZmVyczpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9e30sZTtmb3IoZSBpbiB0aGlzLmF0dHJpYnV0ZXMpXCJpbmRleFwiIT1lJiYoZFtlXT1uZXcgdGhpcy5hdHRyaWJ1dGVzW2VdLmFycmF5LmNvbnN0cnVjdG9yKHRoaXMuYXR0cmlidXRlc1tlXS5pdGVtU2l6ZSpcbmMpKTtmb3IodmFyIGY9MDtmPGM7ZisrKXt2YXIgZz1iW2ZdO2ZvcihlIGluIHRoaXMuYXR0cmlidXRlcylpZihcImluZGV4XCIhPWUpZm9yKHZhciBoPXRoaXMuYXR0cmlidXRlc1tlXS5hcnJheSxrPXRoaXMuYXR0cmlidXRlc1tlXS5pdGVtU2l6ZSxsPWRbZV0scD0wO3A8aztwKyspbFtmKmsrcF09aFtnKmsrcF19dGhpcy5hdHRyaWJ1dGVzLmluZGV4LmFycmF5PWE7Zm9yKGUgaW4gdGhpcy5hdHRyaWJ1dGVzKVwiaW5kZXhcIiE9ZSYmKHRoaXMuYXR0cmlidXRlc1tlXS5hcnJheT1kW2VdLHRoaXMuYXR0cmlidXRlc1tlXS5udW1JdGVtcz10aGlzLmF0dHJpYnV0ZXNbZV0uaXRlbVNpemUqYyl9LHRvSlNPTjpmdW5jdGlvbigpe3ZhciBhPXttZXRhZGF0YTp7dmVyc2lvbjo0LHR5cGU6XCJCdWZmZXJHZW9tZXRyeVwiLGdlbmVyYXRvcjpcIkJ1ZmZlckdlb21ldHJ5RXhwb3J0ZXJcIn0sdXVpZDp0aGlzLnV1aWQsdHlwZTp0aGlzLnR5cGUsZGF0YTp7YXR0cmlidXRlczp7fX19LGI9dGhpcy5hdHRyaWJ1dGVzLFxuYz10aGlzLm9mZnNldHMsZD10aGlzLmJvdW5kaW5nU3BoZXJlLGU7Zm9yKGUgaW4gYil7dmFyIGY9YltlXSxnPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGYuYXJyYXkpO2EuZGF0YS5hdHRyaWJ1dGVzW2VdPXtpdGVtU2l6ZTpmLml0ZW1TaXplLHR5cGU6Zi5hcnJheS5jb25zdHJ1Y3Rvci5uYW1lLGFycmF5Omd9fTA8Yy5sZW5ndGgmJihhLmRhdGEub2Zmc2V0cz1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGMpKSk7bnVsbCE9PWQmJihhLmRhdGEuYm91bmRpbmdTcGhlcmU9e2NlbnRlcjpkLmNlbnRlci50b0FycmF5KCkscmFkaXVzOmQucmFkaXVzfSk7cmV0dXJuIGF9LGNsb25lOmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLkJ1ZmZlckdlb21ldHJ5LGI7Zm9yKGIgaW4gdGhpcy5hdHRyaWJ1dGVzKWEuYWRkQXR0cmlidXRlKGIsdGhpcy5hdHRyaWJ1dGVzW2JdLmNsb25lKCkpO2I9MDtmb3IodmFyIGM9dGhpcy5vZmZzZXRzLmxlbmd0aDtiPGM7YisrKXt2YXIgZD10aGlzLm9mZnNldHNbYl07XG5hLm9mZnNldHMucHVzaCh7c3RhcnQ6ZC5zdGFydCxpbmRleDpkLmluZGV4LGNvdW50OmQuY291bnR9KX1yZXR1cm4gYX0sZGlzcG9zZTpmdW5jdGlvbigpe3RoaXMuZGlzcGF0Y2hFdmVudCh7dHlwZTpcImRpc3Bvc2VcIn0pfX07VEhSRUUuRXZlbnREaXNwYXRjaGVyLnByb3RvdHlwZS5hcHBseShUSFJFRS5CdWZmZXJHZW9tZXRyeS5wcm90b3R5cGUpO1xuVEhSRUUuR2VvbWV0cnk9ZnVuY3Rpb24oKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImlkXCIse3ZhbHVlOlRIUkVFLkdlb21ldHJ5SWRDb3VudCsrfSk7dGhpcy51dWlkPVRIUkVFLk1hdGguZ2VuZXJhdGVVVUlEKCk7dGhpcy5uYW1lPVwiXCI7dGhpcy50eXBlPVwiR2VvbWV0cnlcIjt0aGlzLnZlcnRpY2VzPVtdO3RoaXMuY29sb3JzPVtdO3RoaXMuZmFjZXM9W107dGhpcy5mYWNlVmVydGV4VXZzPVtbXV07dGhpcy5tb3JwaFRhcmdldHM9W107dGhpcy5tb3JwaENvbG9ycz1bXTt0aGlzLm1vcnBoTm9ybWFscz1bXTt0aGlzLnNraW5XZWlnaHRzPVtdO3RoaXMuc2tpbkluZGljZXM9W107dGhpcy5saW5lRGlzdGFuY2VzPVtdO3RoaXMuYm91bmRpbmdTcGhlcmU9dGhpcy5ib3VuZGluZ0JveD1udWxsO3RoaXMuaGFzVGFuZ2VudHM9ITE7dGhpcy5keW5hbWljPSEwO3RoaXMuZ3JvdXBzTmVlZFVwZGF0ZT10aGlzLmxpbmVEaXN0YW5jZXNOZWVkVXBkYXRlPXRoaXMuY29sb3JzTmVlZFVwZGF0ZT1cbnRoaXMudGFuZ2VudHNOZWVkVXBkYXRlPXRoaXMubm9ybWFsc05lZWRVcGRhdGU9dGhpcy51dnNOZWVkVXBkYXRlPXRoaXMuZWxlbWVudHNOZWVkVXBkYXRlPXRoaXMudmVydGljZXNOZWVkVXBkYXRlPSExfTtcblRIUkVFLkdlb21ldHJ5LnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuR2VvbWV0cnksYXBwbHlNYXRyaXg6ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPShuZXcgVEhSRUUuTWF0cml4MykuZ2V0Tm9ybWFsTWF0cml4KGEpLGM9MCxkPXRoaXMudmVydGljZXMubGVuZ3RoO2M8ZDtjKyspdGhpcy52ZXJ0aWNlc1tjXS5hcHBseU1hdHJpeDQoYSk7Yz0wO2ZvcihkPXRoaXMuZmFjZXMubGVuZ3RoO2M8ZDtjKyspe2E9dGhpcy5mYWNlc1tjXTthLm5vcm1hbC5hcHBseU1hdHJpeDMoYikubm9ybWFsaXplKCk7Zm9yKHZhciBlPTAsZj1hLnZlcnRleE5vcm1hbHMubGVuZ3RoO2U8ZjtlKyspYS52ZXJ0ZXhOb3JtYWxzW2VdLmFwcGx5TWF0cml4MyhiKS5ub3JtYWxpemUoKX1udWxsIT09dGhpcy5ib3VuZGluZ0JveCYmdGhpcy5jb21wdXRlQm91bmRpbmdCb3goKTtudWxsIT09dGhpcy5ib3VuZGluZ1NwaGVyZSYmdGhpcy5jb21wdXRlQm91bmRpbmdTcGhlcmUoKTt0aGlzLm5vcm1hbHNOZWVkVXBkYXRlPVxudGhpcy52ZXJ0aWNlc05lZWRVcGRhdGU9ITB9LGZyb21CdWZmZXJHZW9tZXRyeTpmdW5jdGlvbihhKXtmb3IodmFyIGI9dGhpcyxjPWEuYXR0cmlidXRlcyxkPWMucG9zaXRpb24uYXJyYXksZT12b2lkIDAhPT1jLmluZGV4P2MuaW5kZXguYXJyYXk6dm9pZCAwLGY9dm9pZCAwIT09Yy5ub3JtYWw/Yy5ub3JtYWwuYXJyYXk6dm9pZCAwLGc9dm9pZCAwIT09Yy5jb2xvcj9jLmNvbG9yLmFycmF5OnZvaWQgMCxoPXZvaWQgMCE9PWMudXY/Yy51di5hcnJheTp2b2lkIDAsaz1bXSxsPVtdLHA9Yz0wO2M8ZC5sZW5ndGg7Yys9MyxwKz0yKWIudmVydGljZXMucHVzaChuZXcgVEhSRUUuVmVjdG9yMyhkW2NdLGRbYysxXSxkW2MrMl0pKSx2b2lkIDAhPT1mJiZrLnB1c2gobmV3IFRIUkVFLlZlY3RvcjMoZltjXSxmW2MrMV0sZltjKzJdKSksdm9pZCAwIT09ZyYmYi5jb2xvcnMucHVzaChuZXcgVEhSRUUuQ29sb3IoZ1tjXSxnW2MrMV0sZ1tjKzJdKSksdm9pZCAwIT09aCYmbC5wdXNoKG5ldyBUSFJFRS5WZWN0b3IyKGhbcF0sXG5oW3ArMV0pKTt2YXIgcT1mdW5jdGlvbihhLGMsZCl7dmFyIGU9dm9pZCAwIT09Zj9ba1thXS5jbG9uZSgpLGtbY10uY2xvbmUoKSxrW2RdLmNsb25lKCldOltdLG49dm9pZCAwIT09Zz9bYi5jb2xvcnNbYV0uY2xvbmUoKSxiLmNvbG9yc1tjXS5jbG9uZSgpLGIuY29sb3JzW2RdLmNsb25lKCldOltdO2IuZmFjZXMucHVzaChuZXcgVEhSRUUuRmFjZTMoYSxjLGQsZSxuKSk7dm9pZCAwIT09aCYmYi5mYWNlVmVydGV4VXZzWzBdLnB1c2goW2xbYV0uY2xvbmUoKSxsW2NdLmNsb25lKCksbFtkXS5jbG9uZSgpXSl9O2lmKHZvaWQgMCE9PWUpaWYoZD1hLmRyYXdjYWxscywwPGQubGVuZ3RoKWZvcihjPTA7YzxkLmxlbmd0aDtjKyspZm9yKHZhciBwPWRbY10sbj1wLnN0YXJ0LHQ9cC5jb3VudCxyPXAuaW5kZXgscD1uLG49bit0O3A8bjtwKz0zKXEocitlW3BdLHIrZVtwKzFdLHIrZVtwKzJdKTtlbHNlIGZvcihjPTA7YzxlLmxlbmd0aDtjKz0zKXEoZVtjXSxlW2MrMV0sZVtjKzJdKTtlbHNlIGZvcihjPVxuMDtjPGQubGVuZ3RoLzM7Yys9MylxKGMsYysxLGMrMik7dGhpcy5jb21wdXRlRmFjZU5vcm1hbHMoKTtudWxsIT09YS5ib3VuZGluZ0JveCYmKHRoaXMuYm91bmRpbmdCb3g9YS5ib3VuZGluZ0JveC5jbG9uZSgpKTtudWxsIT09YS5ib3VuZGluZ1NwaGVyZSYmKHRoaXMuYm91bmRpbmdTcGhlcmU9YS5ib3VuZGluZ1NwaGVyZS5jbG9uZSgpKTtyZXR1cm4gdGhpc30sY2VudGVyOmZ1bmN0aW9uKCl7dGhpcy5jb21wdXRlQm91bmRpbmdCb3goKTt2YXIgYT10aGlzLmJvdW5kaW5nQm94LmNlbnRlcigpLm5lZ2F0ZSgpO3RoaXMuYXBwbHlNYXRyaXgoKG5ldyBUSFJFRS5NYXRyaXg0KS5zZXRQb3NpdGlvbihhKSk7cmV0dXJuIGF9LGNvbXB1dGVGYWNlTm9ybWFsczpmdW5jdGlvbigpe2Zvcih2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMyxiPW5ldyBUSFJFRS5WZWN0b3IzLGM9MCxkPXRoaXMuZmFjZXMubGVuZ3RoO2M8ZDtjKyspe3ZhciBlPXRoaXMuZmFjZXNbY10sZj10aGlzLnZlcnRpY2VzW2UuYV0sXG5nPXRoaXMudmVydGljZXNbZS5iXTthLnN1YlZlY3RvcnModGhpcy52ZXJ0aWNlc1tlLmNdLGcpO2Iuc3ViVmVjdG9ycyhmLGcpO2EuY3Jvc3MoYik7YS5ub3JtYWxpemUoKTtlLm5vcm1hbC5jb3B5KGEpfX0sY29tcHV0ZVZlcnRleE5vcm1hbHM6ZnVuY3Rpb24oYSl7dmFyIGIsYyxkO2Q9QXJyYXkodGhpcy52ZXJ0aWNlcy5sZW5ndGgpO2I9MDtmb3IoYz10aGlzLnZlcnRpY2VzLmxlbmd0aDtiPGM7YisrKWRbYl09bmV3IFRIUkVFLlZlY3RvcjM7aWYoYSl7dmFyIGUsZixnLGg9bmV3IFRIUkVFLlZlY3RvcjMsaz1uZXcgVEhSRUUuVmVjdG9yMzthPTA7Zm9yKGI9dGhpcy5mYWNlcy5sZW5ndGg7YTxiO2ErKyljPXRoaXMuZmFjZXNbYV0sZT10aGlzLnZlcnRpY2VzW2MuYV0sZj10aGlzLnZlcnRpY2VzW2MuYl0sZz10aGlzLnZlcnRpY2VzW2MuY10saC5zdWJWZWN0b3JzKGcsZiksay5zdWJWZWN0b3JzKGUsZiksaC5jcm9zcyhrKSxkW2MuYV0uYWRkKGgpLGRbYy5iXS5hZGQoaCksZFtjLmNdLmFkZChoKX1lbHNlIGZvcihhPVxuMCxiPXRoaXMuZmFjZXMubGVuZ3RoO2E8YjthKyspYz10aGlzLmZhY2VzW2FdLGRbYy5hXS5hZGQoYy5ub3JtYWwpLGRbYy5iXS5hZGQoYy5ub3JtYWwpLGRbYy5jXS5hZGQoYy5ub3JtYWwpO2I9MDtmb3IoYz10aGlzLnZlcnRpY2VzLmxlbmd0aDtiPGM7YisrKWRbYl0ubm9ybWFsaXplKCk7YT0wO2ZvcihiPXRoaXMuZmFjZXMubGVuZ3RoO2E8YjthKyspYz10aGlzLmZhY2VzW2FdLGMudmVydGV4Tm9ybWFsc1swXT1kW2MuYV0uY2xvbmUoKSxjLnZlcnRleE5vcm1hbHNbMV09ZFtjLmJdLmNsb25lKCksYy52ZXJ0ZXhOb3JtYWxzWzJdPWRbYy5jXS5jbG9uZSgpfSxjb21wdXRlTW9ycGhOb3JtYWxzOmZ1bmN0aW9uKCl7dmFyIGEsYixjLGQsZTtjPTA7Zm9yKGQ9dGhpcy5mYWNlcy5sZW5ndGg7YzxkO2MrKylmb3IoZT10aGlzLmZhY2VzW2NdLGUuX19vcmlnaW5hbEZhY2VOb3JtYWw/ZS5fX29yaWdpbmFsRmFjZU5vcm1hbC5jb3B5KGUubm9ybWFsKTplLl9fb3JpZ2luYWxGYWNlTm9ybWFsPVxuZS5ub3JtYWwuY2xvbmUoKSxlLl9fb3JpZ2luYWxWZXJ0ZXhOb3JtYWxzfHwoZS5fX29yaWdpbmFsVmVydGV4Tm9ybWFscz1bXSksYT0wLGI9ZS52ZXJ0ZXhOb3JtYWxzLmxlbmd0aDthPGI7YSsrKWUuX19vcmlnaW5hbFZlcnRleE5vcm1hbHNbYV0/ZS5fX29yaWdpbmFsVmVydGV4Tm9ybWFsc1thXS5jb3B5KGUudmVydGV4Tm9ybWFsc1thXSk6ZS5fX29yaWdpbmFsVmVydGV4Tm9ybWFsc1thXT1lLnZlcnRleE5vcm1hbHNbYV0uY2xvbmUoKTt2YXIgZj1uZXcgVEhSRUUuR2VvbWV0cnk7Zi5mYWNlcz10aGlzLmZhY2VzO2E9MDtmb3IoYj10aGlzLm1vcnBoVGFyZ2V0cy5sZW5ndGg7YTxiO2ErKyl7aWYoIXRoaXMubW9ycGhOb3JtYWxzW2FdKXt0aGlzLm1vcnBoTm9ybWFsc1thXT17fTt0aGlzLm1vcnBoTm9ybWFsc1thXS5mYWNlTm9ybWFscz1bXTt0aGlzLm1vcnBoTm9ybWFsc1thXS52ZXJ0ZXhOb3JtYWxzPVtdO2U9dGhpcy5tb3JwaE5vcm1hbHNbYV0uZmFjZU5vcm1hbHM7dmFyIGc9XG50aGlzLm1vcnBoTm9ybWFsc1thXS52ZXJ0ZXhOb3JtYWxzLGgsaztjPTA7Zm9yKGQ9dGhpcy5mYWNlcy5sZW5ndGg7YzxkO2MrKyloPW5ldyBUSFJFRS5WZWN0b3IzLGs9e2E6bmV3IFRIUkVFLlZlY3RvcjMsYjpuZXcgVEhSRUUuVmVjdG9yMyxjOm5ldyBUSFJFRS5WZWN0b3IzfSxlLnB1c2goaCksZy5wdXNoKGspfWc9dGhpcy5tb3JwaE5vcm1hbHNbYV07Zi52ZXJ0aWNlcz10aGlzLm1vcnBoVGFyZ2V0c1thXS52ZXJ0aWNlcztmLmNvbXB1dGVGYWNlTm9ybWFscygpO2YuY29tcHV0ZVZlcnRleE5vcm1hbHMoKTtjPTA7Zm9yKGQ9dGhpcy5mYWNlcy5sZW5ndGg7YzxkO2MrKyllPXRoaXMuZmFjZXNbY10saD1nLmZhY2VOb3JtYWxzW2NdLGs9Zy52ZXJ0ZXhOb3JtYWxzW2NdLGguY29weShlLm5vcm1hbCksay5hLmNvcHkoZS52ZXJ0ZXhOb3JtYWxzWzBdKSxrLmIuY29weShlLnZlcnRleE5vcm1hbHNbMV0pLGsuYy5jb3B5KGUudmVydGV4Tm9ybWFsc1syXSl9Yz0wO2ZvcihkPXRoaXMuZmFjZXMubGVuZ3RoO2M8XG5kO2MrKyllPXRoaXMuZmFjZXNbY10sZS5ub3JtYWw9ZS5fX29yaWdpbmFsRmFjZU5vcm1hbCxlLnZlcnRleE5vcm1hbHM9ZS5fX29yaWdpbmFsVmVydGV4Tm9ybWFsc30sY29tcHV0ZVRhbmdlbnRzOmZ1bmN0aW9uKCl7dmFyIGEsYixjLGQsZSxmLGcsaCxrLGwscCxxLG4sdCxyLHMsdSx2PVtdLHg9W107Yz1uZXcgVEhSRUUuVmVjdG9yMzt2YXIgRD1uZXcgVEhSRUUuVmVjdG9yMyx3PW5ldyBUSFJFRS5WZWN0b3IzLHk9bmV3IFRIUkVFLlZlY3RvcjMsQT1uZXcgVEhSRUUuVmVjdG9yMzthPTA7Zm9yKGI9dGhpcy52ZXJ0aWNlcy5sZW5ndGg7YTxiO2ErKyl2W2FdPW5ldyBUSFJFRS5WZWN0b3IzLHhbYV09bmV3IFRIUkVFLlZlY3RvcjM7YT0wO2ZvcihiPXRoaXMuZmFjZXMubGVuZ3RoO2E8YjthKyspZT10aGlzLmZhY2VzW2FdLGY9dGhpcy5mYWNlVmVydGV4VXZzWzBdW2FdLGQ9ZS5hLHU9ZS5iLGU9ZS5jLGc9dGhpcy52ZXJ0aWNlc1tkXSxoPXRoaXMudmVydGljZXNbdV0saz10aGlzLnZlcnRpY2VzW2VdLFxubD1mWzBdLHA9ZlsxXSxxPWZbMl0sZj1oLngtZy54LG49ay54LWcueCx0PWgueS1nLnkscj1rLnktZy55LGg9aC56LWcueixnPWsuei1nLnosaz1wLngtbC54LHM9cS54LWwueCxwPXAueS1sLnksbD1xLnktbC55LHE9MS8oaypsLXMqcCksYy5zZXQoKGwqZi1wKm4pKnEsKGwqdC1wKnIpKnEsKGwqaC1wKmcpKnEpLEQuc2V0KChrKm4tcypmKSpxLChrKnItcyp0KSpxLChrKmctcypoKSpxKSx2W2RdLmFkZChjKSx2W3VdLmFkZChjKSx2W2VdLmFkZChjKSx4W2RdLmFkZChEKSx4W3VdLmFkZChEKSx4W2VdLmFkZChEKTtEPVtcImFcIixcImJcIixcImNcIixcImRcIl07YT0wO2ZvcihiPXRoaXMuZmFjZXMubGVuZ3RoO2E8YjthKyspZm9yKGU9dGhpcy5mYWNlc1thXSxjPTA7YzxNYXRoLm1pbihlLnZlcnRleE5vcm1hbHMubGVuZ3RoLDMpO2MrKylBLmNvcHkoZS52ZXJ0ZXhOb3JtYWxzW2NdKSxkPWVbRFtjXV0sdT12W2RdLHcuY29weSh1KSx3LnN1YihBLm11bHRpcGx5U2NhbGFyKEEuZG90KHUpKSkubm9ybWFsaXplKCksXG55LmNyb3NzVmVjdG9ycyhlLnZlcnRleE5vcm1hbHNbY10sdSksZD15LmRvdCh4W2RdKSxkPTA+ZD8tMToxLGUudmVydGV4VGFuZ2VudHNbY109bmV3IFRIUkVFLlZlY3RvcjQody54LHcueSx3LnosZCk7dGhpcy5oYXNUYW5nZW50cz0hMH0sY29tcHV0ZUxpbmVEaXN0YW5jZXM6ZnVuY3Rpb24oKXtmb3IodmFyIGE9MCxiPXRoaXMudmVydGljZXMsYz0wLGQ9Yi5sZW5ndGg7YzxkO2MrKykwPGMmJihhKz1iW2NdLmRpc3RhbmNlVG8oYltjLTFdKSksdGhpcy5saW5lRGlzdGFuY2VzW2NdPWF9LGNvbXB1dGVCb3VuZGluZ0JveDpmdW5jdGlvbigpe251bGw9PT10aGlzLmJvdW5kaW5nQm94JiYodGhpcy5ib3VuZGluZ0JveD1uZXcgVEhSRUUuQm94Myk7dGhpcy5ib3VuZGluZ0JveC5zZXRGcm9tUG9pbnRzKHRoaXMudmVydGljZXMpfSxjb21wdXRlQm91bmRpbmdTcGhlcmU6ZnVuY3Rpb24oKXtudWxsPT09dGhpcy5ib3VuZGluZ1NwaGVyZSYmKHRoaXMuYm91bmRpbmdTcGhlcmU9bmV3IFRIUkVFLlNwaGVyZSk7XG50aGlzLmJvdW5kaW5nU3BoZXJlLnNldEZyb21Qb2ludHModGhpcy52ZXJ0aWNlcyl9LG1lcmdlOmZ1bmN0aW9uKGEsYixjKXtpZighMT09PWEgaW5zdGFuY2VvZiBUSFJFRS5HZW9tZXRyeSlUSFJFRS5lcnJvcihcIlRIUkVFLkdlb21ldHJ5Lm1lcmdlKCk6IGdlb21ldHJ5IG5vdCBhbiBpbnN0YW5jZSBvZiBUSFJFRS5HZW9tZXRyeS5cIixhKTtlbHNle3ZhciBkLGU9dGhpcy52ZXJ0aWNlcy5sZW5ndGgsZj10aGlzLnZlcnRpY2VzLGc9YS52ZXJ0aWNlcyxoPXRoaXMuZmFjZXMsaz1hLmZhY2VzLGw9dGhpcy5mYWNlVmVydGV4VXZzWzBdO2E9YS5mYWNlVmVydGV4VXZzWzBdO3ZvaWQgMD09PWMmJihjPTApO3ZvaWQgMCE9PWImJihkPShuZXcgVEhSRUUuTWF0cml4MykuZ2V0Tm9ybWFsTWF0cml4KGIpKTtmb3IodmFyIHA9MCxxPWcubGVuZ3RoO3A8cTtwKyspe3ZhciBuPWdbcF0uY2xvbmUoKTt2b2lkIDAhPT1iJiZuLmFwcGx5TWF0cml4NChiKTtmLnB1c2gobil9cD0wO2ZvcihxPWsubGVuZ3RoO3A8XG5xO3ArKyl7dmFyIGc9a1twXSx0LHI9Zy52ZXJ0ZXhOb3JtYWxzLHM9Zy52ZXJ0ZXhDb2xvcnMsbj1uZXcgVEhSRUUuRmFjZTMoZy5hK2UsZy5iK2UsZy5jK2UpO24ubm9ybWFsLmNvcHkoZy5ub3JtYWwpO3ZvaWQgMCE9PWQmJm4ubm9ybWFsLmFwcGx5TWF0cml4MyhkKS5ub3JtYWxpemUoKTtiPTA7Zm9yKGY9ci5sZW5ndGg7YjxmO2IrKyl0PXJbYl0uY2xvbmUoKSx2b2lkIDAhPT1kJiZ0LmFwcGx5TWF0cml4MyhkKS5ub3JtYWxpemUoKSxuLnZlcnRleE5vcm1hbHMucHVzaCh0KTtuLmNvbG9yLmNvcHkoZy5jb2xvcik7Yj0wO2ZvcihmPXMubGVuZ3RoO2I8ZjtiKyspdD1zW2JdLG4udmVydGV4Q29sb3JzLnB1c2godC5jbG9uZSgpKTtuLm1hdGVyaWFsSW5kZXg9Zy5tYXRlcmlhbEluZGV4K2M7aC5wdXNoKG4pfXA9MDtmb3IocT1hLmxlbmd0aDtwPHE7cCsrKWlmKGM9YVtwXSxkPVtdLHZvaWQgMCE9PWMpe2I9MDtmb3IoZj1jLmxlbmd0aDtiPGY7YisrKWQucHVzaChjW2JdLmNsb25lKCkpO1xubC5wdXNoKGQpfX19LG1lcmdlTWVzaDpmdW5jdGlvbihhKXshMT09PWEgaW5zdGFuY2VvZiBUSFJFRS5NZXNoP1RIUkVFLmVycm9yKFwiVEhSRUUuR2VvbWV0cnkubWVyZ2VNZXNoKCk6IG1lc2ggbm90IGFuIGluc3RhbmNlIG9mIFRIUkVFLk1lc2guXCIsYSk6KGEubWF0cml4QXV0b1VwZGF0ZSYmYS51cGRhdGVNYXRyaXgoKSx0aGlzLm1lcmdlKGEuZ2VvbWV0cnksYS5tYXRyaXgpKX0sbWVyZ2VWZXJ0aWNlczpmdW5jdGlvbigpe3ZhciBhPXt9LGI9W10sYz1bXSxkLGU9TWF0aC5wb3coMTAsNCksZixnO2Y9MDtmb3IoZz10aGlzLnZlcnRpY2VzLmxlbmd0aDtmPGc7ZisrKWQ9dGhpcy52ZXJ0aWNlc1tmXSxkPU1hdGgucm91bmQoZC54KmUpK1wiX1wiK01hdGgucm91bmQoZC55KmUpK1wiX1wiK01hdGgucm91bmQoZC56KmUpLHZvaWQgMD09PWFbZF0/KGFbZF09ZixiLnB1c2godGhpcy52ZXJ0aWNlc1tmXSksY1tmXT1iLmxlbmd0aC0xKTpjW2ZdPWNbYVtkXV07YT1bXTtmPTA7Zm9yKGc9dGhpcy5mYWNlcy5sZW5ndGg7Zjxcbmc7ZisrKWZvcihlPXRoaXMuZmFjZXNbZl0sZS5hPWNbZS5hXSxlLmI9Y1tlLmJdLGUuYz1jW2UuY10sZT1bZS5hLGUuYixlLmNdLGQ9MDszPmQ7ZCsrKWlmKGVbZF09PWVbKGQrMSklM10pe2EucHVzaChmKTticmVha31mb3IoZj1hLmxlbmd0aC0xOzA8PWY7Zi0tKWZvcihlPWFbZl0sdGhpcy5mYWNlcy5zcGxpY2UoZSwxKSxjPTAsZz10aGlzLmZhY2VWZXJ0ZXhVdnMubGVuZ3RoO2M8ZztjKyspdGhpcy5mYWNlVmVydGV4VXZzW2NdLnNwbGljZShlLDEpO2Y9dGhpcy52ZXJ0aWNlcy5sZW5ndGgtYi5sZW5ndGg7dGhpcy52ZXJ0aWNlcz1iO3JldHVybiBmfSx0b0pTT046ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYixjKXtyZXR1cm4gYz9hfDE8PGI6YSZ+KDE8PGIpfWZ1bmN0aW9uIGIoYSl7dmFyIGI9YS54LnRvU3RyaW5nKCkrYS55LnRvU3RyaW5nKCkrYS56LnRvU3RyaW5nKCk7aWYodm9pZCAwIT09bFtiXSlyZXR1cm4gbFtiXTtsW2JdPWsubGVuZ3RoLzM7ay5wdXNoKGEueCxhLnksXG5hLnopO3JldHVybiBsW2JdfWZ1bmN0aW9uIGMoYSl7dmFyIGI9YS5yLnRvU3RyaW5nKCkrYS5nLnRvU3RyaW5nKCkrYS5iLnRvU3RyaW5nKCk7aWYodm9pZCAwIT09cVtiXSlyZXR1cm4gcVtiXTtxW2JdPXAubGVuZ3RoO3AucHVzaChhLmdldEhleCgpKTtyZXR1cm4gcVtiXX1mdW5jdGlvbiBkKGEpe3ZhciBiPWEueC50b1N0cmluZygpK2EueS50b1N0cmluZygpO2lmKHZvaWQgMCE9PXRbYl0pcmV0dXJuIHRbYl07dFtiXT1uLmxlbmd0aC8yO24ucHVzaChhLngsYS55KTtyZXR1cm4gdFtiXX12YXIgZT17bWV0YWRhdGE6e3ZlcnNpb246NCx0eXBlOlwiQnVmZmVyR2VvbWV0cnlcIixnZW5lcmF0b3I6XCJCdWZmZXJHZW9tZXRyeUV4cG9ydGVyXCJ9LHV1aWQ6dGhpcy51dWlkLHR5cGU6dGhpcy50eXBlfTtcIlwiIT09dGhpcy5uYW1lJiYoZS5uYW1lPXRoaXMubmFtZSk7aWYodm9pZCAwIT09dGhpcy5wYXJhbWV0ZXJzKXt2YXIgZj10aGlzLnBhcmFtZXRlcnMsZztmb3IoZyBpbiBmKXZvaWQgMCE9PVxuZltnXSYmKGVbZ109ZltnXSk7cmV0dXJuIGV9Zj1bXTtmb3IoZz0wO2c8dGhpcy52ZXJ0aWNlcy5sZW5ndGg7ZysrKXt2YXIgaD10aGlzLnZlcnRpY2VzW2ddO2YucHVzaChoLngsaC55LGgueil9dmFyIGg9W10saz1bXSxsPXt9LHA9W10scT17fSxuPVtdLHQ9e307Zm9yKGc9MDtnPHRoaXMuZmFjZXMubGVuZ3RoO2crKyl7dmFyIHI9dGhpcy5mYWNlc1tnXSxzPXZvaWQgMCE9PXRoaXMuZmFjZVZlcnRleFV2c1swXVtnXSx1PTA8ci5ub3JtYWwubGVuZ3RoKCksdj0wPHIudmVydGV4Tm9ybWFscy5sZW5ndGgseD0xIT09ci5jb2xvci5yfHwxIT09ci5jb2xvci5nfHwxIT09ci5jb2xvci5iLEQ9MDxyLnZlcnRleENvbG9ycy5sZW5ndGgsdz0wLHc9YSh3LDAsMCksdz1hKHcsMSwhMSksdz1hKHcsMiwhMSksdz1hKHcsMyxzKSx3PWEodyw0LHUpLHc9YSh3LDUsdiksdz1hKHcsNix4KSx3PWEodyw3LEQpO2gucHVzaCh3KTtoLnB1c2goci5hLHIuYixyLmMpO3MmJihzPXRoaXMuZmFjZVZlcnRleFV2c1swXVtnXSxcbmgucHVzaChkKHNbMF0pLGQoc1sxXSksZChzWzJdKSkpO3UmJmgucHVzaChiKHIubm9ybWFsKSk7diYmKHU9ci52ZXJ0ZXhOb3JtYWxzLGgucHVzaChiKHVbMF0pLGIodVsxXSksYih1WzJdKSkpO3gmJmgucHVzaChjKHIuY29sb3IpKTtEJiYocj1yLnZlcnRleENvbG9ycyxoLnB1c2goYyhyWzBdKSxjKHJbMV0pLGMoclsyXSkpKX1lLmRhdGE9e307ZS5kYXRhLnZlcnRpY2VzPWY7ZS5kYXRhLm5vcm1hbHM9azswPHAubGVuZ3RoJiYoZS5kYXRhLmNvbG9ycz1wKTswPG4ubGVuZ3RoJiYoZS5kYXRhLnV2cz1bbl0pO2UuZGF0YS5mYWNlcz1oO3JldHVybiBlfSxjbG9uZTpmdW5jdGlvbigpe2Zvcih2YXIgYT1uZXcgVEhSRUUuR2VvbWV0cnksYj10aGlzLnZlcnRpY2VzLGM9MCxkPWIubGVuZ3RoO2M8ZDtjKyspYS52ZXJ0aWNlcy5wdXNoKGJbY10uY2xvbmUoKSk7Yj10aGlzLmZhY2VzO2M9MDtmb3IoZD1iLmxlbmd0aDtjPGQ7YysrKWEuZmFjZXMucHVzaChiW2NdLmNsb25lKCkpO2M9MDtcbmZvcihkPXRoaXMuZmFjZVZlcnRleFV2cy5sZW5ndGg7YzxkO2MrKyl7Yj10aGlzLmZhY2VWZXJ0ZXhVdnNbY107dm9pZCAwPT09YS5mYWNlVmVydGV4VXZzW2NdJiYoYS5mYWNlVmVydGV4VXZzW2NdPVtdKTtmb3IodmFyIGU9MCxmPWIubGVuZ3RoO2U8ZjtlKyspe2Zvcih2YXIgZz1iW2VdLGg9W10saz0wLGw9Zy5sZW5ndGg7azxsO2srKyloLnB1c2goZ1trXS5jbG9uZSgpKTthLmZhY2VWZXJ0ZXhVdnNbY10ucHVzaChoKX19cmV0dXJuIGF9LGRpc3Bvc2U6ZnVuY3Rpb24oKXt0aGlzLmRpc3BhdGNoRXZlbnQoe3R5cGU6XCJkaXNwb3NlXCJ9KX19O1RIUkVFLkV2ZW50RGlzcGF0Y2hlci5wcm90b3R5cGUuYXBwbHkoVEhSRUUuR2VvbWV0cnkucHJvdG90eXBlKTtUSFJFRS5HZW9tZXRyeUlkQ291bnQ9MDtcblRIUkVFLkNhbWVyYT1mdW5jdGlvbigpe1RIUkVFLk9iamVjdDNELmNhbGwodGhpcyk7dGhpcy50eXBlPVwiQ2FtZXJhXCI7dGhpcy5tYXRyaXhXb3JsZEludmVyc2U9bmV3IFRIUkVFLk1hdHJpeDQ7dGhpcy5wcm9qZWN0aW9uTWF0cml4PW5ldyBUSFJFRS5NYXRyaXg0fTtUSFJFRS5DYW1lcmEucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuT2JqZWN0M0QucHJvdG90eXBlKTtUSFJFRS5DYW1lcmEucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkNhbWVyYTtUSFJFRS5DYW1lcmEucHJvdG90eXBlLmdldFdvcmxkRGlyZWN0aW9uPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlF1YXRlcm5pb247cmV0dXJuIGZ1bmN0aW9uKGIpe2I9Ynx8bmV3IFRIUkVFLlZlY3RvcjM7dGhpcy5nZXRXb3JsZFF1YXRlcm5pb24oYSk7cmV0dXJuIGIuc2V0KDAsMCwtMSkuYXBwbHlRdWF0ZXJuaW9uKGEpfX0oKTtcblRIUkVFLkNhbWVyYS5wcm90b3R5cGUubG9va0F0PWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLk1hdHJpeDQ7cmV0dXJuIGZ1bmN0aW9uKGIpe2EubG9va0F0KHRoaXMucG9zaXRpb24sYix0aGlzLnVwKTt0aGlzLnF1YXRlcm5pb24uc2V0RnJvbVJvdGF0aW9uTWF0cml4KGEpfX0oKTtUSFJFRS5DYW1lcmEucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGEpe3ZvaWQgMD09PWEmJihhPW5ldyBUSFJFRS5DYW1lcmEpO1RIUkVFLk9iamVjdDNELnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsYSk7YS5tYXRyaXhXb3JsZEludmVyc2UuY29weSh0aGlzLm1hdHJpeFdvcmxkSW52ZXJzZSk7YS5wcm9qZWN0aW9uTWF0cml4LmNvcHkodGhpcy5wcm9qZWN0aW9uTWF0cml4KTtyZXR1cm4gYX07XG5USFJFRS5DdWJlQ2FtZXJhPWZ1bmN0aW9uKGEsYixjKXtUSFJFRS5PYmplY3QzRC5jYWxsKHRoaXMpO3RoaXMudHlwZT1cIkN1YmVDYW1lcmFcIjt2YXIgZD1uZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoOTAsMSxhLGIpO2QudXAuc2V0KDAsLTEsMCk7ZC5sb29rQXQobmV3IFRIUkVFLlZlY3RvcjMoMSwwLDApKTt0aGlzLmFkZChkKTt2YXIgZT1uZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoOTAsMSxhLGIpO2UudXAuc2V0KDAsLTEsMCk7ZS5sb29rQXQobmV3IFRIUkVFLlZlY3RvcjMoLTEsMCwwKSk7dGhpcy5hZGQoZSk7dmFyIGY9bmV3IFRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhKDkwLDEsYSxiKTtmLnVwLnNldCgwLDAsMSk7Zi5sb29rQXQobmV3IFRIUkVFLlZlY3RvcjMoMCwxLDApKTt0aGlzLmFkZChmKTt2YXIgZz1uZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoOTAsMSxhLGIpO2cudXAuc2V0KDAsMCwtMSk7Zy5sb29rQXQobmV3IFRIUkVFLlZlY3RvcjMoMCwtMSwwKSk7XG50aGlzLmFkZChnKTt2YXIgaD1uZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoOTAsMSxhLGIpO2gudXAuc2V0KDAsLTEsMCk7aC5sb29rQXQobmV3IFRIUkVFLlZlY3RvcjMoMCwwLDEpKTt0aGlzLmFkZChoKTt2YXIgaz1uZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoOTAsMSxhLGIpO2sudXAuc2V0KDAsLTEsMCk7ay5sb29rQXQobmV3IFRIUkVFLlZlY3RvcjMoMCwwLC0xKSk7dGhpcy5hZGQoayk7dGhpcy5yZW5kZXJUYXJnZXQ9bmV3IFRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0Q3ViZShjLGMse2Zvcm1hdDpUSFJFRS5SR0JGb3JtYXQsbWFnRmlsdGVyOlRIUkVFLkxpbmVhckZpbHRlcixtaW5GaWx0ZXI6VEhSRUUuTGluZWFyRmlsdGVyfSk7dGhpcy51cGRhdGVDdWJlTWFwPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5yZW5kZXJUYXJnZXQsbj1jLmdlbmVyYXRlTWlwbWFwcztjLmdlbmVyYXRlTWlwbWFwcz0hMTtjLmFjdGl2ZUN1YmVGYWNlPTA7YS5yZW5kZXIoYixkLGMpO2MuYWN0aXZlQ3ViZUZhY2U9XG4xO2EucmVuZGVyKGIsZSxjKTtjLmFjdGl2ZUN1YmVGYWNlPTI7YS5yZW5kZXIoYixmLGMpO2MuYWN0aXZlQ3ViZUZhY2U9MzthLnJlbmRlcihiLGcsYyk7Yy5hY3RpdmVDdWJlRmFjZT00O2EucmVuZGVyKGIsaCxjKTtjLmdlbmVyYXRlTWlwbWFwcz1uO2MuYWN0aXZlQ3ViZUZhY2U9NTthLnJlbmRlcihiLGssYyl9fTtUSFJFRS5DdWJlQ2FtZXJhLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk9iamVjdDNELnByb3RvdHlwZSk7VEhSRUUuQ3ViZUNhbWVyYS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuQ3ViZUNhbWVyYTtcblRIUkVFLk9ydGhvZ3JhcGhpY0NhbWVyYT1mdW5jdGlvbihhLGIsYyxkLGUsZil7VEhSRUUuQ2FtZXJhLmNhbGwodGhpcyk7dGhpcy50eXBlPVwiT3J0aG9ncmFwaGljQ2FtZXJhXCI7dGhpcy56b29tPTE7dGhpcy5sZWZ0PWE7dGhpcy5yaWdodD1iO3RoaXMudG9wPWM7dGhpcy5ib3R0b209ZDt0aGlzLm5lYXI9dm9pZCAwIT09ZT9lOi4xO3RoaXMuZmFyPXZvaWQgMCE9PWY/ZjoyRTM7dGhpcy51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCl9O1RIUkVFLk9ydGhvZ3JhcGhpY0NhbWVyYS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5DYW1lcmEucHJvdG90eXBlKTtUSFJFRS5PcnRob2dyYXBoaWNDYW1lcmEucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLk9ydGhvZ3JhcGhpY0NhbWVyYTtcblRIUkVFLk9ydGhvZ3JhcGhpY0NhbWVyYS5wcm90b3R5cGUudXBkYXRlUHJvamVjdGlvbk1hdHJpeD1mdW5jdGlvbigpe3ZhciBhPSh0aGlzLnJpZ2h0LXRoaXMubGVmdCkvKDIqdGhpcy56b29tKSxiPSh0aGlzLnRvcC10aGlzLmJvdHRvbSkvKDIqdGhpcy56b29tKSxjPSh0aGlzLnJpZ2h0K3RoaXMubGVmdCkvMixkPSh0aGlzLnRvcCt0aGlzLmJvdHRvbSkvMjt0aGlzLnByb2plY3Rpb25NYXRyaXgubWFrZU9ydGhvZ3JhcGhpYyhjLWEsYythLGQrYixkLWIsdGhpcy5uZWFyLHRoaXMuZmFyKX07XG5USFJFRS5PcnRob2dyYXBoaWNDYW1lcmEucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLk9ydGhvZ3JhcGhpY0NhbWVyYTtUSFJFRS5DYW1lcmEucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyxhKTthLnpvb209dGhpcy56b29tO2EubGVmdD10aGlzLmxlZnQ7YS5yaWdodD10aGlzLnJpZ2h0O2EudG9wPXRoaXMudG9wO2EuYm90dG9tPXRoaXMuYm90dG9tO2EubmVhcj10aGlzLm5lYXI7YS5mYXI9dGhpcy5mYXI7YS5wcm9qZWN0aW9uTWF0cml4LmNvcHkodGhpcy5wcm9qZWN0aW9uTWF0cml4KTtyZXR1cm4gYX07XG5USFJFRS5QZXJzcGVjdGl2ZUNhbWVyYT1mdW5jdGlvbihhLGIsYyxkKXtUSFJFRS5DYW1lcmEuY2FsbCh0aGlzKTt0aGlzLnR5cGU9XCJQZXJzcGVjdGl2ZUNhbWVyYVwiO3RoaXMuem9vbT0xO3RoaXMuZm92PXZvaWQgMCE9PWE/YTo1MDt0aGlzLmFzcGVjdD12b2lkIDAhPT1iP2I6MTt0aGlzLm5lYXI9dm9pZCAwIT09Yz9jOi4xO3RoaXMuZmFyPXZvaWQgMCE9PWQ/ZDoyRTM7dGhpcy51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCl9O1RIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkNhbWVyYS5wcm90b3R5cGUpO1RIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5QZXJzcGVjdGl2ZUNhbWVyYTtcblRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhLnByb3RvdHlwZS5zZXRMZW5zPWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9MjQpO3RoaXMuZm92PTIqVEhSRUUuTWF0aC5yYWRUb0RlZyhNYXRoLmF0YW4oYi8oMiphKSkpO3RoaXMudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpfTtUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYS5wcm90b3R5cGUuc2V0Vmlld09mZnNldD1mdW5jdGlvbihhLGIsYyxkLGUsZil7dGhpcy5mdWxsV2lkdGg9YTt0aGlzLmZ1bGxIZWlnaHQ9Yjt0aGlzLng9Yzt0aGlzLnk9ZDt0aGlzLndpZHRoPWU7dGhpcy5oZWlnaHQ9Zjt0aGlzLnVwZGF0ZVByb2plY3Rpb25NYXRyaXgoKX07XG5USFJFRS5QZXJzcGVjdGl2ZUNhbWVyYS5wcm90b3R5cGUudXBkYXRlUHJvamVjdGlvbk1hdHJpeD1mdW5jdGlvbigpe3ZhciBhPVRIUkVFLk1hdGgucmFkVG9EZWcoMipNYXRoLmF0YW4oTWF0aC50YW4oLjUqVEhSRUUuTWF0aC5kZWdUb1JhZCh0aGlzLmZvdikpL3RoaXMuem9vbSkpO2lmKHRoaXMuZnVsbFdpZHRoKXt2YXIgYj10aGlzLmZ1bGxXaWR0aC90aGlzLmZ1bGxIZWlnaHQsYT1NYXRoLnRhbihUSFJFRS5NYXRoLmRlZ1RvUmFkKC41KmEpKSp0aGlzLm5lYXIsYz0tYSxkPWIqYyxiPU1hdGguYWJzKGIqYS1kKSxjPU1hdGguYWJzKGEtYyk7dGhpcy5wcm9qZWN0aW9uTWF0cml4Lm1ha2VGcnVzdHVtKGQrdGhpcy54KmIvdGhpcy5mdWxsV2lkdGgsZCsodGhpcy54K3RoaXMud2lkdGgpKmIvdGhpcy5mdWxsV2lkdGgsYS0odGhpcy55K3RoaXMuaGVpZ2h0KSpjL3RoaXMuZnVsbEhlaWdodCxhLXRoaXMueSpjL3RoaXMuZnVsbEhlaWdodCx0aGlzLm5lYXIsdGhpcy5mYXIpfWVsc2UgdGhpcy5wcm9qZWN0aW9uTWF0cml4Lm1ha2VQZXJzcGVjdGl2ZShhLFxudGhpcy5hc3BlY3QsdGhpcy5uZWFyLHRoaXMuZmFyKX07VEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhO1RIUkVFLkNhbWVyYS5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzLGEpO2Euem9vbT10aGlzLnpvb207YS5mb3Y9dGhpcy5mb3Y7YS5hc3BlY3Q9dGhpcy5hc3BlY3Q7YS5uZWFyPXRoaXMubmVhcjthLmZhcj10aGlzLmZhcjthLnByb2plY3Rpb25NYXRyaXguY29weSh0aGlzLnByb2plY3Rpb25NYXRyaXgpO3JldHVybiBhfTtUSFJFRS5MaWdodD1mdW5jdGlvbihhKXtUSFJFRS5PYmplY3QzRC5jYWxsKHRoaXMpO3RoaXMudHlwZT1cIkxpZ2h0XCI7dGhpcy5jb2xvcj1uZXcgVEhSRUUuQ29sb3IoYSl9O1RIUkVFLkxpZ2h0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk9iamVjdDNELnByb3RvdHlwZSk7VEhSRUUuTGlnaHQucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkxpZ2h0O1xuVEhSRUUuTGlnaHQucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGEpe3ZvaWQgMD09PWEmJihhPW5ldyBUSFJFRS5MaWdodCk7VEhSRUUuT2JqZWN0M0QucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyxhKTthLmNvbG9yLmNvcHkodGhpcy5jb2xvcik7cmV0dXJuIGF9O1RIUkVFLkFtYmllbnRMaWdodD1mdW5jdGlvbihhKXtUSFJFRS5MaWdodC5jYWxsKHRoaXMsYSk7dGhpcy50eXBlPVwiQW1iaWVudExpZ2h0XCJ9O1RIUkVFLkFtYmllbnRMaWdodC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5MaWdodC5wcm90b3R5cGUpO1RIUkVFLkFtYmllbnRMaWdodC5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuQW1iaWVudExpZ2h0O1RIUkVFLkFtYmllbnRMaWdodC5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuQW1iaWVudExpZ2h0O1RIUkVFLkxpZ2h0LnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsYSk7cmV0dXJuIGF9O1xuVEhSRUUuQXJlYUxpZ2h0PWZ1bmN0aW9uKGEsYil7VEhSRUUuTGlnaHQuY2FsbCh0aGlzLGEpO3RoaXMudHlwZT1cIkFyZWFMaWdodFwiO3RoaXMubm9ybWFsPW5ldyBUSFJFRS5WZWN0b3IzKDAsLTEsMCk7dGhpcy5yaWdodD1uZXcgVEhSRUUuVmVjdG9yMygxLDAsMCk7dGhpcy5pbnRlbnNpdHk9dm9pZCAwIT09Yj9iOjE7dGhpcy5oZWlnaHQ9dGhpcy53aWR0aD0xO3RoaXMuY29uc3RhbnRBdHRlbnVhdGlvbj0xLjU7dGhpcy5saW5lYXJBdHRlbnVhdGlvbj0uNTt0aGlzLnF1YWRyYXRpY0F0dGVudWF0aW9uPS4xfTtUSFJFRS5BcmVhTGlnaHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuTGlnaHQucHJvdG90eXBlKTtUSFJFRS5BcmVhTGlnaHQucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkFyZWFMaWdodDtcblRIUkVFLkRpcmVjdGlvbmFsTGlnaHQ9ZnVuY3Rpb24oYSxiKXtUSFJFRS5MaWdodC5jYWxsKHRoaXMsYSk7dGhpcy50eXBlPVwiRGlyZWN0aW9uYWxMaWdodFwiO3RoaXMucG9zaXRpb24uc2V0KDAsMSwwKTt0aGlzLnRhcmdldD1uZXcgVEhSRUUuT2JqZWN0M0Q7dGhpcy5pbnRlbnNpdHk9dm9pZCAwIT09Yj9iOjE7dGhpcy5vbmx5U2hhZG93PXRoaXMuY2FzdFNoYWRvdz0hMTt0aGlzLnNoYWRvd0NhbWVyYU5lYXI9NTA7dGhpcy5zaGFkb3dDYW1lcmFGYXI9NUUzO3RoaXMuc2hhZG93Q2FtZXJhTGVmdD0tNTAwO3RoaXMuc2hhZG93Q2FtZXJhVG9wPXRoaXMuc2hhZG93Q2FtZXJhUmlnaHQ9NTAwO3RoaXMuc2hhZG93Q2FtZXJhQm90dG9tPS01MDA7dGhpcy5zaGFkb3dDYW1lcmFWaXNpYmxlPSExO3RoaXMuc2hhZG93Qmlhcz0wO3RoaXMuc2hhZG93RGFya25lc3M9LjU7dGhpcy5zaGFkb3dNYXBIZWlnaHQ9dGhpcy5zaGFkb3dNYXBXaWR0aD01MTI7dGhpcy5zaGFkb3dDYXNjYWRlPSExO1xudGhpcy5zaGFkb3dDYXNjYWRlT2Zmc2V0PW5ldyBUSFJFRS5WZWN0b3IzKDAsMCwtMUUzKTt0aGlzLnNoYWRvd0Nhc2NhZGVDb3VudD0yO3RoaXMuc2hhZG93Q2FzY2FkZUJpYXM9WzAsMCwwXTt0aGlzLnNoYWRvd0Nhc2NhZGVXaWR0aD1bNTEyLDUxMiw1MTJdO3RoaXMuc2hhZG93Q2FzY2FkZUhlaWdodD1bNTEyLDUxMiw1MTJdO3RoaXMuc2hhZG93Q2FzY2FkZU5lYXJaPVstMSwuOTksLjk5OF07dGhpcy5zaGFkb3dDYXNjYWRlRmFyWj1bLjk5LC45OTgsMV07dGhpcy5zaGFkb3dDYXNjYWRlQXJyYXk9W107dGhpcy5zaGFkb3dNYXRyaXg9dGhpcy5zaGFkb3dDYW1lcmE9dGhpcy5zaGFkb3dNYXBTaXplPXRoaXMuc2hhZG93TWFwPW51bGx9O1RIUkVFLkRpcmVjdGlvbmFsTGlnaHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuTGlnaHQucHJvdG90eXBlKTtUSFJFRS5EaXJlY3Rpb25hbExpZ2h0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5EaXJlY3Rpb25hbExpZ2h0O1xuVEhSRUUuRGlyZWN0aW9uYWxMaWdodC5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuRGlyZWN0aW9uYWxMaWdodDtUSFJFRS5MaWdodC5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzLGEpO2EudGFyZ2V0PXRoaXMudGFyZ2V0LmNsb25lKCk7YS5pbnRlbnNpdHk9dGhpcy5pbnRlbnNpdHk7YS5jYXN0U2hhZG93PXRoaXMuY2FzdFNoYWRvdzthLm9ubHlTaGFkb3c9dGhpcy5vbmx5U2hhZG93O2Euc2hhZG93Q2FtZXJhTmVhcj10aGlzLnNoYWRvd0NhbWVyYU5lYXI7YS5zaGFkb3dDYW1lcmFGYXI9dGhpcy5zaGFkb3dDYW1lcmFGYXI7YS5zaGFkb3dDYW1lcmFMZWZ0PXRoaXMuc2hhZG93Q2FtZXJhTGVmdDthLnNoYWRvd0NhbWVyYVJpZ2h0PXRoaXMuc2hhZG93Q2FtZXJhUmlnaHQ7YS5zaGFkb3dDYW1lcmFUb3A9dGhpcy5zaGFkb3dDYW1lcmFUb3A7YS5zaGFkb3dDYW1lcmFCb3R0b209dGhpcy5zaGFkb3dDYW1lcmFCb3R0b207YS5zaGFkb3dDYW1lcmFWaXNpYmxlPVxudGhpcy5zaGFkb3dDYW1lcmFWaXNpYmxlO2Euc2hhZG93Qmlhcz10aGlzLnNoYWRvd0JpYXM7YS5zaGFkb3dEYXJrbmVzcz10aGlzLnNoYWRvd0RhcmtuZXNzO2Euc2hhZG93TWFwV2lkdGg9dGhpcy5zaGFkb3dNYXBXaWR0aDthLnNoYWRvd01hcEhlaWdodD10aGlzLnNoYWRvd01hcEhlaWdodDthLnNoYWRvd0Nhc2NhZGU9dGhpcy5zaGFkb3dDYXNjYWRlO2Euc2hhZG93Q2FzY2FkZU9mZnNldC5jb3B5KHRoaXMuc2hhZG93Q2FzY2FkZU9mZnNldCk7YS5zaGFkb3dDYXNjYWRlQ291bnQ9dGhpcy5zaGFkb3dDYXNjYWRlQ291bnQ7YS5zaGFkb3dDYXNjYWRlQmlhcz10aGlzLnNoYWRvd0Nhc2NhZGVCaWFzLnNsaWNlKDApO2Euc2hhZG93Q2FzY2FkZVdpZHRoPXRoaXMuc2hhZG93Q2FzY2FkZVdpZHRoLnNsaWNlKDApO2Euc2hhZG93Q2FzY2FkZUhlaWdodD10aGlzLnNoYWRvd0Nhc2NhZGVIZWlnaHQuc2xpY2UoMCk7YS5zaGFkb3dDYXNjYWRlTmVhclo9dGhpcy5zaGFkb3dDYXNjYWRlTmVhclouc2xpY2UoMCk7XG5hLnNoYWRvd0Nhc2NhZGVGYXJaPXRoaXMuc2hhZG93Q2FzY2FkZUZhclouc2xpY2UoMCk7cmV0dXJuIGF9O1RIUkVFLkhlbWlzcGhlcmVMaWdodD1mdW5jdGlvbihhLGIsYyl7VEhSRUUuTGlnaHQuY2FsbCh0aGlzLGEpO3RoaXMudHlwZT1cIkhlbWlzcGhlcmVMaWdodFwiO3RoaXMucG9zaXRpb24uc2V0KDAsMTAwLDApO3RoaXMuZ3JvdW5kQ29sb3I9bmV3IFRIUkVFLkNvbG9yKGIpO3RoaXMuaW50ZW5zaXR5PXZvaWQgMCE9PWM/YzoxfTtUSFJFRS5IZW1pc3BoZXJlTGlnaHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuTGlnaHQucHJvdG90eXBlKTtUSFJFRS5IZW1pc3BoZXJlTGlnaHQucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkhlbWlzcGhlcmVMaWdodDtcblRIUkVFLkhlbWlzcGhlcmVMaWdodC5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuSGVtaXNwaGVyZUxpZ2h0O1RIUkVFLkxpZ2h0LnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsYSk7YS5ncm91bmRDb2xvci5jb3B5KHRoaXMuZ3JvdW5kQ29sb3IpO2EuaW50ZW5zaXR5PXRoaXMuaW50ZW5zaXR5O3JldHVybiBhfTtUSFJFRS5Qb2ludExpZ2h0PWZ1bmN0aW9uKGEsYixjLGQpe1RIUkVFLkxpZ2h0LmNhbGwodGhpcyxhKTt0aGlzLnR5cGU9XCJQb2ludExpZ2h0XCI7dGhpcy5pbnRlbnNpdHk9dm9pZCAwIT09Yj9iOjE7dGhpcy5kaXN0YW5jZT12b2lkIDAhPT1jP2M6MDt0aGlzLmRlY2F5PXZvaWQgMCE9PWQ/ZDoxfTtUSFJFRS5Qb2ludExpZ2h0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkxpZ2h0LnByb3RvdHlwZSk7VEhSRUUuUG9pbnRMaWdodC5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuUG9pbnRMaWdodDtcblRIUkVFLlBvaW50TGlnaHQucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlBvaW50TGlnaHQ7VEhSRUUuTGlnaHQucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyxhKTthLmludGVuc2l0eT10aGlzLmludGVuc2l0eTthLmRpc3RhbmNlPXRoaXMuZGlzdGFuY2U7YS5kZWNheT10aGlzLmRlY2F5O3JldHVybiBhfTtcblRIUkVFLlNwb3RMaWdodD1mdW5jdGlvbihhLGIsYyxkLGUsZil7VEhSRUUuTGlnaHQuY2FsbCh0aGlzLGEpO3RoaXMudHlwZT1cIlNwb3RMaWdodFwiO3RoaXMucG9zaXRpb24uc2V0KDAsMSwwKTt0aGlzLnRhcmdldD1uZXcgVEhSRUUuT2JqZWN0M0Q7dGhpcy5pbnRlbnNpdHk9dm9pZCAwIT09Yj9iOjE7dGhpcy5kaXN0YW5jZT12b2lkIDAhPT1jP2M6MDt0aGlzLmFuZ2xlPXZvaWQgMCE9PWQ/ZDpNYXRoLlBJLzM7dGhpcy5leHBvbmVudD12b2lkIDAhPT1lP2U6MTA7dGhpcy5kZWNheT12b2lkIDAhPT1mP2Y6MTt0aGlzLm9ubHlTaGFkb3c9dGhpcy5jYXN0U2hhZG93PSExO3RoaXMuc2hhZG93Q2FtZXJhTmVhcj01MDt0aGlzLnNoYWRvd0NhbWVyYUZhcj01RTM7dGhpcy5zaGFkb3dDYW1lcmFGb3Y9NTA7dGhpcy5zaGFkb3dDYW1lcmFWaXNpYmxlPSExO3RoaXMuc2hhZG93Qmlhcz0wO3RoaXMuc2hhZG93RGFya25lc3M9LjU7dGhpcy5zaGFkb3dNYXBIZWlnaHQ9dGhpcy5zaGFkb3dNYXBXaWR0aD1cbjUxMjt0aGlzLnNoYWRvd01hdHJpeD10aGlzLnNoYWRvd0NhbWVyYT10aGlzLnNoYWRvd01hcFNpemU9dGhpcy5zaGFkb3dNYXA9bnVsbH07VEhSRUUuU3BvdExpZ2h0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkxpZ2h0LnByb3RvdHlwZSk7VEhSRUUuU3BvdExpZ2h0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5TcG90TGlnaHQ7XG5USFJFRS5TcG90TGlnaHQucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlNwb3RMaWdodDtUSFJFRS5MaWdodC5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzLGEpO2EudGFyZ2V0PXRoaXMudGFyZ2V0LmNsb25lKCk7YS5pbnRlbnNpdHk9dGhpcy5pbnRlbnNpdHk7YS5kaXN0YW5jZT10aGlzLmRpc3RhbmNlO2EuYW5nbGU9dGhpcy5hbmdsZTthLmV4cG9uZW50PXRoaXMuZXhwb25lbnQ7YS5kZWNheT10aGlzLmRlY2F5O2EuY2FzdFNoYWRvdz10aGlzLmNhc3RTaGFkb3c7YS5vbmx5U2hhZG93PXRoaXMub25seVNoYWRvdzthLnNoYWRvd0NhbWVyYU5lYXI9dGhpcy5zaGFkb3dDYW1lcmFOZWFyO2Euc2hhZG93Q2FtZXJhRmFyPXRoaXMuc2hhZG93Q2FtZXJhRmFyO2Euc2hhZG93Q2FtZXJhRm92PXRoaXMuc2hhZG93Q2FtZXJhRm92O2Euc2hhZG93Q2FtZXJhVmlzaWJsZT10aGlzLnNoYWRvd0NhbWVyYVZpc2libGU7YS5zaGFkb3dCaWFzPXRoaXMuc2hhZG93QmlhcztcbmEuc2hhZG93RGFya25lc3M9dGhpcy5zaGFkb3dEYXJrbmVzczthLnNoYWRvd01hcFdpZHRoPXRoaXMuc2hhZG93TWFwV2lkdGg7YS5zaGFkb3dNYXBIZWlnaHQ9dGhpcy5zaGFkb3dNYXBIZWlnaHQ7cmV0dXJuIGF9O1RIUkVFLkNhY2hlPXtmaWxlczp7fSxhZGQ6ZnVuY3Rpb24oYSxiKXt0aGlzLmZpbGVzW2FdPWJ9LGdldDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5maWxlc1thXX0scmVtb3ZlOmZ1bmN0aW9uKGEpe2RlbGV0ZSB0aGlzLmZpbGVzW2FdfSxjbGVhcjpmdW5jdGlvbigpe3RoaXMuZmlsZXM9e319fTtcblRIUkVFLkxvYWRlcj1mdW5jdGlvbihhKXt0aGlzLnN0YXR1c0RvbUVsZW1lbnQ9KHRoaXMuc2hvd1N0YXR1cz1hKT9USFJFRS5Mb2FkZXIucHJvdG90eXBlLmFkZFN0YXR1c0VsZW1lbnQoKTpudWxsO3RoaXMuaW1hZ2VMb2FkZXI9bmV3IFRIUkVFLkltYWdlTG9hZGVyO3RoaXMub25Mb2FkU3RhcnQ9ZnVuY3Rpb24oKXt9O3RoaXMub25Mb2FkUHJvZ3Jlc3M9ZnVuY3Rpb24oKXt9O3RoaXMub25Mb2FkQ29tcGxldGU9ZnVuY3Rpb24oKXt9fTtcblRIUkVFLkxvYWRlci5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRIUkVFLkxvYWRlcixjcm9zc09yaWdpbjp2b2lkIDAsYWRkU3RhdHVzRWxlbWVudDpmdW5jdGlvbigpe3ZhciBhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7YS5zdHlsZS5wb3NpdGlvbj1cImFic29sdXRlXCI7YS5zdHlsZS5yaWdodD1cIjBweFwiO2Euc3R5bGUudG9wPVwiMHB4XCI7YS5zdHlsZS5mb250U2l6ZT1cIjAuOGVtXCI7YS5zdHlsZS50ZXh0QWxpZ249XCJsZWZ0XCI7YS5zdHlsZS5iYWNrZ3JvdW5kPVwicmdiYSgwLDAsMCwwLjI1KVwiO2Euc3R5bGUuY29sb3I9XCIjZmZmXCI7YS5zdHlsZS53aWR0aD1cIjEyMHB4XCI7YS5zdHlsZS5wYWRkaW5nPVwiMC41ZW0gMC41ZW0gMC41ZW0gMC41ZW1cIjthLnN0eWxlLnpJbmRleD0xRTM7YS5pbm5lckhUTUw9XCJMb2FkaW5nIC4uLlwiO3JldHVybiBhfSx1cGRhdGVQcm9ncmVzczpmdW5jdGlvbihhKXt2YXIgYj1cIkxvYWRlZCBcIixiPWEudG90YWw/YisoKDEwMCphLmxvYWRlZC9hLnRvdGFsKS50b0ZpeGVkKDApK1xuXCIlXCIpOmIrKChhLmxvYWRlZC8xMDI0KS50b0ZpeGVkKDIpK1wiIEtCXCIpO3RoaXMuc3RhdHVzRG9tRWxlbWVudC5pbm5lckhUTUw9Yn0sZXh0cmFjdFVybEJhc2U6ZnVuY3Rpb24oYSl7YT1hLnNwbGl0KFwiL1wiKTtpZigxPT09YS5sZW5ndGgpcmV0dXJuXCIuL1wiO2EucG9wKCk7cmV0dXJuIGEuam9pbihcIi9cIikrXCIvXCJ9LGluaXRNYXRlcmlhbHM6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9W10sZD0wO2Q8YS5sZW5ndGg7KytkKWNbZF09dGhpcy5jcmVhdGVNYXRlcmlhbChhW2RdLGIpO3JldHVybiBjfSxuZWVkc1RhbmdlbnRzOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0wLGM9YS5sZW5ndGg7YjxjO2IrKylpZihhW2JdaW5zdGFuY2VvZiBUSFJFRS5TaGFkZXJNYXRlcmlhbClyZXR1cm4hMDtyZXR1cm4hMX0sY3JlYXRlTWF0ZXJpYWw6ZnVuY3Rpb24oYSxiKXtmdW5jdGlvbiBjKGEpe2E9TWF0aC5sb2coYSkvTWF0aC5MTjI7cmV0dXJuIE1hdGgucG93KDIsTWF0aC5yb3VuZChhKSl9ZnVuY3Rpb24gZChhLFxuZCxlLGcsaCxrLHMpe3ZhciB1PWIrZSx2LHg9VEhSRUUuTG9hZGVyLkhhbmRsZXJzLmdldCh1KTtudWxsIT09eD92PXgubG9hZCh1KToodj1uZXcgVEhSRUUuVGV4dHVyZSx4PWYuaW1hZ2VMb2FkZXIseC5jcm9zc09yaWdpbj1mLmNyb3NzT3JpZ2luLHgubG9hZCh1LGZ1bmN0aW9uKGEpe2lmKCExPT09VEhSRUUuTWF0aC5pc1Bvd2VyT2ZUd28oYS53aWR0aCl8fCExPT09VEhSRUUuTWF0aC5pc1Bvd2VyT2ZUd28oYS5oZWlnaHQpKXt2YXIgYj1jKGEud2lkdGgpLGQ9YyhhLmhlaWdodCksZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO2Uud2lkdGg9YjtlLmhlaWdodD1kO2UuZ2V0Q29udGV4dChcIjJkXCIpLmRyYXdJbWFnZShhLDAsMCxiLGQpO3YuaW1hZ2U9ZX1lbHNlIHYuaW1hZ2U9YTt2Lm5lZWRzVXBkYXRlPSEwfSkpO3Yuc291cmNlRmlsZT1lO2cmJih2LnJlcGVhdC5zZXQoZ1swXSxnWzFdKSwxIT09Z1swXSYmKHYud3JhcFM9VEhSRUUuUmVwZWF0V3JhcHBpbmcpLFxuMSE9PWdbMV0mJih2LndyYXBUPVRIUkVFLlJlcGVhdFdyYXBwaW5nKSk7aCYmdi5vZmZzZXQuc2V0KGhbMF0saFsxXSk7ayYmKGU9e3JlcGVhdDpUSFJFRS5SZXBlYXRXcmFwcGluZyxtaXJyb3I6VEhSRUUuTWlycm9yZWRSZXBlYXRXcmFwcGluZ30sdm9pZCAwIT09ZVtrWzBdXSYmKHYud3JhcFM9ZVtrWzBdXSksdm9pZCAwIT09ZVtrWzFdXSYmKHYud3JhcFQ9ZVtrWzFdXSkpO3MmJih2LmFuaXNvdHJvcHk9cyk7YVtkXT12fWZ1bmN0aW9uIGUoYSl7cmV0dXJuKDI1NSphWzBdPDwxNikrKDI1NSphWzFdPDw4KSsyNTUqYVsyXX12YXIgZj10aGlzLGc9XCJNZXNoTGFtYmVydE1hdGVyaWFsXCIsaD17Y29sb3I6MTU2NTg3MzQsb3BhY2l0eToxLG1hcDpudWxsLGxpZ2h0TWFwOm51bGwsbm9ybWFsTWFwOm51bGwsYnVtcE1hcDpudWxsLHdpcmVmcmFtZTohMX07aWYoYS5zaGFkaW5nKXt2YXIgaz1hLnNoYWRpbmcudG9Mb3dlckNhc2UoKTtcInBob25nXCI9PT1rP2c9XCJNZXNoUGhvbmdNYXRlcmlhbFwiOlxuXCJiYXNpY1wiPT09ayYmKGc9XCJNZXNoQmFzaWNNYXRlcmlhbFwiKX12b2lkIDAhPT1hLmJsZW5kaW5nJiZ2b2lkIDAhPT1USFJFRVthLmJsZW5kaW5nXSYmKGguYmxlbmRpbmc9VEhSRUVbYS5ibGVuZGluZ10pO3ZvaWQgMCE9PWEudHJhbnNwYXJlbnQmJihoLnRyYW5zcGFyZW50PWEudHJhbnNwYXJlbnQpO3ZvaWQgMCE9PWEub3BhY2l0eSYmMT5hLm9wYWNpdHkmJihoLnRyYW5zcGFyZW50PSEwKTt2b2lkIDAhPT1hLmRlcHRoVGVzdCYmKGguZGVwdGhUZXN0PWEuZGVwdGhUZXN0KTt2b2lkIDAhPT1hLmRlcHRoV3JpdGUmJihoLmRlcHRoV3JpdGU9YS5kZXB0aFdyaXRlKTt2b2lkIDAhPT1hLnZpc2libGUmJihoLnZpc2libGU9YS52aXNpYmxlKTt2b2lkIDAhPT1hLmZsaXBTaWRlZCYmKGguc2lkZT1USFJFRS5CYWNrU2lkZSk7dm9pZCAwIT09YS5kb3VibGVTaWRlZCYmKGguc2lkZT1USFJFRS5Eb3VibGVTaWRlKTt2b2lkIDAhPT1hLndpcmVmcmFtZSYmKGgud2lyZWZyYW1lPWEud2lyZWZyYW1lKTtcbnZvaWQgMCE9PWEudmVydGV4Q29sb3JzJiYoXCJmYWNlXCI9PT1hLnZlcnRleENvbG9ycz9oLnZlcnRleENvbG9ycz1USFJFRS5GYWNlQ29sb3JzOmEudmVydGV4Q29sb3JzJiYoaC52ZXJ0ZXhDb2xvcnM9VEhSRUUuVmVydGV4Q29sb3JzKSk7YS5jb2xvckRpZmZ1c2U/aC5jb2xvcj1lKGEuY29sb3JEaWZmdXNlKTphLkRiZ0NvbG9yJiYoaC5jb2xvcj1hLkRiZ0NvbG9yKTthLmNvbG9yU3BlY3VsYXImJihoLnNwZWN1bGFyPWUoYS5jb2xvclNwZWN1bGFyKSk7YS5jb2xvckVtaXNzaXZlJiYoaC5lbWlzc2l2ZT1lKGEuY29sb3JFbWlzc2l2ZSkpO3ZvaWQgMCE9PWEudHJhbnNwYXJlbmN5JiYoY29uc29sZS53YXJuKFwiVEhSRUUuTG9hZGVyOiB0cmFuc3BhcmVuY3kgaGFzIGJlZW4gcmVuYW1lZCB0byBvcGFjaXR5XCIpLGEub3BhY2l0eT1hLnRyYW5zcGFyZW5jeSk7dm9pZCAwIT09YS5vcGFjaXR5JiYoaC5vcGFjaXR5PWEub3BhY2l0eSk7YS5zcGVjdWxhckNvZWYmJihoLnNoaW5pbmVzcz1cbmEuc3BlY3VsYXJDb2VmKTthLm1hcERpZmZ1c2UmJmImJmQoaCxcIm1hcFwiLGEubWFwRGlmZnVzZSxhLm1hcERpZmZ1c2VSZXBlYXQsYS5tYXBEaWZmdXNlT2Zmc2V0LGEubWFwRGlmZnVzZVdyYXAsYS5tYXBEaWZmdXNlQW5pc290cm9weSk7YS5tYXBMaWdodCYmYiYmZChoLFwibGlnaHRNYXBcIixhLm1hcExpZ2h0LGEubWFwTGlnaHRSZXBlYXQsYS5tYXBMaWdodE9mZnNldCxhLm1hcExpZ2h0V3JhcCxhLm1hcExpZ2h0QW5pc290cm9weSk7YS5tYXBCdW1wJiZiJiZkKGgsXCJidW1wTWFwXCIsYS5tYXBCdW1wLGEubWFwQnVtcFJlcGVhdCxhLm1hcEJ1bXBPZmZzZXQsYS5tYXBCdW1wV3JhcCxhLm1hcEJ1bXBBbmlzb3Ryb3B5KTthLm1hcE5vcm1hbCYmYiYmZChoLFwibm9ybWFsTWFwXCIsYS5tYXBOb3JtYWwsYS5tYXBOb3JtYWxSZXBlYXQsYS5tYXBOb3JtYWxPZmZzZXQsYS5tYXBOb3JtYWxXcmFwLGEubWFwTm9ybWFsQW5pc290cm9weSk7YS5tYXBTcGVjdWxhciYmYiYmZChoLFwic3BlY3VsYXJNYXBcIixcbmEubWFwU3BlY3VsYXIsYS5tYXBTcGVjdWxhclJlcGVhdCxhLm1hcFNwZWN1bGFyT2Zmc2V0LGEubWFwU3BlY3VsYXJXcmFwLGEubWFwU3BlY3VsYXJBbmlzb3Ryb3B5KTthLm1hcEFscGhhJiZiJiZkKGgsXCJhbHBoYU1hcFwiLGEubWFwQWxwaGEsYS5tYXBBbHBoYVJlcGVhdCxhLm1hcEFscGhhT2Zmc2V0LGEubWFwQWxwaGFXcmFwLGEubWFwQWxwaGFBbmlzb3Ryb3B5KTthLm1hcEJ1bXBTY2FsZSYmKGguYnVtcFNjYWxlPWEubWFwQnVtcFNjYWxlKTthLm1hcE5vcm1hbEZhY3RvciYmKGgubm9ybWFsU2NhbGU9bmV3IFRIUkVFLlZlY3RvcjIoYS5tYXBOb3JtYWxGYWN0b3IsYS5tYXBOb3JtYWxGYWN0b3IpKTtnPW5ldyBUSFJFRVtnXShoKTt2b2lkIDAhPT1hLkRiZ05hbWUmJihnLm5hbWU9YS5EYmdOYW1lKTtyZXR1cm4gZ319O1xuVEhSRUUuTG9hZGVyLkhhbmRsZXJzPXtoYW5kbGVyczpbXSxhZGQ6ZnVuY3Rpb24oYSxiKXt0aGlzLmhhbmRsZXJzLnB1c2goYSxiKX0sZ2V0OmZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0wLGM9dGhpcy5oYW5kbGVycy5sZW5ndGg7YjxjO2IrPTIpe3ZhciBkPXRoaXMuaGFuZGxlcnNbYisxXTtpZih0aGlzLmhhbmRsZXJzW2JdLnRlc3QoYSkpcmV0dXJuIGR9cmV0dXJuIG51bGx9fTtUSFJFRS5YSFJMb2FkZXI9ZnVuY3Rpb24oYSl7dGhpcy5tYW5hZ2VyPXZvaWQgMCE9PWE/YTpUSFJFRS5EZWZhdWx0TG9hZGluZ01hbmFnZXJ9O1xuVEhSRUUuWEhSTG9hZGVyLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuWEhSTG9hZGVyLGxvYWQ6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dGhpcyxmPVRIUkVFLkNhY2hlLmdldChhKTt2b2lkIDAhPT1mP2ImJmIoZik6KGY9bmV3IFhNTEh0dHBSZXF1ZXN0LGYub3BlbihcIkdFVFwiLGEsITApLGYuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixmdW5jdGlvbihjKXtUSFJFRS5DYWNoZS5hZGQoYSx0aGlzLnJlc3BvbnNlKTtiJiZiKHRoaXMucmVzcG9uc2UpO2UubWFuYWdlci5pdGVtRW5kKGEpfSwhMSksdm9pZCAwIT09YyYmZi5hZGRFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIixmdW5jdGlvbihhKXtjKGEpfSwhMSksdm9pZCAwIT09ZCYmZi5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIixmdW5jdGlvbihhKXtkKGEpfSwhMSksdm9pZCAwIT09dGhpcy5jcm9zc09yaWdpbiYmKGYuY3Jvc3NPcmlnaW49dGhpcy5jcm9zc09yaWdpbiksdm9pZCAwIT09dGhpcy5yZXNwb25zZVR5cGUmJihmLnJlc3BvbnNlVHlwZT1cbnRoaXMucmVzcG9uc2VUeXBlKSxmLnNlbmQobnVsbCksZS5tYW5hZ2VyLml0ZW1TdGFydChhKSl9LHNldFJlc3BvbnNlVHlwZTpmdW5jdGlvbihhKXt0aGlzLnJlc3BvbnNlVHlwZT1hfSxzZXRDcm9zc09yaWdpbjpmdW5jdGlvbihhKXt0aGlzLmNyb3NzT3JpZ2luPWF9fTtUSFJFRS5JbWFnZUxvYWRlcj1mdW5jdGlvbihhKXt0aGlzLm1hbmFnZXI9dm9pZCAwIT09YT9hOlRIUkVFLkRlZmF1bHRMb2FkaW5nTWFuYWdlcn07XG5USFJFRS5JbWFnZUxvYWRlci5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRIUkVFLkltYWdlTG9hZGVyLGxvYWQ6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dGhpcyxmPVRIUkVFLkNhY2hlLmdldChhKTtpZih2b2lkIDAhPT1mKWIoZik7ZWxzZSByZXR1cm4gZj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpLGYuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixmdW5jdGlvbihjKXtUSFJFRS5DYWNoZS5hZGQoYSx0aGlzKTtiJiZiKHRoaXMpO2UubWFuYWdlci5pdGVtRW5kKGEpfSwhMSksdm9pZCAwIT09YyYmZi5hZGRFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIixmdW5jdGlvbihhKXtjKGEpfSwhMSksdm9pZCAwIT09ZCYmZi5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIixmdW5jdGlvbihhKXtkKGEpfSwhMSksdm9pZCAwIT09dGhpcy5jcm9zc09yaWdpbiYmKGYuY3Jvc3NPcmlnaW49dGhpcy5jcm9zc09yaWdpbiksZi5zcmM9YSxlLm1hbmFnZXIuaXRlbVN0YXJ0KGEpLGZ9LHNldENyb3NzT3JpZ2luOmZ1bmN0aW9uKGEpe3RoaXMuY3Jvc3NPcmlnaW49XG5hfX07VEhSRUUuSlNPTkxvYWRlcj1mdW5jdGlvbihhKXtUSFJFRS5Mb2FkZXIuY2FsbCh0aGlzLGEpO3RoaXMud2l0aENyZWRlbnRpYWxzPSExfTtUSFJFRS5KU09OTG9hZGVyLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkxvYWRlci5wcm90b3R5cGUpO1RIUkVFLkpTT05Mb2FkZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkpTT05Mb2FkZXI7VEhSRUUuSlNPTkxvYWRlci5wcm90b3R5cGUubG9hZD1mdW5jdGlvbihhLGIsYyl7Yz1jJiZcInN0cmluZ1wiPT09dHlwZW9mIGM/Yzp0aGlzLmV4dHJhY3RVcmxCYXNlKGEpO3RoaXMub25Mb2FkU3RhcnQoKTt0aGlzLmxvYWRBamF4SlNPTih0aGlzLGEsYixjKX07XG5USFJFRS5KU09OTG9hZGVyLnByb3RvdHlwZS5sb2FkQWpheEpTT049ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1uZXcgWE1MSHR0cFJlcXVlc3QsZz0wO2Yub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7aWYoZi5yZWFkeVN0YXRlPT09Zi5ET05FKWlmKDIwMD09PWYuc3RhdHVzfHwwPT09Zi5zdGF0dXMpe2lmKGYucmVzcG9uc2VUZXh0KXt2YXIgaD1KU09OLnBhcnNlKGYucmVzcG9uc2VUZXh0KSxrPWgubWV0YWRhdGE7aWYodm9pZCAwIT09ayl7aWYoXCJvYmplY3RcIj09PWsudHlwZSl7VEhSRUUuZXJyb3IoXCJUSFJFRS5KU09OTG9hZGVyOiBcIitiK1wiIHNob3VsZCBiZSBsb2FkZWQgd2l0aCBUSFJFRS5PYmplY3RMb2FkZXIgaW5zdGVhZC5cIik7cmV0dXJufWlmKFwic2NlbmVcIj09PWsudHlwZSl7VEhSRUUuZXJyb3IoXCJUSFJFRS5KU09OTG9hZGVyOiBcIitiK1wiIHNlZW1zIHRvIGJlIGEgU2NlbmUuIFVzZSBUSFJFRS5TY2VuZUxvYWRlciBpbnN0ZWFkLlwiKTtyZXR1cm59fWg9YS5wYXJzZShoLFxuZCk7YyhoLmdlb21ldHJ5LGgubWF0ZXJpYWxzKX1lbHNlIFRIUkVFLmVycm9yKFwiVEhSRUUuSlNPTkxvYWRlcjogXCIrYitcIiBzZWVtcyB0byBiZSB1bnJlYWNoYWJsZSBvciB0aGUgZmlsZSBpcyBlbXB0eS5cIik7YS5vbkxvYWRDb21wbGV0ZSgpfWVsc2UgVEhSRUUuZXJyb3IoXCJUSFJFRS5KU09OTG9hZGVyOiBDb3VsZG4ndCBsb2FkIFwiK2IrXCIgKFwiK2Yuc3RhdHVzK1wiKVwiKTtlbHNlIGYucmVhZHlTdGF0ZT09PWYuTE9BRElORz9lJiYoMD09PWcmJihnPWYuZ2V0UmVzcG9uc2VIZWFkZXIoXCJDb250ZW50LUxlbmd0aFwiKSksZSh7dG90YWw6Zyxsb2FkZWQ6Zi5yZXNwb25zZVRleHQubGVuZ3RofSkpOmYucmVhZHlTdGF0ZT09PWYuSEVBREVSU19SRUNFSVZFRCYmdm9pZCAwIT09ZSYmKGc9Zi5nZXRSZXNwb25zZUhlYWRlcihcIkNvbnRlbnQtTGVuZ3RoXCIpKX07Zi5vcGVuKFwiR0VUXCIsYiwhMCk7Zi53aXRoQ3JlZGVudGlhbHM9dGhpcy53aXRoQ3JlZGVudGlhbHM7Zi5zZW5kKG51bGwpfTtcblRIUkVFLkpTT05Mb2FkZXIucHJvdG90eXBlLnBhcnNlPWZ1bmN0aW9uKGEsYil7dmFyIGM9bmV3IFRIUkVFLkdlb21ldHJ5LGQ9dm9pZCAwIT09YS5zY2FsZT8xL2Euc2NhbGU6MTsoZnVuY3Rpb24oYil7dmFyIGQsZyxoLGssbCxwLHEsbix0LHIscyx1LHYseD1hLmZhY2VzO3A9YS52ZXJ0aWNlczt2YXIgRD1hLm5vcm1hbHMsdz1hLmNvbG9ycyx5PTA7aWYodm9pZCAwIT09YS51dnMpe2ZvcihkPTA7ZDxhLnV2cy5sZW5ndGg7ZCsrKWEudXZzW2RdLmxlbmd0aCYmeSsrO2ZvcihkPTA7ZDx5O2QrKyljLmZhY2VWZXJ0ZXhVdnNbZF09W119az0wO2ZvcihsPXAubGVuZ3RoO2s8bDspZD1uZXcgVEhSRUUuVmVjdG9yMyxkLng9cFtrKytdKmIsZC55PXBbaysrXSpiLGQuej1wW2srK10qYixjLnZlcnRpY2VzLnB1c2goZCk7az0wO2ZvcihsPXgubGVuZ3RoO2s8bDspaWYoYj14W2srK10sdD1iJjEsaD1iJjIsZD1iJjgscT1iJjE2LHI9YiYzMixwPWImNjQsYiY9MTI4LHQpe3Q9bmV3IFRIUkVFLkZhY2UzO1xudC5hPXhba107dC5iPXhbaysxXTt0LmM9eFtrKzNdO3M9bmV3IFRIUkVFLkZhY2UzO3MuYT14W2srMV07cy5iPXhbaysyXTtzLmM9eFtrKzNdO2srPTQ7aCYmKGg9eFtrKytdLHQubWF0ZXJpYWxJbmRleD1oLHMubWF0ZXJpYWxJbmRleD1oKTtoPWMuZmFjZXMubGVuZ3RoO2lmKGQpZm9yKGQ9MDtkPHk7ZCsrKWZvcih1PWEudXZzW2RdLGMuZmFjZVZlcnRleFV2c1tkXVtoXT1bXSxjLmZhY2VWZXJ0ZXhVdnNbZF1baCsxXT1bXSxnPTA7ND5nO2crKyluPXhbaysrXSx2PXVbMipuXSxuPXVbMipuKzFdLHY9bmV3IFRIUkVFLlZlY3RvcjIodixuKSwyIT09ZyYmYy5mYWNlVmVydGV4VXZzW2RdW2hdLnB1c2godiksMCE9PWcmJmMuZmFjZVZlcnRleFV2c1tkXVtoKzFdLnB1c2godik7cSYmKHE9Myp4W2srK10sdC5ub3JtYWwuc2V0KERbcSsrXSxEW3ErK10sRFtxXSkscy5ub3JtYWwuY29weSh0Lm5vcm1hbCkpO2lmKHIpZm9yKGQ9MDs0PmQ7ZCsrKXE9Myp4W2srK10scj1uZXcgVEhSRUUuVmVjdG9yMyhEW3ErK10sXG5EW3ErK10sRFtxXSksMiE9PWQmJnQudmVydGV4Tm9ybWFscy5wdXNoKHIpLDAhPT1kJiZzLnZlcnRleE5vcm1hbHMucHVzaChyKTtwJiYocD14W2srK10scD13W3BdLHQuY29sb3Iuc2V0SGV4KHApLHMuY29sb3Iuc2V0SGV4KHApKTtpZihiKWZvcihkPTA7ND5kO2QrKylwPXhbaysrXSxwPXdbcF0sMiE9PWQmJnQudmVydGV4Q29sb3JzLnB1c2gobmV3IFRIUkVFLkNvbG9yKHApKSwwIT09ZCYmcy52ZXJ0ZXhDb2xvcnMucHVzaChuZXcgVEhSRUUuQ29sb3IocCkpO2MuZmFjZXMucHVzaCh0KTtjLmZhY2VzLnB1c2gocyl9ZWxzZXt0PW5ldyBUSFJFRS5GYWNlMzt0LmE9eFtrKytdO3QuYj14W2srK107dC5jPXhbaysrXTtoJiYoaD14W2srK10sdC5tYXRlcmlhbEluZGV4PWgpO2g9Yy5mYWNlcy5sZW5ndGg7aWYoZClmb3IoZD0wO2Q8eTtkKyspZm9yKHU9YS51dnNbZF0sYy5mYWNlVmVydGV4VXZzW2RdW2hdPVtdLGc9MDszPmc7ZysrKW49eFtrKytdLHY9dVsyKm5dLG49dVsyKm4rMV0sXG52PW5ldyBUSFJFRS5WZWN0b3IyKHYsbiksYy5mYWNlVmVydGV4VXZzW2RdW2hdLnB1c2godik7cSYmKHE9Myp4W2srK10sdC5ub3JtYWwuc2V0KERbcSsrXSxEW3ErK10sRFtxXSkpO2lmKHIpZm9yKGQ9MDszPmQ7ZCsrKXE9Myp4W2srK10scj1uZXcgVEhSRUUuVmVjdG9yMyhEW3ErK10sRFtxKytdLERbcV0pLHQudmVydGV4Tm9ybWFscy5wdXNoKHIpO3AmJihwPXhbaysrXSx0LmNvbG9yLnNldEhleCh3W3BdKSk7aWYoYilmb3IoZD0wOzM+ZDtkKyspcD14W2srK10sdC52ZXJ0ZXhDb2xvcnMucHVzaChuZXcgVEhSRUUuQ29sb3Iod1twXSkpO2MuZmFjZXMucHVzaCh0KX19KShkKTsoZnVuY3Rpb24oKXt2YXIgYj12b2lkIDAhPT1hLmluZmx1ZW5jZXNQZXJWZXJ0ZXg/YS5pbmZsdWVuY2VzUGVyVmVydGV4OjI7aWYoYS5za2luV2VpZ2h0cylmb3IodmFyIGQ9MCxnPWEuc2tpbldlaWdodHMubGVuZ3RoO2Q8ZztkKz1iKWMuc2tpbldlaWdodHMucHVzaChuZXcgVEhSRUUuVmVjdG9yNChhLnNraW5XZWlnaHRzW2RdLFxuMTxiP2Euc2tpbldlaWdodHNbZCsxXTowLDI8Yj9hLnNraW5XZWlnaHRzW2QrMl06MCwzPGI/YS5za2luV2VpZ2h0c1tkKzNdOjApKTtpZihhLnNraW5JbmRpY2VzKWZvcihkPTAsZz1hLnNraW5JbmRpY2VzLmxlbmd0aDtkPGc7ZCs9YiljLnNraW5JbmRpY2VzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjQoYS5za2luSW5kaWNlc1tkXSwxPGI/YS5za2luSW5kaWNlc1tkKzFdOjAsMjxiP2Euc2tpbkluZGljZXNbZCsyXTowLDM8Yj9hLnNraW5JbmRpY2VzW2QrM106MCkpO2MuYm9uZXM9YS5ib25lcztjLmJvbmVzJiYwPGMuYm9uZXMubGVuZ3RoJiYoYy5za2luV2VpZ2h0cy5sZW5ndGghPT1jLnNraW5JbmRpY2VzLmxlbmd0aHx8Yy5za2luSW5kaWNlcy5sZW5ndGghPT1jLnZlcnRpY2VzLmxlbmd0aCkmJlRIUkVFLndhcm4oXCJUSFJFRS5KU09OTG9hZGVyOiBXaGVuIHNraW5uaW5nLCBudW1iZXIgb2YgdmVydGljZXMgKFwiK2MudmVydGljZXMubGVuZ3RoK1wiKSwgc2tpbkluZGljZXMgKFwiK1xuYy5za2luSW5kaWNlcy5sZW5ndGgrXCIpLCBhbmQgc2tpbldlaWdodHMgKFwiK2Muc2tpbldlaWdodHMubGVuZ3RoK1wiKSBzaG91bGQgbWF0Y2guXCIpO2MuYW5pbWF0aW9uPWEuYW5pbWF0aW9uO2MuYW5pbWF0aW9ucz1hLmFuaW1hdGlvbnN9KSgpOyhmdW5jdGlvbihiKXtpZih2b2lkIDAhPT1hLm1vcnBoVGFyZ2V0cyl7dmFyIGQsZyxoLGssbCxwO2Q9MDtmb3IoZz1hLm1vcnBoVGFyZ2V0cy5sZW5ndGg7ZDxnO2QrKylmb3IoYy5tb3JwaFRhcmdldHNbZF09e30sYy5tb3JwaFRhcmdldHNbZF0ubmFtZT1hLm1vcnBoVGFyZ2V0c1tkXS5uYW1lLGMubW9ycGhUYXJnZXRzW2RdLnZlcnRpY2VzPVtdLGw9Yy5tb3JwaFRhcmdldHNbZF0udmVydGljZXMscD1hLm1vcnBoVGFyZ2V0c1tkXS52ZXJ0aWNlcyxoPTAsaz1wLmxlbmd0aDtoPGs7aCs9Myl7dmFyIHE9bmV3IFRIUkVFLlZlY3RvcjM7cS54PXBbaF0qYjtxLnk9cFtoKzFdKmI7cS56PXBbaCsyXSpiO2wucHVzaChxKX19aWYodm9pZCAwIT09XG5hLm1vcnBoQ29sb3JzKWZvcihkPTAsZz1hLm1vcnBoQ29sb3JzLmxlbmd0aDtkPGc7ZCsrKWZvcihjLm1vcnBoQ29sb3JzW2RdPXt9LGMubW9ycGhDb2xvcnNbZF0ubmFtZT1hLm1vcnBoQ29sb3JzW2RdLm5hbWUsYy5tb3JwaENvbG9yc1tkXS5jb2xvcnM9W10saz1jLm1vcnBoQ29sb3JzW2RdLmNvbG9ycyxsPWEubW9ycGhDb2xvcnNbZF0uY29sb3JzLGI9MCxoPWwubGVuZ3RoO2I8aDtiKz0zKXA9bmV3IFRIUkVFLkNvbG9yKDE2NzU1MjAwKSxwLnNldFJHQihsW2JdLGxbYisxXSxsW2IrMl0pLGsucHVzaChwKX0pKGQpO2MuY29tcHV0ZUZhY2VOb3JtYWxzKCk7Yy5jb21wdXRlQm91bmRpbmdTcGhlcmUoKTtpZih2b2lkIDA9PT1hLm1hdGVyaWFsc3x8MD09PWEubWF0ZXJpYWxzLmxlbmd0aClyZXR1cm57Z2VvbWV0cnk6Y307ZD10aGlzLmluaXRNYXRlcmlhbHMoYS5tYXRlcmlhbHMsYik7dGhpcy5uZWVkc1RhbmdlbnRzKGQpJiZjLmNvbXB1dGVUYW5nZW50cygpO3JldHVybntnZW9tZXRyeTpjLFxubWF0ZXJpYWxzOmR9fTtUSFJFRS5Mb2FkaW5nTWFuYWdlcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcyxlPTAsZj0wO3RoaXMub25Mb2FkPWE7dGhpcy5vblByb2dyZXNzPWI7dGhpcy5vbkVycm9yPWM7dGhpcy5pdGVtU3RhcnQ9ZnVuY3Rpb24oYSl7ZisrfTt0aGlzLml0ZW1FbmQ9ZnVuY3Rpb24oYSl7ZSsrO2lmKHZvaWQgMCE9PWQub25Qcm9ncmVzcylkLm9uUHJvZ3Jlc3MoYSxlLGYpO2lmKGU9PT1mJiZ2b2lkIDAhPT1kLm9uTG9hZClkLm9uTG9hZCgpfX07VEhSRUUuRGVmYXVsdExvYWRpbmdNYW5hZ2VyPW5ldyBUSFJFRS5Mb2FkaW5nTWFuYWdlcjtUSFJFRS5CdWZmZXJHZW9tZXRyeUxvYWRlcj1mdW5jdGlvbihhKXt0aGlzLm1hbmFnZXI9dm9pZCAwIT09YT9hOlRIUkVFLkRlZmF1bHRMb2FkaW5nTWFuYWdlcn07XG5USFJFRS5CdWZmZXJHZW9tZXRyeUxvYWRlci5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRIUkVFLkJ1ZmZlckdlb21ldHJ5TG9hZGVyLGxvYWQ6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dGhpcyxmPW5ldyBUSFJFRS5YSFJMb2FkZXIoZS5tYW5hZ2VyKTtmLnNldENyb3NzT3JpZ2luKHRoaXMuY3Jvc3NPcmlnaW4pO2YubG9hZChhLGZ1bmN0aW9uKGEpe2IoZS5wYXJzZShKU09OLnBhcnNlKGEpKSl9LGMsZCl9LHNldENyb3NzT3JpZ2luOmZ1bmN0aW9uKGEpe3RoaXMuY3Jvc3NPcmlnaW49YX0scGFyc2U6ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IFRIUkVFLkJ1ZmZlckdlb21ldHJ5LGM9YS5kYXRhLmF0dHJpYnV0ZXMsZDtmb3IoZCBpbiBjKXt2YXIgZT1jW2RdLGY9bmV3IHNlbGZbZS50eXBlXShlLmFycmF5KTtiLmFkZEF0dHJpYnV0ZShkLG5ldyBUSFJFRS5CdWZmZXJBdHRyaWJ1dGUoZixlLml0ZW1TaXplKSl9Yz1hLmRhdGEub2Zmc2V0czt2b2lkIDAhPT1jJiYoYi5vZmZzZXRzPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoYykpKTtcbmE9YS5kYXRhLmJvdW5kaW5nU3BoZXJlO3ZvaWQgMCE9PWEmJihjPW5ldyBUSFJFRS5WZWN0b3IzLHZvaWQgMCE9PWEuY2VudGVyJiZjLmZyb21BcnJheShhLmNlbnRlciksYi5ib3VuZGluZ1NwaGVyZT1uZXcgVEhSRUUuU3BoZXJlKGMsYS5yYWRpdXMpKTtyZXR1cm4gYn19O1RIUkVFLk1hdGVyaWFsTG9hZGVyPWZ1bmN0aW9uKGEpe3RoaXMubWFuYWdlcj12b2lkIDAhPT1hP2E6VEhSRUUuRGVmYXVsdExvYWRpbmdNYW5hZ2VyfTtcblRIUkVFLk1hdGVyaWFsTG9hZGVyLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuTWF0ZXJpYWxMb2FkZXIsbG9hZDpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT10aGlzLGY9bmV3IFRIUkVFLlhIUkxvYWRlcihlLm1hbmFnZXIpO2Yuc2V0Q3Jvc3NPcmlnaW4odGhpcy5jcm9zc09yaWdpbik7Zi5sb2FkKGEsZnVuY3Rpb24oYSl7YihlLnBhcnNlKEpTT04ucGFyc2UoYSkpKX0sYyxkKX0sc2V0Q3Jvc3NPcmlnaW46ZnVuY3Rpb24oYSl7dGhpcy5jcm9zc09yaWdpbj1hfSxwYXJzZTpmdW5jdGlvbihhKXt2YXIgYj1uZXcgVEhSRUVbYS50eXBlXTt2b2lkIDAhPT1hLmNvbG9yJiZiLmNvbG9yLnNldEhleChhLmNvbG9yKTt2b2lkIDAhPT1hLmVtaXNzaXZlJiZiLmVtaXNzaXZlLnNldEhleChhLmVtaXNzaXZlKTt2b2lkIDAhPT1hLnNwZWN1bGFyJiZiLnNwZWN1bGFyLnNldEhleChhLnNwZWN1bGFyKTt2b2lkIDAhPT1hLnNoaW5pbmVzcyYmKGIuc2hpbmluZXNzPWEuc2hpbmluZXNzKTtcbnZvaWQgMCE9PWEudW5pZm9ybXMmJihiLnVuaWZvcm1zPWEudW5pZm9ybXMpO3ZvaWQgMCE9PWEudmVydGV4U2hhZGVyJiYoYi52ZXJ0ZXhTaGFkZXI9YS52ZXJ0ZXhTaGFkZXIpO3ZvaWQgMCE9PWEuZnJhZ21lbnRTaGFkZXImJihiLmZyYWdtZW50U2hhZGVyPWEuZnJhZ21lbnRTaGFkZXIpO3ZvaWQgMCE9PWEudmVydGV4Q29sb3JzJiYoYi52ZXJ0ZXhDb2xvcnM9YS52ZXJ0ZXhDb2xvcnMpO3ZvaWQgMCE9PWEuc2hhZGluZyYmKGIuc2hhZGluZz1hLnNoYWRpbmcpO3ZvaWQgMCE9PWEuYmxlbmRpbmcmJihiLmJsZW5kaW5nPWEuYmxlbmRpbmcpO3ZvaWQgMCE9PWEuc2lkZSYmKGIuc2lkZT1hLnNpZGUpO3ZvaWQgMCE9PWEub3BhY2l0eSYmKGIub3BhY2l0eT1hLm9wYWNpdHkpO3ZvaWQgMCE9PWEudHJhbnNwYXJlbnQmJihiLnRyYW5zcGFyZW50PWEudHJhbnNwYXJlbnQpO3ZvaWQgMCE9PWEud2lyZWZyYW1lJiYoYi53aXJlZnJhbWU9YS53aXJlZnJhbWUpO3ZvaWQgMCE9PWEuc2l6ZSYmXG4oYi5zaXplPWEuc2l6ZSk7dm9pZCAwIT09YS5zaXplQXR0ZW51YXRpb24mJihiLnNpemVBdHRlbnVhdGlvbj1hLnNpemVBdHRlbnVhdGlvbik7aWYodm9pZCAwIT09YS5tYXRlcmlhbHMpZm9yKHZhciBjPTAsZD1hLm1hdGVyaWFscy5sZW5ndGg7YzxkO2MrKyliLm1hdGVyaWFscy5wdXNoKHRoaXMucGFyc2UoYS5tYXRlcmlhbHNbY10pKTtyZXR1cm4gYn19O1RIUkVFLk9iamVjdExvYWRlcj1mdW5jdGlvbihhKXt0aGlzLm1hbmFnZXI9dm9pZCAwIT09YT9hOlRIUkVFLkRlZmF1bHRMb2FkaW5nTWFuYWdlcjt0aGlzLnRleHR1cmVQYXRoPVwiXCJ9O1xuVEhSRUUuT2JqZWN0TG9hZGVyLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuT2JqZWN0TG9hZGVyLGxvYWQ6ZnVuY3Rpb24oYSxiLGMsZCl7XCJcIj09PXRoaXMudGV4dHVyZVBhdGgmJih0aGlzLnRleHR1cmVQYXRoPWEuc3Vic3RyaW5nKDAsYS5sYXN0SW5kZXhPZihcIi9cIikrMSkpO3ZhciBlPXRoaXMsZj1uZXcgVEhSRUUuWEhSTG9hZGVyKGUubWFuYWdlcik7Zi5zZXRDcm9zc09yaWdpbih0aGlzLmNyb3NzT3JpZ2luKTtmLmxvYWQoYSxmdW5jdGlvbihhKXtlLnBhcnNlKEpTT04ucGFyc2UoYSksYil9LGMsZCl9LHNldFRleHR1cmVQYXRoOmZ1bmN0aW9uKGEpe3RoaXMudGV4dHVyZVBhdGg9YX0sc2V0Q3Jvc3NPcmlnaW46ZnVuY3Rpb24oYSl7dGhpcy5jcm9zc09yaWdpbj1hfSxwYXJzZTpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMucGFyc2VHZW9tZXRyaWVzKGEuZ2VvbWV0cmllcyksZD10aGlzLnBhcnNlSW1hZ2VzKGEuaW1hZ2VzLGZ1bmN0aW9uKCl7dm9pZCAwIT09YiYmYihlKX0pLFxuZD10aGlzLnBhcnNlVGV4dHVyZXMoYS50ZXh0dXJlcyxkKSxkPXRoaXMucGFyc2VNYXRlcmlhbHMoYS5tYXRlcmlhbHMsZCksZT10aGlzLnBhcnNlT2JqZWN0KGEub2JqZWN0LGMsZCk7dm9pZCAwIT09YS5pbWFnZXMmJjAhPT1hLmltYWdlcy5sZW5ndGh8fHZvaWQgMD09PWJ8fGIoZSk7cmV0dXJuIGV9LHBhcnNlR2VvbWV0cmllczpmdW5jdGlvbihhKXt2YXIgYj17fTtpZih2b2lkIDAhPT1hKWZvcih2YXIgYz1uZXcgVEhSRUUuSlNPTkxvYWRlcixkPW5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeUxvYWRlcixlPTAsZj1hLmxlbmd0aDtlPGY7ZSsrKXt2YXIgZyxoPWFbZV07c3dpdGNoKGgudHlwZSl7Y2FzZSBcIlBsYW5lR2VvbWV0cnlcIjpjYXNlIFwiUGxhbmVCdWZmZXJHZW9tZXRyeVwiOmc9bmV3IFRIUkVFW2gudHlwZV0oaC53aWR0aCxoLmhlaWdodCxoLndpZHRoU2VnbWVudHMsaC5oZWlnaHRTZWdtZW50cyk7YnJlYWs7Y2FzZSBcIkJveEdlb21ldHJ5XCI6Y2FzZSBcIkN1YmVHZW9tZXRyeVwiOmc9XG5uZXcgVEhSRUUuQm94R2VvbWV0cnkoaC53aWR0aCxoLmhlaWdodCxoLmRlcHRoLGgud2lkdGhTZWdtZW50cyxoLmhlaWdodFNlZ21lbnRzLGguZGVwdGhTZWdtZW50cyk7YnJlYWs7Y2FzZSBcIkNpcmNsZUdlb21ldHJ5XCI6Zz1uZXcgVEhSRUUuQ2lyY2xlR2VvbWV0cnkoaC5yYWRpdXMsaC5zZWdtZW50cyk7YnJlYWs7Y2FzZSBcIkN5bGluZGVyR2VvbWV0cnlcIjpnPW5ldyBUSFJFRS5DeWxpbmRlckdlb21ldHJ5KGgucmFkaXVzVG9wLGgucmFkaXVzQm90dG9tLGguaGVpZ2h0LGgucmFkaWFsU2VnbWVudHMsaC5oZWlnaHRTZWdtZW50cyxoLm9wZW5FbmRlZCk7YnJlYWs7Y2FzZSBcIlNwaGVyZUdlb21ldHJ5XCI6Zz1uZXcgVEhSRUUuU3BoZXJlR2VvbWV0cnkoaC5yYWRpdXMsaC53aWR0aFNlZ21lbnRzLGguaGVpZ2h0U2VnbWVudHMsaC5waGlTdGFydCxoLnBoaUxlbmd0aCxoLnRoZXRhU3RhcnQsaC50aGV0YUxlbmd0aCk7YnJlYWs7Y2FzZSBcIkljb3NhaGVkcm9uR2VvbWV0cnlcIjpnPW5ldyBUSFJFRS5JY29zYWhlZHJvbkdlb21ldHJ5KGgucmFkaXVzLFxuaC5kZXRhaWwpO2JyZWFrO2Nhc2UgXCJUb3J1c0dlb21ldHJ5XCI6Zz1uZXcgVEhSRUUuVG9ydXNHZW9tZXRyeShoLnJhZGl1cyxoLnR1YmUsaC5yYWRpYWxTZWdtZW50cyxoLnR1YnVsYXJTZWdtZW50cyxoLmFyYyk7YnJlYWs7Y2FzZSBcIlRvcnVzS25vdEdlb21ldHJ5XCI6Zz1uZXcgVEhSRUUuVG9ydXNLbm90R2VvbWV0cnkoaC5yYWRpdXMsaC50dWJlLGgucmFkaWFsU2VnbWVudHMsaC50dWJ1bGFyU2VnbWVudHMsaC5wLGgucSxoLmhlaWdodFNjYWxlKTticmVhaztjYXNlIFwiQnVmZmVyR2VvbWV0cnlcIjpnPWQucGFyc2UoaCk7YnJlYWs7Y2FzZSBcIkdlb21ldHJ5XCI6Zz1jLnBhcnNlKGguZGF0YSkuZ2VvbWV0cnl9Zy51dWlkPWgudXVpZDt2b2lkIDAhPT1oLm5hbWUmJihnLm5hbWU9aC5uYW1lKTtiW2gudXVpZF09Z31yZXR1cm4gYn0scGFyc2VNYXRlcmlhbHM6ZnVuY3Rpb24oYSxiKXt2YXIgYz17fTtpZih2b2lkIDAhPT1hKWZvcih2YXIgZD1mdW5jdGlvbihhKXt2b2lkIDA9PT1iW2FdJiZcblRIUkVFLndhcm4oXCJUSFJFRS5PYmplY3RMb2FkZXI6IFVuZGVmaW5lZCB0ZXh0dXJlXCIsYSk7cmV0dXJuIGJbYV19LGU9bmV3IFRIUkVFLk1hdGVyaWFsTG9hZGVyLGY9MCxnPWEubGVuZ3RoO2Y8ZztmKyspe3ZhciBoPWFbZl0saz1lLnBhcnNlKGgpO2sudXVpZD1oLnV1aWQ7dm9pZCAwIT09aC5uYW1lJiYoay5uYW1lPWgubmFtZSk7dm9pZCAwIT09aC5tYXAmJihrLm1hcD1kKGgubWFwKSk7dm9pZCAwIT09aC5idW1wTWFwJiYoay5idW1wTWFwPWQoaC5idW1wTWFwKSxoLmJ1bXBTY2FsZSYmKGsuYnVtcFNjYWxlPW5ldyBUSFJFRS5WZWN0b3IyKGguYnVtcFNjYWxlLGguYnVtcFNjYWxlKSkpO3ZvaWQgMCE9PWguYWxwaGFNYXAmJihrLmFscGhhTWFwPWQoaC5hbHBoYU1hcCkpO3ZvaWQgMCE9PWguZW52TWFwJiYoay5lbnZNYXA9ZChoLmVudk1hcCkpO3ZvaWQgMCE9PWgubm9ybWFsTWFwJiYoay5ub3JtYWxNYXA9ZChoLm5vcm1hbE1hcCksaC5ub3JtYWxTY2FsZSYmKGsubm9ybWFsU2NhbGU9XG5uZXcgVEhSRUUuVmVjdG9yMihoLm5vcm1hbFNjYWxlLGgubm9ybWFsU2NhbGUpKSk7dm9pZCAwIT09aC5saWdodE1hcCYmKGsubGlnaHRNYXA9ZChoLmxpZ2h0TWFwKSk7dm9pZCAwIT09aC5zcGVjdWxhck1hcCYmKGsuc3BlY3VsYXJNYXA9ZChoLnNwZWN1bGFyTWFwKSk7Y1toLnV1aWRdPWt9cmV0dXJuIGN9LHBhcnNlSW1hZ2VzOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcyxkPXt9O2lmKHZvaWQgMCE9PWEmJjA8YS5sZW5ndGgpe3ZhciBlPW5ldyBUSFJFRS5Mb2FkaW5nTWFuYWdlcihiKSxmPW5ldyBUSFJFRS5JbWFnZUxvYWRlcihlKTtmLnNldENyb3NzT3JpZ2luKHRoaXMuY3Jvc3NPcmlnaW4pO2Zvcih2YXIgZT1mdW5jdGlvbihhKXtjLm1hbmFnZXIuaXRlbVN0YXJ0KGEpO3JldHVybiBmLmxvYWQoYSxmdW5jdGlvbigpe2MubWFuYWdlci5pdGVtRW5kKGEpfSl9LGc9MCxoPWEubGVuZ3RoO2c8aDtnKyspe3ZhciBrPWFbZ10sbD0vXihcXC9cXC8pfChbYS16XSs6KFxcL1xcLyk/KS9pLnRlc3Qoay51cmwpP1xuay51cmw6Yy50ZXh0dXJlUGF0aCtrLnVybDtkW2sudXVpZF09ZShsKX19cmV0dXJuIGR9LHBhcnNlVGV4dHVyZXM6ZnVuY3Rpb24oYSxiKXt2YXIgYz17fTtpZih2b2lkIDAhPT1hKWZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlO2QrKyl7dmFyIGY9YVtkXTt2b2lkIDA9PT1mLmltYWdlJiZUSFJFRS53YXJuKCdUSFJFRS5PYmplY3RMb2FkZXI6IE5vIFwiaW1hZ2VcIiBzcGVmaWNpZWQgZm9yJyxmLnV1aWQpO3ZvaWQgMD09PWJbZi5pbWFnZV0mJlRIUkVFLndhcm4oXCJUSFJFRS5PYmplY3RMb2FkZXI6IFVuZGVmaW5lZCBpbWFnZVwiLGYuaW1hZ2UpO3ZhciBnPW5ldyBUSFJFRS5UZXh0dXJlKGJbZi5pbWFnZV0pO2cubmVlZHNVcGRhdGU9ITA7Zy51dWlkPWYudXVpZDt2b2lkIDAhPT1mLm5hbWUmJihnLm5hbWU9Zi5uYW1lKTt2b2lkIDAhPT1mLnJlcGVhdCYmKGcucmVwZWF0PW5ldyBUSFJFRS5WZWN0b3IyKGYucmVwZWF0WzBdLGYucmVwZWF0WzFdKSk7dm9pZCAwIT09Zi5taW5GaWx0ZXImJlxuKGcubWluRmlsdGVyPVRIUkVFW2YubWluRmlsdGVyXSk7dm9pZCAwIT09Zi5tYWdGaWx0ZXImJihnLm1hZ0ZpbHRlcj1USFJFRVtmLm1hZ0ZpbHRlcl0pO3ZvaWQgMCE9PWYuYW5pc290cm9weSYmKGcuYW5pc290cm9weT1mLmFuaXNvdHJvcHkpO2Yud3JhcCBpbnN0YW5jZW9mIEFycmF5JiYoZy53cmFwUz1USFJFRVtmLndyYXBbMF1dLGcud3JhcFQ9VEhSRUVbZi53cmFwWzFdXSk7Y1tmLnV1aWRdPWd9cmV0dXJuIGN9LHBhcnNlT2JqZWN0OmZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLk1hdHJpeDQ7cmV0dXJuIGZ1bmN0aW9uKGIsYyxkKXt2YXIgZTtlPWZ1bmN0aW9uKGEpe3ZvaWQgMD09PWNbYV0mJlRIUkVFLndhcm4oXCJUSFJFRS5PYmplY3RMb2FkZXI6IFVuZGVmaW5lZCBnZW9tZXRyeVwiLGEpO3JldHVybiBjW2FdfTt2YXIgZj1mdW5jdGlvbihhKXt2b2lkIDA9PT1kW2FdJiZUSFJFRS53YXJuKFwiVEhSRUUuT2JqZWN0TG9hZGVyOiBVbmRlZmluZWQgbWF0ZXJpYWxcIixhKTtyZXR1cm4gZFthXX07XG5zd2l0Y2goYi50eXBlKXtjYXNlIFwiU2NlbmVcIjplPW5ldyBUSFJFRS5TY2VuZTticmVhaztjYXNlIFwiUGVyc3BlY3RpdmVDYW1lcmFcIjplPW5ldyBUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYShiLmZvdixiLmFzcGVjdCxiLm5lYXIsYi5mYXIpO2JyZWFrO2Nhc2UgXCJPcnRob2dyYXBoaWNDYW1lcmFcIjplPW5ldyBUSFJFRS5PcnRob2dyYXBoaWNDYW1lcmEoYi5sZWZ0LGIucmlnaHQsYi50b3AsYi5ib3R0b20sYi5uZWFyLGIuZmFyKTticmVhaztjYXNlIFwiQW1iaWVudExpZ2h0XCI6ZT1uZXcgVEhSRUUuQW1iaWVudExpZ2h0KGIuY29sb3IpO2JyZWFrO2Nhc2UgXCJEaXJlY3Rpb25hbExpZ2h0XCI6ZT1uZXcgVEhSRUUuRGlyZWN0aW9uYWxMaWdodChiLmNvbG9yLGIuaW50ZW5zaXR5KTticmVhaztjYXNlIFwiUG9pbnRMaWdodFwiOmU9bmV3IFRIUkVFLlBvaW50TGlnaHQoYi5jb2xvcixiLmludGVuc2l0eSxiLmRpc3RhbmNlLGIuZGVjYXkpO2JyZWFrO2Nhc2UgXCJTcG90TGlnaHRcIjplPW5ldyBUSFJFRS5TcG90TGlnaHQoYi5jb2xvcixcbmIuaW50ZW5zaXR5LGIuZGlzdGFuY2UsYi5hbmdsZSxiLmV4cG9uZW50LGIuZGVjYXkpO2JyZWFrO2Nhc2UgXCJIZW1pc3BoZXJlTGlnaHRcIjplPW5ldyBUSFJFRS5IZW1pc3BoZXJlTGlnaHQoYi5jb2xvcixiLmdyb3VuZENvbG9yLGIuaW50ZW5zaXR5KTticmVhaztjYXNlIFwiTWVzaFwiOmU9bmV3IFRIUkVFLk1lc2goZShiLmdlb21ldHJ5KSxmKGIubWF0ZXJpYWwpKTticmVhaztjYXNlIFwiTGluZVwiOmU9bmV3IFRIUkVFLkxpbmUoZShiLmdlb21ldHJ5KSxmKGIubWF0ZXJpYWwpLGIubW9kZSk7YnJlYWs7Y2FzZSBcIlBvaW50Q2xvdWRcIjplPW5ldyBUSFJFRS5Qb2ludENsb3VkKGUoYi5nZW9tZXRyeSksZihiLm1hdGVyaWFsKSk7YnJlYWs7Y2FzZSBcIlNwcml0ZVwiOmU9bmV3IFRIUkVFLlNwcml0ZShmKGIubWF0ZXJpYWwpKTticmVhaztjYXNlIFwiR3JvdXBcIjplPW5ldyBUSFJFRS5Hcm91cDticmVhaztkZWZhdWx0OmU9bmV3IFRIUkVFLk9iamVjdDNEfWUudXVpZD1iLnV1aWQ7dm9pZCAwIT09XG5iLm5hbWUmJihlLm5hbWU9Yi5uYW1lKTt2b2lkIDAhPT1iLm1hdHJpeD8oYS5mcm9tQXJyYXkoYi5tYXRyaXgpLGEuZGVjb21wb3NlKGUucG9zaXRpb24sZS5xdWF0ZXJuaW9uLGUuc2NhbGUpKToodm9pZCAwIT09Yi5wb3NpdGlvbiYmZS5wb3NpdGlvbi5mcm9tQXJyYXkoYi5wb3NpdGlvbiksdm9pZCAwIT09Yi5yb3RhdGlvbiYmZS5yb3RhdGlvbi5mcm9tQXJyYXkoYi5yb3RhdGlvbiksdm9pZCAwIT09Yi5zY2FsZSYmZS5zY2FsZS5mcm9tQXJyYXkoYi5zY2FsZSkpO3ZvaWQgMCE9PWIudmlzaWJsZSYmKGUudmlzaWJsZT1iLnZpc2libGUpO3ZvaWQgMCE9PWIudXNlckRhdGEmJihlLnVzZXJEYXRhPWIudXNlckRhdGEpO2lmKHZvaWQgMCE9PWIuY2hpbGRyZW4pZm9yKHZhciBnIGluIGIuY2hpbGRyZW4pZS5hZGQodGhpcy5wYXJzZU9iamVjdChiLmNoaWxkcmVuW2ddLGMsZCkpO3JldHVybiBlfX0oKX07XG5USFJFRS5UZXh0dXJlTG9hZGVyPWZ1bmN0aW9uKGEpe3RoaXMubWFuYWdlcj12b2lkIDAhPT1hP2E6VEhSRUUuRGVmYXVsdExvYWRpbmdNYW5hZ2VyfTtUSFJFRS5UZXh0dXJlTG9hZGVyLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuVGV4dHVyZUxvYWRlcixsb2FkOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPW5ldyBUSFJFRS5JbWFnZUxvYWRlcih0aGlzLm1hbmFnZXIpO2Uuc2V0Q3Jvc3NPcmlnaW4odGhpcy5jcm9zc09yaWdpbik7ZS5sb2FkKGEsZnVuY3Rpb24oYSl7YT1uZXcgVEhSRUUuVGV4dHVyZShhKTthLm5lZWRzVXBkYXRlPSEwO3ZvaWQgMCE9PWImJmIoYSl9LGMsZCl9LHNldENyb3NzT3JpZ2luOmZ1bmN0aW9uKGEpe3RoaXMuY3Jvc3NPcmlnaW49YX19O1RIUkVFLkRhdGFUZXh0dXJlTG9hZGVyPVRIUkVFLkJpbmFyeVRleHR1cmVMb2FkZXI9ZnVuY3Rpb24oKXt0aGlzLl9wYXJzZXI9bnVsbH07XG5USFJFRS5CaW5hcnlUZXh0dXJlTG9hZGVyLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuQmluYXJ5VGV4dHVyZUxvYWRlcixsb2FkOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXRoaXMsZj1uZXcgVEhSRUUuRGF0YVRleHR1cmUsZz1uZXcgVEhSRUUuWEhSTG9hZGVyO2cuc2V0UmVzcG9uc2VUeXBlKFwiYXJyYXlidWZmZXJcIik7Zy5sb2FkKGEsZnVuY3Rpb24oYSl7aWYoYT1lLl9wYXJzZXIoYSkpdm9pZCAwIT09YS5pbWFnZT9mLmltYWdlPWEuaW1hZ2U6dm9pZCAwIT09YS5kYXRhJiYoZi5pbWFnZS53aWR0aD1hLndpZHRoLGYuaW1hZ2UuaGVpZ2h0PWEuaGVpZ2h0LGYuaW1hZ2UuZGF0YT1hLmRhdGEpLGYud3JhcFM9dm9pZCAwIT09YS53cmFwUz9hLndyYXBTOlRIUkVFLkNsYW1wVG9FZGdlV3JhcHBpbmcsZi53cmFwVD12b2lkIDAhPT1hLndyYXBUP2Eud3JhcFQ6VEhSRUUuQ2xhbXBUb0VkZ2VXcmFwcGluZyxmLm1hZ0ZpbHRlcj12b2lkIDAhPT1hLm1hZ0ZpbHRlcj9hLm1hZ0ZpbHRlcjpcblRIUkVFLkxpbmVhckZpbHRlcixmLm1pbkZpbHRlcj12b2lkIDAhPT1hLm1pbkZpbHRlcj9hLm1pbkZpbHRlcjpUSFJFRS5MaW5lYXJNaXBNYXBMaW5lYXJGaWx0ZXIsZi5hbmlzb3Ryb3B5PXZvaWQgMCE9PWEuYW5pc290cm9weT9hLmFuaXNvdHJvcHk6MSx2b2lkIDAhPT1hLmZvcm1hdCYmKGYuZm9ybWF0PWEuZm9ybWF0KSx2b2lkIDAhPT1hLnR5cGUmJihmLnR5cGU9YS50eXBlKSx2b2lkIDAhPT1hLm1pcG1hcHMmJihmLm1pcG1hcHM9YS5taXBtYXBzKSwxPT09YS5taXBtYXBDb3VudCYmKGYubWluRmlsdGVyPVRIUkVFLkxpbmVhckZpbHRlciksZi5uZWVkc1VwZGF0ZT0hMCxiJiZiKGYsYSl9LGMsZCk7cmV0dXJuIGZ9fTtUSFJFRS5Db21wcmVzc2VkVGV4dHVyZUxvYWRlcj1mdW5jdGlvbigpe3RoaXMuX3BhcnNlcj1udWxsfTtcblRIUkVFLkNvbXByZXNzZWRUZXh0dXJlTG9hZGVyLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuQ29tcHJlc3NlZFRleHR1cmVMb2FkZXIsbG9hZDpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcyxlPVtdLGY9bmV3IFRIUkVFLkNvbXByZXNzZWRUZXh0dXJlO2YuaW1hZ2U9ZTt2YXIgZz1uZXcgVEhSRUUuWEhSTG9hZGVyO2cuc2V0UmVzcG9uc2VUeXBlKFwiYXJyYXlidWZmZXJcIik7aWYoYSBpbnN0YW5jZW9mIEFycmF5KXt2YXIgaD0wO2M9ZnVuY3Rpb24oYyl7Zy5sb2FkKGFbY10sZnVuY3Rpb24oYSl7YT1kLl9wYXJzZXIoYSwhMCk7ZVtjXT17d2lkdGg6YS53aWR0aCxoZWlnaHQ6YS5oZWlnaHQsZm9ybWF0OmEuZm9ybWF0LG1pcG1hcHM6YS5taXBtYXBzfTtoKz0xOzY9PT1oJiYoMT09YS5taXBtYXBDb3VudCYmKGYubWluRmlsdGVyPVRIUkVFLkxpbmVhckZpbHRlciksZi5mb3JtYXQ9YS5mb3JtYXQsZi5uZWVkc1VwZGF0ZT0hMCxiJiZiKGYpKX0pfTtmb3IodmFyIGs9MCxsPVxuYS5sZW5ndGg7azxsOysrayljKGspfWVsc2UgZy5sb2FkKGEsZnVuY3Rpb24oYSl7YT1kLl9wYXJzZXIoYSwhMCk7aWYoYS5pc0N1YmVtYXApZm9yKHZhciBjPWEubWlwbWFwcy5sZW5ndGgvYS5taXBtYXBDb3VudCxnPTA7ZzxjO2crKyl7ZVtnXT17bWlwbWFwczpbXX07Zm9yKHZhciBoPTA7aDxhLm1pcG1hcENvdW50O2grKyllW2ddLm1pcG1hcHMucHVzaChhLm1pcG1hcHNbZyphLm1pcG1hcENvdW50K2hdKSxlW2ddLmZvcm1hdD1hLmZvcm1hdCxlW2ddLndpZHRoPWEud2lkdGgsZVtnXS5oZWlnaHQ9YS5oZWlnaHR9ZWxzZSBmLmltYWdlLndpZHRoPWEud2lkdGgsZi5pbWFnZS5oZWlnaHQ9YS5oZWlnaHQsZi5taXBtYXBzPWEubWlwbWFwczsxPT09YS5taXBtYXBDb3VudCYmKGYubWluRmlsdGVyPVRIUkVFLkxpbmVhckZpbHRlcik7Zi5mb3JtYXQ9YS5mb3JtYXQ7Zi5uZWVkc1VwZGF0ZT0hMDtiJiZiKGYpfSk7cmV0dXJuIGZ9fTtcblRIUkVFLk1hdGVyaWFsPWZ1bmN0aW9uKCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJpZFwiLHt2YWx1ZTpUSFJFRS5NYXRlcmlhbElkQ291bnQrK30pO3RoaXMudXVpZD1USFJFRS5NYXRoLmdlbmVyYXRlVVVJRCgpO3RoaXMubmFtZT1cIlwiO3RoaXMudHlwZT1cIk1hdGVyaWFsXCI7dGhpcy5zaWRlPVRIUkVFLkZyb250U2lkZTt0aGlzLm9wYWNpdHk9MTt0aGlzLnRyYW5zcGFyZW50PSExO3RoaXMuYmxlbmRpbmc9VEhSRUUuTm9ybWFsQmxlbmRpbmc7dGhpcy5ibGVuZFNyYz1USFJFRS5TcmNBbHBoYUZhY3Rvcjt0aGlzLmJsZW5kRHN0PVRIUkVFLk9uZU1pbnVzU3JjQWxwaGFGYWN0b3I7dGhpcy5ibGVuZEVxdWF0aW9uPVRIUkVFLkFkZEVxdWF0aW9uO3RoaXMuYmxlbmRFcXVhdGlvbkFscGhhPXRoaXMuYmxlbmREc3RBbHBoYT10aGlzLmJsZW5kU3JjQWxwaGE9bnVsbDt0aGlzLmNvbG9yV3JpdGU9dGhpcy5kZXB0aFdyaXRlPXRoaXMuZGVwdGhUZXN0PSEwO3RoaXMucG9seWdvbk9mZnNldD1cbiExO3RoaXMub3ZlcmRyYXc9dGhpcy5hbHBoYVRlc3Q9dGhpcy5wb2x5Z29uT2Zmc2V0VW5pdHM9dGhpcy5wb2x5Z29uT2Zmc2V0RmFjdG9yPTA7dGhpcy5fbmVlZHNVcGRhdGU9dGhpcy52aXNpYmxlPSEwfTtcblRIUkVFLk1hdGVyaWFsLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuTWF0ZXJpYWwsZ2V0IG5lZWRzVXBkYXRlKCl7cmV0dXJuIHRoaXMuX25lZWRzVXBkYXRlfSxzZXQgbmVlZHNVcGRhdGUoYSl7ITA9PT1hJiZ0aGlzLnVwZGF0ZSgpO3RoaXMuX25lZWRzVXBkYXRlPWF9LHNldFZhbHVlczpmdW5jdGlvbihhKXtpZih2b2lkIDAhPT1hKWZvcih2YXIgYiBpbiBhKXt2YXIgYz1hW2JdO2lmKHZvaWQgMD09PWMpVEhSRUUud2FybihcIlRIUkVFLk1hdGVyaWFsOiAnXCIrYitcIicgcGFyYW1ldGVyIGlzIHVuZGVmaW5lZC5cIik7ZWxzZSBpZihiIGluIHRoaXMpe3ZhciBkPXRoaXNbYl07ZCBpbnN0YW5jZW9mIFRIUkVFLkNvbG9yP2Quc2V0KGMpOmQgaW5zdGFuY2VvZiBUSFJFRS5WZWN0b3IzJiZjIGluc3RhbmNlb2YgVEhSRUUuVmVjdG9yMz9kLmNvcHkoYyk6dGhpc1tiXT1cIm92ZXJkcmF3XCI9PWI/TnVtYmVyKGMpOmN9fX0sdG9KU09OOmZ1bmN0aW9uKCl7dmFyIGE9e21ldGFkYXRhOnt2ZXJzaW9uOjQuMixcbnR5cGU6XCJtYXRlcmlhbFwiLGdlbmVyYXRvcjpcIk1hdGVyaWFsRXhwb3J0ZXJcIn0sdXVpZDp0aGlzLnV1aWQsdHlwZTp0aGlzLnR5cGV9O1wiXCIhPT10aGlzLm5hbWUmJihhLm5hbWU9dGhpcy5uYW1lKTt0aGlzIGluc3RhbmNlb2YgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWw/KGEuY29sb3I9dGhpcy5jb2xvci5nZXRIZXgoKSx0aGlzLnZlcnRleENvbG9ycyE9PVRIUkVFLk5vQ29sb3JzJiYoYS52ZXJ0ZXhDb2xvcnM9dGhpcy52ZXJ0ZXhDb2xvcnMpLHRoaXMuYmxlbmRpbmchPT1USFJFRS5Ob3JtYWxCbGVuZGluZyYmKGEuYmxlbmRpbmc9dGhpcy5ibGVuZGluZyksdGhpcy5zaWRlIT09VEhSRUUuRnJvbnRTaWRlJiYoYS5zaWRlPXRoaXMuc2lkZSkpOnRoaXMgaW5zdGFuY2VvZiBUSFJFRS5NZXNoTGFtYmVydE1hdGVyaWFsPyhhLmNvbG9yPXRoaXMuY29sb3IuZ2V0SGV4KCksYS5lbWlzc2l2ZT10aGlzLmVtaXNzaXZlLmdldEhleCgpLHRoaXMudmVydGV4Q29sb3JzIT09VEhSRUUuTm9Db2xvcnMmJlxuKGEudmVydGV4Q29sb3JzPXRoaXMudmVydGV4Q29sb3JzKSx0aGlzLnNoYWRpbmchPT1USFJFRS5TbW9vdGhTaGFkaW5nJiYoYS5zaGFkaW5nPXRoaXMuc2hhZGluZyksdGhpcy5ibGVuZGluZyE9PVRIUkVFLk5vcm1hbEJsZW5kaW5nJiYoYS5ibGVuZGluZz10aGlzLmJsZW5kaW5nKSx0aGlzLnNpZGUhPT1USFJFRS5Gcm9udFNpZGUmJihhLnNpZGU9dGhpcy5zaWRlKSk6dGhpcyBpbnN0YW5jZW9mIFRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsPyhhLmNvbG9yPXRoaXMuY29sb3IuZ2V0SGV4KCksYS5lbWlzc2l2ZT10aGlzLmVtaXNzaXZlLmdldEhleCgpLGEuc3BlY3VsYXI9dGhpcy5zcGVjdWxhci5nZXRIZXgoKSxhLnNoaW5pbmVzcz10aGlzLnNoaW5pbmVzcyx0aGlzLnZlcnRleENvbG9ycyE9PVRIUkVFLk5vQ29sb3JzJiYoYS52ZXJ0ZXhDb2xvcnM9dGhpcy52ZXJ0ZXhDb2xvcnMpLHRoaXMuc2hhZGluZyE9PVRIUkVFLlNtb290aFNoYWRpbmcmJihhLnNoYWRpbmc9dGhpcy5zaGFkaW5nKSxcbnRoaXMuYmxlbmRpbmchPT1USFJFRS5Ob3JtYWxCbGVuZGluZyYmKGEuYmxlbmRpbmc9dGhpcy5ibGVuZGluZyksdGhpcy5zaWRlIT09VEhSRUUuRnJvbnRTaWRlJiYoYS5zaWRlPXRoaXMuc2lkZSkpOnRoaXMgaW5zdGFuY2VvZiBUSFJFRS5NZXNoTm9ybWFsTWF0ZXJpYWw/KHRoaXMuYmxlbmRpbmchPT1USFJFRS5Ob3JtYWxCbGVuZGluZyYmKGEuYmxlbmRpbmc9dGhpcy5ibGVuZGluZyksdGhpcy5zaWRlIT09VEhSRUUuRnJvbnRTaWRlJiYoYS5zaWRlPXRoaXMuc2lkZSkpOnRoaXMgaW5zdGFuY2VvZiBUSFJFRS5NZXNoRGVwdGhNYXRlcmlhbD8odGhpcy5ibGVuZGluZyE9PVRIUkVFLk5vcm1hbEJsZW5kaW5nJiYoYS5ibGVuZGluZz10aGlzLmJsZW5kaW5nKSx0aGlzLnNpZGUhPT1USFJFRS5Gcm9udFNpZGUmJihhLnNpZGU9dGhpcy5zaWRlKSk6dGhpcyBpbnN0YW5jZW9mIFRIUkVFLlBvaW50Q2xvdWRNYXRlcmlhbD8oYS5zaXplPXRoaXMuc2l6ZSxhLnNpemVBdHRlbnVhdGlvbj1cbnRoaXMuc2l6ZUF0dGVudWF0aW9uLGEuY29sb3I9dGhpcy5jb2xvci5nZXRIZXgoKSx0aGlzLnZlcnRleENvbG9ycyE9PVRIUkVFLk5vQ29sb3JzJiYoYS52ZXJ0ZXhDb2xvcnM9dGhpcy52ZXJ0ZXhDb2xvcnMpLHRoaXMuYmxlbmRpbmchPT1USFJFRS5Ob3JtYWxCbGVuZGluZyYmKGEuYmxlbmRpbmc9dGhpcy5ibGVuZGluZykpOnRoaXMgaW5zdGFuY2VvZiBUSFJFRS5TaGFkZXJNYXRlcmlhbD8oYS51bmlmb3Jtcz10aGlzLnVuaWZvcm1zLGEudmVydGV4U2hhZGVyPXRoaXMudmVydGV4U2hhZGVyLGEuZnJhZ21lbnRTaGFkZXI9dGhpcy5mcmFnbWVudFNoYWRlcik6dGhpcyBpbnN0YW5jZW9mIFRIUkVFLlNwcml0ZU1hdGVyaWFsJiYoYS5jb2xvcj10aGlzLmNvbG9yLmdldEhleCgpKTsxPnRoaXMub3BhY2l0eSYmKGEub3BhY2l0eT10aGlzLm9wYWNpdHkpOyExIT09dGhpcy50cmFuc3BhcmVudCYmKGEudHJhbnNwYXJlbnQ9dGhpcy50cmFuc3BhcmVudCk7ITEhPT10aGlzLndpcmVmcmFtZSYmXG4oYS53aXJlZnJhbWU9dGhpcy53aXJlZnJhbWUpO3JldHVybiBhfSxjbG9uZTpmdW5jdGlvbihhKXt2b2lkIDA9PT1hJiYoYT1uZXcgVEhSRUUuTWF0ZXJpYWwpO2EubmFtZT10aGlzLm5hbWU7YS5zaWRlPXRoaXMuc2lkZTthLm9wYWNpdHk9dGhpcy5vcGFjaXR5O2EudHJhbnNwYXJlbnQ9dGhpcy50cmFuc3BhcmVudDthLmJsZW5kaW5nPXRoaXMuYmxlbmRpbmc7YS5ibGVuZFNyYz10aGlzLmJsZW5kU3JjO2EuYmxlbmREc3Q9dGhpcy5ibGVuZERzdDthLmJsZW5kRXF1YXRpb249dGhpcy5ibGVuZEVxdWF0aW9uO2EuYmxlbmRTcmNBbHBoYT10aGlzLmJsZW5kU3JjQWxwaGE7YS5ibGVuZERzdEFscGhhPXRoaXMuYmxlbmREc3RBbHBoYTthLmJsZW5kRXF1YXRpb25BbHBoYT10aGlzLmJsZW5kRXF1YXRpb25BbHBoYTthLmRlcHRoVGVzdD10aGlzLmRlcHRoVGVzdDthLmRlcHRoV3JpdGU9dGhpcy5kZXB0aFdyaXRlO2EucG9seWdvbk9mZnNldD10aGlzLnBvbHlnb25PZmZzZXQ7YS5wb2x5Z29uT2Zmc2V0RmFjdG9yPVxudGhpcy5wb2x5Z29uT2Zmc2V0RmFjdG9yO2EucG9seWdvbk9mZnNldFVuaXRzPXRoaXMucG9seWdvbk9mZnNldFVuaXRzO2EuYWxwaGFUZXN0PXRoaXMuYWxwaGFUZXN0O2Eub3ZlcmRyYXc9dGhpcy5vdmVyZHJhdzthLnZpc2libGU9dGhpcy52aXNpYmxlO3JldHVybiBhfSx1cGRhdGU6ZnVuY3Rpb24oKXt0aGlzLmRpc3BhdGNoRXZlbnQoe3R5cGU6XCJ1cGRhdGVcIn0pfSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5kaXNwYXRjaEV2ZW50KHt0eXBlOlwiZGlzcG9zZVwifSl9fTtUSFJFRS5FdmVudERpc3BhdGNoZXIucHJvdG90eXBlLmFwcGx5KFRIUkVFLk1hdGVyaWFsLnByb3RvdHlwZSk7VEhSRUUuTWF0ZXJpYWxJZENvdW50PTA7XG5USFJFRS5MaW5lQmFzaWNNYXRlcmlhbD1mdW5jdGlvbihhKXtUSFJFRS5NYXRlcmlhbC5jYWxsKHRoaXMpO3RoaXMudHlwZT1cIkxpbmVCYXNpY01hdGVyaWFsXCI7dGhpcy5jb2xvcj1uZXcgVEhSRUUuQ29sb3IoMTY3NzcyMTUpO3RoaXMubGluZXdpZHRoPTE7dGhpcy5saW5lam9pbj10aGlzLmxpbmVjYXA9XCJyb3VuZFwiO3RoaXMudmVydGV4Q29sb3JzPVRIUkVFLk5vQ29sb3JzO3RoaXMuZm9nPSEwO3RoaXMuc2V0VmFsdWVzKGEpfTtUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5NYXRlcmlhbC5wcm90b3R5cGUpO1RIUkVFLkxpbmVCYXNpY01hdGVyaWFsLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5MaW5lQmFzaWNNYXRlcmlhbDtcblRIUkVFLkxpbmVCYXNpY01hdGVyaWFsLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbDtUSFJFRS5NYXRlcmlhbC5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzLGEpO2EuY29sb3IuY29weSh0aGlzLmNvbG9yKTthLmxpbmV3aWR0aD10aGlzLmxpbmV3aWR0aDthLmxpbmVjYXA9dGhpcy5saW5lY2FwO2EubGluZWpvaW49dGhpcy5saW5lam9pbjthLnZlcnRleENvbG9ycz10aGlzLnZlcnRleENvbG9yczthLmZvZz10aGlzLmZvZztyZXR1cm4gYX07XG5USFJFRS5MaW5lRGFzaGVkTWF0ZXJpYWw9ZnVuY3Rpb24oYSl7VEhSRUUuTWF0ZXJpYWwuY2FsbCh0aGlzKTt0aGlzLnR5cGU9XCJMaW5lRGFzaGVkTWF0ZXJpYWxcIjt0aGlzLmNvbG9yPW5ldyBUSFJFRS5Db2xvcigxNjc3NzIxNSk7dGhpcy5zY2FsZT10aGlzLmxpbmV3aWR0aD0xO3RoaXMuZGFzaFNpemU9Mzt0aGlzLmdhcFNpemU9MTt0aGlzLnZlcnRleENvbG9ycz0hMTt0aGlzLmZvZz0hMDt0aGlzLnNldFZhbHVlcyhhKX07VEhSRUUuTGluZURhc2hlZE1hdGVyaWFsLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk1hdGVyaWFsLnByb3RvdHlwZSk7VEhSRUUuTGluZURhc2hlZE1hdGVyaWFsLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5MaW5lRGFzaGVkTWF0ZXJpYWw7XG5USFJFRS5MaW5lRGFzaGVkTWF0ZXJpYWwucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLkxpbmVEYXNoZWRNYXRlcmlhbDtUSFJFRS5NYXRlcmlhbC5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzLGEpO2EuY29sb3IuY29weSh0aGlzLmNvbG9yKTthLmxpbmV3aWR0aD10aGlzLmxpbmV3aWR0aDthLnNjYWxlPXRoaXMuc2NhbGU7YS5kYXNoU2l6ZT10aGlzLmRhc2hTaXplO2EuZ2FwU2l6ZT10aGlzLmdhcFNpemU7YS52ZXJ0ZXhDb2xvcnM9dGhpcy52ZXJ0ZXhDb2xvcnM7YS5mb2c9dGhpcy5mb2c7cmV0dXJuIGF9O1xuVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWw9ZnVuY3Rpb24oYSl7VEhSRUUuTWF0ZXJpYWwuY2FsbCh0aGlzKTt0aGlzLnR5cGU9XCJNZXNoQmFzaWNNYXRlcmlhbFwiO3RoaXMuY29sb3I9bmV3IFRIUkVFLkNvbG9yKDE2Nzc3MjE1KTt0aGlzLmVudk1hcD10aGlzLmFscGhhTWFwPXRoaXMuc3BlY3VsYXJNYXA9dGhpcy5saWdodE1hcD10aGlzLm1hcD1udWxsO3RoaXMuY29tYmluZT1USFJFRS5NdWx0aXBseU9wZXJhdGlvbjt0aGlzLnJlZmxlY3Rpdml0eT0xO3RoaXMucmVmcmFjdGlvblJhdGlvPS45ODt0aGlzLmZvZz0hMDt0aGlzLnNoYWRpbmc9VEhSRUUuU21vb3RoU2hhZGluZzt0aGlzLndpcmVmcmFtZT0hMTt0aGlzLndpcmVmcmFtZUxpbmV3aWR0aD0xO3RoaXMud2lyZWZyYW1lTGluZWpvaW49dGhpcy53aXJlZnJhbWVMaW5lY2FwPVwicm91bmRcIjt0aGlzLnZlcnRleENvbG9ycz1USFJFRS5Ob0NvbG9yczt0aGlzLm1vcnBoVGFyZ2V0cz10aGlzLnNraW5uaW5nPSExO3RoaXMuc2V0VmFsdWVzKGEpfTtcblRIUkVFLk1lc2hCYXNpY01hdGVyaWFsLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk1hdGVyaWFsLnByb3RvdHlwZSk7VEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLk1lc2hCYXNpY01hdGVyaWFsO1xuVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsO1RIUkVFLk1hdGVyaWFsLnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsYSk7YS5jb2xvci5jb3B5KHRoaXMuY29sb3IpO2EubWFwPXRoaXMubWFwO2EubGlnaHRNYXA9dGhpcy5saWdodE1hcDthLnNwZWN1bGFyTWFwPXRoaXMuc3BlY3VsYXJNYXA7YS5hbHBoYU1hcD10aGlzLmFscGhhTWFwO2EuZW52TWFwPXRoaXMuZW52TWFwO2EuY29tYmluZT10aGlzLmNvbWJpbmU7YS5yZWZsZWN0aXZpdHk9dGhpcy5yZWZsZWN0aXZpdHk7YS5yZWZyYWN0aW9uUmF0aW89dGhpcy5yZWZyYWN0aW9uUmF0aW87YS5mb2c9dGhpcy5mb2c7YS5zaGFkaW5nPXRoaXMuc2hhZGluZzthLndpcmVmcmFtZT10aGlzLndpcmVmcmFtZTthLndpcmVmcmFtZUxpbmV3aWR0aD10aGlzLndpcmVmcmFtZUxpbmV3aWR0aDthLndpcmVmcmFtZUxpbmVjYXA9dGhpcy53aXJlZnJhbWVMaW5lY2FwO1xuYS53aXJlZnJhbWVMaW5lam9pbj10aGlzLndpcmVmcmFtZUxpbmVqb2luO2EudmVydGV4Q29sb3JzPXRoaXMudmVydGV4Q29sb3JzO2Euc2tpbm5pbmc9dGhpcy5za2lubmluZzthLm1vcnBoVGFyZ2V0cz10aGlzLm1vcnBoVGFyZ2V0cztyZXR1cm4gYX07XG5USFJFRS5NZXNoTGFtYmVydE1hdGVyaWFsPWZ1bmN0aW9uKGEpe1RIUkVFLk1hdGVyaWFsLmNhbGwodGhpcyk7dGhpcy50eXBlPVwiTWVzaExhbWJlcnRNYXRlcmlhbFwiO3RoaXMuY29sb3I9bmV3IFRIUkVFLkNvbG9yKDE2Nzc3MjE1KTt0aGlzLmVtaXNzaXZlPW5ldyBUSFJFRS5Db2xvcigwKTt0aGlzLndyYXBBcm91bmQ9ITE7dGhpcy53cmFwUkdCPW5ldyBUSFJFRS5WZWN0b3IzKDEsMSwxKTt0aGlzLmVudk1hcD10aGlzLmFscGhhTWFwPXRoaXMuc3BlY3VsYXJNYXA9dGhpcy5saWdodE1hcD10aGlzLm1hcD1udWxsO3RoaXMuY29tYmluZT1USFJFRS5NdWx0aXBseU9wZXJhdGlvbjt0aGlzLnJlZmxlY3Rpdml0eT0xO3RoaXMucmVmcmFjdGlvblJhdGlvPS45ODt0aGlzLmZvZz0hMDt0aGlzLnNoYWRpbmc9VEhSRUUuU21vb3RoU2hhZGluZzt0aGlzLndpcmVmcmFtZT0hMTt0aGlzLndpcmVmcmFtZUxpbmV3aWR0aD0xO3RoaXMud2lyZWZyYW1lTGluZWpvaW49dGhpcy53aXJlZnJhbWVMaW5lY2FwPVxuXCJyb3VuZFwiO3RoaXMudmVydGV4Q29sb3JzPVRIUkVFLk5vQ29sb3JzO3RoaXMubW9ycGhOb3JtYWxzPXRoaXMubW9ycGhUYXJnZXRzPXRoaXMuc2tpbm5pbmc9ITE7dGhpcy5zZXRWYWx1ZXMoYSl9O1RIUkVFLk1lc2hMYW1iZXJ0TWF0ZXJpYWwucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuTWF0ZXJpYWwucHJvdG90eXBlKTtUSFJFRS5NZXNoTGFtYmVydE1hdGVyaWFsLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5NZXNoTGFtYmVydE1hdGVyaWFsO1xuVEhSRUUuTWVzaExhbWJlcnRNYXRlcmlhbC5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuTWVzaExhbWJlcnRNYXRlcmlhbDtUSFJFRS5NYXRlcmlhbC5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzLGEpO2EuY29sb3IuY29weSh0aGlzLmNvbG9yKTthLmVtaXNzaXZlLmNvcHkodGhpcy5lbWlzc2l2ZSk7YS53cmFwQXJvdW5kPXRoaXMud3JhcEFyb3VuZDthLndyYXBSR0IuY29weSh0aGlzLndyYXBSR0IpO2EubWFwPXRoaXMubWFwO2EubGlnaHRNYXA9dGhpcy5saWdodE1hcDthLnNwZWN1bGFyTWFwPXRoaXMuc3BlY3VsYXJNYXA7YS5hbHBoYU1hcD10aGlzLmFscGhhTWFwO2EuZW52TWFwPXRoaXMuZW52TWFwO2EuY29tYmluZT10aGlzLmNvbWJpbmU7YS5yZWZsZWN0aXZpdHk9dGhpcy5yZWZsZWN0aXZpdHk7YS5yZWZyYWN0aW9uUmF0aW89dGhpcy5yZWZyYWN0aW9uUmF0aW87YS5mb2c9dGhpcy5mb2c7YS5zaGFkaW5nPXRoaXMuc2hhZGluZzthLndpcmVmcmFtZT1cbnRoaXMud2lyZWZyYW1lO2Eud2lyZWZyYW1lTGluZXdpZHRoPXRoaXMud2lyZWZyYW1lTGluZXdpZHRoO2Eud2lyZWZyYW1lTGluZWNhcD10aGlzLndpcmVmcmFtZUxpbmVjYXA7YS53aXJlZnJhbWVMaW5lam9pbj10aGlzLndpcmVmcmFtZUxpbmVqb2luO2EudmVydGV4Q29sb3JzPXRoaXMudmVydGV4Q29sb3JzO2Euc2tpbm5pbmc9dGhpcy5za2lubmluZzthLm1vcnBoVGFyZ2V0cz10aGlzLm1vcnBoVGFyZ2V0czthLm1vcnBoTm9ybWFscz10aGlzLm1vcnBoTm9ybWFscztyZXR1cm4gYX07XG5USFJFRS5NZXNoUGhvbmdNYXRlcmlhbD1mdW5jdGlvbihhKXtUSFJFRS5NYXRlcmlhbC5jYWxsKHRoaXMpO3RoaXMudHlwZT1cIk1lc2hQaG9uZ01hdGVyaWFsXCI7dGhpcy5jb2xvcj1uZXcgVEhSRUUuQ29sb3IoMTY3NzcyMTUpO3RoaXMuZW1pc3NpdmU9bmV3IFRIUkVFLkNvbG9yKDApO3RoaXMuc3BlY3VsYXI9bmV3IFRIUkVFLkNvbG9yKDExMTg0ODEpO3RoaXMuc2hpbmluZXNzPTMwO3RoaXMud3JhcEFyb3VuZD10aGlzLm1ldGFsPSExO3RoaXMud3JhcFJHQj1uZXcgVEhSRUUuVmVjdG9yMygxLDEsMSk7dGhpcy5idW1wTWFwPXRoaXMubGlnaHRNYXA9dGhpcy5tYXA9bnVsbDt0aGlzLmJ1bXBTY2FsZT0xO3RoaXMubm9ybWFsTWFwPW51bGw7dGhpcy5ub3JtYWxTY2FsZT1uZXcgVEhSRUUuVmVjdG9yMigxLDEpO3RoaXMuZW52TWFwPXRoaXMuYWxwaGFNYXA9dGhpcy5zcGVjdWxhck1hcD1udWxsO3RoaXMuY29tYmluZT1USFJFRS5NdWx0aXBseU9wZXJhdGlvbjt0aGlzLnJlZmxlY3Rpdml0eT1cbjE7dGhpcy5yZWZyYWN0aW9uUmF0aW89Ljk4O3RoaXMuZm9nPSEwO3RoaXMuc2hhZGluZz1USFJFRS5TbW9vdGhTaGFkaW5nO3RoaXMud2lyZWZyYW1lPSExO3RoaXMud2lyZWZyYW1lTGluZXdpZHRoPTE7dGhpcy53aXJlZnJhbWVMaW5lam9pbj10aGlzLndpcmVmcmFtZUxpbmVjYXA9XCJyb3VuZFwiO3RoaXMudmVydGV4Q29sb3JzPVRIUkVFLk5vQ29sb3JzO3RoaXMubW9ycGhOb3JtYWxzPXRoaXMubW9ycGhUYXJnZXRzPXRoaXMuc2tpbm5pbmc9ITE7dGhpcy5zZXRWYWx1ZXMoYSl9O1RIUkVFLk1lc2hQaG9uZ01hdGVyaWFsLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk1hdGVyaWFsLnByb3RvdHlwZSk7VEhSRUUuTWVzaFBob25nTWF0ZXJpYWwucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsO1xuVEhSRUUuTWVzaFBob25nTWF0ZXJpYWwucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsO1RIUkVFLk1hdGVyaWFsLnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsYSk7YS5jb2xvci5jb3B5KHRoaXMuY29sb3IpO2EuZW1pc3NpdmUuY29weSh0aGlzLmVtaXNzaXZlKTthLnNwZWN1bGFyLmNvcHkodGhpcy5zcGVjdWxhcik7YS5zaGluaW5lc3M9dGhpcy5zaGluaW5lc3M7YS5tZXRhbD10aGlzLm1ldGFsO2Eud3JhcEFyb3VuZD10aGlzLndyYXBBcm91bmQ7YS53cmFwUkdCLmNvcHkodGhpcy53cmFwUkdCKTthLm1hcD10aGlzLm1hcDthLmxpZ2h0TWFwPXRoaXMubGlnaHRNYXA7YS5idW1wTWFwPXRoaXMuYnVtcE1hcDthLmJ1bXBTY2FsZT10aGlzLmJ1bXBTY2FsZTthLm5vcm1hbE1hcD10aGlzLm5vcm1hbE1hcDthLm5vcm1hbFNjYWxlLmNvcHkodGhpcy5ub3JtYWxTY2FsZSk7YS5zcGVjdWxhck1hcD10aGlzLnNwZWN1bGFyTWFwO1xuYS5hbHBoYU1hcD10aGlzLmFscGhhTWFwO2EuZW52TWFwPXRoaXMuZW52TWFwO2EuY29tYmluZT10aGlzLmNvbWJpbmU7YS5yZWZsZWN0aXZpdHk9dGhpcy5yZWZsZWN0aXZpdHk7YS5yZWZyYWN0aW9uUmF0aW89dGhpcy5yZWZyYWN0aW9uUmF0aW87YS5mb2c9dGhpcy5mb2c7YS5zaGFkaW5nPXRoaXMuc2hhZGluZzthLndpcmVmcmFtZT10aGlzLndpcmVmcmFtZTthLndpcmVmcmFtZUxpbmV3aWR0aD10aGlzLndpcmVmcmFtZUxpbmV3aWR0aDthLndpcmVmcmFtZUxpbmVjYXA9dGhpcy53aXJlZnJhbWVMaW5lY2FwO2Eud2lyZWZyYW1lTGluZWpvaW49dGhpcy53aXJlZnJhbWVMaW5lam9pbjthLnZlcnRleENvbG9ycz10aGlzLnZlcnRleENvbG9yczthLnNraW5uaW5nPXRoaXMuc2tpbm5pbmc7YS5tb3JwaFRhcmdldHM9dGhpcy5tb3JwaFRhcmdldHM7YS5tb3JwaE5vcm1hbHM9dGhpcy5tb3JwaE5vcm1hbHM7cmV0dXJuIGF9O1xuVEhSRUUuTWVzaERlcHRoTWF0ZXJpYWw9ZnVuY3Rpb24oYSl7VEhSRUUuTWF0ZXJpYWwuY2FsbCh0aGlzKTt0aGlzLnR5cGU9XCJNZXNoRGVwdGhNYXRlcmlhbFwiO3RoaXMud2lyZWZyYW1lPXRoaXMubW9ycGhUYXJnZXRzPSExO3RoaXMud2lyZWZyYW1lTGluZXdpZHRoPTE7dGhpcy5zZXRWYWx1ZXMoYSl9O1RIUkVFLk1lc2hEZXB0aE1hdGVyaWFsLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk1hdGVyaWFsLnByb3RvdHlwZSk7VEhSRUUuTWVzaERlcHRoTWF0ZXJpYWwucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLk1lc2hEZXB0aE1hdGVyaWFsO1xuVEhSRUUuTWVzaERlcHRoTWF0ZXJpYWwucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLk1lc2hEZXB0aE1hdGVyaWFsO1RIUkVFLk1hdGVyaWFsLnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsYSk7YS53aXJlZnJhbWU9dGhpcy53aXJlZnJhbWU7YS53aXJlZnJhbWVMaW5ld2lkdGg9dGhpcy53aXJlZnJhbWVMaW5ld2lkdGg7cmV0dXJuIGF9O1RIUkVFLk1lc2hOb3JtYWxNYXRlcmlhbD1mdW5jdGlvbihhKXtUSFJFRS5NYXRlcmlhbC5jYWxsKHRoaXMsYSk7dGhpcy50eXBlPVwiTWVzaE5vcm1hbE1hdGVyaWFsXCI7dGhpcy53aXJlZnJhbWU9ITE7dGhpcy53aXJlZnJhbWVMaW5ld2lkdGg9MTt0aGlzLm1vcnBoVGFyZ2V0cz0hMTt0aGlzLnNldFZhbHVlcyhhKX07VEhSRUUuTWVzaE5vcm1hbE1hdGVyaWFsLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk1hdGVyaWFsLnByb3RvdHlwZSk7XG5USFJFRS5NZXNoTm9ybWFsTWF0ZXJpYWwucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLk1lc2hOb3JtYWxNYXRlcmlhbDtUSFJFRS5NZXNoTm9ybWFsTWF0ZXJpYWwucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLk1lc2hOb3JtYWxNYXRlcmlhbDtUSFJFRS5NYXRlcmlhbC5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzLGEpO2Eud2lyZWZyYW1lPXRoaXMud2lyZWZyYW1lO2Eud2lyZWZyYW1lTGluZXdpZHRoPXRoaXMud2lyZWZyYW1lTGluZXdpZHRoO3JldHVybiBhfTtUSFJFRS5NZXNoRmFjZU1hdGVyaWFsPWZ1bmN0aW9uKGEpe3RoaXMudXVpZD1USFJFRS5NYXRoLmdlbmVyYXRlVVVJRCgpO3RoaXMudHlwZT1cIk1lc2hGYWNlTWF0ZXJpYWxcIjt0aGlzLm1hdGVyaWFscz1hIGluc3RhbmNlb2YgQXJyYXk/YTpbXX07XG5USFJFRS5NZXNoRmFjZU1hdGVyaWFsLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuTWVzaEZhY2VNYXRlcmlhbCx0b0pTT046ZnVuY3Rpb24oKXtmb3IodmFyIGE9e21ldGFkYXRhOnt2ZXJzaW9uOjQuMix0eXBlOlwibWF0ZXJpYWxcIixnZW5lcmF0b3I6XCJNYXRlcmlhbEV4cG9ydGVyXCJ9LHV1aWQ6dGhpcy51dWlkLHR5cGU6dGhpcy50eXBlLG1hdGVyaWFsczpbXX0sYj0wLGM9dGhpcy5tYXRlcmlhbHMubGVuZ3RoO2I8YztiKyspYS5tYXRlcmlhbHMucHVzaCh0aGlzLm1hdGVyaWFsc1tiXS50b0pTT04oKSk7cmV0dXJuIGF9LGNsb25lOmZ1bmN0aW9uKCl7Zm9yKHZhciBhPW5ldyBUSFJFRS5NZXNoRmFjZU1hdGVyaWFsLGI9MDtiPHRoaXMubWF0ZXJpYWxzLmxlbmd0aDtiKyspYS5tYXRlcmlhbHMucHVzaCh0aGlzLm1hdGVyaWFsc1tiXS5jbG9uZSgpKTtyZXR1cm4gYX19O1xuVEhSRUUuUG9pbnRDbG91ZE1hdGVyaWFsPWZ1bmN0aW9uKGEpe1RIUkVFLk1hdGVyaWFsLmNhbGwodGhpcyk7dGhpcy50eXBlPVwiUG9pbnRDbG91ZE1hdGVyaWFsXCI7dGhpcy5jb2xvcj1uZXcgVEhSRUUuQ29sb3IoMTY3NzcyMTUpO3RoaXMubWFwPW51bGw7dGhpcy5zaXplPTE7dGhpcy5zaXplQXR0ZW51YXRpb249ITA7dGhpcy52ZXJ0ZXhDb2xvcnM9VEhSRUUuTm9Db2xvcnM7dGhpcy5mb2c9ITA7dGhpcy5zZXRWYWx1ZXMoYSl9O1RIUkVFLlBvaW50Q2xvdWRNYXRlcmlhbC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5NYXRlcmlhbC5wcm90b3R5cGUpO1RIUkVFLlBvaW50Q2xvdWRNYXRlcmlhbC5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuUG9pbnRDbG91ZE1hdGVyaWFsO1xuVEhSRUUuUG9pbnRDbG91ZE1hdGVyaWFsLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5Qb2ludENsb3VkTWF0ZXJpYWw7VEhSRUUuTWF0ZXJpYWwucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyxhKTthLmNvbG9yLmNvcHkodGhpcy5jb2xvcik7YS5tYXA9dGhpcy5tYXA7YS5zaXplPXRoaXMuc2l6ZTthLnNpemVBdHRlbnVhdGlvbj10aGlzLnNpemVBdHRlbnVhdGlvbjthLnZlcnRleENvbG9ycz10aGlzLnZlcnRleENvbG9yczthLmZvZz10aGlzLmZvZztyZXR1cm4gYX07VEhSRUUuUGFydGljbGVCYXNpY01hdGVyaWFsPWZ1bmN0aW9uKGEpe1RIUkVFLndhcm4oXCJUSFJFRS5QYXJ0aWNsZUJhc2ljTWF0ZXJpYWwgaGFzIGJlZW4gcmVuYW1lZCB0byBUSFJFRS5Qb2ludENsb3VkTWF0ZXJpYWwuXCIpO3JldHVybiBuZXcgVEhSRUUuUG9pbnRDbG91ZE1hdGVyaWFsKGEpfTtcblRIUkVFLlBhcnRpY2xlU3lzdGVtTWF0ZXJpYWw9ZnVuY3Rpb24oYSl7VEhSRUUud2FybihcIlRIUkVFLlBhcnRpY2xlU3lzdGVtTWF0ZXJpYWwgaGFzIGJlZW4gcmVuYW1lZCB0byBUSFJFRS5Qb2ludENsb3VkTWF0ZXJpYWwuXCIpO3JldHVybiBuZXcgVEhSRUUuUG9pbnRDbG91ZE1hdGVyaWFsKGEpfTtcblRIUkVFLlNoYWRlck1hdGVyaWFsPWZ1bmN0aW9uKGEpe1RIUkVFLk1hdGVyaWFsLmNhbGwodGhpcyk7dGhpcy50eXBlPVwiU2hhZGVyTWF0ZXJpYWxcIjt0aGlzLmRlZmluZXM9e307dGhpcy51bmlmb3Jtcz17fTt0aGlzLmF0dHJpYnV0ZXM9bnVsbDt0aGlzLnZlcnRleFNoYWRlcj1cInZvaWQgbWFpbigpIHtcXG5cXHRnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KCBwb3NpdGlvbiwgMS4wICk7XFxufVwiO3RoaXMuZnJhZ21lbnRTaGFkZXI9XCJ2b2lkIG1haW4oKSB7XFxuXFx0Z2xfRnJhZ0NvbG9yID0gdmVjNCggMS4wLCAwLjAsIDAuMCwgMS4wICk7XFxufVwiO3RoaXMuc2hhZGluZz1USFJFRS5TbW9vdGhTaGFkaW5nO3RoaXMubGluZXdpZHRoPTE7dGhpcy53aXJlZnJhbWU9ITE7dGhpcy53aXJlZnJhbWVMaW5ld2lkdGg9MTt0aGlzLmxpZ2h0cz10aGlzLmZvZz0hMTt0aGlzLnZlcnRleENvbG9ycz1USFJFRS5Ob0NvbG9yczt0aGlzLm1vcnBoTm9ybWFscz1cbnRoaXMubW9ycGhUYXJnZXRzPXRoaXMuc2tpbm5pbmc9ITE7dGhpcy5kZWZhdWx0QXR0cmlidXRlVmFsdWVzPXtjb2xvcjpbMSwxLDFdLHV2OlswLDBdLHV2MjpbMCwwXX07dGhpcy5pbmRleDBBdHRyaWJ1dGVOYW1lPXZvaWQgMDt0aGlzLnNldFZhbHVlcyhhKX07VEhSRUUuU2hhZGVyTWF0ZXJpYWwucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuTWF0ZXJpYWwucHJvdG90eXBlKTtUSFJFRS5TaGFkZXJNYXRlcmlhbC5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuU2hhZGVyTWF0ZXJpYWw7XG5USFJFRS5TaGFkZXJNYXRlcmlhbC5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuU2hhZGVyTWF0ZXJpYWw7VEhSRUUuTWF0ZXJpYWwucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyxhKTthLmZyYWdtZW50U2hhZGVyPXRoaXMuZnJhZ21lbnRTaGFkZXI7YS52ZXJ0ZXhTaGFkZXI9dGhpcy52ZXJ0ZXhTaGFkZXI7YS51bmlmb3Jtcz1USFJFRS5Vbmlmb3Jtc1V0aWxzLmNsb25lKHRoaXMudW5pZm9ybXMpO2EuYXR0cmlidXRlcz10aGlzLmF0dHJpYnV0ZXM7YS5kZWZpbmVzPXRoaXMuZGVmaW5lczthLnNoYWRpbmc9dGhpcy5zaGFkaW5nO2Eud2lyZWZyYW1lPXRoaXMud2lyZWZyYW1lO2Eud2lyZWZyYW1lTGluZXdpZHRoPXRoaXMud2lyZWZyYW1lTGluZXdpZHRoO2EuZm9nPXRoaXMuZm9nO2EubGlnaHRzPXRoaXMubGlnaHRzO2EudmVydGV4Q29sb3JzPXRoaXMudmVydGV4Q29sb3JzO2Euc2tpbm5pbmc9dGhpcy5za2lubmluZzthLm1vcnBoVGFyZ2V0cz1cbnRoaXMubW9ycGhUYXJnZXRzO2EubW9ycGhOb3JtYWxzPXRoaXMubW9ycGhOb3JtYWxzO3JldHVybiBhfTtUSFJFRS5SYXdTaGFkZXJNYXRlcmlhbD1mdW5jdGlvbihhKXtUSFJFRS5TaGFkZXJNYXRlcmlhbC5jYWxsKHRoaXMsYSk7dGhpcy50eXBlPVwiUmF3U2hhZGVyTWF0ZXJpYWxcIn07VEhSRUUuUmF3U2hhZGVyTWF0ZXJpYWwucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuU2hhZGVyTWF0ZXJpYWwucHJvdG90eXBlKTtUSFJFRS5SYXdTaGFkZXJNYXRlcmlhbC5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuUmF3U2hhZGVyTWF0ZXJpYWw7VEhSRUUuUmF3U2hhZGVyTWF0ZXJpYWwucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlJhd1NoYWRlck1hdGVyaWFsO1RIUkVFLlNoYWRlck1hdGVyaWFsLnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsYSk7cmV0dXJuIGF9O1xuVEhSRUUuU3ByaXRlTWF0ZXJpYWw9ZnVuY3Rpb24oYSl7VEhSRUUuTWF0ZXJpYWwuY2FsbCh0aGlzKTt0aGlzLnR5cGU9XCJTcHJpdGVNYXRlcmlhbFwiO3RoaXMuY29sb3I9bmV3IFRIUkVFLkNvbG9yKDE2Nzc3MjE1KTt0aGlzLm1hcD1udWxsO3RoaXMucm90YXRpb249MDt0aGlzLmZvZz0hMTt0aGlzLnNldFZhbHVlcyhhKX07VEhSRUUuU3ByaXRlTWF0ZXJpYWwucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuTWF0ZXJpYWwucHJvdG90eXBlKTtUSFJFRS5TcHJpdGVNYXRlcmlhbC5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuU3ByaXRlTWF0ZXJpYWw7XG5USFJFRS5TcHJpdGVNYXRlcmlhbC5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuU3ByaXRlTWF0ZXJpYWw7VEhSRUUuTWF0ZXJpYWwucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyxhKTthLmNvbG9yLmNvcHkodGhpcy5jb2xvcik7YS5tYXA9dGhpcy5tYXA7YS5yb3RhdGlvbj10aGlzLnJvdGF0aW9uO2EuZm9nPXRoaXMuZm9nO3JldHVybiBhfTtcblRIUkVFLlRleHR1cmU9ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGspe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiaWRcIix7dmFsdWU6VEhSRUUuVGV4dHVyZUlkQ291bnQrK30pO3RoaXMudXVpZD1USFJFRS5NYXRoLmdlbmVyYXRlVVVJRCgpO3RoaXMuc291cmNlRmlsZT10aGlzLm5hbWU9XCJcIjt0aGlzLmltYWdlPXZvaWQgMCE9PWE/YTpUSFJFRS5UZXh0dXJlLkRFRkFVTFRfSU1BR0U7dGhpcy5taXBtYXBzPVtdO3RoaXMubWFwcGluZz12b2lkIDAhPT1iP2I6VEhSRUUuVGV4dHVyZS5ERUZBVUxUX01BUFBJTkc7dGhpcy53cmFwUz12b2lkIDAhPT1jP2M6VEhSRUUuQ2xhbXBUb0VkZ2VXcmFwcGluZzt0aGlzLndyYXBUPXZvaWQgMCE9PWQ/ZDpUSFJFRS5DbGFtcFRvRWRnZVdyYXBwaW5nO3RoaXMubWFnRmlsdGVyPXZvaWQgMCE9PWU/ZTpUSFJFRS5MaW5lYXJGaWx0ZXI7dGhpcy5taW5GaWx0ZXI9dm9pZCAwIT09Zj9mOlRIUkVFLkxpbmVhck1pcE1hcExpbmVhckZpbHRlcjtcbnRoaXMuYW5pc290cm9weT12b2lkIDAhPT1rP2s6MTt0aGlzLmZvcm1hdD12b2lkIDAhPT1nP2c6VEhSRUUuUkdCQUZvcm1hdDt0aGlzLnR5cGU9dm9pZCAwIT09aD9oOlRIUkVFLlVuc2lnbmVkQnl0ZVR5cGU7dGhpcy5vZmZzZXQ9bmV3IFRIUkVFLlZlY3RvcjIoMCwwKTt0aGlzLnJlcGVhdD1uZXcgVEhSRUUuVmVjdG9yMigxLDEpO3RoaXMuZ2VuZXJhdGVNaXBtYXBzPSEwO3RoaXMucHJlbXVsdGlwbHlBbHBoYT0hMTt0aGlzLmZsaXBZPSEwO3RoaXMudW5wYWNrQWxpZ25tZW50PTQ7dGhpcy5fbmVlZHNVcGRhdGU9ITE7dGhpcy5vblVwZGF0ZT1udWxsfTtUSFJFRS5UZXh0dXJlLkRFRkFVTFRfSU1BR0U9dm9pZCAwO1RIUkVFLlRleHR1cmUuREVGQVVMVF9NQVBQSU5HPVRIUkVFLlVWTWFwcGluZztcblRIUkVFLlRleHR1cmUucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpUSFJFRS5UZXh0dXJlLGdldCBuZWVkc1VwZGF0ZSgpe3JldHVybiB0aGlzLl9uZWVkc1VwZGF0ZX0sc2V0IG5lZWRzVXBkYXRlKGEpeyEwPT09YSYmdGhpcy51cGRhdGUoKTt0aGlzLl9uZWVkc1VwZGF0ZT1hfSxjbG9uZTpmdW5jdGlvbihhKXt2b2lkIDA9PT1hJiYoYT1uZXcgVEhSRUUuVGV4dHVyZSk7YS5pbWFnZT10aGlzLmltYWdlO2EubWlwbWFwcz10aGlzLm1pcG1hcHMuc2xpY2UoMCk7YS5tYXBwaW5nPXRoaXMubWFwcGluZzthLndyYXBTPXRoaXMud3JhcFM7YS53cmFwVD10aGlzLndyYXBUO2EubWFnRmlsdGVyPXRoaXMubWFnRmlsdGVyO2EubWluRmlsdGVyPXRoaXMubWluRmlsdGVyO2EuYW5pc290cm9weT10aGlzLmFuaXNvdHJvcHk7YS5mb3JtYXQ9dGhpcy5mb3JtYXQ7YS50eXBlPXRoaXMudHlwZTthLm9mZnNldC5jb3B5KHRoaXMub2Zmc2V0KTthLnJlcGVhdC5jb3B5KHRoaXMucmVwZWF0KTthLmdlbmVyYXRlTWlwbWFwcz1cbnRoaXMuZ2VuZXJhdGVNaXBtYXBzO2EucHJlbXVsdGlwbHlBbHBoYT10aGlzLnByZW11bHRpcGx5QWxwaGE7YS5mbGlwWT10aGlzLmZsaXBZO2EudW5wYWNrQWxpZ25tZW50PXRoaXMudW5wYWNrQWxpZ25tZW50O3JldHVybiBhfSx1cGRhdGU6ZnVuY3Rpb24oKXt0aGlzLmRpc3BhdGNoRXZlbnQoe3R5cGU6XCJ1cGRhdGVcIn0pfSxkaXNwb3NlOmZ1bmN0aW9uKCl7dGhpcy5kaXNwYXRjaEV2ZW50KHt0eXBlOlwiZGlzcG9zZVwifSl9fTtUSFJFRS5FdmVudERpc3BhdGNoZXIucHJvdG90eXBlLmFwcGx5KFRIUkVFLlRleHR1cmUucHJvdG90eXBlKTtUSFJFRS5UZXh0dXJlSWRDb3VudD0wO1RIUkVFLkN1YmVUZXh0dXJlPWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcsaCxrKXtiPXZvaWQgMCE9PWI/YjpUSFJFRS5DdWJlUmVmbGVjdGlvbk1hcHBpbmc7VEhSRUUuVGV4dHVyZS5jYWxsKHRoaXMsYSxiLGMsZCxlLGYsZyxoLGspO3RoaXMuaW1hZ2VzPWF9O1xuVEhSRUUuQ3ViZVRleHR1cmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuVGV4dHVyZS5wcm90b3R5cGUpO1RIUkVFLkN1YmVUZXh0dXJlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5DdWJlVGV4dHVyZTtUSFJFRS5DdWJlVGV4dHVyZS5jbG9uZT1mdW5jdGlvbihhKXt2b2lkIDA9PT1hJiYoYT1uZXcgVEhSRUUuQ3ViZVRleHR1cmUpO1RIUkVFLlRleHR1cmUucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyxhKTthLmltYWdlcz10aGlzLmltYWdlcztyZXR1cm4gYX07VEhSRUUuQ29tcHJlc3NlZFRleHR1cmU9ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGssbCxwKXtUSFJFRS5UZXh0dXJlLmNhbGwodGhpcyxudWxsLGYsZyxoLGssbCxkLGUscCk7dGhpcy5pbWFnZT17d2lkdGg6YixoZWlnaHQ6Y307dGhpcy5taXBtYXBzPWE7dGhpcy5nZW5lcmF0ZU1pcG1hcHM9dGhpcy5mbGlwWT0hMX07VEhSRUUuQ29tcHJlc3NlZFRleHR1cmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuVGV4dHVyZS5wcm90b3R5cGUpO1xuVEhSRUUuQ29tcHJlc3NlZFRleHR1cmUucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkNvbXByZXNzZWRUZXh0dXJlO1RIUkVFLkNvbXByZXNzZWRUZXh0dXJlLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5Db21wcmVzc2VkVGV4dHVyZTtUSFJFRS5UZXh0dXJlLnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsYSk7cmV0dXJuIGF9O1RIUkVFLkRhdGFUZXh0dXJlPWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcsaCxrLGwscCl7VEhSRUUuVGV4dHVyZS5jYWxsKHRoaXMsbnVsbCxmLGcsaCxrLGwsZCxlLHApO3RoaXMuaW1hZ2U9e2RhdGE6YSx3aWR0aDpiLGhlaWdodDpjfX07VEhSRUUuRGF0YVRleHR1cmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuVGV4dHVyZS5wcm90b3R5cGUpO1RIUkVFLkRhdGFUZXh0dXJlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5EYXRhVGV4dHVyZTtcblRIUkVFLkRhdGFUZXh0dXJlLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5EYXRhVGV4dHVyZTtUSFJFRS5UZXh0dXJlLnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsYSk7cmV0dXJuIGF9O1RIUkVFLlZpZGVvVGV4dHVyZT1mdW5jdGlvbihhLGIsYyxkLGUsZixnLGgsayl7VEhSRUUuVGV4dHVyZS5jYWxsKHRoaXMsYSxiLGMsZCxlLGYsZyxoLGspO3RoaXMuZ2VuZXJhdGVNaXBtYXBzPSExO3ZhciBsPXRoaXMscD1mdW5jdGlvbigpe3JlcXVlc3RBbmltYXRpb25GcmFtZShwKTthLnJlYWR5U3RhdGU9PT1hLkhBVkVfRU5PVUdIX0RBVEEmJihsLm5lZWRzVXBkYXRlPSEwKX07cCgpfTtUSFJFRS5WaWRlb1RleHR1cmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuVGV4dHVyZS5wcm90b3R5cGUpO1RIUkVFLlZpZGVvVGV4dHVyZS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuVmlkZW9UZXh0dXJlO1xuVEhSRUUuR3JvdXA9ZnVuY3Rpb24oKXtUSFJFRS5PYmplY3QzRC5jYWxsKHRoaXMpO3RoaXMudHlwZT1cIkdyb3VwXCJ9O1RIUkVFLkdyb3VwLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk9iamVjdDNELnByb3RvdHlwZSk7VEhSRUUuR3JvdXAucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkdyb3VwO1RIUkVFLlBvaW50Q2xvdWQ9ZnVuY3Rpb24oYSxiKXtUSFJFRS5PYmplY3QzRC5jYWxsKHRoaXMpO3RoaXMudHlwZT1cIlBvaW50Q2xvdWRcIjt0aGlzLmdlb21ldHJ5PXZvaWQgMCE9PWE/YTpuZXcgVEhSRUUuR2VvbWV0cnk7dGhpcy5tYXRlcmlhbD12b2lkIDAhPT1iP2I6bmV3IFRIUkVFLlBvaW50Q2xvdWRNYXRlcmlhbCh7Y29sb3I6MTY3NzcyMTUqTWF0aC5yYW5kb20oKX0pfTtUSFJFRS5Qb2ludENsb3VkLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk9iamVjdDNELnByb3RvdHlwZSk7VEhSRUUuUG9pbnRDbG91ZC5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuUG9pbnRDbG91ZDtcblRIUkVFLlBvaW50Q2xvdWQucHJvdG90eXBlLnJheWNhc3Q9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuTWF0cml4NCxiPW5ldyBUSFJFRS5SYXk7cmV0dXJuIGZ1bmN0aW9uKGMsZCl7dmFyIGU9dGhpcyxmPWUuZ2VvbWV0cnksZz1jLnBhcmFtcy5Qb2ludENsb3VkLnRocmVzaG9sZDthLmdldEludmVyc2UodGhpcy5tYXRyaXhXb3JsZCk7Yi5jb3B5KGMucmF5KS5hcHBseU1hdHJpeDQoYSk7aWYobnVsbD09PWYuYm91bmRpbmdCb3h8fCExIT09Yi5pc0ludGVyc2VjdGlvbkJveChmLmJvdW5kaW5nQm94KSl7dmFyIGg9Zy8oKHRoaXMuc2NhbGUueCt0aGlzLnNjYWxlLnkrdGhpcy5zY2FsZS56KS8zKSxrPW5ldyBUSFJFRS5WZWN0b3IzLGc9ZnVuY3Rpb24oYSxmKXt2YXIgZz1iLmRpc3RhbmNlVG9Qb2ludChhKTtpZihnPGgpe3ZhciBrPWIuY2xvc2VzdFBvaW50VG9Qb2ludChhKTtrLmFwcGx5TWF0cml4NChlLm1hdHJpeFdvcmxkKTt2YXIgbj1jLnJheS5vcmlnaW4uZGlzdGFuY2VUbyhrKTtcbmQucHVzaCh7ZGlzdGFuY2U6bixkaXN0YW5jZVRvUmF5OmcscG9pbnQ6ay5jbG9uZSgpLGluZGV4OmYsZmFjZTpudWxsLG9iamVjdDplfSl9fTtpZihmIGluc3RhbmNlb2YgVEhSRUUuQnVmZmVyR2VvbWV0cnkpe3ZhciBsPWYuYXR0cmlidXRlcyxwPWwucG9zaXRpb24uYXJyYXk7aWYodm9pZCAwIT09bC5pbmRleCl7dmFyIGw9bC5pbmRleC5hcnJheSxxPWYub2Zmc2V0czswPT09cS5sZW5ndGgmJihxPVt7c3RhcnQ6MCxjb3VudDpsLmxlbmd0aCxpbmRleDowfV0pO2Zvcih2YXIgbj0wLHQ9cS5sZW5ndGg7bjx0Oysrbilmb3IodmFyIHI9cVtuXS5zdGFydCxzPXFbbl0uaW5kZXgsZj1yLHI9citxW25dLmNvdW50O2Y8cjtmKyspe3ZhciB1PXMrbFtmXTtrLmZyb21BcnJheShwLDMqdSk7ZyhrLHUpfX1lbHNlIGZvcihsPXAubGVuZ3RoLzMsZj0wO2Y8bDtmKyspay5zZXQocFszKmZdLHBbMypmKzFdLHBbMypmKzJdKSxnKGssZil9ZWxzZSBmb3Ioaz10aGlzLmdlb21ldHJ5LnZlcnRpY2VzLFxuZj0wO2Y8ay5sZW5ndGg7ZisrKWcoa1tmXSxmKX19fSgpO1RIUkVFLlBvaW50Q2xvdWQucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGEpe3ZvaWQgMD09PWEmJihhPW5ldyBUSFJFRS5Qb2ludENsb3VkKHRoaXMuZ2VvbWV0cnksdGhpcy5tYXRlcmlhbCkpO1RIUkVFLk9iamVjdDNELnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsYSk7cmV0dXJuIGF9O1RIUkVFLlBhcnRpY2xlU3lzdGVtPWZ1bmN0aW9uKGEsYil7VEhSRUUud2FybihcIlRIUkVFLlBhcnRpY2xlU3lzdGVtIGhhcyBiZWVuIHJlbmFtZWQgdG8gVEhSRUUuUG9pbnRDbG91ZC5cIik7cmV0dXJuIG5ldyBUSFJFRS5Qb2ludENsb3VkKGEsYil9O1xuVEhSRUUuTGluZT1mdW5jdGlvbihhLGIsYyl7VEhSRUUuT2JqZWN0M0QuY2FsbCh0aGlzKTt0aGlzLnR5cGU9XCJMaW5lXCI7dGhpcy5nZW9tZXRyeT12b2lkIDAhPT1hP2E6bmV3IFRIUkVFLkdlb21ldHJ5O3RoaXMubWF0ZXJpYWw9dm9pZCAwIT09Yj9iOm5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7Y29sb3I6MTY3NzcyMTUqTWF0aC5yYW5kb20oKX0pO3RoaXMubW9kZT12b2lkIDAhPT1jP2M6VEhSRUUuTGluZVN0cmlwfTtUSFJFRS5MaW5lU3RyaXA9MDtUSFJFRS5MaW5lUGllY2VzPTE7VEhSRUUuTGluZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5PYmplY3QzRC5wcm90b3R5cGUpO1RIUkVFLkxpbmUucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkxpbmU7XG5USFJFRS5MaW5lLnByb3RvdHlwZS5yYXljYXN0PWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLk1hdHJpeDQsYj1uZXcgVEhSRUUuUmF5LGM9bmV3IFRIUkVFLlNwaGVyZTtyZXR1cm4gZnVuY3Rpb24oZCxlKXt2YXIgZj1kLmxpbmVQcmVjaXNpb24sZj1mKmYsZz10aGlzLmdlb21ldHJ5O251bGw9PT1nLmJvdW5kaW5nU3BoZXJlJiZnLmNvbXB1dGVCb3VuZGluZ1NwaGVyZSgpO2MuY29weShnLmJvdW5kaW5nU3BoZXJlKTtjLmFwcGx5TWF0cml4NCh0aGlzLm1hdHJpeFdvcmxkKTtpZighMSE9PWQucmF5LmlzSW50ZXJzZWN0aW9uU3BoZXJlKGMpKXthLmdldEludmVyc2UodGhpcy5tYXRyaXhXb3JsZCk7Yi5jb3B5KGQucmF5KS5hcHBseU1hdHJpeDQoYSk7dmFyIGg9bmV3IFRIUkVFLlZlY3RvcjMsaz1uZXcgVEhSRUUuVmVjdG9yMyxsPW5ldyBUSFJFRS5WZWN0b3IzLHA9bmV3IFRIUkVFLlZlY3RvcjMscT10aGlzLm1vZGU9PT1USFJFRS5MaW5lU3RyaXA/MToyO2lmKGcgaW5zdGFuY2VvZlxuVEhSRUUuQnVmZmVyR2VvbWV0cnkpe3ZhciBuPWcuYXR0cmlidXRlcztpZih2b2lkIDAhPT1uLmluZGV4KXt2YXIgdD1uLmluZGV4LmFycmF5LG49bi5wb3NpdGlvbi5hcnJheSxyPWcub2Zmc2V0czswPT09ci5sZW5ndGgmJihyPVt7c3RhcnQ6MCxjb3VudDp0Lmxlbmd0aCxpbmRleDowfV0pO2Zvcih2YXIgcz0wO3M8ci5sZW5ndGg7cysrKWZvcih2YXIgdT1yW3NdLnN0YXJ0LHY9cltzXS5jb3VudCx4PXJbc10uaW5kZXgsZz11O2c8dSt2LTE7Zys9cSl7dmFyIEQ9eCt0W2crMV07aC5mcm9tQXJyYXkobiwzKih4K3RbZ10pKTtrLmZyb21BcnJheShuLDMqRCk7RD1iLmRpc3RhbmNlU3FUb1NlZ21lbnQoaCxrLHAsbCk7RD5mfHwoRD1iLm9yaWdpbi5kaXN0YW5jZVRvKHApLEQ8ZC5uZWFyfHxEPmQuZmFyfHxlLnB1c2goe2Rpc3RhbmNlOkQscG9pbnQ6bC5jbG9uZSgpLmFwcGx5TWF0cml4NCh0aGlzLm1hdHJpeFdvcmxkKSxpbmRleDpnLG9mZnNldEluZGV4OnMsZmFjZTpudWxsLGZhY2VJbmRleDpudWxsLFxub2JqZWN0OnRoaXN9KSl9fWVsc2UgZm9yKG49bi5wb3NpdGlvbi5hcnJheSxnPTA7ZzxuLmxlbmd0aC8zLTE7Zys9cSloLmZyb21BcnJheShuLDMqZyksay5mcm9tQXJyYXkobiwzKmcrMyksRD1iLmRpc3RhbmNlU3FUb1NlZ21lbnQoaCxrLHAsbCksRD5mfHwoRD1iLm9yaWdpbi5kaXN0YW5jZVRvKHApLEQ8ZC5uZWFyfHxEPmQuZmFyfHxlLnB1c2goe2Rpc3RhbmNlOkQscG9pbnQ6bC5jbG9uZSgpLmFwcGx5TWF0cml4NCh0aGlzLm1hdHJpeFdvcmxkKSxpbmRleDpnLGZhY2U6bnVsbCxmYWNlSW5kZXg6bnVsbCxvYmplY3Q6dGhpc30pKX1lbHNlIGlmKGcgaW5zdGFuY2VvZiBUSFJFRS5HZW9tZXRyeSlmb3IoaD1nLnZlcnRpY2VzLGs9aC5sZW5ndGgsZz0wO2c8ay0xO2crPXEpRD1iLmRpc3RhbmNlU3FUb1NlZ21lbnQoaFtnXSxoW2crMV0scCxsKSxEPmZ8fChEPWIub3JpZ2luLmRpc3RhbmNlVG8ocCksRDxkLm5lYXJ8fEQ+ZC5mYXJ8fGUucHVzaCh7ZGlzdGFuY2U6RCxwb2ludDpsLmNsb25lKCkuYXBwbHlNYXRyaXg0KHRoaXMubWF0cml4V29ybGQpLFxuaW5kZXg6ZyxmYWNlOm51bGwsZmFjZUluZGV4Om51bGwsb2JqZWN0OnRoaXN9KSl9fX0oKTtUSFJFRS5MaW5lLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihhKXt2b2lkIDA9PT1hJiYoYT1uZXcgVEhSRUUuTGluZSh0aGlzLmdlb21ldHJ5LHRoaXMubWF0ZXJpYWwsdGhpcy5tb2RlKSk7VEhSRUUuT2JqZWN0M0QucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyxhKTtyZXR1cm4gYX07VEhSRUUuTWVzaD1mdW5jdGlvbihhLGIpe1RIUkVFLk9iamVjdDNELmNhbGwodGhpcyk7dGhpcy50eXBlPVwiTWVzaFwiO3RoaXMuZ2VvbWV0cnk9dm9pZCAwIT09YT9hOm5ldyBUSFJFRS5HZW9tZXRyeTt0aGlzLm1hdGVyaWFsPXZvaWQgMCE9PWI/YjpuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoe2NvbG9yOjE2Nzc3MjE1Kk1hdGgucmFuZG9tKCl9KTt0aGlzLnVwZGF0ZU1vcnBoVGFyZ2V0cygpfTtUSFJFRS5NZXNoLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk9iamVjdDNELnByb3RvdHlwZSk7XG5USFJFRS5NZXNoLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5NZXNoO1RIUkVFLk1lc2gucHJvdG90eXBlLnVwZGF0ZU1vcnBoVGFyZ2V0cz1mdW5jdGlvbigpe2lmKHZvaWQgMCE9PXRoaXMuZ2VvbWV0cnkubW9ycGhUYXJnZXRzJiYwPHRoaXMuZ2VvbWV0cnkubW9ycGhUYXJnZXRzLmxlbmd0aCl7dGhpcy5tb3JwaFRhcmdldEJhc2U9LTE7dGhpcy5tb3JwaFRhcmdldEZvcmNlZE9yZGVyPVtdO3RoaXMubW9ycGhUYXJnZXRJbmZsdWVuY2VzPVtdO3RoaXMubW9ycGhUYXJnZXREaWN0aW9uYXJ5PXt9O2Zvcih2YXIgYT0wLGI9dGhpcy5nZW9tZXRyeS5tb3JwaFRhcmdldHMubGVuZ3RoO2E8YjthKyspdGhpcy5tb3JwaFRhcmdldEluZmx1ZW5jZXMucHVzaCgwKSx0aGlzLm1vcnBoVGFyZ2V0RGljdGlvbmFyeVt0aGlzLmdlb21ldHJ5Lm1vcnBoVGFyZ2V0c1thXS5uYW1lXT1hfX07XG5USFJFRS5NZXNoLnByb3RvdHlwZS5nZXRNb3JwaFRhcmdldEluZGV4QnlOYW1lPWZ1bmN0aW9uKGEpe2lmKHZvaWQgMCE9PXRoaXMubW9ycGhUYXJnZXREaWN0aW9uYXJ5W2FdKXJldHVybiB0aGlzLm1vcnBoVGFyZ2V0RGljdGlvbmFyeVthXTtUSFJFRS53YXJuKFwiVEhSRUUuTWVzaC5nZXRNb3JwaFRhcmdldEluZGV4QnlOYW1lOiBtb3JwaCB0YXJnZXQgXCIrYStcIiBkb2VzIG5vdCBleGlzdC4gUmV0dXJuaW5nIDAuXCIpO3JldHVybiAwfTtcblRIUkVFLk1lc2gucHJvdG90eXBlLnJheWNhc3Q9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuTWF0cml4NCxiPW5ldyBUSFJFRS5SYXksYz1uZXcgVEhSRUUuU3BoZXJlLGQ9bmV3IFRIUkVFLlZlY3RvcjMsZT1uZXcgVEhSRUUuVmVjdG9yMyxmPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbihnLGgpe3ZhciBrPXRoaXMuZ2VvbWV0cnk7bnVsbD09PWsuYm91bmRpbmdTcGhlcmUmJmsuY29tcHV0ZUJvdW5kaW5nU3BoZXJlKCk7Yy5jb3B5KGsuYm91bmRpbmdTcGhlcmUpO2MuYXBwbHlNYXRyaXg0KHRoaXMubWF0cml4V29ybGQpO2lmKCExIT09Zy5yYXkuaXNJbnRlcnNlY3Rpb25TcGhlcmUoYykmJihhLmdldEludmVyc2UodGhpcy5tYXRyaXhXb3JsZCksYi5jb3B5KGcucmF5KS5hcHBseU1hdHJpeDQoYSksbnVsbD09PWsuYm91bmRpbmdCb3h8fCExIT09Yi5pc0ludGVyc2VjdGlvbkJveChrLmJvdW5kaW5nQm94KSkpaWYoayBpbnN0YW5jZW9mIFRIUkVFLkJ1ZmZlckdlb21ldHJ5KXt2YXIgbD1cbnRoaXMubWF0ZXJpYWw7aWYodm9pZCAwIT09bCl7dmFyIHA9ay5hdHRyaWJ1dGVzLHEsbix0PWcucHJlY2lzaW9uO2lmKHZvaWQgMCE9PXAuaW5kZXgpe3ZhciByPXAuaW5kZXguYXJyYXkscz1wLnBvc2l0aW9uLmFycmF5LHU9ay5vZmZzZXRzOzA9PT11Lmxlbmd0aCYmKHU9W3tzdGFydDowLGNvdW50OnIubGVuZ3RoLGluZGV4OjB9XSk7Zm9yKHZhciB2PTAseD11Lmxlbmd0aDt2PHg7Kyt2KWZvcih2YXIgcD11W3ZdLnN0YXJ0LEQ9dVt2XS5pbmRleCxrPXAsdz1wK3Vbdl0uY291bnQ7azx3O2srPTMpe3A9RCtyW2tdO3E9RCtyW2srMV07bj1EK3JbaysyXTtkLmZyb21BcnJheShzLDMqcCk7ZS5mcm9tQXJyYXkocywzKnEpO2YuZnJvbUFycmF5KHMsMypuKTt2YXIgeT1sLnNpZGU9PT1USFJFRS5CYWNrU2lkZT9iLmludGVyc2VjdFRyaWFuZ2xlKGYsZSxkLCEwKTpiLmludGVyc2VjdFRyaWFuZ2xlKGQsZSxmLGwuc2lkZSE9PVRIUkVFLkRvdWJsZVNpZGUpO2lmKG51bGwhPT15KXt5LmFwcGx5TWF0cml4NCh0aGlzLm1hdHJpeFdvcmxkKTtcbnZhciBBPWcucmF5Lm9yaWdpbi5kaXN0YW5jZVRvKHkpO0E8dHx8QTxnLm5lYXJ8fEE+Zy5mYXJ8fGgucHVzaCh7ZGlzdGFuY2U6QSxwb2ludDp5LGZhY2U6bmV3IFRIUkVFLkZhY2UzKHAscSxuLFRIUkVFLlRyaWFuZ2xlLm5vcm1hbChkLGUsZikpLGZhY2VJbmRleDpudWxsLG9iamVjdDp0aGlzfSl9fX1lbHNlIGZvcihzPXAucG9zaXRpb24uYXJyYXkscj1rPTAsdz1zLmxlbmd0aDtrPHc7ays9MyxyKz05KXA9ayxxPWsrMSxuPWsrMixkLmZyb21BcnJheShzLHIpLGUuZnJvbUFycmF5KHMsciszKSxmLmZyb21BcnJheShzLHIrNikseT1sLnNpZGU9PT1USFJFRS5CYWNrU2lkZT9iLmludGVyc2VjdFRyaWFuZ2xlKGYsZSxkLCEwKTpiLmludGVyc2VjdFRyaWFuZ2xlKGQsZSxmLGwuc2lkZSE9PVRIUkVFLkRvdWJsZVNpZGUpLG51bGwhPT15JiYoeS5hcHBseU1hdHJpeDQodGhpcy5tYXRyaXhXb3JsZCksQT1nLnJheS5vcmlnaW4uZGlzdGFuY2VUbyh5KSxBPHR8fEE8Zy5uZWFyfHxBPlxuZy5mYXJ8fGgucHVzaCh7ZGlzdGFuY2U6QSxwb2ludDp5LGZhY2U6bmV3IFRIUkVFLkZhY2UzKHAscSxuLFRIUkVFLlRyaWFuZ2xlLm5vcm1hbChkLGUsZikpLGZhY2VJbmRleDpudWxsLG9iamVjdDp0aGlzfSkpfX1lbHNlIGlmKGsgaW5zdGFuY2VvZiBUSFJFRS5HZW9tZXRyeSlmb3Iocj10aGlzLm1hdGVyaWFsIGluc3RhbmNlb2YgVEhSRUUuTWVzaEZhY2VNYXRlcmlhbCxzPSEwPT09cj90aGlzLm1hdGVyaWFsLm1hdGVyaWFsczpudWxsLHQ9Zy5wcmVjaXNpb24sdT1rLnZlcnRpY2VzLHY9MCx4PWsuZmFjZXMubGVuZ3RoO3Y8eDt2KyspaWYoRD1rLmZhY2VzW3ZdLGw9ITA9PT1yP3NbRC5tYXRlcmlhbEluZGV4XTp0aGlzLm1hdGVyaWFsLHZvaWQgMCE9PWwpe3A9dVtELmFdO3E9dVtELmJdO249dVtELmNdO2lmKCEwPT09bC5tb3JwaFRhcmdldHMpe3k9ay5tb3JwaFRhcmdldHM7QT10aGlzLm1vcnBoVGFyZ2V0SW5mbHVlbmNlcztkLnNldCgwLDAsMCk7ZS5zZXQoMCwwLDApO2Yuc2V0KDAsXG4wLDApO2Zvcih2YXIgdz0wLEU9eS5sZW5ndGg7dzxFO3crKyl7dmFyIEc9QVt3XTtpZigwIT09Ryl7dmFyIEY9eVt3XS52ZXJ0aWNlcztkLngrPShGW0QuYV0ueC1wLngpKkc7ZC55Kz0oRltELmFdLnktcC55KSpHO2Queis9KEZbRC5hXS56LXAueikqRztlLngrPShGW0QuYl0ueC1xLngpKkc7ZS55Kz0oRltELmJdLnktcS55KSpHO2Uueis9KEZbRC5iXS56LXEueikqRztmLngrPShGW0QuY10ueC1uLngpKkc7Zi55Kz0oRltELmNdLnktbi55KSpHO2Yueis9KEZbRC5jXS56LW4ueikqR319ZC5hZGQocCk7ZS5hZGQocSk7Zi5hZGQobik7cD1kO3E9ZTtuPWZ9eT1sLnNpZGU9PT1USFJFRS5CYWNrU2lkZT9iLmludGVyc2VjdFRyaWFuZ2xlKG4scSxwLCEwKTpiLmludGVyc2VjdFRyaWFuZ2xlKHAscSxuLGwuc2lkZSE9PVRIUkVFLkRvdWJsZVNpZGUpO251bGwhPT15JiYoeS5hcHBseU1hdHJpeDQodGhpcy5tYXRyaXhXb3JsZCksQT1nLnJheS5vcmlnaW4uZGlzdGFuY2VUbyh5KSxBPHR8fFxuQTxnLm5lYXJ8fEE+Zy5mYXJ8fGgucHVzaCh7ZGlzdGFuY2U6QSxwb2ludDp5LGZhY2U6RCxmYWNlSW5kZXg6dixvYmplY3Q6dGhpc30pKX19fSgpO1RIUkVFLk1lc2gucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YSYmKGE9bmV3IFRIUkVFLk1lc2godGhpcy5nZW9tZXRyeSx0aGlzLm1hdGVyaWFsKSk7VEhSRUUuT2JqZWN0M0QucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyxhLGIpO3JldHVybiBhfTtUSFJFRS5Cb25lPWZ1bmN0aW9uKGEpe1RIUkVFLk9iamVjdDNELmNhbGwodGhpcyk7dGhpcy50eXBlPVwiQm9uZVwiO3RoaXMuc2tpbj1hfTtUSFJFRS5Cb25lLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk9iamVjdDNELnByb3RvdHlwZSk7VEhSRUUuQm9uZS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuQm9uZTtcblRIUkVFLlNrZWxldG9uPWZ1bmN0aW9uKGEsYixjKXt0aGlzLnVzZVZlcnRleFRleHR1cmU9dm9pZCAwIT09Yz9jOiEwO3RoaXMuaWRlbnRpdHlNYXRyaXg9bmV3IFRIUkVFLk1hdHJpeDQ7YT1hfHxbXTt0aGlzLmJvbmVzPWEuc2xpY2UoMCk7dGhpcy51c2VWZXJ0ZXhUZXh0dXJlPyh0aGlzLmJvbmVUZXh0dXJlSGVpZ2h0PXRoaXMuYm9uZVRleHR1cmVXaWR0aD1hPTI1Njx0aGlzLmJvbmVzLmxlbmd0aD82NDo2NDx0aGlzLmJvbmVzLmxlbmd0aD8zMjoxNjx0aGlzLmJvbmVzLmxlbmd0aD8xNjo4LHRoaXMuYm9uZU1hdHJpY2VzPW5ldyBGbG9hdDMyQXJyYXkodGhpcy5ib25lVGV4dHVyZVdpZHRoKnRoaXMuYm9uZVRleHR1cmVIZWlnaHQqNCksdGhpcy5ib25lVGV4dHVyZT1uZXcgVEhSRUUuRGF0YVRleHR1cmUodGhpcy5ib25lTWF0cmljZXMsdGhpcy5ib25lVGV4dHVyZVdpZHRoLHRoaXMuYm9uZVRleHR1cmVIZWlnaHQsVEhSRUUuUkdCQUZvcm1hdCxUSFJFRS5GbG9hdFR5cGUpLFxudGhpcy5ib25lVGV4dHVyZS5taW5GaWx0ZXI9VEhSRUUuTmVhcmVzdEZpbHRlcix0aGlzLmJvbmVUZXh0dXJlLm1hZ0ZpbHRlcj1USFJFRS5OZWFyZXN0RmlsdGVyLHRoaXMuYm9uZVRleHR1cmUuZ2VuZXJhdGVNaXBtYXBzPSExLHRoaXMuYm9uZVRleHR1cmUuZmxpcFk9ITEpOnRoaXMuYm9uZU1hdHJpY2VzPW5ldyBGbG9hdDMyQXJyYXkoMTYqdGhpcy5ib25lcy5sZW5ndGgpO2lmKHZvaWQgMD09PWIpdGhpcy5jYWxjdWxhdGVJbnZlcnNlcygpO2Vsc2UgaWYodGhpcy5ib25lcy5sZW5ndGg9PT1iLmxlbmd0aCl0aGlzLmJvbmVJbnZlcnNlcz1iLnNsaWNlKDApO2Vsc2UgZm9yKFRIUkVFLndhcm4oXCJUSFJFRS5Ta2VsZXRvbiBib25JbnZlcnNlcyBpcyB0aGUgd3JvbmcgbGVuZ3RoLlwiKSx0aGlzLmJvbmVJbnZlcnNlcz1bXSxiPTAsYT10aGlzLmJvbmVzLmxlbmd0aDtiPGE7YisrKXRoaXMuYm9uZUludmVyc2VzLnB1c2gobmV3IFRIUkVFLk1hdHJpeDQpfTtcblRIUkVFLlNrZWxldG9uLnByb3RvdHlwZS5jYWxjdWxhdGVJbnZlcnNlcz1mdW5jdGlvbigpe3RoaXMuYm9uZUludmVyc2VzPVtdO2Zvcih2YXIgYT0wLGI9dGhpcy5ib25lcy5sZW5ndGg7YTxiO2ErKyl7dmFyIGM9bmV3IFRIUkVFLk1hdHJpeDQ7dGhpcy5ib25lc1thXSYmYy5nZXRJbnZlcnNlKHRoaXMuYm9uZXNbYV0ubWF0cml4V29ybGQpO3RoaXMuYm9uZUludmVyc2VzLnB1c2goYyl9fTtcblRIUkVFLlNrZWxldG9uLnByb3RvdHlwZS5wb3NlPWZ1bmN0aW9uKCl7Zm9yKHZhciBhLGI9MCxjPXRoaXMuYm9uZXMubGVuZ3RoO2I8YztiKyspKGE9dGhpcy5ib25lc1tiXSkmJmEubWF0cml4V29ybGQuZ2V0SW52ZXJzZSh0aGlzLmJvbmVJbnZlcnNlc1tiXSk7Yj0wO2ZvcihjPXRoaXMuYm9uZXMubGVuZ3RoO2I8YztiKyspaWYoYT10aGlzLmJvbmVzW2JdKWEucGFyZW50PyhhLm1hdHJpeC5nZXRJbnZlcnNlKGEucGFyZW50Lm1hdHJpeFdvcmxkKSxhLm1hdHJpeC5tdWx0aXBseShhLm1hdHJpeFdvcmxkKSk6YS5tYXRyaXguY29weShhLm1hdHJpeFdvcmxkKSxhLm1hdHJpeC5kZWNvbXBvc2UoYS5wb3NpdGlvbixhLnF1YXRlcm5pb24sYS5zY2FsZSl9O1xuVEhSRUUuU2tlbGV0b24ucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5NYXRyaXg0O3JldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgYj0wLGM9dGhpcy5ib25lcy5sZW5ndGg7YjxjO2IrKylhLm11bHRpcGx5TWF0cmljZXModGhpcy5ib25lc1tiXT90aGlzLmJvbmVzW2JdLm1hdHJpeFdvcmxkOnRoaXMuaWRlbnRpdHlNYXRyaXgsdGhpcy5ib25lSW52ZXJzZXNbYl0pLGEuZmxhdHRlblRvQXJyYXlPZmZzZXQodGhpcy5ib25lTWF0cmljZXMsMTYqYik7dGhpcy51c2VWZXJ0ZXhUZXh0dXJlJiYodGhpcy5ib25lVGV4dHVyZS5uZWVkc1VwZGF0ZT0hMCl9fSgpO1xuVEhSRUUuU2tpbm5lZE1lc2g9ZnVuY3Rpb24oYSxiLGMpe1RIUkVFLk1lc2guY2FsbCh0aGlzLGEsYik7dGhpcy50eXBlPVwiU2tpbm5lZE1lc2hcIjt0aGlzLmJpbmRNb2RlPVwiYXR0YWNoZWRcIjt0aGlzLmJpbmRNYXRyaXg9bmV3IFRIUkVFLk1hdHJpeDQ7dGhpcy5iaW5kTWF0cml4SW52ZXJzZT1uZXcgVEhSRUUuTWF0cml4NDthPVtdO2lmKHRoaXMuZ2VvbWV0cnkmJnZvaWQgMCE9PXRoaXMuZ2VvbWV0cnkuYm9uZXMpe2Zvcih2YXIgZCxlLGYsZyxoPTAsaz10aGlzLmdlb21ldHJ5LmJvbmVzLmxlbmd0aDtoPGs7KytoKWQ9dGhpcy5nZW9tZXRyeS5ib25lc1toXSxlPWQucG9zLGY9ZC5yb3RxLGc9ZC5zY2wsYj1uZXcgVEhSRUUuQm9uZSh0aGlzKSxhLnB1c2goYiksYi5uYW1lPWQubmFtZSxiLnBvc2l0aW9uLnNldChlWzBdLGVbMV0sZVsyXSksYi5xdWF0ZXJuaW9uLnNldChmWzBdLGZbMV0sZlsyXSxmWzNdKSx2b2lkIDAhPT1nP2Iuc2NhbGUuc2V0KGdbMF0sZ1sxXSxnWzJdKTpiLnNjYWxlLnNldCgxLFxuMSwxKTtoPTA7Zm9yKGs9dGhpcy5nZW9tZXRyeS5ib25lcy5sZW5ndGg7aDxrOysraClkPXRoaXMuZ2VvbWV0cnkuYm9uZXNbaF0sLTEhPT1kLnBhcmVudD9hW2QucGFyZW50XS5hZGQoYVtoXSk6dGhpcy5hZGQoYVtoXSl9dGhpcy5ub3JtYWxpemVTa2luV2VpZ2h0cygpO3RoaXMudXBkYXRlTWF0cml4V29ybGQoITApO3RoaXMuYmluZChuZXcgVEhSRUUuU2tlbGV0b24oYSx2b2lkIDAsYykpfTtUSFJFRS5Ta2lubmVkTWVzaC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5NZXNoLnByb3RvdHlwZSk7VEhSRUUuU2tpbm5lZE1lc2gucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLlNraW5uZWRNZXNoO1RIUkVFLlNraW5uZWRNZXNoLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9uKGEsYil7dGhpcy5za2VsZXRvbj1hO3ZvaWQgMD09PWImJih0aGlzLnVwZGF0ZU1hdHJpeFdvcmxkKCEwKSxiPXRoaXMubWF0cml4V29ybGQpO3RoaXMuYmluZE1hdHJpeC5jb3B5KGIpO3RoaXMuYmluZE1hdHJpeEludmVyc2UuZ2V0SW52ZXJzZShiKX07XG5USFJFRS5Ta2lubmVkTWVzaC5wcm90b3R5cGUucG9zZT1mdW5jdGlvbigpe3RoaXMuc2tlbGV0b24ucG9zZSgpfTtUSFJFRS5Ta2lubmVkTWVzaC5wcm90b3R5cGUubm9ybWFsaXplU2tpbldlaWdodHM9ZnVuY3Rpb24oKXtpZih0aGlzLmdlb21ldHJ5IGluc3RhbmNlb2YgVEhSRUUuR2VvbWV0cnkpZm9yKHZhciBhPTA7YTx0aGlzLmdlb21ldHJ5LnNraW5JbmRpY2VzLmxlbmd0aDthKyspe3ZhciBiPXRoaXMuZ2VvbWV0cnkuc2tpbldlaWdodHNbYV0sYz0xL2IubGVuZ3RoTWFuaGF0dGFuKCk7SW5maW5pdHkhPT1jP2IubXVsdGlwbHlTY2FsYXIoYyk6Yi5zZXQoMSl9fTtcblRIUkVFLlNraW5uZWRNZXNoLnByb3RvdHlwZS51cGRhdGVNYXRyaXhXb3JsZD1mdW5jdGlvbihhKXtUSFJFRS5NZXNoLnByb3RvdHlwZS51cGRhdGVNYXRyaXhXb3JsZC5jYWxsKHRoaXMsITApO1wiYXR0YWNoZWRcIj09PXRoaXMuYmluZE1vZGU/dGhpcy5iaW5kTWF0cml4SW52ZXJzZS5nZXRJbnZlcnNlKHRoaXMubWF0cml4V29ybGQpOlwiZGV0YWNoZWRcIj09PXRoaXMuYmluZE1vZGU/dGhpcy5iaW5kTWF0cml4SW52ZXJzZS5nZXRJbnZlcnNlKHRoaXMuYmluZE1hdHJpeCk6VEhSRUUud2FybihcIlRIUkVFLlNraW5uZWRNZXNoIHVucmVja29nbml6ZWQgYmluZE1vZGU6IFwiK3RoaXMuYmluZE1vZGUpfTtcblRIUkVFLlNraW5uZWRNZXNoLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihhKXt2b2lkIDA9PT1hJiYoYT1uZXcgVEhSRUUuU2tpbm5lZE1lc2godGhpcy5nZW9tZXRyeSx0aGlzLm1hdGVyaWFsLHRoaXMudXNlVmVydGV4VGV4dHVyZSkpO1RIUkVFLk1lc2gucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyxhKTtyZXR1cm4gYX07VEhSRUUuTW9ycGhBbmltTWVzaD1mdW5jdGlvbihhLGIpe1RIUkVFLk1lc2guY2FsbCh0aGlzLGEsYik7dGhpcy50eXBlPVwiTW9ycGhBbmltTWVzaFwiO3RoaXMuZHVyYXRpb249MUUzO3RoaXMubWlycm9yZWRMb29wPSExO3RoaXMuY3VycmVudEtleWZyYW1lPXRoaXMubGFzdEtleWZyYW1lPXRoaXMudGltZT0wO3RoaXMuZGlyZWN0aW9uPTE7dGhpcy5kaXJlY3Rpb25CYWNrd2FyZHM9ITE7dGhpcy5zZXRGcmFtZVJhbmdlKDAsdGhpcy5nZW9tZXRyeS5tb3JwaFRhcmdldHMubGVuZ3RoLTEpfTtUSFJFRS5Nb3JwaEFuaW1NZXNoLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk1lc2gucHJvdG90eXBlKTtcblRIUkVFLk1vcnBoQW5pbU1lc2gucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLk1vcnBoQW5pbU1lc2g7VEhSRUUuTW9ycGhBbmltTWVzaC5wcm90b3R5cGUuc2V0RnJhbWVSYW5nZT1mdW5jdGlvbihhLGIpe3RoaXMuc3RhcnRLZXlmcmFtZT1hO3RoaXMuZW5kS2V5ZnJhbWU9Yjt0aGlzLmxlbmd0aD10aGlzLmVuZEtleWZyYW1lLXRoaXMuc3RhcnRLZXlmcmFtZSsxfTtUSFJFRS5Nb3JwaEFuaW1NZXNoLnByb3RvdHlwZS5zZXREaXJlY3Rpb25Gb3J3YXJkPWZ1bmN0aW9uKCl7dGhpcy5kaXJlY3Rpb249MTt0aGlzLmRpcmVjdGlvbkJhY2t3YXJkcz0hMX07VEhSRUUuTW9ycGhBbmltTWVzaC5wcm90b3R5cGUuc2V0RGlyZWN0aW9uQmFja3dhcmQ9ZnVuY3Rpb24oKXt0aGlzLmRpcmVjdGlvbj0tMTt0aGlzLmRpcmVjdGlvbkJhY2t3YXJkcz0hMH07XG5USFJFRS5Nb3JwaEFuaW1NZXNoLnByb3RvdHlwZS5wYXJzZUFuaW1hdGlvbnM9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmdlb21ldHJ5O2EuYW5pbWF0aW9uc3x8KGEuYW5pbWF0aW9ucz17fSk7Zm9yKHZhciBiLGM9YS5hbmltYXRpb25zLGQ9LyhbYS16XSspXz8oXFxkKykvLGU9MCxmPWEubW9ycGhUYXJnZXRzLmxlbmd0aDtlPGY7ZSsrKXt2YXIgZz1hLm1vcnBoVGFyZ2V0c1tlXS5uYW1lLm1hdGNoKGQpO2lmKGcmJjE8Zy5sZW5ndGgpe2c9Z1sxXTtjW2ddfHwoY1tnXT17c3RhcnQ6SW5maW5pdHksZW5kOi1JbmZpbml0eX0pO3ZhciBoPWNbZ107ZTxoLnN0YXJ0JiYoaC5zdGFydD1lKTtlPmguZW5kJiYoaC5lbmQ9ZSk7Ynx8KGI9Zyl9fWEuZmlyc3RBbmltYXRpb249Yn07XG5USFJFRS5Nb3JwaEFuaW1NZXNoLnByb3RvdHlwZS5zZXRBbmltYXRpb25MYWJlbD1mdW5jdGlvbihhLGIsYyl7dGhpcy5nZW9tZXRyeS5hbmltYXRpb25zfHwodGhpcy5nZW9tZXRyeS5hbmltYXRpb25zPXt9KTt0aGlzLmdlb21ldHJ5LmFuaW1hdGlvbnNbYV09e3N0YXJ0OmIsZW5kOmN9fTtUSFJFRS5Nb3JwaEFuaW1NZXNoLnByb3RvdHlwZS5wbGF5QW5pbWF0aW9uPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5nZW9tZXRyeS5hbmltYXRpb25zW2FdO2M/KHRoaXMuc2V0RnJhbWVSYW5nZShjLnN0YXJ0LGMuZW5kKSx0aGlzLmR1cmF0aW9uPShjLmVuZC1jLnN0YXJ0KS9iKjFFMyx0aGlzLnRpbWU9MCk6VEhSRUUud2FybihcIlRIUkVFLk1vcnBoQW5pbU1lc2g6IGFuaW1hdGlvbltcIithK1wiXSB1bmRlZmluZWQgaW4gLnBsYXlBbmltYXRpb24oKVwiKX07XG5USFJFRS5Nb3JwaEFuaW1NZXNoLnByb3RvdHlwZS51cGRhdGVBbmltYXRpb249ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5kdXJhdGlvbi90aGlzLmxlbmd0aDt0aGlzLnRpbWUrPXRoaXMuZGlyZWN0aW9uKmE7aWYodGhpcy5taXJyb3JlZExvb3Ape2lmKHRoaXMudGltZT50aGlzLmR1cmF0aW9ufHwwPnRoaXMudGltZSl0aGlzLmRpcmVjdGlvbio9LTEsdGhpcy50aW1lPnRoaXMuZHVyYXRpb24mJih0aGlzLnRpbWU9dGhpcy5kdXJhdGlvbix0aGlzLmRpcmVjdGlvbkJhY2t3YXJkcz0hMCksMD50aGlzLnRpbWUmJih0aGlzLnRpbWU9MCx0aGlzLmRpcmVjdGlvbkJhY2t3YXJkcz0hMSl9ZWxzZSB0aGlzLnRpbWUlPXRoaXMuZHVyYXRpb24sMD50aGlzLnRpbWUmJih0aGlzLnRpbWUrPXRoaXMuZHVyYXRpb24pO2E9dGhpcy5zdGFydEtleWZyYW1lK1RIUkVFLk1hdGguY2xhbXAoTWF0aC5mbG9vcih0aGlzLnRpbWUvYiksMCx0aGlzLmxlbmd0aC0xKTthIT09dGhpcy5jdXJyZW50S2V5ZnJhbWUmJlxuKHRoaXMubW9ycGhUYXJnZXRJbmZsdWVuY2VzW3RoaXMubGFzdEtleWZyYW1lXT0wLHRoaXMubW9ycGhUYXJnZXRJbmZsdWVuY2VzW3RoaXMuY3VycmVudEtleWZyYW1lXT0xLHRoaXMubW9ycGhUYXJnZXRJbmZsdWVuY2VzW2FdPTAsdGhpcy5sYXN0S2V5ZnJhbWU9dGhpcy5jdXJyZW50S2V5ZnJhbWUsdGhpcy5jdXJyZW50S2V5ZnJhbWU9YSk7Yj10aGlzLnRpbWUlYi9iO3RoaXMuZGlyZWN0aW9uQmFja3dhcmRzJiYoYj0xLWIpO3RoaXMubW9ycGhUYXJnZXRJbmZsdWVuY2VzW3RoaXMuY3VycmVudEtleWZyYW1lXT1iO3RoaXMubW9ycGhUYXJnZXRJbmZsdWVuY2VzW3RoaXMubGFzdEtleWZyYW1lXT0xLWJ9O1xuVEhSRUUuTW9ycGhBbmltTWVzaC5wcm90b3R5cGUuaW50ZXJwb2xhdGVUYXJnZXRzPWZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9dGhpcy5tb3JwaFRhcmdldEluZmx1ZW5jZXMsZT0wLGY9ZC5sZW5ndGg7ZTxmO2UrKylkW2VdPTA7LTE8YSYmKGRbYV09MS1jKTstMTxiJiYoZFtiXT1jKX07XG5USFJFRS5Nb3JwaEFuaW1NZXNoLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihhKXt2b2lkIDA9PT1hJiYoYT1uZXcgVEhSRUUuTW9ycGhBbmltTWVzaCh0aGlzLmdlb21ldHJ5LHRoaXMubWF0ZXJpYWwpKTthLmR1cmF0aW9uPXRoaXMuZHVyYXRpb247YS5taXJyb3JlZExvb3A9dGhpcy5taXJyb3JlZExvb3A7YS50aW1lPXRoaXMudGltZTthLmxhc3RLZXlmcmFtZT10aGlzLmxhc3RLZXlmcmFtZTthLmN1cnJlbnRLZXlmcmFtZT10aGlzLmN1cnJlbnRLZXlmcmFtZTthLmRpcmVjdGlvbj10aGlzLmRpcmVjdGlvbjthLmRpcmVjdGlvbkJhY2t3YXJkcz10aGlzLmRpcmVjdGlvbkJhY2t3YXJkcztUSFJFRS5NZXNoLnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsYSk7cmV0dXJuIGF9O1RIUkVFLkxPRD1mdW5jdGlvbigpe1RIUkVFLk9iamVjdDNELmNhbGwodGhpcyk7dGhpcy5vYmplY3RzPVtdfTtUSFJFRS5MT0QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuT2JqZWN0M0QucHJvdG90eXBlKTtcblRIUkVFLkxPRC5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuTE9EO1RIUkVFLkxPRC5wcm90b3R5cGUuYWRkTGV2ZWw9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj0wKTtiPU1hdGguYWJzKGIpO2Zvcih2YXIgYz0wO2M8dGhpcy5vYmplY3RzLmxlbmd0aCYmIShiPHRoaXMub2JqZWN0c1tjXS5kaXN0YW5jZSk7YysrKTt0aGlzLm9iamVjdHMuc3BsaWNlKGMsMCx7ZGlzdGFuY2U6YixvYmplY3Q6YX0pO3RoaXMuYWRkKGEpfTtUSFJFRS5MT0QucHJvdG90eXBlLmdldE9iamVjdEZvckRpc3RhbmNlPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0xLGM9dGhpcy5vYmplY3RzLmxlbmd0aDtiPGMmJiEoYTx0aGlzLm9iamVjdHNbYl0uZGlzdGFuY2UpO2IrKyk7cmV0dXJuIHRoaXMub2JqZWN0c1tiLTFdLm9iamVjdH07XG5USFJFRS5MT0QucHJvdG90eXBlLnJheWNhc3Q9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oYixjKXthLnNldEZyb21NYXRyaXhQb3NpdGlvbih0aGlzLm1hdHJpeFdvcmxkKTt2YXIgZD1iLnJheS5vcmlnaW4uZGlzdGFuY2VUbyhhKTt0aGlzLmdldE9iamVjdEZvckRpc3RhbmNlKGQpLnJheWNhc3QoYixjKX19KCk7XG5USFJFRS5MT0QucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzLGI9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKGMpe2lmKDE8dGhpcy5vYmplY3RzLmxlbmd0aCl7YS5zZXRGcm9tTWF0cml4UG9zaXRpb24oYy5tYXRyaXhXb3JsZCk7Yi5zZXRGcm9tTWF0cml4UG9zaXRpb24odGhpcy5tYXRyaXhXb3JsZCk7Yz1hLmRpc3RhbmNlVG8oYik7dGhpcy5vYmplY3RzWzBdLm9iamVjdC52aXNpYmxlPSEwO2Zvcih2YXIgZD0xLGU9dGhpcy5vYmplY3RzLmxlbmd0aDtkPGU7ZCsrKWlmKGM+PXRoaXMub2JqZWN0c1tkXS5kaXN0YW5jZSl0aGlzLm9iamVjdHNbZC0xXS5vYmplY3QudmlzaWJsZT0hMSx0aGlzLm9iamVjdHNbZF0ub2JqZWN0LnZpc2libGU9ITA7ZWxzZSBicmVhaztmb3IoO2Q8ZTtkKyspdGhpcy5vYmplY3RzW2RdLm9iamVjdC52aXNpYmxlPSExfX19KCk7XG5USFJFRS5MT0QucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGEpe3ZvaWQgMD09PWEmJihhPW5ldyBUSFJFRS5MT0QpO1RIUkVFLk9iamVjdDNELnByb3RvdHlwZS5jbG9uZS5jYWxsKHRoaXMsYSk7Zm9yKHZhciBiPTAsYz10aGlzLm9iamVjdHMubGVuZ3RoO2I8YztiKyspe3ZhciBkPXRoaXMub2JqZWN0c1tiXS5vYmplY3QuY2xvbmUoKTtkLnZpc2libGU9MD09PWI7YS5hZGRMZXZlbChkLHRoaXMub2JqZWN0c1tiXS5kaXN0YW5jZSl9cmV0dXJuIGF9O1xuVEhSRUUuU3ByaXRlPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFVpbnQxNkFycmF5KFswLDEsMiwwLDIsM10pLGI9bmV3IEZsb2F0MzJBcnJheShbLS41LC0uNSwwLC41LC0uNSwwLC41LC41LDAsLS41LC41LDBdKSxjPW5ldyBGbG9hdDMyQXJyYXkoWzAsMCwxLDAsMSwxLDAsMV0pLGQ9bmV3IFRIUkVFLkJ1ZmZlckdlb21ldHJ5O2QuYWRkQXR0cmlidXRlKFwiaW5kZXhcIixuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKGEsMSkpO2QuYWRkQXR0cmlidXRlKFwicG9zaXRpb25cIixuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKGIsMykpO2QuYWRkQXR0cmlidXRlKFwidXZcIixuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKGMsMikpO3JldHVybiBmdW5jdGlvbihhKXtUSFJFRS5PYmplY3QzRC5jYWxsKHRoaXMpO3RoaXMudHlwZT1cIlNwcml0ZVwiO3RoaXMuZ2VvbWV0cnk9ZDt0aGlzLm1hdGVyaWFsPXZvaWQgMCE9PWE/YTpuZXcgVEhSRUUuU3ByaXRlTWF0ZXJpYWx9fSgpO1xuVEhSRUUuU3ByaXRlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk9iamVjdDNELnByb3RvdHlwZSk7VEhSRUUuU3ByaXRlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5TcHJpdGU7VEhSRUUuU3ByaXRlLnByb3RvdHlwZS5yYXljYXN0PWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKGIsYyl7YS5zZXRGcm9tTWF0cml4UG9zaXRpb24odGhpcy5tYXRyaXhXb3JsZCk7dmFyIGQ9Yi5yYXkuZGlzdGFuY2VUb1BvaW50KGEpO2Q+dGhpcy5zY2FsZS54fHxjLnB1c2goe2Rpc3RhbmNlOmQscG9pbnQ6dGhpcy5wb3NpdGlvbixmYWNlOm51bGwsb2JqZWN0OnRoaXN9KX19KCk7VEhSRUUuU3ByaXRlLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbihhKXt2b2lkIDA9PT1hJiYoYT1uZXcgVEhSRUUuU3ByaXRlKHRoaXMubWF0ZXJpYWwpKTtUSFJFRS5PYmplY3QzRC5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzLGEpO3JldHVybiBhfTtcblRIUkVFLlBhcnRpY2xlPVRIUkVFLlNwcml0ZTtUSFJFRS5MZW5zRmxhcmU9ZnVuY3Rpb24oYSxiLGMsZCxlKXtUSFJFRS5PYmplY3QzRC5jYWxsKHRoaXMpO3RoaXMubGVuc0ZsYXJlcz1bXTt0aGlzLnBvc2l0aW9uU2NyZWVuPW5ldyBUSFJFRS5WZWN0b3IzO3RoaXMuY3VzdG9tVXBkYXRlQ2FsbGJhY2s9dm9pZCAwO3ZvaWQgMCE9PWEmJnRoaXMuYWRkKGEsYixjLGQsZSl9O1RIUkVFLkxlbnNGbGFyZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5PYmplY3QzRC5wcm90b3R5cGUpO1RIUkVFLkxlbnNGbGFyZS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuTGVuc0ZsYXJlO1xuVEhSRUUuTGVuc0ZsYXJlLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZvaWQgMD09PWImJihiPS0xKTt2b2lkIDA9PT1jJiYoYz0wKTt2b2lkIDA9PT1mJiYoZj0xKTt2b2lkIDA9PT1lJiYoZT1uZXcgVEhSRUUuQ29sb3IoMTY3NzcyMTUpKTt2b2lkIDA9PT1kJiYoZD1USFJFRS5Ob3JtYWxCbGVuZGluZyk7Yz1NYXRoLm1pbihjLE1hdGgubWF4KDAsYykpO3RoaXMubGVuc0ZsYXJlcy5wdXNoKHt0ZXh0dXJlOmEsc2l6ZTpiLGRpc3RhbmNlOmMseDowLHk6MCx6OjAsc2NhbGU6MSxyb3RhdGlvbjoxLG9wYWNpdHk6Zixjb2xvcjplLGJsZW5kaW5nOmR9KX07XG5USFJFRS5MZW5zRmxhcmUucHJvdG90eXBlLnVwZGF0ZUxlbnNGbGFyZXM9ZnVuY3Rpb24oKXt2YXIgYSxiPXRoaXMubGVuc0ZsYXJlcy5sZW5ndGgsYyxkPTIqLXRoaXMucG9zaXRpb25TY3JlZW4ueCxlPTIqLXRoaXMucG9zaXRpb25TY3JlZW4ueTtmb3IoYT0wO2E8YjthKyspYz10aGlzLmxlbnNGbGFyZXNbYV0sYy54PXRoaXMucG9zaXRpb25TY3JlZW4ueCtkKmMuZGlzdGFuY2UsYy55PXRoaXMucG9zaXRpb25TY3JlZW4ueStlKmMuZGlzdGFuY2UsYy53YW50ZWRSb3RhdGlvbj1jLngqTWF0aC5QSSouMjUsYy5yb3RhdGlvbis9LjI1KihjLndhbnRlZFJvdGF0aW9uLWMucm90YXRpb24pfTtUSFJFRS5TY2VuZT1mdW5jdGlvbigpe1RIUkVFLk9iamVjdDNELmNhbGwodGhpcyk7dGhpcy50eXBlPVwiU2NlbmVcIjt0aGlzLm92ZXJyaWRlTWF0ZXJpYWw9dGhpcy5mb2c9bnVsbDt0aGlzLmF1dG9VcGRhdGU9ITB9O1RIUkVFLlNjZW5lLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk9iamVjdDNELnByb3RvdHlwZSk7XG5USFJFRS5TY2VuZS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuU2NlbmU7VEhSRUUuU2NlbmUucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKGEpe3ZvaWQgMD09PWEmJihhPW5ldyBUSFJFRS5TY2VuZSk7VEhSRUUuT2JqZWN0M0QucHJvdG90eXBlLmNsb25lLmNhbGwodGhpcyxhKTtudWxsIT09dGhpcy5mb2cmJihhLmZvZz10aGlzLmZvZy5jbG9uZSgpKTtudWxsIT09dGhpcy5vdmVycmlkZU1hdGVyaWFsJiYoYS5vdmVycmlkZU1hdGVyaWFsPXRoaXMub3ZlcnJpZGVNYXRlcmlhbC5jbG9uZSgpKTthLmF1dG9VcGRhdGU9dGhpcy5hdXRvVXBkYXRlO2EubWF0cml4QXV0b1VwZGF0ZT10aGlzLm1hdHJpeEF1dG9VcGRhdGU7cmV0dXJuIGF9O1RIUkVFLkZvZz1mdW5jdGlvbihhLGIsYyl7dGhpcy5uYW1lPVwiXCI7dGhpcy5jb2xvcj1uZXcgVEhSRUUuQ29sb3IoYSk7dGhpcy5uZWFyPXZvaWQgMCE9PWI/YjoxO3RoaXMuZmFyPXZvaWQgMCE9PWM/YzoxRTN9O1xuVEhSRUUuRm9nLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgVEhSRUUuRm9nKHRoaXMuY29sb3IuZ2V0SGV4KCksdGhpcy5uZWFyLHRoaXMuZmFyKX07VEhSRUUuRm9nRXhwMj1mdW5jdGlvbihhLGIpe3RoaXMubmFtZT1cIlwiO3RoaXMuY29sb3I9bmV3IFRIUkVFLkNvbG9yKGEpO3RoaXMuZGVuc2l0eT12b2lkIDAhPT1iP2I6Mi41RS00fTtUSFJFRS5Gb2dFeHAyLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgVEhSRUUuRm9nRXhwMih0aGlzLmNvbG9yLmdldEhleCgpLHRoaXMuZGVuc2l0eSl9O1RIUkVFLlNoYWRlckNodW5rPXt9O1RIUkVFLlNoYWRlckNodW5rLmNvbW1vbj1cIiNkZWZpbmUgUEkgMy4xNDE1OVxcbiNkZWZpbmUgUEkyIDYuMjgzMThcXG4jZGVmaW5lIFJFQ0lQUk9DQUxfUEkyIDAuMTU5MTU0OTRcXG4jZGVmaW5lIExPRzIgMS40NDI2OTVcXG4jZGVmaW5lIEVQU0lMT04gMWUtNlxcblxcbmZsb2F0IHNxdWFyZSggaW4gZmxvYXQgYSApIHsgcmV0dXJuIGEqYTsgfVxcbnZlYzIgIHNxdWFyZSggaW4gdmVjMiBhICkgIHsgcmV0dXJuIHZlYzIoIGEueCphLngsIGEueSphLnkgKTsgfVxcbnZlYzMgIHNxdWFyZSggaW4gdmVjMyBhICkgIHsgcmV0dXJuIHZlYzMoIGEueCphLngsIGEueSphLnksIGEueiphLnogKTsgfVxcbnZlYzQgIHNxdWFyZSggaW4gdmVjNCBhICkgIHsgcmV0dXJuIHZlYzQoIGEueCphLngsIGEueSphLnksIGEueiphLnosIGEudyphLncgKTsgfVxcbmZsb2F0IHNhdHVyYXRlKCBpbiBmbG9hdCBhICkgeyByZXR1cm4gY2xhbXAoIGEsIDAuMCwgMS4wICk7IH1cXG52ZWMyICBzYXR1cmF0ZSggaW4gdmVjMiBhICkgIHsgcmV0dXJuIGNsYW1wKCBhLCAwLjAsIDEuMCApOyB9XFxudmVjMyAgc2F0dXJhdGUoIGluIHZlYzMgYSApICB7IHJldHVybiBjbGFtcCggYSwgMC4wLCAxLjAgKTsgfVxcbnZlYzQgIHNhdHVyYXRlKCBpbiB2ZWM0IGEgKSAgeyByZXR1cm4gY2xhbXAoIGEsIDAuMCwgMS4wICk7IH1cXG5mbG9hdCBhdmVyYWdlKCBpbiBmbG9hdCBhICkgeyByZXR1cm4gYTsgfVxcbmZsb2F0IGF2ZXJhZ2UoIGluIHZlYzIgYSApICB7IHJldHVybiAoIGEueCArIGEueSkgKiAwLjU7IH1cXG5mbG9hdCBhdmVyYWdlKCBpbiB2ZWMzIGEgKSAgeyByZXR1cm4gKCBhLnggKyBhLnkgKyBhLnopIC8gMy4wOyB9XFxuZmxvYXQgYXZlcmFnZSggaW4gdmVjNCBhICkgIHsgcmV0dXJuICggYS54ICsgYS55ICsgYS56ICsgYS53KSAqIDAuMjU7IH1cXG5mbG9hdCB3aGl0ZUNvbXBsaW1lbnQoIGluIGZsb2F0IGEgKSB7IHJldHVybiBzYXR1cmF0ZSggMS4wIC0gYSApOyB9XFxudmVjMiAgd2hpdGVDb21wbGltZW50KCBpbiB2ZWMyIGEgKSAgeyByZXR1cm4gc2F0dXJhdGUoIHZlYzIoMS4wKSAtIGEgKTsgfVxcbnZlYzMgIHdoaXRlQ29tcGxpbWVudCggaW4gdmVjMyBhICkgIHsgcmV0dXJuIHNhdHVyYXRlKCB2ZWMzKDEuMCkgLSBhICk7IH1cXG52ZWM0ICB3aGl0ZUNvbXBsaW1lbnQoIGluIHZlYzQgYSApICB7IHJldHVybiBzYXR1cmF0ZSggdmVjNCgxLjApIC0gYSApOyB9XFxudmVjMyB0cmFuc2Zvcm1EaXJlY3Rpb24oIGluIHZlYzMgbm9ybWFsLCBpbiBtYXQ0IG1hdHJpeCApIHtcXG5cXHRyZXR1cm4gbm9ybWFsaXplKCAoIG1hdHJpeCAqIHZlYzQoIG5vcm1hbCwgMC4wICkgKS54eXogKTtcXG59XFxuLy8gaHR0cDovL2VuLndpa2lib29rcy5vcmcvd2lraS9HTFNMX1Byb2dyYW1taW5nL0FwcGx5aW5nX01hdHJpeF9UcmFuc2Zvcm1hdGlvbnNcXG52ZWMzIGludmVyc2VUcmFuc2Zvcm1EaXJlY3Rpb24oIGluIHZlYzMgbm9ybWFsLCBpbiBtYXQ0IG1hdHJpeCApIHtcXG5cXHRyZXR1cm4gbm9ybWFsaXplKCAoIHZlYzQoIG5vcm1hbCwgMC4wICkgKiBtYXRyaXggKS54eXogKTtcXG59XFxudmVjMyBwcm9qZWN0T25QbGFuZShpbiB2ZWMzIHBvaW50LCBpbiB2ZWMzIHBvaW50T25QbGFuZSwgaW4gdmVjMyBwbGFuZU5vcm1hbCkge1xcblxcdGZsb2F0IGRpc3RhbmNlID0gZG90KCBwbGFuZU5vcm1hbCwgcG9pbnQtcG9pbnRPblBsYW5lICk7XFxuXFx0cmV0dXJuIHBvaW50IC0gZGlzdGFuY2UgKiBwbGFuZU5vcm1hbDtcXG59XFxuZmxvYXQgc2lkZU9mUGxhbmUoIGluIHZlYzMgcG9pbnQsIGluIHZlYzMgcG9pbnRPblBsYW5lLCBpbiB2ZWMzIHBsYW5lTm9ybWFsICkge1xcblxcdHJldHVybiBzaWduKCBkb3QoIHBvaW50IC0gcG9pbnRPblBsYW5lLCBwbGFuZU5vcm1hbCApICk7XFxufVxcbnZlYzMgbGluZVBsYW5lSW50ZXJzZWN0KCBpbiB2ZWMzIHBvaW50T25MaW5lLCBpbiB2ZWMzIGxpbmVEaXJlY3Rpb24sIGluIHZlYzMgcG9pbnRPblBsYW5lLCBpbiB2ZWMzIHBsYW5lTm9ybWFsICkge1xcblxcdHJldHVybiBwb2ludE9uTGluZSArIGxpbmVEaXJlY3Rpb24gKiAoIGRvdCggcGxhbmVOb3JtYWwsIHBvaW50T25QbGFuZSAtIHBvaW50T25MaW5lICkgLyBkb3QoIHBsYW5lTm9ybWFsLCBsaW5lRGlyZWN0aW9uICkgKTtcXG59XFxuZmxvYXQgY2FsY0xpZ2h0QXR0ZW51YXRpb24oIGZsb2F0IGxpZ2h0RGlzdGFuY2UsIGZsb2F0IGN1dG9mZkRpc3RhbmNlLCBmbG9hdCBkZWNheUV4cG9uZW50ICkge1xcblxcdGlmICggZGVjYXlFeHBvbmVudCA+IDAuMCApIHtcXG5cXHQgIHJldHVybiBwb3coIHNhdHVyYXRlKCAxLjAgLSBsaWdodERpc3RhbmNlIC8gY3V0b2ZmRGlzdGFuY2UgKSwgZGVjYXlFeHBvbmVudCApO1xcblxcdH1cXG5cXHRyZXR1cm4gMS4wO1xcbn1cXG5cXG52ZWMzIGlucHV0VG9MaW5lYXIoIGluIHZlYzMgYSApIHtcXG4jaWZkZWYgR0FNTUFfSU5QVVRcXG5cXHRyZXR1cm4gcG93KCBhLCB2ZWMzKCBmbG9hdCggR0FNTUFfRkFDVE9SICkgKSApO1xcbiNlbHNlXFxuXFx0cmV0dXJuIGE7XFxuI2VuZGlmXFxufVxcbnZlYzMgbGluZWFyVG9PdXRwdXQoIGluIHZlYzMgYSApIHtcXG4jaWZkZWYgR0FNTUFfT1VUUFVUXFxuXFx0cmV0dXJuIHBvdyggYSwgdmVjMyggMS4wIC8gZmxvYXQoIEdBTU1BX0ZBQ1RPUiApICkgKTtcXG4jZWxzZVxcblxcdHJldHVybiBhO1xcbiNlbmRpZlxcbn1cXG5cIjtcblRIUkVFLlNoYWRlckNodW5rLmFscGhhdGVzdF9mcmFnbWVudD1cIiNpZmRlZiBBTFBIQVRFU1RcXG5cXG5cXHRpZiAoIGRpZmZ1c2VDb2xvci5hIDwgQUxQSEFURVNUICkgZGlzY2FyZDtcXG5cXG4jZW5kaWZcXG5cIjtUSFJFRS5TaGFkZXJDaHVuay5saWdodHNfbGFtYmVydF92ZXJ0ZXg9XCJ2TGlnaHRGcm9udCA9IHZlYzMoIDAuMCApO1xcblxcbiNpZmRlZiBET1VCTEVfU0lERURcXG5cXG5cXHR2TGlnaHRCYWNrID0gdmVjMyggMC4wICk7XFxuXFxuI2VuZGlmXFxuXFxudHJhbnNmb3JtZWROb3JtYWwgPSBub3JtYWxpemUoIHRyYW5zZm9ybWVkTm9ybWFsICk7XFxuXFxuI2lmIE1BWF9ESVJfTElHSFRTID4gMFxcblxcbmZvciggaW50IGkgPSAwOyBpIDwgTUFYX0RJUl9MSUdIVFM7IGkgKysgKSB7XFxuXFxuXFx0dmVjMyBkaXJWZWN0b3IgPSB0cmFuc2Zvcm1EaXJlY3Rpb24oIGRpcmVjdGlvbmFsTGlnaHREaXJlY3Rpb25bIGkgXSwgdmlld01hdHJpeCApO1xcblxcblxcdGZsb2F0IGRvdFByb2R1Y3QgPSBkb3QoIHRyYW5zZm9ybWVkTm9ybWFsLCBkaXJWZWN0b3IgKTtcXG5cXHR2ZWMzIGRpcmVjdGlvbmFsTGlnaHRXZWlnaHRpbmcgPSB2ZWMzKCBtYXgoIGRvdFByb2R1Y3QsIDAuMCApICk7XFxuXFxuXFx0I2lmZGVmIERPVUJMRV9TSURFRFxcblxcblxcdFxcdHZlYzMgZGlyZWN0aW9uYWxMaWdodFdlaWdodGluZ0JhY2sgPSB2ZWMzKCBtYXgoIC1kb3RQcm9kdWN0LCAwLjAgKSApO1xcblxcblxcdFxcdCNpZmRlZiBXUkFQX0FST1VORFxcblxcblxcdFxcdFxcdHZlYzMgZGlyZWN0aW9uYWxMaWdodFdlaWdodGluZ0hhbGZCYWNrID0gdmVjMyggbWF4KCAtMC41ICogZG90UHJvZHVjdCArIDAuNSwgMC4wICkgKTtcXG5cXG5cXHRcXHQjZW5kaWZcXG5cXG5cXHQjZW5kaWZcXG5cXG5cXHQjaWZkZWYgV1JBUF9BUk9VTkRcXG5cXG5cXHRcXHR2ZWMzIGRpcmVjdGlvbmFsTGlnaHRXZWlnaHRpbmdIYWxmID0gdmVjMyggbWF4KCAwLjUgKiBkb3RQcm9kdWN0ICsgMC41LCAwLjAgKSApO1xcblxcdFxcdGRpcmVjdGlvbmFsTGlnaHRXZWlnaHRpbmcgPSBtaXgoIGRpcmVjdGlvbmFsTGlnaHRXZWlnaHRpbmcsIGRpcmVjdGlvbmFsTGlnaHRXZWlnaHRpbmdIYWxmLCB3cmFwUkdCICk7XFxuXFxuXFx0XFx0I2lmZGVmIERPVUJMRV9TSURFRFxcblxcblxcdFxcdFxcdGRpcmVjdGlvbmFsTGlnaHRXZWlnaHRpbmdCYWNrID0gbWl4KCBkaXJlY3Rpb25hbExpZ2h0V2VpZ2h0aW5nQmFjaywgZGlyZWN0aW9uYWxMaWdodFdlaWdodGluZ0hhbGZCYWNrLCB3cmFwUkdCICk7XFxuXFxuXFx0XFx0I2VuZGlmXFxuXFxuXFx0I2VuZGlmXFxuXFxuXFx0dkxpZ2h0RnJvbnQgKz0gZGlyZWN0aW9uYWxMaWdodENvbG9yWyBpIF0gKiBkaXJlY3Rpb25hbExpZ2h0V2VpZ2h0aW5nO1xcblxcblxcdCNpZmRlZiBET1VCTEVfU0lERURcXG5cXG5cXHRcXHR2TGlnaHRCYWNrICs9IGRpcmVjdGlvbmFsTGlnaHRDb2xvclsgaSBdICogZGlyZWN0aW9uYWxMaWdodFdlaWdodGluZ0JhY2s7XFxuXFxuXFx0I2VuZGlmXFxuXFxufVxcblxcbiNlbmRpZlxcblxcbiNpZiBNQVhfUE9JTlRfTElHSFRTID4gMFxcblxcblxcdGZvciggaW50IGkgPSAwOyBpIDwgTUFYX1BPSU5UX0xJR0hUUzsgaSArKyApIHtcXG5cXG5cXHRcXHR2ZWM0IGxQb3NpdGlvbiA9IHZpZXdNYXRyaXggKiB2ZWM0KCBwb2ludExpZ2h0UG9zaXRpb25bIGkgXSwgMS4wICk7XFxuXFx0XFx0dmVjMyBsVmVjdG9yID0gbFBvc2l0aW9uLnh5eiAtIG12UG9zaXRpb24ueHl6O1xcblxcblxcdFxcdGZsb2F0IGF0dGVudWF0aW9uID0gY2FsY0xpZ2h0QXR0ZW51YXRpb24oIGxlbmd0aCggbFZlY3RvciApLCBwb2ludExpZ2h0RGlzdGFuY2VbIGkgXSwgcG9pbnRMaWdodERlY2F5WyBpIF0gKTtcXG5cXG5cXHRcXHRsVmVjdG9yID0gbm9ybWFsaXplKCBsVmVjdG9yICk7XFxuXFx0XFx0ZmxvYXQgZG90UHJvZHVjdCA9IGRvdCggdHJhbnNmb3JtZWROb3JtYWwsIGxWZWN0b3IgKTtcXG5cXG5cXHRcXHR2ZWMzIHBvaW50TGlnaHRXZWlnaHRpbmcgPSB2ZWMzKCBtYXgoIGRvdFByb2R1Y3QsIDAuMCApICk7XFxuXFxuXFx0XFx0I2lmZGVmIERPVUJMRV9TSURFRFxcblxcblxcdFxcdFxcdHZlYzMgcG9pbnRMaWdodFdlaWdodGluZ0JhY2sgPSB2ZWMzKCBtYXgoIC1kb3RQcm9kdWN0LCAwLjAgKSApO1xcblxcblxcdFxcdFxcdCNpZmRlZiBXUkFQX0FST1VORFxcblxcblxcdFxcdFxcdFxcdHZlYzMgcG9pbnRMaWdodFdlaWdodGluZ0hhbGZCYWNrID0gdmVjMyggbWF4KCAtMC41ICogZG90UHJvZHVjdCArIDAuNSwgMC4wICkgKTtcXG5cXG5cXHRcXHRcXHQjZW5kaWZcXG5cXG5cXHRcXHQjZW5kaWZcXG5cXG5cXHRcXHQjaWZkZWYgV1JBUF9BUk9VTkRcXG5cXG5cXHRcXHRcXHR2ZWMzIHBvaW50TGlnaHRXZWlnaHRpbmdIYWxmID0gdmVjMyggbWF4KCAwLjUgKiBkb3RQcm9kdWN0ICsgMC41LCAwLjAgKSApO1xcblxcdFxcdFxcdHBvaW50TGlnaHRXZWlnaHRpbmcgPSBtaXgoIHBvaW50TGlnaHRXZWlnaHRpbmcsIHBvaW50TGlnaHRXZWlnaHRpbmdIYWxmLCB3cmFwUkdCICk7XFxuXFxuXFx0XFx0XFx0I2lmZGVmIERPVUJMRV9TSURFRFxcblxcblxcdFxcdFxcdFxcdHBvaW50TGlnaHRXZWlnaHRpbmdCYWNrID0gbWl4KCBwb2ludExpZ2h0V2VpZ2h0aW5nQmFjaywgcG9pbnRMaWdodFdlaWdodGluZ0hhbGZCYWNrLCB3cmFwUkdCICk7XFxuXFxuXFx0XFx0XFx0I2VuZGlmXFxuXFxuXFx0XFx0I2VuZGlmXFxuXFxuXFx0XFx0dkxpZ2h0RnJvbnQgKz0gcG9pbnRMaWdodENvbG9yWyBpIF0gKiBwb2ludExpZ2h0V2VpZ2h0aW5nICogYXR0ZW51YXRpb247XFxuXFxuXFx0XFx0I2lmZGVmIERPVUJMRV9TSURFRFxcblxcblxcdFxcdFxcdHZMaWdodEJhY2sgKz0gcG9pbnRMaWdodENvbG9yWyBpIF0gKiBwb2ludExpZ2h0V2VpZ2h0aW5nQmFjayAqIGF0dGVudWF0aW9uO1xcblxcblxcdFxcdCNlbmRpZlxcblxcblxcdH1cXG5cXG4jZW5kaWZcXG5cXG4jaWYgTUFYX1NQT1RfTElHSFRTID4gMFxcblxcblxcdGZvciggaW50IGkgPSAwOyBpIDwgTUFYX1NQT1RfTElHSFRTOyBpICsrICkge1xcblxcblxcdFxcdHZlYzQgbFBvc2l0aW9uID0gdmlld01hdHJpeCAqIHZlYzQoIHNwb3RMaWdodFBvc2l0aW9uWyBpIF0sIDEuMCApO1xcblxcdFxcdHZlYzMgbFZlY3RvciA9IGxQb3NpdGlvbi54eXogLSBtdlBvc2l0aW9uLnh5ejtcXG5cXG5cXHRcXHRmbG9hdCBzcG90RWZmZWN0ID0gZG90KCBzcG90TGlnaHREaXJlY3Rpb25bIGkgXSwgbm9ybWFsaXplKCBzcG90TGlnaHRQb3NpdGlvblsgaSBdIC0gd29ybGRQb3NpdGlvbi54eXogKSApO1xcblxcblxcdFxcdGlmICggc3BvdEVmZmVjdCA+IHNwb3RMaWdodEFuZ2xlQ29zWyBpIF0gKSB7XFxuXFxuXFx0XFx0XFx0c3BvdEVmZmVjdCA9IG1heCggcG93KCBtYXgoIHNwb3RFZmZlY3QsIDAuMCApLCBzcG90TGlnaHRFeHBvbmVudFsgaSBdICksIDAuMCApO1xcblxcblxcdFxcdFxcdGZsb2F0IGF0dGVudWF0aW9uID0gY2FsY0xpZ2h0QXR0ZW51YXRpb24oIGxlbmd0aCggbFZlY3RvciApLCBzcG90TGlnaHREaXN0YW5jZVsgaSBdLCBzcG90TGlnaHREZWNheVsgaSBdICk7XFxuXFxuXFx0XFx0XFx0bFZlY3RvciA9IG5vcm1hbGl6ZSggbFZlY3RvciApO1xcblxcblxcdFxcdFxcdGZsb2F0IGRvdFByb2R1Y3QgPSBkb3QoIHRyYW5zZm9ybWVkTm9ybWFsLCBsVmVjdG9yICk7XFxuXFx0XFx0XFx0dmVjMyBzcG90TGlnaHRXZWlnaHRpbmcgPSB2ZWMzKCBtYXgoIGRvdFByb2R1Y3QsIDAuMCApICk7XFxuXFxuXFx0XFx0XFx0I2lmZGVmIERPVUJMRV9TSURFRFxcblxcblxcdFxcdFxcdFxcdHZlYzMgc3BvdExpZ2h0V2VpZ2h0aW5nQmFjayA9IHZlYzMoIG1heCggLWRvdFByb2R1Y3QsIDAuMCApICk7XFxuXFxuXFx0XFx0XFx0XFx0I2lmZGVmIFdSQVBfQVJPVU5EXFxuXFxuXFx0XFx0XFx0XFx0XFx0dmVjMyBzcG90TGlnaHRXZWlnaHRpbmdIYWxmQmFjayA9IHZlYzMoIG1heCggLTAuNSAqIGRvdFByb2R1Y3QgKyAwLjUsIDAuMCApICk7XFxuXFxuXFx0XFx0XFx0XFx0I2VuZGlmXFxuXFxuXFx0XFx0XFx0I2VuZGlmXFxuXFxuXFx0XFx0XFx0I2lmZGVmIFdSQVBfQVJPVU5EXFxuXFxuXFx0XFx0XFx0XFx0dmVjMyBzcG90TGlnaHRXZWlnaHRpbmdIYWxmID0gdmVjMyggbWF4KCAwLjUgKiBkb3RQcm9kdWN0ICsgMC41LCAwLjAgKSApO1xcblxcdFxcdFxcdFxcdHNwb3RMaWdodFdlaWdodGluZyA9IG1peCggc3BvdExpZ2h0V2VpZ2h0aW5nLCBzcG90TGlnaHRXZWlnaHRpbmdIYWxmLCB3cmFwUkdCICk7XFxuXFxuXFx0XFx0XFx0XFx0I2lmZGVmIERPVUJMRV9TSURFRFxcblxcblxcdFxcdFxcdFxcdFxcdHNwb3RMaWdodFdlaWdodGluZ0JhY2sgPSBtaXgoIHNwb3RMaWdodFdlaWdodGluZ0JhY2ssIHNwb3RMaWdodFdlaWdodGluZ0hhbGZCYWNrLCB3cmFwUkdCICk7XFxuXFxuXFx0XFx0XFx0XFx0I2VuZGlmXFxuXFxuXFx0XFx0XFx0I2VuZGlmXFxuXFxuXFx0XFx0XFx0dkxpZ2h0RnJvbnQgKz0gc3BvdExpZ2h0Q29sb3JbIGkgXSAqIHNwb3RMaWdodFdlaWdodGluZyAqIGF0dGVudWF0aW9uICogc3BvdEVmZmVjdDtcXG5cXG5cXHRcXHRcXHQjaWZkZWYgRE9VQkxFX1NJREVEXFxuXFxuXFx0XFx0XFx0XFx0dkxpZ2h0QmFjayArPSBzcG90TGlnaHRDb2xvclsgaSBdICogc3BvdExpZ2h0V2VpZ2h0aW5nQmFjayAqIGF0dGVudWF0aW9uICogc3BvdEVmZmVjdDtcXG5cXG5cXHRcXHRcXHQjZW5kaWZcXG5cXG5cXHRcXHR9XFxuXFxuXFx0fVxcblxcbiNlbmRpZlxcblxcbiNpZiBNQVhfSEVNSV9MSUdIVFMgPiAwXFxuXFxuXFx0Zm9yKCBpbnQgaSA9IDA7IGkgPCBNQVhfSEVNSV9MSUdIVFM7IGkgKysgKSB7XFxuXFxuXFx0XFx0dmVjMyBsVmVjdG9yID0gdHJhbnNmb3JtRGlyZWN0aW9uKCBoZW1pc3BoZXJlTGlnaHREaXJlY3Rpb25bIGkgXSwgdmlld01hdHJpeCApO1xcblxcblxcdFxcdGZsb2F0IGRvdFByb2R1Y3QgPSBkb3QoIHRyYW5zZm9ybWVkTm9ybWFsLCBsVmVjdG9yICk7XFxuXFxuXFx0XFx0ZmxvYXQgaGVtaURpZmZ1c2VXZWlnaHQgPSAwLjUgKiBkb3RQcm9kdWN0ICsgMC41O1xcblxcdFxcdGZsb2F0IGhlbWlEaWZmdXNlV2VpZ2h0QmFjayA9IC0wLjUgKiBkb3RQcm9kdWN0ICsgMC41O1xcblxcblxcdFxcdHZMaWdodEZyb250ICs9IG1peCggaGVtaXNwaGVyZUxpZ2h0R3JvdW5kQ29sb3JbIGkgXSwgaGVtaXNwaGVyZUxpZ2h0U2t5Q29sb3JbIGkgXSwgaGVtaURpZmZ1c2VXZWlnaHQgKTtcXG5cXG5cXHRcXHQjaWZkZWYgRE9VQkxFX1NJREVEXFxuXFxuXFx0XFx0XFx0dkxpZ2h0QmFjayArPSBtaXgoIGhlbWlzcGhlcmVMaWdodEdyb3VuZENvbG9yWyBpIF0sIGhlbWlzcGhlcmVMaWdodFNreUNvbG9yWyBpIF0sIGhlbWlEaWZmdXNlV2VpZ2h0QmFjayApO1xcblxcblxcdFxcdCNlbmRpZlxcblxcblxcdH1cXG5cXG4jZW5kaWZcXG5cXG52TGlnaHRGcm9udCArPSBhbWJpZW50TGlnaHRDb2xvcjtcXG5cXG4jaWZkZWYgRE9VQkxFX1NJREVEXFxuXFxuXFx0dkxpZ2h0QmFjayArPSBhbWJpZW50TGlnaHRDb2xvcjtcXG5cXG4jZW5kaWZcXG5cIjtcblRIUkVFLlNoYWRlckNodW5rLm1hcF9wYXJ0aWNsZV9wYXJzX2ZyYWdtZW50PVwiI2lmZGVmIFVTRV9NQVBcXG5cXG5cXHR1bmlmb3JtIHZlYzQgb2Zmc2V0UmVwZWF0O1xcblxcdHVuaWZvcm0gc2FtcGxlcjJEIG1hcDtcXG5cXG4jZW5kaWZcXG5cIjtUSFJFRS5TaGFkZXJDaHVuay5kZWZhdWx0X3ZlcnRleD1cIiNpZmRlZiBVU0VfU0tJTk5JTkdcXG5cXG5cXHR2ZWM0IG12UG9zaXRpb24gPSBtb2RlbFZpZXdNYXRyaXggKiBza2lubmVkO1xcblxcbiNlbGlmIGRlZmluZWQoIFVTRV9NT1JQSFRBUkdFVFMgKVxcblxcblxcdHZlYzQgbXZQb3NpdGlvbiA9IG1vZGVsVmlld01hdHJpeCAqIHZlYzQoIG1vcnBoZWQsIDEuMCApO1xcblxcbiNlbHNlXFxuXFxuXFx0dmVjNCBtdlBvc2l0aW9uID0gbW9kZWxWaWV3TWF0cml4ICogdmVjNCggcG9zaXRpb24sIDEuMCApO1xcblxcbiNlbmRpZlxcblxcbmdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIG12UG9zaXRpb247XFxuXCI7XG5USFJFRS5TaGFkZXJDaHVuay5tYXBfcGFyc19mcmFnbWVudD1cIiNpZiBkZWZpbmVkKCBVU0VfTUFQICkgfHwgZGVmaW5lZCggVVNFX0JVTVBNQVAgKSB8fCBkZWZpbmVkKCBVU0VfTk9STUFMTUFQICkgfHwgZGVmaW5lZCggVVNFX1NQRUNVTEFSTUFQICkgfHwgZGVmaW5lZCggVVNFX0FMUEhBTUFQIClcXG5cXG5cXHR2YXJ5aW5nIHZlYzIgdlV2O1xcblxcbiNlbmRpZlxcblxcbiNpZmRlZiBVU0VfTUFQXFxuXFxuXFx0dW5pZm9ybSBzYW1wbGVyMkQgbWFwO1xcblxcbiNlbmRpZlwiO1RIUkVFLlNoYWRlckNodW5rLnNraW5ub3JtYWxfdmVydGV4PVwiI2lmZGVmIFVTRV9TS0lOTklOR1xcblxcblxcdG1hdDQgc2tpbk1hdHJpeCA9IG1hdDQoIDAuMCApO1xcblxcdHNraW5NYXRyaXggKz0gc2tpbldlaWdodC54ICogYm9uZU1hdFg7XFxuXFx0c2tpbk1hdHJpeCArPSBza2luV2VpZ2h0LnkgKiBib25lTWF0WTtcXG5cXHRza2luTWF0cml4ICs9IHNraW5XZWlnaHQueiAqIGJvbmVNYXRaO1xcblxcdHNraW5NYXRyaXggKz0gc2tpbldlaWdodC53ICogYm9uZU1hdFc7XFxuXFx0c2tpbk1hdHJpeCAgPSBiaW5kTWF0cml4SW52ZXJzZSAqIHNraW5NYXRyaXggKiBiaW5kTWF0cml4O1xcblxcblxcdCNpZmRlZiBVU0VfTU9SUEhOT1JNQUxTXFxuXFxuXFx0dmVjNCBza2lubmVkTm9ybWFsID0gc2tpbk1hdHJpeCAqIHZlYzQoIG1vcnBoZWROb3JtYWwsIDAuMCApO1xcblxcblxcdCNlbHNlXFxuXFxuXFx0dmVjNCBza2lubmVkTm9ybWFsID0gc2tpbk1hdHJpeCAqIHZlYzQoIG5vcm1hbCwgMC4wICk7XFxuXFxuXFx0I2VuZGlmXFxuXFxuI2VuZGlmXFxuXCI7XG5USFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl9wYXJzX3ZlcnRleD1cIiNpZmRlZiBVU0VfTE9HREVQVEhCVUZcXG5cXG5cXHQjaWZkZWYgVVNFX0xPR0RFUFRIQlVGX0VYVFxcblxcblxcdFxcdHZhcnlpbmcgZmxvYXQgdkZyYWdEZXB0aDtcXG5cXG5cXHQjZW5kaWZcXG5cXG5cXHR1bmlmb3JtIGZsb2F0IGxvZ0RlcHRoQnVmRkM7XFxuXFxuI2VuZGlmXCI7VEhSRUUuU2hhZGVyQ2h1bmsubGlnaHRtYXBfcGFyc192ZXJ0ZXg9XCIjaWZkZWYgVVNFX0xJR0hUTUFQXFxuXFxuXFx0dmFyeWluZyB2ZWMyIHZVdjI7XFxuXFxuI2VuZGlmXCI7VEhSRUUuU2hhZGVyQ2h1bmsubGlnaHRzX3Bob25nX2ZyYWdtZW50PVwiI2lmbmRlZiBGTEFUX1NIQURFRFxcblxcblxcdHZlYzMgbm9ybWFsID0gbm9ybWFsaXplKCB2Tm9ybWFsICk7XFxuXFxuXFx0I2lmZGVmIERPVUJMRV9TSURFRFxcblxcblxcdFxcdG5vcm1hbCA9IG5vcm1hbCAqICggLTEuMCArIDIuMCAqIGZsb2F0KCBnbF9Gcm9udEZhY2luZyApICk7XFxuXFxuXFx0I2VuZGlmXFxuXFxuI2Vsc2VcXG5cXG5cXHR2ZWMzIGZkeCA9IGRGZHgoIHZWaWV3UG9zaXRpb24gKTtcXG5cXHR2ZWMzIGZkeSA9IGRGZHkoIHZWaWV3UG9zaXRpb24gKTtcXG5cXHR2ZWMzIG5vcm1hbCA9IG5vcm1hbGl6ZSggY3Jvc3MoIGZkeCwgZmR5ICkgKTtcXG5cXG4jZW5kaWZcXG5cXG52ZWMzIHZpZXdQb3NpdGlvbiA9IG5vcm1hbGl6ZSggdlZpZXdQb3NpdGlvbiApO1xcblxcbiNpZmRlZiBVU0VfTk9STUFMTUFQXFxuXFxuXFx0bm9ybWFsID0gcGVydHVyYk5vcm1hbDJBcmIoIC12Vmlld1Bvc2l0aW9uLCBub3JtYWwgKTtcXG5cXG4jZWxpZiBkZWZpbmVkKCBVU0VfQlVNUE1BUCApXFxuXFxuXFx0bm9ybWFsID0gcGVydHVyYk5vcm1hbEFyYiggLXZWaWV3UG9zaXRpb24sIG5vcm1hbCwgZEhkeHlfZndkKCkgKTtcXG5cXG4jZW5kaWZcXG5cXG52ZWMzIHRvdGFsRGlmZnVzZUxpZ2h0ID0gdmVjMyggMC4wICk7XFxudmVjMyB0b3RhbFNwZWN1bGFyTGlnaHQgPSB2ZWMzKCAwLjAgKTtcXG5cXG4jaWYgTUFYX1BPSU5UX0xJR0hUUyA+IDBcXG5cXG5cXHRmb3IgKCBpbnQgaSA9IDA7IGkgPCBNQVhfUE9JTlRfTElHSFRTOyBpICsrICkge1xcblxcblxcdFxcdHZlYzQgbFBvc2l0aW9uID0gdmlld01hdHJpeCAqIHZlYzQoIHBvaW50TGlnaHRQb3NpdGlvblsgaSBdLCAxLjAgKTtcXG5cXHRcXHR2ZWMzIGxWZWN0b3IgPSBsUG9zaXRpb24ueHl6ICsgdlZpZXdQb3NpdGlvbi54eXo7XFxuXFxuXFx0XFx0ZmxvYXQgYXR0ZW51YXRpb24gPSBjYWxjTGlnaHRBdHRlbnVhdGlvbiggbGVuZ3RoKCBsVmVjdG9yICksIHBvaW50TGlnaHREaXN0YW5jZVsgaSBdLCBwb2ludExpZ2h0RGVjYXlbIGkgXSApO1xcblxcblxcdFxcdGxWZWN0b3IgPSBub3JtYWxpemUoIGxWZWN0b3IgKTtcXG5cXG5cXHRcXHQvLyBkaWZmdXNlXFxuXFxuXFx0XFx0ZmxvYXQgZG90UHJvZHVjdCA9IGRvdCggbm9ybWFsLCBsVmVjdG9yICk7XFxuXFxuXFx0XFx0I2lmZGVmIFdSQVBfQVJPVU5EXFxuXFxuXFx0XFx0XFx0ZmxvYXQgcG9pbnREaWZmdXNlV2VpZ2h0RnVsbCA9IG1heCggZG90UHJvZHVjdCwgMC4wICk7XFxuXFx0XFx0XFx0ZmxvYXQgcG9pbnREaWZmdXNlV2VpZ2h0SGFsZiA9IG1heCggMC41ICogZG90UHJvZHVjdCArIDAuNSwgMC4wICk7XFxuXFxuXFx0XFx0XFx0dmVjMyBwb2ludERpZmZ1c2VXZWlnaHQgPSBtaXgoIHZlYzMoIHBvaW50RGlmZnVzZVdlaWdodEZ1bGwgKSwgdmVjMyggcG9pbnREaWZmdXNlV2VpZ2h0SGFsZiApLCB3cmFwUkdCICk7XFxuXFxuXFx0XFx0I2Vsc2VcXG5cXG5cXHRcXHRcXHRmbG9hdCBwb2ludERpZmZ1c2VXZWlnaHQgPSBtYXgoIGRvdFByb2R1Y3QsIDAuMCApO1xcblxcblxcdFxcdCNlbmRpZlxcblxcblxcdFxcdHRvdGFsRGlmZnVzZUxpZ2h0ICs9IHBvaW50TGlnaHRDb2xvclsgaSBdICogcG9pbnREaWZmdXNlV2VpZ2h0ICogYXR0ZW51YXRpb247XFxuXFxuXFx0XFx0XFx0XFx0Ly8gc3BlY3VsYXJcXG5cXG5cXHRcXHR2ZWMzIHBvaW50SGFsZlZlY3RvciA9IG5vcm1hbGl6ZSggbFZlY3RvciArIHZpZXdQb3NpdGlvbiApO1xcblxcdFxcdGZsb2F0IHBvaW50RG90Tm9ybWFsSGFsZiA9IG1heCggZG90KCBub3JtYWwsIHBvaW50SGFsZlZlY3RvciApLCAwLjAgKTtcXG5cXHRcXHRmbG9hdCBwb2ludFNwZWN1bGFyV2VpZ2h0ID0gc3BlY3VsYXJTdHJlbmd0aCAqIG1heCggcG93KCBwb2ludERvdE5vcm1hbEhhbGYsIHNoaW5pbmVzcyApLCAwLjAgKTtcXG5cXG5cXHRcXHRmbG9hdCBzcGVjdWxhck5vcm1hbGl6YXRpb24gPSAoIHNoaW5pbmVzcyArIDIuMCApIC8gOC4wO1xcblxcblxcdFxcdHZlYzMgc2NobGljayA9IHNwZWN1bGFyICsgdmVjMyggMS4wIC0gc3BlY3VsYXIgKSAqIHBvdyggbWF4KCAxLjAgLSBkb3QoIGxWZWN0b3IsIHBvaW50SGFsZlZlY3RvciApLCAwLjAgKSwgNS4wICk7XFxuXFx0XFx0dG90YWxTcGVjdWxhckxpZ2h0ICs9IHNjaGxpY2sgKiBwb2ludExpZ2h0Q29sb3JbIGkgXSAqIHBvaW50U3BlY3VsYXJXZWlnaHQgKiBwb2ludERpZmZ1c2VXZWlnaHQgKiBhdHRlbnVhdGlvbiAqIHNwZWN1bGFyTm9ybWFsaXphdGlvbjtcXG5cXG5cXHR9XFxuXFxuI2VuZGlmXFxuXFxuI2lmIE1BWF9TUE9UX0xJR0hUUyA+IDBcXG5cXG5cXHRmb3IgKCBpbnQgaSA9IDA7IGkgPCBNQVhfU1BPVF9MSUdIVFM7IGkgKysgKSB7XFxuXFxuXFx0XFx0dmVjNCBsUG9zaXRpb24gPSB2aWV3TWF0cml4ICogdmVjNCggc3BvdExpZ2h0UG9zaXRpb25bIGkgXSwgMS4wICk7XFxuXFx0XFx0dmVjMyBsVmVjdG9yID0gbFBvc2l0aW9uLnh5eiArIHZWaWV3UG9zaXRpb24ueHl6O1xcblxcblxcdFxcdGZsb2F0IGF0dGVudWF0aW9uID0gY2FsY0xpZ2h0QXR0ZW51YXRpb24oIGxlbmd0aCggbFZlY3RvciApLCBzcG90TGlnaHREaXN0YW5jZVsgaSBdLCBzcG90TGlnaHREZWNheVsgaSBdICk7XFxuXFxuXFx0XFx0bFZlY3RvciA9IG5vcm1hbGl6ZSggbFZlY3RvciApO1xcblxcblxcdFxcdGZsb2F0IHNwb3RFZmZlY3QgPSBkb3QoIHNwb3RMaWdodERpcmVjdGlvblsgaSBdLCBub3JtYWxpemUoIHNwb3RMaWdodFBvc2l0aW9uWyBpIF0gLSB2V29ybGRQb3NpdGlvbiApICk7XFxuXFxuXFx0XFx0aWYgKCBzcG90RWZmZWN0ID4gc3BvdExpZ2h0QW5nbGVDb3NbIGkgXSApIHtcXG5cXG5cXHRcXHRcXHRzcG90RWZmZWN0ID0gbWF4KCBwb3coIG1heCggc3BvdEVmZmVjdCwgMC4wICksIHNwb3RMaWdodEV4cG9uZW50WyBpIF0gKSwgMC4wICk7XFxuXFxuXFx0XFx0XFx0Ly8gZGlmZnVzZVxcblxcblxcdFxcdFxcdGZsb2F0IGRvdFByb2R1Y3QgPSBkb3QoIG5vcm1hbCwgbFZlY3RvciApO1xcblxcblxcdFxcdFxcdCNpZmRlZiBXUkFQX0FST1VORFxcblxcblxcdFxcdFxcdFxcdGZsb2F0IHNwb3REaWZmdXNlV2VpZ2h0RnVsbCA9IG1heCggZG90UHJvZHVjdCwgMC4wICk7XFxuXFx0XFx0XFx0XFx0ZmxvYXQgc3BvdERpZmZ1c2VXZWlnaHRIYWxmID0gbWF4KCAwLjUgKiBkb3RQcm9kdWN0ICsgMC41LCAwLjAgKTtcXG5cXG5cXHRcXHRcXHRcXHR2ZWMzIHNwb3REaWZmdXNlV2VpZ2h0ID0gbWl4KCB2ZWMzKCBzcG90RGlmZnVzZVdlaWdodEZ1bGwgKSwgdmVjMyggc3BvdERpZmZ1c2VXZWlnaHRIYWxmICksIHdyYXBSR0IgKTtcXG5cXG5cXHRcXHRcXHQjZWxzZVxcblxcblxcdFxcdFxcdFxcdGZsb2F0IHNwb3REaWZmdXNlV2VpZ2h0ID0gbWF4KCBkb3RQcm9kdWN0LCAwLjAgKTtcXG5cXG5cXHRcXHRcXHQjZW5kaWZcXG5cXG5cXHRcXHRcXHR0b3RhbERpZmZ1c2VMaWdodCArPSBzcG90TGlnaHRDb2xvclsgaSBdICogc3BvdERpZmZ1c2VXZWlnaHQgKiBhdHRlbnVhdGlvbiAqIHNwb3RFZmZlY3Q7XFxuXFxuXFx0XFx0XFx0Ly8gc3BlY3VsYXJcXG5cXG5cXHRcXHRcXHR2ZWMzIHNwb3RIYWxmVmVjdG9yID0gbm9ybWFsaXplKCBsVmVjdG9yICsgdmlld1Bvc2l0aW9uICk7XFxuXFx0XFx0XFx0ZmxvYXQgc3BvdERvdE5vcm1hbEhhbGYgPSBtYXgoIGRvdCggbm9ybWFsLCBzcG90SGFsZlZlY3RvciApLCAwLjAgKTtcXG5cXHRcXHRcXHRmbG9hdCBzcG90U3BlY3VsYXJXZWlnaHQgPSBzcGVjdWxhclN0cmVuZ3RoICogbWF4KCBwb3coIHNwb3REb3ROb3JtYWxIYWxmLCBzaGluaW5lc3MgKSwgMC4wICk7XFxuXFxuXFx0XFx0XFx0ZmxvYXQgc3BlY3VsYXJOb3JtYWxpemF0aW9uID0gKCBzaGluaW5lc3MgKyAyLjAgKSAvIDguMDtcXG5cXG5cXHRcXHRcXHR2ZWMzIHNjaGxpY2sgPSBzcGVjdWxhciArIHZlYzMoIDEuMCAtIHNwZWN1bGFyICkgKiBwb3coIG1heCggMS4wIC0gZG90KCBsVmVjdG9yLCBzcG90SGFsZlZlY3RvciApLCAwLjAgKSwgNS4wICk7XFxuXFx0XFx0XFx0dG90YWxTcGVjdWxhckxpZ2h0ICs9IHNjaGxpY2sgKiBzcG90TGlnaHRDb2xvclsgaSBdICogc3BvdFNwZWN1bGFyV2VpZ2h0ICogc3BvdERpZmZ1c2VXZWlnaHQgKiBhdHRlbnVhdGlvbiAqIHNwZWN1bGFyTm9ybWFsaXphdGlvbiAqIHNwb3RFZmZlY3Q7XFxuXFxuXFx0XFx0fVxcblxcblxcdH1cXG5cXG4jZW5kaWZcXG5cXG4jaWYgTUFYX0RJUl9MSUdIVFMgPiAwXFxuXFxuXFx0Zm9yKCBpbnQgaSA9IDA7IGkgPCBNQVhfRElSX0xJR0hUUzsgaSArKyApIHtcXG5cXG5cXHRcXHR2ZWMzIGRpclZlY3RvciA9IHRyYW5zZm9ybURpcmVjdGlvbiggZGlyZWN0aW9uYWxMaWdodERpcmVjdGlvblsgaSBdLCB2aWV3TWF0cml4ICk7XFxuXFxuXFx0XFx0Ly8gZGlmZnVzZVxcblxcblxcdFxcdGZsb2F0IGRvdFByb2R1Y3QgPSBkb3QoIG5vcm1hbCwgZGlyVmVjdG9yICk7XFxuXFxuXFx0XFx0I2lmZGVmIFdSQVBfQVJPVU5EXFxuXFxuXFx0XFx0XFx0ZmxvYXQgZGlyRGlmZnVzZVdlaWdodEZ1bGwgPSBtYXgoIGRvdFByb2R1Y3QsIDAuMCApO1xcblxcdFxcdFxcdGZsb2F0IGRpckRpZmZ1c2VXZWlnaHRIYWxmID0gbWF4KCAwLjUgKiBkb3RQcm9kdWN0ICsgMC41LCAwLjAgKTtcXG5cXG5cXHRcXHRcXHR2ZWMzIGRpckRpZmZ1c2VXZWlnaHQgPSBtaXgoIHZlYzMoIGRpckRpZmZ1c2VXZWlnaHRGdWxsICksIHZlYzMoIGRpckRpZmZ1c2VXZWlnaHRIYWxmICksIHdyYXBSR0IgKTtcXG5cXG5cXHRcXHQjZWxzZVxcblxcblxcdFxcdFxcdGZsb2F0IGRpckRpZmZ1c2VXZWlnaHQgPSBtYXgoIGRvdFByb2R1Y3QsIDAuMCApO1xcblxcblxcdFxcdCNlbmRpZlxcblxcblxcdFxcdHRvdGFsRGlmZnVzZUxpZ2h0ICs9IGRpcmVjdGlvbmFsTGlnaHRDb2xvclsgaSBdICogZGlyRGlmZnVzZVdlaWdodDtcXG5cXG5cXHRcXHQvLyBzcGVjdWxhclxcblxcblxcdFxcdHZlYzMgZGlySGFsZlZlY3RvciA9IG5vcm1hbGl6ZSggZGlyVmVjdG9yICsgdmlld1Bvc2l0aW9uICk7XFxuXFx0XFx0ZmxvYXQgZGlyRG90Tm9ybWFsSGFsZiA9IG1heCggZG90KCBub3JtYWwsIGRpckhhbGZWZWN0b3IgKSwgMC4wICk7XFxuXFx0XFx0ZmxvYXQgZGlyU3BlY3VsYXJXZWlnaHQgPSBzcGVjdWxhclN0cmVuZ3RoICogbWF4KCBwb3coIGRpckRvdE5vcm1hbEhhbGYsIHNoaW5pbmVzcyApLCAwLjAgKTtcXG5cXG5cXHRcXHQvKlxcblxcdFxcdC8vIGZyZXNuZWwgdGVybSBmcm9tIHNraW4gc2hhZGVyXFxuXFx0XFx0Y29uc3QgZmxvYXQgRjAgPSAwLjEyODtcXG5cXG5cXHRcXHRmbG9hdCBiYXNlID0gMS4wIC0gZG90KCB2aWV3UG9zaXRpb24sIGRpckhhbGZWZWN0b3IgKTtcXG5cXHRcXHRmbG9hdCBleHBvbmVudGlhbCA9IHBvdyggYmFzZSwgNS4wICk7XFxuXFxuXFx0XFx0ZmxvYXQgZnJlc25lbCA9IGV4cG9uZW50aWFsICsgRjAgKiAoIDEuMCAtIGV4cG9uZW50aWFsICk7XFxuXFx0XFx0Ki9cXG5cXG5cXHRcXHQvKlxcblxcdFxcdC8vIGZyZXNuZWwgdGVybSBmcm9tIGZyZXNuZWwgc2hhZGVyXFxuXFx0XFx0Y29uc3QgZmxvYXQgbUZyZXNuZWxCaWFzID0gMC4wODtcXG5cXHRcXHRjb25zdCBmbG9hdCBtRnJlc25lbFNjYWxlID0gMC4zO1xcblxcdFxcdGNvbnN0IGZsb2F0IG1GcmVzbmVsUG93ZXIgPSA1LjA7XFxuXFxuXFx0XFx0ZmxvYXQgZnJlc25lbCA9IG1GcmVzbmVsQmlhcyArIG1GcmVzbmVsU2NhbGUgKiBwb3coIDEuMCArIGRvdCggbm9ybWFsaXplKCAtdmlld1Bvc2l0aW9uICksIG5vcm1hbCApLCBtRnJlc25lbFBvd2VyICk7XFxuXFx0XFx0Ki9cXG5cXG5cXHRcXHRmbG9hdCBzcGVjdWxhck5vcm1hbGl6YXRpb24gPSAoIHNoaW5pbmVzcyArIDIuMCApIC8gOC4wO1xcblxcblxcdFxcdC8vIFxcdFxcdGRpclNwZWN1bGFyICs9IHNwZWN1bGFyICogZGlyZWN0aW9uYWxMaWdodENvbG9yWyBpIF0gKiBkaXJTcGVjdWxhcldlaWdodCAqIGRpckRpZmZ1c2VXZWlnaHQgKiBzcGVjdWxhck5vcm1hbGl6YXRpb24gKiBmcmVzbmVsO1xcblxcblxcdFxcdHZlYzMgc2NobGljayA9IHNwZWN1bGFyICsgdmVjMyggMS4wIC0gc3BlY3VsYXIgKSAqIHBvdyggbWF4KCAxLjAgLSBkb3QoIGRpclZlY3RvciwgZGlySGFsZlZlY3RvciApLCAwLjAgKSwgNS4wICk7XFxuXFx0XFx0dG90YWxTcGVjdWxhckxpZ2h0ICs9IHNjaGxpY2sgKiBkaXJlY3Rpb25hbExpZ2h0Q29sb3JbIGkgXSAqIGRpclNwZWN1bGFyV2VpZ2h0ICogZGlyRGlmZnVzZVdlaWdodCAqIHNwZWN1bGFyTm9ybWFsaXphdGlvbjtcXG5cXG5cXG5cXHR9XFxuXFxuI2VuZGlmXFxuXFxuI2lmIE1BWF9IRU1JX0xJR0hUUyA+IDBcXG5cXG5cXHRmb3IoIGludCBpID0gMDsgaSA8IE1BWF9IRU1JX0xJR0hUUzsgaSArKyApIHtcXG5cXG5cXHRcXHR2ZWMzIGxWZWN0b3IgPSB0cmFuc2Zvcm1EaXJlY3Rpb24oIGhlbWlzcGhlcmVMaWdodERpcmVjdGlvblsgaSBdLCB2aWV3TWF0cml4ICk7XFxuXFxuXFx0XFx0Ly8gZGlmZnVzZVxcblxcblxcdFxcdGZsb2F0IGRvdFByb2R1Y3QgPSBkb3QoIG5vcm1hbCwgbFZlY3RvciApO1xcblxcdFxcdGZsb2F0IGhlbWlEaWZmdXNlV2VpZ2h0ID0gMC41ICogZG90UHJvZHVjdCArIDAuNTtcXG5cXG5cXHRcXHR2ZWMzIGhlbWlDb2xvciA9IG1peCggaGVtaXNwaGVyZUxpZ2h0R3JvdW5kQ29sb3JbIGkgXSwgaGVtaXNwaGVyZUxpZ2h0U2t5Q29sb3JbIGkgXSwgaGVtaURpZmZ1c2VXZWlnaHQgKTtcXG5cXG5cXHRcXHR0b3RhbERpZmZ1c2VMaWdodCArPSBoZW1pQ29sb3I7XFxuXFxuXFx0XFx0Ly8gc3BlY3VsYXIgKHNreSBsaWdodClcXG5cXG5cXHRcXHR2ZWMzIGhlbWlIYWxmVmVjdG9yU2t5ID0gbm9ybWFsaXplKCBsVmVjdG9yICsgdmlld1Bvc2l0aW9uICk7XFxuXFx0XFx0ZmxvYXQgaGVtaURvdE5vcm1hbEhhbGZTa3kgPSAwLjUgKiBkb3QoIG5vcm1hbCwgaGVtaUhhbGZWZWN0b3JTa3kgKSArIDAuNTtcXG5cXHRcXHRmbG9hdCBoZW1pU3BlY3VsYXJXZWlnaHRTa3kgPSBzcGVjdWxhclN0cmVuZ3RoICogbWF4KCBwb3coIG1heCggaGVtaURvdE5vcm1hbEhhbGZTa3ksIDAuMCApLCBzaGluaW5lc3MgKSwgMC4wICk7XFxuXFxuXFx0XFx0Ly8gc3BlY3VsYXIgKGdyb3VuZCBsaWdodClcXG5cXG5cXHRcXHR2ZWMzIGxWZWN0b3JHcm91bmQgPSAtbFZlY3RvcjtcXG5cXG5cXHRcXHR2ZWMzIGhlbWlIYWxmVmVjdG9yR3JvdW5kID0gbm9ybWFsaXplKCBsVmVjdG9yR3JvdW5kICsgdmlld1Bvc2l0aW9uICk7XFxuXFx0XFx0ZmxvYXQgaGVtaURvdE5vcm1hbEhhbGZHcm91bmQgPSAwLjUgKiBkb3QoIG5vcm1hbCwgaGVtaUhhbGZWZWN0b3JHcm91bmQgKSArIDAuNTtcXG5cXHRcXHRmbG9hdCBoZW1pU3BlY3VsYXJXZWlnaHRHcm91bmQgPSBzcGVjdWxhclN0cmVuZ3RoICogbWF4KCBwb3coIG1heCggaGVtaURvdE5vcm1hbEhhbGZHcm91bmQsIDAuMCApLCBzaGluaW5lc3MgKSwgMC4wICk7XFxuXFxuXFx0XFx0ZmxvYXQgZG90UHJvZHVjdEdyb3VuZCA9IGRvdCggbm9ybWFsLCBsVmVjdG9yR3JvdW5kICk7XFxuXFxuXFx0XFx0ZmxvYXQgc3BlY3VsYXJOb3JtYWxpemF0aW9uID0gKCBzaGluaW5lc3MgKyAyLjAgKSAvIDguMDtcXG5cXG5cXHRcXHR2ZWMzIHNjaGxpY2tTa3kgPSBzcGVjdWxhciArIHZlYzMoIDEuMCAtIHNwZWN1bGFyICkgKiBwb3coIG1heCggMS4wIC0gZG90KCBsVmVjdG9yLCBoZW1pSGFsZlZlY3RvclNreSApLCAwLjAgKSwgNS4wICk7XFxuXFx0XFx0dmVjMyBzY2hsaWNrR3JvdW5kID0gc3BlY3VsYXIgKyB2ZWMzKCAxLjAgLSBzcGVjdWxhciApICogcG93KCBtYXgoIDEuMCAtIGRvdCggbFZlY3Rvckdyb3VuZCwgaGVtaUhhbGZWZWN0b3JHcm91bmQgKSwgMC4wICksIDUuMCApO1xcblxcdFxcdHRvdGFsU3BlY3VsYXJMaWdodCArPSBoZW1pQ29sb3IgKiBzcGVjdWxhck5vcm1hbGl6YXRpb24gKiAoIHNjaGxpY2tTa3kgKiBoZW1pU3BlY3VsYXJXZWlnaHRTa3kgKiBtYXgoIGRvdFByb2R1Y3QsIDAuMCApICsgc2NobGlja0dyb3VuZCAqIGhlbWlTcGVjdWxhcldlaWdodEdyb3VuZCAqIG1heCggZG90UHJvZHVjdEdyb3VuZCwgMC4wICkgKTtcXG5cXG5cXHR9XFxuXFxuI2VuZGlmXFxuXFxuI2lmZGVmIE1FVEFMXFxuXFxuXFx0b3V0Z29pbmdMaWdodCArPSBkaWZmdXNlQ29sb3IucmdiICogKCB0b3RhbERpZmZ1c2VMaWdodCArIGFtYmllbnRMaWdodENvbG9yICkgKiBzcGVjdWxhciArIHRvdGFsU3BlY3VsYXJMaWdodCArIGVtaXNzaXZlO1xcblxcbiNlbHNlXFxuXFxuXFx0b3V0Z29pbmdMaWdodCArPSBkaWZmdXNlQ29sb3IucmdiICogKCB0b3RhbERpZmZ1c2VMaWdodCArIGFtYmllbnRMaWdodENvbG9yICkgKyB0b3RhbFNwZWN1bGFyTGlnaHQgKyBlbWlzc2l2ZTtcXG5cXG4jZW5kaWZcXG5cIjtcblRIUkVFLlNoYWRlckNodW5rLmZvZ19wYXJzX2ZyYWdtZW50PVwiI2lmZGVmIFVTRV9GT0dcXG5cXG5cXHR1bmlmb3JtIHZlYzMgZm9nQ29sb3I7XFxuXFxuXFx0I2lmZGVmIEZPR19FWFAyXFxuXFxuXFx0XFx0dW5pZm9ybSBmbG9hdCBmb2dEZW5zaXR5O1xcblxcblxcdCNlbHNlXFxuXFxuXFx0XFx0dW5pZm9ybSBmbG9hdCBmb2dOZWFyO1xcblxcdFxcdHVuaWZvcm0gZmxvYXQgZm9nRmFyO1xcblxcdCNlbmRpZlxcblxcbiNlbmRpZlwiO1RIUkVFLlNoYWRlckNodW5rLm1vcnBobm9ybWFsX3ZlcnRleD1cIiNpZmRlZiBVU0VfTU9SUEhOT1JNQUxTXFxuXFxuXFx0dmVjMyBtb3JwaGVkTm9ybWFsID0gdmVjMyggMC4wICk7XFxuXFxuXFx0bW9ycGhlZE5vcm1hbCArPSAoIG1vcnBoTm9ybWFsMCAtIG5vcm1hbCApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyAwIF07XFxuXFx0bW9ycGhlZE5vcm1hbCArPSAoIG1vcnBoTm9ybWFsMSAtIG5vcm1hbCApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyAxIF07XFxuXFx0bW9ycGhlZE5vcm1hbCArPSAoIG1vcnBoTm9ybWFsMiAtIG5vcm1hbCApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyAyIF07XFxuXFx0bW9ycGhlZE5vcm1hbCArPSAoIG1vcnBoTm9ybWFsMyAtIG5vcm1hbCApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyAzIF07XFxuXFxuXFx0bW9ycGhlZE5vcm1hbCArPSBub3JtYWw7XFxuXFxuI2VuZGlmXCI7XG5USFJFRS5TaGFkZXJDaHVuay5lbnZtYXBfcGFyc19mcmFnbWVudD1cIiNpZmRlZiBVU0VfRU5WTUFQXFxuXFxuXFx0dW5pZm9ybSBmbG9hdCByZWZsZWN0aXZpdHk7XFxuXFx0I2lmZGVmIEVOVk1BUF9UWVBFX0NVQkVcXG5cXHRcXHR1bmlmb3JtIHNhbXBsZXJDdWJlIGVudk1hcDtcXG5cXHQjZWxzZVxcblxcdFxcdHVuaWZvcm0gc2FtcGxlcjJEIGVudk1hcDtcXG5cXHQjZW5kaWZcXG5cXHR1bmlmb3JtIGZsb2F0IGZsaXBFbnZNYXA7XFxuXFxuXFx0I2lmIGRlZmluZWQoIFVTRV9CVU1QTUFQICkgfHwgZGVmaW5lZCggVVNFX05PUk1BTE1BUCApIHx8IGRlZmluZWQoIFBIT05HIClcXG5cXG5cXHRcXHR1bmlmb3JtIGZsb2F0IHJlZnJhY3Rpb25SYXRpbztcXG5cXG5cXHQjZWxzZVxcblxcblxcdFxcdHZhcnlpbmcgdmVjMyB2UmVmbGVjdDtcXG5cXG5cXHQjZW5kaWZcXG5cXG4jZW5kaWZcXG5cIjtUSFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl9mcmFnbWVudD1cIiNpZiBkZWZpbmVkKFVTRV9MT0dERVBUSEJVRikgJiYgZGVmaW5lZChVU0VfTE9HREVQVEhCVUZfRVhUKVxcblxcblxcdGdsX0ZyYWdEZXB0aEVYVCA9IGxvZzIodkZyYWdEZXB0aCkgKiBsb2dEZXB0aEJ1ZkZDICogMC41O1xcblxcbiNlbmRpZlwiO1xuVEhSRUUuU2hhZGVyQ2h1bmsubm9ybWFsbWFwX3BhcnNfZnJhZ21lbnQ9XCIjaWZkZWYgVVNFX05PUk1BTE1BUFxcblxcblxcdHVuaWZvcm0gc2FtcGxlcjJEIG5vcm1hbE1hcDtcXG5cXHR1bmlmb3JtIHZlYzIgbm9ybWFsU2NhbGU7XFxuXFxuXFx0Ly8gUGVyLVBpeGVsIFRhbmdlbnQgU3BhY2UgTm9ybWFsIE1hcHBpbmdcXG5cXHQvLyBodHRwOi8vaGFja3NvZmxpZmUuYmxvZ3Nwb3QuY2gvMjAwOS8xMS9wZXItcGl4ZWwtdGFuZ2VudC1zcGFjZS1ub3JtYWwtbWFwcGluZy5odG1sXFxuXFxuXFx0dmVjMyBwZXJ0dXJiTm9ybWFsMkFyYiggdmVjMyBleWVfcG9zLCB2ZWMzIHN1cmZfbm9ybSApIHtcXG5cXG5cXHRcXHR2ZWMzIHEwID0gZEZkeCggZXllX3Bvcy54eXogKTtcXG5cXHRcXHR2ZWMzIHExID0gZEZkeSggZXllX3Bvcy54eXogKTtcXG5cXHRcXHR2ZWMyIHN0MCA9IGRGZHgoIHZVdi5zdCApO1xcblxcdFxcdHZlYzIgc3QxID0gZEZkeSggdlV2LnN0ICk7XFxuXFxuXFx0XFx0dmVjMyBTID0gbm9ybWFsaXplKCBxMCAqIHN0MS50IC0gcTEgKiBzdDAudCApO1xcblxcdFxcdHZlYzMgVCA9IG5vcm1hbGl6ZSggLXEwICogc3QxLnMgKyBxMSAqIHN0MC5zICk7XFxuXFx0XFx0dmVjMyBOID0gbm9ybWFsaXplKCBzdXJmX25vcm0gKTtcXG5cXG5cXHRcXHR2ZWMzIG1hcE4gPSB0ZXh0dXJlMkQoIG5vcm1hbE1hcCwgdlV2ICkueHl6ICogMi4wIC0gMS4wO1xcblxcdFxcdG1hcE4ueHkgPSBub3JtYWxTY2FsZSAqIG1hcE4ueHk7XFxuXFx0XFx0bWF0MyB0c24gPSBtYXQzKCBTLCBULCBOICk7XFxuXFx0XFx0cmV0dXJuIG5vcm1hbGl6ZSggdHNuICogbWFwTiApO1xcblxcblxcdH1cXG5cXG4jZW5kaWZcXG5cIjtcblRIUkVFLlNoYWRlckNodW5rLmxpZ2h0c19waG9uZ19wYXJzX3ZlcnRleD1cIiNpZiBNQVhfU1BPVF9MSUdIVFMgPiAwIHx8IGRlZmluZWQoIFVTRV9CVU1QTUFQICkgfHwgZGVmaW5lZCggVVNFX0VOVk1BUCApXFxuXFxuXFx0dmFyeWluZyB2ZWMzIHZXb3JsZFBvc2l0aW9uO1xcblxcbiNlbmRpZlxcblwiO1RIUkVFLlNoYWRlckNodW5rLmxpZ2h0bWFwX3BhcnNfZnJhZ21lbnQ9XCIjaWZkZWYgVVNFX0xJR0hUTUFQXFxuXFxuXFx0dmFyeWluZyB2ZWMyIHZVdjI7XFxuXFx0dW5pZm9ybSBzYW1wbGVyMkQgbGlnaHRNYXA7XFxuXFxuI2VuZGlmXCI7VEhSRUUuU2hhZGVyQ2h1bmsuc2hhZG93bWFwX3ZlcnRleD1cIiNpZmRlZiBVU0VfU0hBRE9XTUFQXFxuXFxuXFx0Zm9yKCBpbnQgaSA9IDA7IGkgPCBNQVhfU0hBRE9XUzsgaSArKyApIHtcXG5cXG5cXHRcXHR2U2hhZG93Q29vcmRbIGkgXSA9IHNoYWRvd01hdHJpeFsgaSBdICogd29ybGRQb3NpdGlvbjtcXG5cXG5cXHR9XFxuXFxuI2VuZGlmXCI7XG5USFJFRS5TaGFkZXJDaHVuay5saWdodHNfcGhvbmdfdmVydGV4PVwiI2lmIE1BWF9TUE9UX0xJR0hUUyA+IDAgfHwgZGVmaW5lZCggVVNFX0JVTVBNQVAgKSB8fCBkZWZpbmVkKCBVU0VfRU5WTUFQIClcXG5cXG5cXHR2V29ybGRQb3NpdGlvbiA9IHdvcmxkUG9zaXRpb24ueHl6O1xcblxcbiNlbmRpZlwiO1RIUkVFLlNoYWRlckNodW5rLm1hcF9mcmFnbWVudD1cIiNpZmRlZiBVU0VfTUFQXFxuXFxuXFx0dmVjNCB0ZXhlbENvbG9yID0gdGV4dHVyZTJEKCBtYXAsIHZVdiApO1xcblxcblxcdHRleGVsQ29sb3IueHl6ID0gaW5wdXRUb0xpbmVhciggdGV4ZWxDb2xvci54eXogKTtcXG5cXG5cXHRkaWZmdXNlQ29sb3IgKj0gdGV4ZWxDb2xvcjtcXG5cXG4jZW5kaWZcIjtUSFJFRS5TaGFkZXJDaHVuay5saWdodG1hcF92ZXJ0ZXg9XCIjaWZkZWYgVVNFX0xJR0hUTUFQXFxuXFxuXFx0dlV2MiA9IHV2MjtcXG5cXG4jZW5kaWZcIjtUSFJFRS5TaGFkZXJDaHVuay5tYXBfcGFydGljbGVfZnJhZ21lbnQ9XCIjaWZkZWYgVVNFX01BUFxcblxcblxcdGRpZmZ1c2VDb2xvciAqPSB0ZXh0dXJlMkQoIG1hcCwgdmVjMiggZ2xfUG9pbnRDb29yZC54LCAxLjAgLSBnbF9Qb2ludENvb3JkLnkgKSAqIG9mZnNldFJlcGVhdC56dyArIG9mZnNldFJlcGVhdC54eSApO1xcblxcbiNlbmRpZlxcblwiO1xuVEhSRUUuU2hhZGVyQ2h1bmsuY29sb3JfcGFyc19mcmFnbWVudD1cIiNpZmRlZiBVU0VfQ09MT1JcXG5cXG5cXHR2YXJ5aW5nIHZlYzMgdkNvbG9yO1xcblxcbiNlbmRpZlxcblwiO1RIUkVFLlNoYWRlckNodW5rLmNvbG9yX3ZlcnRleD1cIiNpZmRlZiBVU0VfQ09MT1JcXG5cXG5cXHR2Q29sb3IueHl6ID0gaW5wdXRUb0xpbmVhciggY29sb3IueHl6ICk7XFxuXFxuI2VuZGlmXCI7VEhSRUUuU2hhZGVyQ2h1bmsuc2tpbm5pbmdfdmVydGV4PVwiI2lmZGVmIFVTRV9TS0lOTklOR1xcblxcblxcdCNpZmRlZiBVU0VfTU9SUEhUQVJHRVRTXFxuXFxuXFx0dmVjNCBza2luVmVydGV4ID0gYmluZE1hdHJpeCAqIHZlYzQoIG1vcnBoZWQsIDEuMCApO1xcblxcblxcdCNlbHNlXFxuXFxuXFx0dmVjNCBza2luVmVydGV4ID0gYmluZE1hdHJpeCAqIHZlYzQoIHBvc2l0aW9uLCAxLjAgKTtcXG5cXG5cXHQjZW5kaWZcXG5cXG5cXHR2ZWM0IHNraW5uZWQgPSB2ZWM0KCAwLjAgKTtcXG5cXHRza2lubmVkICs9IGJvbmVNYXRYICogc2tpblZlcnRleCAqIHNraW5XZWlnaHQueDtcXG5cXHRza2lubmVkICs9IGJvbmVNYXRZICogc2tpblZlcnRleCAqIHNraW5XZWlnaHQueTtcXG5cXHRza2lubmVkICs9IGJvbmVNYXRaICogc2tpblZlcnRleCAqIHNraW5XZWlnaHQuejtcXG5cXHRza2lubmVkICs9IGJvbmVNYXRXICogc2tpblZlcnRleCAqIHNraW5XZWlnaHQudztcXG5cXHRza2lubmVkICA9IGJpbmRNYXRyaXhJbnZlcnNlICogc2tpbm5lZDtcXG5cXG4jZW5kaWZcXG5cIjtcblRIUkVFLlNoYWRlckNodW5rLmVudm1hcF9wYXJzX3ZlcnRleD1cIiNpZiBkZWZpbmVkKCBVU0VfRU5WTUFQICkgJiYgISBkZWZpbmVkKCBVU0VfQlVNUE1BUCApICYmICEgZGVmaW5lZCggVVNFX05PUk1BTE1BUCApICYmICEgZGVmaW5lZCggUEhPTkcgKVxcblxcblxcdHZhcnlpbmcgdmVjMyB2UmVmbGVjdDtcXG5cXG5cXHR1bmlmb3JtIGZsb2F0IHJlZnJhY3Rpb25SYXRpbztcXG5cXG4jZW5kaWZcXG5cIjtUSFJFRS5TaGFkZXJDaHVuay5saW5lYXJfdG9fZ2FtbWFfZnJhZ21lbnQ9XCJcXG5cXHRvdXRnb2luZ0xpZ2h0ID0gbGluZWFyVG9PdXRwdXQoIG91dGdvaW5nTGlnaHQgKTtcXG5cIjtUSFJFRS5TaGFkZXJDaHVuay5jb2xvcl9wYXJzX3ZlcnRleD1cIiNpZmRlZiBVU0VfQ09MT1JcXG5cXG5cXHR2YXJ5aW5nIHZlYzMgdkNvbG9yO1xcblxcbiNlbmRpZlwiO1RIUkVFLlNoYWRlckNodW5rLmxpZ2h0c19sYW1iZXJ0X3BhcnNfdmVydGV4PVwidW5pZm9ybSB2ZWMzIGFtYmllbnRMaWdodENvbG9yO1xcblxcbiNpZiBNQVhfRElSX0xJR0hUUyA+IDBcXG5cXG5cXHR1bmlmb3JtIHZlYzMgZGlyZWN0aW9uYWxMaWdodENvbG9yWyBNQVhfRElSX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gdmVjMyBkaXJlY3Rpb25hbExpZ2h0RGlyZWN0aW9uWyBNQVhfRElSX0xJR0hUUyBdO1xcblxcbiNlbmRpZlxcblxcbiNpZiBNQVhfSEVNSV9MSUdIVFMgPiAwXFxuXFxuXFx0dW5pZm9ybSB2ZWMzIGhlbWlzcGhlcmVMaWdodFNreUNvbG9yWyBNQVhfSEVNSV9MSUdIVFMgXTtcXG5cXHR1bmlmb3JtIHZlYzMgaGVtaXNwaGVyZUxpZ2h0R3JvdW5kQ29sb3JbIE1BWF9IRU1JX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gdmVjMyBoZW1pc3BoZXJlTGlnaHREaXJlY3Rpb25bIE1BWF9IRU1JX0xJR0hUUyBdO1xcblxcbiNlbmRpZlxcblxcbiNpZiBNQVhfUE9JTlRfTElHSFRTID4gMFxcblxcblxcdHVuaWZvcm0gdmVjMyBwb2ludExpZ2h0Q29sb3JbIE1BWF9QT0lOVF9MSUdIVFMgXTtcXG5cXHR1bmlmb3JtIHZlYzMgcG9pbnRMaWdodFBvc2l0aW9uWyBNQVhfUE9JTlRfTElHSFRTIF07XFxuXFx0dW5pZm9ybSBmbG9hdCBwb2ludExpZ2h0RGlzdGFuY2VbIE1BWF9QT0lOVF9MSUdIVFMgXTtcXG5cXHR1bmlmb3JtIGZsb2F0IHBvaW50TGlnaHREZWNheVsgTUFYX1BPSU5UX0xJR0hUUyBdO1xcblxcbiNlbmRpZlxcblxcbiNpZiBNQVhfU1BPVF9MSUdIVFMgPiAwXFxuXFxuXFx0dW5pZm9ybSB2ZWMzIHNwb3RMaWdodENvbG9yWyBNQVhfU1BPVF9MSUdIVFMgXTtcXG5cXHR1bmlmb3JtIHZlYzMgc3BvdExpZ2h0UG9zaXRpb25bIE1BWF9TUE9UX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gdmVjMyBzcG90TGlnaHREaXJlY3Rpb25bIE1BWF9TUE9UX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gZmxvYXQgc3BvdExpZ2h0RGlzdGFuY2VbIE1BWF9TUE9UX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gZmxvYXQgc3BvdExpZ2h0QW5nbGVDb3NbIE1BWF9TUE9UX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gZmxvYXQgc3BvdExpZ2h0RXhwb25lbnRbIE1BWF9TUE9UX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gZmxvYXQgc3BvdExpZ2h0RGVjYXlbIE1BWF9TUE9UX0xJR0hUUyBdO1xcblxcbiNlbmRpZlxcblxcbiNpZmRlZiBXUkFQX0FST1VORFxcblxcblxcdHVuaWZvcm0gdmVjMyB3cmFwUkdCO1xcblxcbiNlbmRpZlxcblwiO1xuVEhSRUUuU2hhZGVyQ2h1bmsubWFwX3BhcnNfdmVydGV4PVwiI2lmIGRlZmluZWQoIFVTRV9NQVAgKSB8fCBkZWZpbmVkKCBVU0VfQlVNUE1BUCApIHx8IGRlZmluZWQoIFVTRV9OT1JNQUxNQVAgKSB8fCBkZWZpbmVkKCBVU0VfU1BFQ1VMQVJNQVAgKSB8fCBkZWZpbmVkKCBVU0VfQUxQSEFNQVAgKVxcblxcblxcdHZhcnlpbmcgdmVjMiB2VXY7XFxuXFx0dW5pZm9ybSB2ZWM0IG9mZnNldFJlcGVhdDtcXG5cXG4jZW5kaWZcXG5cIjtUSFJFRS5TaGFkZXJDaHVuay5lbnZtYXBfZnJhZ21lbnQ9XCIjaWZkZWYgVVNFX0VOVk1BUFxcblxcblxcdCNpZiBkZWZpbmVkKCBVU0VfQlVNUE1BUCApIHx8IGRlZmluZWQoIFVTRV9OT1JNQUxNQVAgKSB8fCBkZWZpbmVkKCBQSE9ORyApXFxuXFxuXFx0XFx0dmVjMyBjYW1lcmFUb1ZlcnRleCA9IG5vcm1hbGl6ZSggdldvcmxkUG9zaXRpb24gLSBjYW1lcmFQb3NpdGlvbiApO1xcblxcblxcdFxcdC8vIFRyYW5zZm9ybWluZyBOb3JtYWwgVmVjdG9ycyB3aXRoIHRoZSBJbnZlcnNlIFRyYW5zZm9ybWF0aW9uXFxuXFx0XFx0dmVjMyB3b3JsZE5vcm1hbCA9IGludmVyc2VUcmFuc2Zvcm1EaXJlY3Rpb24oIG5vcm1hbCwgdmlld01hdHJpeCApO1xcblxcblxcdFxcdCNpZmRlZiBFTlZNQVBfTU9ERV9SRUZMRUNUSU9OXFxuXFxuXFx0XFx0XFx0dmVjMyByZWZsZWN0VmVjID0gcmVmbGVjdCggY2FtZXJhVG9WZXJ0ZXgsIHdvcmxkTm9ybWFsICk7XFxuXFxuXFx0XFx0I2Vsc2VcXG5cXG5cXHRcXHRcXHR2ZWMzIHJlZmxlY3RWZWMgPSByZWZyYWN0KCBjYW1lcmFUb1ZlcnRleCwgd29ybGROb3JtYWwsIHJlZnJhY3Rpb25SYXRpbyApO1xcblxcblxcdFxcdCNlbmRpZlxcblxcblxcdCNlbHNlXFxuXFxuXFx0XFx0dmVjMyByZWZsZWN0VmVjID0gdlJlZmxlY3Q7XFxuXFxuXFx0I2VuZGlmXFxuXFxuXFx0I2lmZGVmIERPVUJMRV9TSURFRFxcblxcdFxcdGZsb2F0IGZsaXBOb3JtYWwgPSAoIC0xLjAgKyAyLjAgKiBmbG9hdCggZ2xfRnJvbnRGYWNpbmcgKSApO1xcblxcdCNlbHNlXFxuXFx0XFx0ZmxvYXQgZmxpcE5vcm1hbCA9IDEuMDtcXG5cXHQjZW5kaWZcXG5cXG5cXHQjaWZkZWYgRU5WTUFQX1RZUEVfQ1VCRVxcblxcdFxcdHZlYzQgZW52Q29sb3IgPSB0ZXh0dXJlQ3ViZSggZW52TWFwLCBmbGlwTm9ybWFsICogdmVjMyggZmxpcEVudk1hcCAqIHJlZmxlY3RWZWMueCwgcmVmbGVjdFZlYy55eiApICk7XFxuXFxuXFx0I2VsaWYgZGVmaW5lZCggRU5WTUFQX1RZUEVfRVFVSVJFQyApXFxuXFx0XFx0dmVjMiBzYW1wbGVVVjtcXG5cXHRcXHRzYW1wbGVVVi55ID0gc2F0dXJhdGUoIGZsaXBOb3JtYWwgKiByZWZsZWN0VmVjLnkgKiAwLjUgKyAwLjUgKTtcXG5cXHRcXHRzYW1wbGVVVi54ID0gYXRhbiggZmxpcE5vcm1hbCAqIHJlZmxlY3RWZWMueiwgZmxpcE5vcm1hbCAqIHJlZmxlY3RWZWMueCApICogUkVDSVBST0NBTF9QSTIgKyAwLjU7XFxuXFx0XFx0dmVjNCBlbnZDb2xvciA9IHRleHR1cmUyRCggZW52TWFwLCBzYW1wbGVVViApO1xcblxcblxcdCNlbGlmIGRlZmluZWQoIEVOVk1BUF9UWVBFX1NQSEVSRSApXFxuXFx0XFx0dmVjMyByZWZsZWN0VmlldyA9IGZsaXBOb3JtYWwgKiBub3JtYWxpemUoKHZpZXdNYXRyaXggKiB2ZWM0KCByZWZsZWN0VmVjLCAwLjAgKSkueHl6ICsgdmVjMygwLjAsMC4wLDEuMCkpO1xcblxcdFxcdHZlYzQgZW52Q29sb3IgPSB0ZXh0dXJlMkQoIGVudk1hcCwgcmVmbGVjdFZpZXcueHkgKiAwLjUgKyAwLjUgKTtcXG5cXHQjZW5kaWZcXG5cXG5cXHRlbnZDb2xvci54eXogPSBpbnB1dFRvTGluZWFyKCBlbnZDb2xvci54eXogKTtcXG5cXG5cXHQjaWZkZWYgRU5WTUFQX0JMRU5ESU5HX01VTFRJUExZXFxuXFxuXFx0XFx0b3V0Z29pbmdMaWdodCA9IG1peCggb3V0Z29pbmdMaWdodCwgb3V0Z29pbmdMaWdodCAqIGVudkNvbG9yLnh5eiwgc3BlY3VsYXJTdHJlbmd0aCAqIHJlZmxlY3Rpdml0eSApO1xcblxcblxcdCNlbGlmIGRlZmluZWQoIEVOVk1BUF9CTEVORElOR19NSVggKVxcblxcblxcdFxcdG91dGdvaW5nTGlnaHQgPSBtaXgoIG91dGdvaW5nTGlnaHQsIGVudkNvbG9yLnh5eiwgc3BlY3VsYXJTdHJlbmd0aCAqIHJlZmxlY3Rpdml0eSApO1xcblxcblxcdCNlbGlmIGRlZmluZWQoIEVOVk1BUF9CTEVORElOR19BREQgKVxcblxcblxcdFxcdG91dGdvaW5nTGlnaHQgKz0gZW52Q29sb3IueHl6ICogc3BlY3VsYXJTdHJlbmd0aCAqIHJlZmxlY3Rpdml0eTtcXG5cXG5cXHQjZW5kaWZcXG5cXG4jZW5kaWZcXG5cIjtcblRIUkVFLlNoYWRlckNodW5rLnNwZWN1bGFybWFwX3BhcnNfZnJhZ21lbnQ9XCIjaWZkZWYgVVNFX1NQRUNVTEFSTUFQXFxuXFxuXFx0dW5pZm9ybSBzYW1wbGVyMkQgc3BlY3VsYXJNYXA7XFxuXFxuI2VuZGlmXCI7VEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfdmVydGV4PVwiI2lmZGVmIFVTRV9MT0dERVBUSEJVRlxcblxcblxcdGdsX1Bvc2l0aW9uLnogPSBsb2cyKG1heCggRVBTSUxPTiwgZ2xfUG9zaXRpb24udyArIDEuMCApKSAqIGxvZ0RlcHRoQnVmRkM7XFxuXFxuXFx0I2lmZGVmIFVTRV9MT0dERVBUSEJVRl9FWFRcXG5cXG5cXHRcXHR2RnJhZ0RlcHRoID0gMS4wICsgZ2xfUG9zaXRpb24udztcXG5cXG4jZWxzZVxcblxcblxcdFxcdGdsX1Bvc2l0aW9uLnogPSAoZ2xfUG9zaXRpb24ueiAtIDEuMCkgKiBnbF9Qb3NpdGlvbi53O1xcblxcblxcdCNlbmRpZlxcblxcbiNlbmRpZlwiO1RIUkVFLlNoYWRlckNodW5rLm1vcnBodGFyZ2V0X3BhcnNfdmVydGV4PVwiI2lmZGVmIFVTRV9NT1JQSFRBUkdFVFNcXG5cXG5cXHQjaWZuZGVmIFVTRV9NT1JQSE5PUk1BTFNcXG5cXG5cXHR1bmlmb3JtIGZsb2F0IG1vcnBoVGFyZ2V0SW5mbHVlbmNlc1sgOCBdO1xcblxcblxcdCNlbHNlXFxuXFxuXFx0dW5pZm9ybSBmbG9hdCBtb3JwaFRhcmdldEluZmx1ZW5jZXNbIDQgXTtcXG5cXG5cXHQjZW5kaWZcXG5cXG4jZW5kaWZcIjtcblRIUkVFLlNoYWRlckNodW5rLnNwZWN1bGFybWFwX2ZyYWdtZW50PVwiZmxvYXQgc3BlY3VsYXJTdHJlbmd0aDtcXG5cXG4jaWZkZWYgVVNFX1NQRUNVTEFSTUFQXFxuXFxuXFx0dmVjNCB0ZXhlbFNwZWN1bGFyID0gdGV4dHVyZTJEKCBzcGVjdWxhck1hcCwgdlV2ICk7XFxuXFx0c3BlY3VsYXJTdHJlbmd0aCA9IHRleGVsU3BlY3VsYXIucjtcXG5cXG4jZWxzZVxcblxcblxcdHNwZWN1bGFyU3RyZW5ndGggPSAxLjA7XFxuXFxuI2VuZGlmXCI7VEhSRUUuU2hhZGVyQ2h1bmsuZm9nX2ZyYWdtZW50PVwiI2lmZGVmIFVTRV9GT0dcXG5cXG5cXHQjaWZkZWYgVVNFX0xPR0RFUFRIQlVGX0VYVFxcblxcblxcdFxcdGZsb2F0IGRlcHRoID0gZ2xfRnJhZ0RlcHRoRVhUIC8gZ2xfRnJhZ0Nvb3JkLnc7XFxuXFxuXFx0I2Vsc2VcXG5cXG5cXHRcXHRmbG9hdCBkZXB0aCA9IGdsX0ZyYWdDb29yZC56IC8gZ2xfRnJhZ0Nvb3JkLnc7XFxuXFxuXFx0I2VuZGlmXFxuXFxuXFx0I2lmZGVmIEZPR19FWFAyXFxuXFxuXFx0XFx0ZmxvYXQgZm9nRmFjdG9yID0gZXhwMiggLSBzcXVhcmUoIGZvZ0RlbnNpdHkgKSAqIHNxdWFyZSggZGVwdGggKSAqIExPRzIgKTtcXG5cXHRcXHRmb2dGYWN0b3IgPSB3aGl0ZUNvbXBsaW1lbnQoIGZvZ0ZhY3RvciApO1xcblxcblxcdCNlbHNlXFxuXFxuXFx0XFx0ZmxvYXQgZm9nRmFjdG9yID0gc21vb3Roc3RlcCggZm9nTmVhciwgZm9nRmFyLCBkZXB0aCApO1xcblxcblxcdCNlbmRpZlxcblxcdFxcblxcdG91dGdvaW5nTGlnaHQgPSBtaXgoIG91dGdvaW5nTGlnaHQsIGZvZ0NvbG9yLCBmb2dGYWN0b3IgKTtcXG5cXG4jZW5kaWZcIjtcblRIUkVFLlNoYWRlckNodW5rLmJ1bXBtYXBfcGFyc19mcmFnbWVudD1cIiNpZmRlZiBVU0VfQlVNUE1BUFxcblxcblxcdHVuaWZvcm0gc2FtcGxlcjJEIGJ1bXBNYXA7XFxuXFx0dW5pZm9ybSBmbG9hdCBidW1wU2NhbGU7XFxuXFxuXFx0Ly8gRGVyaXZhdGl2ZSBtYXBzIC0gYnVtcCBtYXBwaW5nIHVucGFyYW1ldHJpemVkIHN1cmZhY2VzIGJ5IE1vcnRlbiBNaWtrZWxzZW5cXG5cXHQvLyBodHRwOi8vbW1pa2tlbHNlbjNkLmJsb2dzcG90LnNrLzIwMTEvMDcvZGVyaXZhdGl2ZS1tYXBzLmh0bWxcXG5cXG5cXHQvLyBFdmFsdWF0ZSB0aGUgZGVyaXZhdGl2ZSBvZiB0aGUgaGVpZ2h0IHcuci50LiBzY3JlZW4tc3BhY2UgdXNpbmcgZm9yd2FyZCBkaWZmZXJlbmNpbmcgKGxpc3RpbmcgMilcXG5cXG5cXHR2ZWMyIGRIZHh5X2Z3ZCgpIHtcXG5cXG5cXHRcXHR2ZWMyIGRTVGR4ID0gZEZkeCggdlV2ICk7XFxuXFx0XFx0dmVjMiBkU1RkeSA9IGRGZHkoIHZVdiApO1xcblxcblxcdFxcdGZsb2F0IEhsbCA9IGJ1bXBTY2FsZSAqIHRleHR1cmUyRCggYnVtcE1hcCwgdlV2ICkueDtcXG5cXHRcXHRmbG9hdCBkQnggPSBidW1wU2NhbGUgKiB0ZXh0dXJlMkQoIGJ1bXBNYXAsIHZVdiArIGRTVGR4ICkueCAtIEhsbDtcXG5cXHRcXHRmbG9hdCBkQnkgPSBidW1wU2NhbGUgKiB0ZXh0dXJlMkQoIGJ1bXBNYXAsIHZVdiArIGRTVGR5ICkueCAtIEhsbDtcXG5cXG5cXHRcXHRyZXR1cm4gdmVjMiggZEJ4LCBkQnkgKTtcXG5cXG5cXHR9XFxuXFxuXFx0dmVjMyBwZXJ0dXJiTm9ybWFsQXJiKCB2ZWMzIHN1cmZfcG9zLCB2ZWMzIHN1cmZfbm9ybSwgdmVjMiBkSGR4eSApIHtcXG5cXG5cXHRcXHR2ZWMzIHZTaWdtYVggPSBkRmR4KCBzdXJmX3BvcyApO1xcblxcdFxcdHZlYzMgdlNpZ21hWSA9IGRGZHkoIHN1cmZfcG9zICk7XFxuXFx0XFx0dmVjMyB2TiA9IHN1cmZfbm9ybTtcXHRcXHQvLyBub3JtYWxpemVkXFxuXFxuXFx0XFx0dmVjMyBSMSA9IGNyb3NzKCB2U2lnbWFZLCB2TiApO1xcblxcdFxcdHZlYzMgUjIgPSBjcm9zcyggdk4sIHZTaWdtYVggKTtcXG5cXG5cXHRcXHRmbG9hdCBmRGV0ID0gZG90KCB2U2lnbWFYLCBSMSApO1xcblxcblxcdFxcdHZlYzMgdkdyYWQgPSBzaWduKCBmRGV0ICkgKiAoIGRIZHh5LnggKiBSMSArIGRIZHh5LnkgKiBSMiApO1xcblxcdFxcdHJldHVybiBub3JtYWxpemUoIGFicyggZkRldCApICogc3VyZl9ub3JtIC0gdkdyYWQgKTtcXG5cXG5cXHR9XFxuXFxuI2VuZGlmXFxuXCI7XG5USFJFRS5TaGFkZXJDaHVuay5kZWZhdWx0bm9ybWFsX3ZlcnRleD1cIiNpZmRlZiBVU0VfU0tJTk5JTkdcXG5cXG5cXHR2ZWMzIG9iamVjdE5vcm1hbCA9IHNraW5uZWROb3JtYWwueHl6O1xcblxcbiNlbGlmIGRlZmluZWQoIFVTRV9NT1JQSE5PUk1BTFMgKVxcblxcblxcdHZlYzMgb2JqZWN0Tm9ybWFsID0gbW9ycGhlZE5vcm1hbDtcXG5cXG4jZWxzZVxcblxcblxcdHZlYzMgb2JqZWN0Tm9ybWFsID0gbm9ybWFsO1xcblxcbiNlbmRpZlxcblxcbiNpZmRlZiBGTElQX1NJREVEXFxuXFxuXFx0b2JqZWN0Tm9ybWFsID0gLW9iamVjdE5vcm1hbDtcXG5cXG4jZW5kaWZcXG5cXG52ZWMzIHRyYW5zZm9ybWVkTm9ybWFsID0gbm9ybWFsTWF0cml4ICogb2JqZWN0Tm9ybWFsO1xcblwiO1RIUkVFLlNoYWRlckNodW5rLmxpZ2h0c19waG9uZ19wYXJzX2ZyYWdtZW50PVwidW5pZm9ybSB2ZWMzIGFtYmllbnRMaWdodENvbG9yO1xcblxcbiNpZiBNQVhfRElSX0xJR0hUUyA+IDBcXG5cXG5cXHR1bmlmb3JtIHZlYzMgZGlyZWN0aW9uYWxMaWdodENvbG9yWyBNQVhfRElSX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gdmVjMyBkaXJlY3Rpb25hbExpZ2h0RGlyZWN0aW9uWyBNQVhfRElSX0xJR0hUUyBdO1xcblxcbiNlbmRpZlxcblxcbiNpZiBNQVhfSEVNSV9MSUdIVFMgPiAwXFxuXFxuXFx0dW5pZm9ybSB2ZWMzIGhlbWlzcGhlcmVMaWdodFNreUNvbG9yWyBNQVhfSEVNSV9MSUdIVFMgXTtcXG5cXHR1bmlmb3JtIHZlYzMgaGVtaXNwaGVyZUxpZ2h0R3JvdW5kQ29sb3JbIE1BWF9IRU1JX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gdmVjMyBoZW1pc3BoZXJlTGlnaHREaXJlY3Rpb25bIE1BWF9IRU1JX0xJR0hUUyBdO1xcblxcbiNlbmRpZlxcblxcbiNpZiBNQVhfUE9JTlRfTElHSFRTID4gMFxcblxcblxcdHVuaWZvcm0gdmVjMyBwb2ludExpZ2h0Q29sb3JbIE1BWF9QT0lOVF9MSUdIVFMgXTtcXG5cXG5cXHR1bmlmb3JtIHZlYzMgcG9pbnRMaWdodFBvc2l0aW9uWyBNQVhfUE9JTlRfTElHSFRTIF07XFxuXFx0dW5pZm9ybSBmbG9hdCBwb2ludExpZ2h0RGlzdGFuY2VbIE1BWF9QT0lOVF9MSUdIVFMgXTtcXG5cXHR1bmlmb3JtIGZsb2F0IHBvaW50TGlnaHREZWNheVsgTUFYX1BPSU5UX0xJR0hUUyBdO1xcblxcbiNlbmRpZlxcblxcbiNpZiBNQVhfU1BPVF9MSUdIVFMgPiAwXFxuXFxuXFx0dW5pZm9ybSB2ZWMzIHNwb3RMaWdodENvbG9yWyBNQVhfU1BPVF9MSUdIVFMgXTtcXG5cXHR1bmlmb3JtIHZlYzMgc3BvdExpZ2h0UG9zaXRpb25bIE1BWF9TUE9UX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gdmVjMyBzcG90TGlnaHREaXJlY3Rpb25bIE1BWF9TUE9UX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gZmxvYXQgc3BvdExpZ2h0QW5nbGVDb3NbIE1BWF9TUE9UX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gZmxvYXQgc3BvdExpZ2h0RXhwb25lbnRbIE1BWF9TUE9UX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gZmxvYXQgc3BvdExpZ2h0RGlzdGFuY2VbIE1BWF9TUE9UX0xJR0hUUyBdO1xcblxcdHVuaWZvcm0gZmxvYXQgc3BvdExpZ2h0RGVjYXlbIE1BWF9TUE9UX0xJR0hUUyBdO1xcblxcbiNlbmRpZlxcblxcbiNpZiBNQVhfU1BPVF9MSUdIVFMgPiAwIHx8IGRlZmluZWQoIFVTRV9CVU1QTUFQICkgfHwgZGVmaW5lZCggVVNFX0VOVk1BUCApXFxuXFxuXFx0dmFyeWluZyB2ZWMzIHZXb3JsZFBvc2l0aW9uO1xcblxcbiNlbmRpZlxcblxcbiNpZmRlZiBXUkFQX0FST1VORFxcblxcblxcdHVuaWZvcm0gdmVjMyB3cmFwUkdCO1xcblxcbiNlbmRpZlxcblxcbnZhcnlpbmcgdmVjMyB2Vmlld1Bvc2l0aW9uO1xcblxcbiNpZm5kZWYgRkxBVF9TSEFERURcXG5cXG5cXHR2YXJ5aW5nIHZlYzMgdk5vcm1hbDtcXG5cXG4jZW5kaWZcXG5cIjtcblRIUkVFLlNoYWRlckNodW5rLnNraW5iYXNlX3ZlcnRleD1cIiNpZmRlZiBVU0VfU0tJTk5JTkdcXG5cXG5cXHRtYXQ0IGJvbmVNYXRYID0gZ2V0Qm9uZU1hdHJpeCggc2tpbkluZGV4LnggKTtcXG5cXHRtYXQ0IGJvbmVNYXRZID0gZ2V0Qm9uZU1hdHJpeCggc2tpbkluZGV4LnkgKTtcXG5cXHRtYXQ0IGJvbmVNYXRaID0gZ2V0Qm9uZU1hdHJpeCggc2tpbkluZGV4LnogKTtcXG5cXHRtYXQ0IGJvbmVNYXRXID0gZ2V0Qm9uZU1hdHJpeCggc2tpbkluZGV4LncgKTtcXG5cXG4jZW5kaWZcIjtUSFJFRS5TaGFkZXJDaHVuay5tYXBfdmVydGV4PVwiI2lmIGRlZmluZWQoIFVTRV9NQVAgKSB8fCBkZWZpbmVkKCBVU0VfQlVNUE1BUCApIHx8IGRlZmluZWQoIFVTRV9OT1JNQUxNQVAgKSB8fCBkZWZpbmVkKCBVU0VfU1BFQ1VMQVJNQVAgKSB8fCBkZWZpbmVkKCBVU0VfQUxQSEFNQVAgKVxcblxcblxcdHZVdiA9IHV2ICogb2Zmc2V0UmVwZWF0Lnp3ICsgb2Zmc2V0UmVwZWF0Lnh5O1xcblxcbiNlbmRpZlwiO1xuVEhSRUUuU2hhZGVyQ2h1bmsubGlnaHRtYXBfZnJhZ21lbnQ9XCIjaWZkZWYgVVNFX0xJR0hUTUFQXFxuXFxuXFx0b3V0Z29pbmdMaWdodCAqPSBkaWZmdXNlQ29sb3IueHl6ICogdGV4dHVyZTJEKCBsaWdodE1hcCwgdlV2MiApLnh5ejtcXG5cXG4jZW5kaWZcIjtUSFJFRS5TaGFkZXJDaHVuay5zaGFkb3dtYXBfcGFyc192ZXJ0ZXg9XCIjaWZkZWYgVVNFX1NIQURPV01BUFxcblxcblxcdHZhcnlpbmcgdmVjNCB2U2hhZG93Q29vcmRbIE1BWF9TSEFET1dTIF07XFxuXFx0dW5pZm9ybSBtYXQ0IHNoYWRvd01hdHJpeFsgTUFYX1NIQURPV1MgXTtcXG5cXG4jZW5kaWZcIjtUSFJFRS5TaGFkZXJDaHVuay5jb2xvcl9mcmFnbWVudD1cIiNpZmRlZiBVU0VfQ09MT1JcXG5cXG5cXHRkaWZmdXNlQ29sb3IucmdiICo9IHZDb2xvcjtcXG5cXG4jZW5kaWZcIjtUSFJFRS5TaGFkZXJDaHVuay5tb3JwaHRhcmdldF92ZXJ0ZXg9XCIjaWZkZWYgVVNFX01PUlBIVEFSR0VUU1xcblxcblxcdHZlYzMgbW9ycGhlZCA9IHZlYzMoIDAuMCApO1xcblxcdG1vcnBoZWQgKz0gKCBtb3JwaFRhcmdldDAgLSBwb3NpdGlvbiApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyAwIF07XFxuXFx0bW9ycGhlZCArPSAoIG1vcnBoVGFyZ2V0MSAtIHBvc2l0aW9uICkgKiBtb3JwaFRhcmdldEluZmx1ZW5jZXNbIDEgXTtcXG5cXHRtb3JwaGVkICs9ICggbW9ycGhUYXJnZXQyIC0gcG9zaXRpb24gKSAqIG1vcnBoVGFyZ2V0SW5mbHVlbmNlc1sgMiBdO1xcblxcdG1vcnBoZWQgKz0gKCBtb3JwaFRhcmdldDMgLSBwb3NpdGlvbiApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyAzIF07XFxuXFxuXFx0I2lmbmRlZiBVU0VfTU9SUEhOT1JNQUxTXFxuXFxuXFx0bW9ycGhlZCArPSAoIG1vcnBoVGFyZ2V0NCAtIHBvc2l0aW9uICkgKiBtb3JwaFRhcmdldEluZmx1ZW5jZXNbIDQgXTtcXG5cXHRtb3JwaGVkICs9ICggbW9ycGhUYXJnZXQ1IC0gcG9zaXRpb24gKSAqIG1vcnBoVGFyZ2V0SW5mbHVlbmNlc1sgNSBdO1xcblxcdG1vcnBoZWQgKz0gKCBtb3JwaFRhcmdldDYgLSBwb3NpdGlvbiApICogbW9ycGhUYXJnZXRJbmZsdWVuY2VzWyA2IF07XFxuXFx0bW9ycGhlZCArPSAoIG1vcnBoVGFyZ2V0NyAtIHBvc2l0aW9uICkgKiBtb3JwaFRhcmdldEluZmx1ZW5jZXNbIDcgXTtcXG5cXG5cXHQjZW5kaWZcXG5cXG5cXHRtb3JwaGVkICs9IHBvc2l0aW9uO1xcblxcbiNlbmRpZlwiO1xuVEhSRUUuU2hhZGVyQ2h1bmsuZW52bWFwX3ZlcnRleD1cIiNpZiBkZWZpbmVkKCBVU0VfRU5WTUFQICkgJiYgISBkZWZpbmVkKCBVU0VfQlVNUE1BUCApICYmICEgZGVmaW5lZCggVVNFX05PUk1BTE1BUCApICYmICEgZGVmaW5lZCggUEhPTkcgKVxcblxcblxcdHZlYzMgd29ybGROb3JtYWwgPSB0cmFuc2Zvcm1EaXJlY3Rpb24oIG9iamVjdE5vcm1hbCwgbW9kZWxNYXRyaXggKTtcXG5cXG5cXHR2ZWMzIGNhbWVyYVRvVmVydGV4ID0gbm9ybWFsaXplKCB3b3JsZFBvc2l0aW9uLnh5eiAtIGNhbWVyYVBvc2l0aW9uICk7XFxuXFxuXFx0I2lmZGVmIEVOVk1BUF9NT0RFX1JFRkxFQ1RJT05cXG5cXG5cXHRcXHR2UmVmbGVjdCA9IHJlZmxlY3QoIGNhbWVyYVRvVmVydGV4LCB3b3JsZE5vcm1hbCApO1xcblxcblxcdCNlbHNlXFxuXFxuXFx0XFx0dlJlZmxlY3QgPSByZWZyYWN0KCBjYW1lcmFUb1ZlcnRleCwgd29ybGROb3JtYWwsIHJlZnJhY3Rpb25SYXRpbyApO1xcblxcblxcdCNlbmRpZlxcblxcbiNlbmRpZlxcblwiO1xuVEhSRUUuU2hhZGVyQ2h1bmsuc2hhZG93bWFwX2ZyYWdtZW50PVwiI2lmZGVmIFVTRV9TSEFET1dNQVBcXG5cXG5cXHQjaWZkZWYgU0hBRE9XTUFQX0RFQlVHXFxuXFxuXFx0XFx0dmVjMyBmcnVzdHVtQ29sb3JzWzNdO1xcblxcdFxcdGZydXN0dW1Db2xvcnNbMF0gPSB2ZWMzKCAxLjAsIDAuNSwgMC4wICk7XFxuXFx0XFx0ZnJ1c3R1bUNvbG9yc1sxXSA9IHZlYzMoIDAuMCwgMS4wLCAwLjggKTtcXG5cXHRcXHRmcnVzdHVtQ29sb3JzWzJdID0gdmVjMyggMC4wLCAwLjUsIDEuMCApO1xcblxcblxcdCNlbmRpZlxcblxcblxcdCNpZmRlZiBTSEFET1dNQVBfQ0FTQ0FERVxcblxcblxcdFxcdGludCBpbkZydXN0dW1Db3VudCA9IDA7XFxuXFxuXFx0I2VuZGlmXFxuXFxuXFx0ZmxvYXQgZkRlcHRoO1xcblxcdHZlYzMgc2hhZG93Q29sb3IgPSB2ZWMzKCAxLjAgKTtcXG5cXG5cXHRmb3IoIGludCBpID0gMDsgaSA8IE1BWF9TSEFET1dTOyBpICsrICkge1xcblxcblxcdFxcdHZlYzMgc2hhZG93Q29vcmQgPSB2U2hhZG93Q29vcmRbIGkgXS54eXogLyB2U2hhZG93Q29vcmRbIGkgXS53O1xcblxcblxcdFxcdFxcdFxcdC8vIGlmICggc29tZXRoaW5nICYmIHNvbWV0aGluZyApIGJyZWFrcyBBVEkgT3BlbkdMIHNoYWRlciBjb21waWxlclxcblxcdFxcdFxcdFxcdC8vIGlmICggYWxsKCBzb21ldGhpbmcsIHNvbWV0aGluZyApICkgdXNpbmcgdGhpcyBpbnN0ZWFkXFxuXFxuXFx0XFx0YnZlYzQgaW5GcnVzdHVtVmVjID0gYnZlYzQgKCBzaGFkb3dDb29yZC54ID49IDAuMCwgc2hhZG93Q29vcmQueCA8PSAxLjAsIHNoYWRvd0Nvb3JkLnkgPj0gMC4wLCBzaGFkb3dDb29yZC55IDw9IDEuMCApO1xcblxcdFxcdGJvb2wgaW5GcnVzdHVtID0gYWxsKCBpbkZydXN0dW1WZWMgKTtcXG5cXG5cXHRcXHRcXHRcXHQvLyBkb24ndCBzaGFkb3cgcGl4ZWxzIG91dHNpZGUgb2YgbGlnaHQgZnJ1c3R1bVxcblxcdFxcdFxcdFxcdC8vIHVzZSBqdXN0IGZpcnN0IGZydXN0dW0gKGZvciBjYXNjYWRlcylcXG5cXHRcXHRcXHRcXHQvLyBkb24ndCBzaGFkb3cgcGl4ZWxzIGJlaGluZCBmYXIgcGxhbmUgb2YgbGlnaHQgZnJ1c3R1bVxcblxcblxcdFxcdCNpZmRlZiBTSEFET1dNQVBfQ0FTQ0FERVxcblxcblxcdFxcdFxcdGluRnJ1c3R1bUNvdW50ICs9IGludCggaW5GcnVzdHVtICk7XFxuXFx0XFx0XFx0YnZlYzMgZnJ1c3R1bVRlc3RWZWMgPSBidmVjMyggaW5GcnVzdHVtLCBpbkZydXN0dW1Db3VudCA9PSAxLCBzaGFkb3dDb29yZC56IDw9IDEuMCApO1xcblxcblxcdFxcdCNlbHNlXFxuXFxuXFx0XFx0XFx0YnZlYzIgZnJ1c3R1bVRlc3RWZWMgPSBidmVjMiggaW5GcnVzdHVtLCBzaGFkb3dDb29yZC56IDw9IDEuMCApO1xcblxcblxcdFxcdCNlbmRpZlxcblxcblxcdFxcdGJvb2wgZnJ1c3R1bVRlc3QgPSBhbGwoIGZydXN0dW1UZXN0VmVjICk7XFxuXFxuXFx0XFx0aWYgKCBmcnVzdHVtVGVzdCApIHtcXG5cXG5cXHRcXHRcXHRzaGFkb3dDb29yZC56ICs9IHNoYWRvd0JpYXNbIGkgXTtcXG5cXG5cXHRcXHRcXHQjaWYgZGVmaW5lZCggU0hBRE9XTUFQX1RZUEVfUENGIClcXG5cXG5cXHRcXHRcXHRcXHRcXHRcXHQvLyBQZXJjZW50YWdlLWNsb3NlIGZpbHRlcmluZ1xcblxcdFxcdFxcdFxcdFxcdFxcdC8vICg5IHBpeGVsIGtlcm5lbClcXG5cXHRcXHRcXHRcXHRcXHRcXHQvLyBodHRwOi8vZmFiaWVuc2FuZ2xhcmQubmV0L3NoYWRvd21hcHBpbmdQQ0YvXFxuXFxuXFx0XFx0XFx0XFx0ZmxvYXQgc2hhZG93ID0gMC4wO1xcblxcblxcdFxcdC8qXFxuXFx0XFx0XFx0XFx0XFx0XFx0Ly8gbmVzdGVkIGxvb3BzIGJyZWFrcyBzaGFkZXIgY29tcGlsZXIgLyB2YWxpZGF0b3Igb24gc29tZSBBVEkgY2FyZHMgd2hlbiB1c2luZyBPcGVuR0xcXG5cXHRcXHRcXHRcXHRcXHRcXHQvLyBtdXN0IGVucm9sbCBsb29wIG1hbnVhbGx5XFxuXFxuXFx0XFx0XFx0XFx0Zm9yICggZmxvYXQgeSA9IC0xLjI1OyB5IDw9IDEuMjU7IHkgKz0gMS4yNSApXFxuXFx0XFx0XFx0XFx0XFx0Zm9yICggZmxvYXQgeCA9IC0xLjI1OyB4IDw9IDEuMjU7IHggKz0gMS4yNSApIHtcXG5cXG5cXHRcXHRcXHRcXHRcXHRcXHR2ZWM0IHJnYmFEZXB0aCA9IHRleHR1cmUyRCggc2hhZG93TWFwWyBpIF0sIHZlYzIoIHggKiB4UGl4ZWxPZmZzZXQsIHkgKiB5UGl4ZWxPZmZzZXQgKSArIHNoYWRvd0Nvb3JkLnh5ICk7XFxuXFxuXFx0XFx0XFx0XFx0XFx0XFx0XFx0XFx0Ly8gZG9lc24ndCBzZWVtIHRvIHByb2R1Y2UgYW55IG5vdGljZWFibGUgdmlzdWFsIGRpZmZlcmVuY2UgY29tcGFyZWQgdG8gc2ltcGxlIHRleHR1cmUyRCBsb29rdXBcXG5cXHRcXHRcXHRcXHRcXHRcXHRcXHRcXHQvL3ZlYzQgcmdiYURlcHRoID0gdGV4dHVyZTJEUHJvaiggc2hhZG93TWFwWyBpIF0sIHZlYzQoIHZTaGFkb3dDb29yZFsgaSBdLncgKiAoIHZlYzIoIHggKiB4UGl4ZWxPZmZzZXQsIHkgKiB5UGl4ZWxPZmZzZXQgKSArIHNoYWRvd0Nvb3JkLnh5ICksIDAuMDUsIHZTaGFkb3dDb29yZFsgaSBdLncgKSApO1xcblxcblxcdFxcdFxcdFxcdFxcdFxcdGZsb2F0IGZEZXB0aCA9IHVucGFja0RlcHRoKCByZ2JhRGVwdGggKTtcXG5cXG5cXHRcXHRcXHRcXHRcXHRcXHRpZiAoIGZEZXB0aCA8IHNoYWRvd0Nvb3JkLnogKVxcblxcdFxcdFxcdFxcdFxcdFxcdFxcdHNoYWRvdyArPSAxLjA7XFxuXFxuXFx0XFx0XFx0XFx0fVxcblxcblxcdFxcdFxcdFxcdHNoYWRvdyAvPSA5LjA7XFxuXFxuXFx0XFx0Ki9cXG5cXG5cXHRcXHRcXHRcXHRjb25zdCBmbG9hdCBzaGFkb3dEZWx0YSA9IDEuMCAvIDkuMDtcXG5cXG5cXHRcXHRcXHRcXHRmbG9hdCB4UGl4ZWxPZmZzZXQgPSAxLjAgLyBzaGFkb3dNYXBTaXplWyBpIF0ueDtcXG5cXHRcXHRcXHRcXHRmbG9hdCB5UGl4ZWxPZmZzZXQgPSAxLjAgLyBzaGFkb3dNYXBTaXplWyBpIF0ueTtcXG5cXG5cXHRcXHRcXHRcXHRmbG9hdCBkeDAgPSAtMS4yNSAqIHhQaXhlbE9mZnNldDtcXG5cXHRcXHRcXHRcXHRmbG9hdCBkeTAgPSAtMS4yNSAqIHlQaXhlbE9mZnNldDtcXG5cXHRcXHRcXHRcXHRmbG9hdCBkeDEgPSAxLjI1ICogeFBpeGVsT2Zmc2V0O1xcblxcdFxcdFxcdFxcdGZsb2F0IGR5MSA9IDEuMjUgKiB5UGl4ZWxPZmZzZXQ7XFxuXFxuXFx0XFx0XFx0XFx0ZkRlcHRoID0gdW5wYWNrRGVwdGgoIHRleHR1cmUyRCggc2hhZG93TWFwWyBpIF0sIHNoYWRvd0Nvb3JkLnh5ICsgdmVjMiggZHgwLCBkeTAgKSApICk7XFxuXFx0XFx0XFx0XFx0aWYgKCBmRGVwdGggPCBzaGFkb3dDb29yZC56ICkgc2hhZG93ICs9IHNoYWRvd0RlbHRhO1xcblxcblxcdFxcdFxcdFxcdGZEZXB0aCA9IHVucGFja0RlcHRoKCB0ZXh0dXJlMkQoIHNoYWRvd01hcFsgaSBdLCBzaGFkb3dDb29yZC54eSArIHZlYzIoIDAuMCwgZHkwICkgKSApO1xcblxcdFxcdFxcdFxcdGlmICggZkRlcHRoIDwgc2hhZG93Q29vcmQueiApIHNoYWRvdyArPSBzaGFkb3dEZWx0YTtcXG5cXG5cXHRcXHRcXHRcXHRmRGVwdGggPSB1bnBhY2tEZXB0aCggdGV4dHVyZTJEKCBzaGFkb3dNYXBbIGkgXSwgc2hhZG93Q29vcmQueHkgKyB2ZWMyKCBkeDEsIGR5MCApICkgKTtcXG5cXHRcXHRcXHRcXHRpZiAoIGZEZXB0aCA8IHNoYWRvd0Nvb3JkLnogKSBzaGFkb3cgKz0gc2hhZG93RGVsdGE7XFxuXFxuXFx0XFx0XFx0XFx0ZkRlcHRoID0gdW5wYWNrRGVwdGgoIHRleHR1cmUyRCggc2hhZG93TWFwWyBpIF0sIHNoYWRvd0Nvb3JkLnh5ICsgdmVjMiggZHgwLCAwLjAgKSApICk7XFxuXFx0XFx0XFx0XFx0aWYgKCBmRGVwdGggPCBzaGFkb3dDb29yZC56ICkgc2hhZG93ICs9IHNoYWRvd0RlbHRhO1xcblxcblxcdFxcdFxcdFxcdGZEZXB0aCA9IHVucGFja0RlcHRoKCB0ZXh0dXJlMkQoIHNoYWRvd01hcFsgaSBdLCBzaGFkb3dDb29yZC54eSApICk7XFxuXFx0XFx0XFx0XFx0aWYgKCBmRGVwdGggPCBzaGFkb3dDb29yZC56ICkgc2hhZG93ICs9IHNoYWRvd0RlbHRhO1xcblxcblxcdFxcdFxcdFxcdGZEZXB0aCA9IHVucGFja0RlcHRoKCB0ZXh0dXJlMkQoIHNoYWRvd01hcFsgaSBdLCBzaGFkb3dDb29yZC54eSArIHZlYzIoIGR4MSwgMC4wICkgKSApO1xcblxcdFxcdFxcdFxcdGlmICggZkRlcHRoIDwgc2hhZG93Q29vcmQueiApIHNoYWRvdyArPSBzaGFkb3dEZWx0YTtcXG5cXG5cXHRcXHRcXHRcXHRmRGVwdGggPSB1bnBhY2tEZXB0aCggdGV4dHVyZTJEKCBzaGFkb3dNYXBbIGkgXSwgc2hhZG93Q29vcmQueHkgKyB2ZWMyKCBkeDAsIGR5MSApICkgKTtcXG5cXHRcXHRcXHRcXHRpZiAoIGZEZXB0aCA8IHNoYWRvd0Nvb3JkLnogKSBzaGFkb3cgKz0gc2hhZG93RGVsdGE7XFxuXFxuXFx0XFx0XFx0XFx0ZkRlcHRoID0gdW5wYWNrRGVwdGgoIHRleHR1cmUyRCggc2hhZG93TWFwWyBpIF0sIHNoYWRvd0Nvb3JkLnh5ICsgdmVjMiggMC4wLCBkeTEgKSApICk7XFxuXFx0XFx0XFx0XFx0aWYgKCBmRGVwdGggPCBzaGFkb3dDb29yZC56ICkgc2hhZG93ICs9IHNoYWRvd0RlbHRhO1xcblxcblxcdFxcdFxcdFxcdGZEZXB0aCA9IHVucGFja0RlcHRoKCB0ZXh0dXJlMkQoIHNoYWRvd01hcFsgaSBdLCBzaGFkb3dDb29yZC54eSArIHZlYzIoIGR4MSwgZHkxICkgKSApO1xcblxcdFxcdFxcdFxcdGlmICggZkRlcHRoIDwgc2hhZG93Q29vcmQueiApIHNoYWRvdyArPSBzaGFkb3dEZWx0YTtcXG5cXG5cXHRcXHRcXHRcXHRzaGFkb3dDb2xvciA9IHNoYWRvd0NvbG9yICogdmVjMyggKCAxLjAgLSBzaGFkb3dEYXJrbmVzc1sgaSBdICogc2hhZG93ICkgKTtcXG5cXG5cXHRcXHRcXHQjZWxpZiBkZWZpbmVkKCBTSEFET1dNQVBfVFlQRV9QQ0ZfU09GVCApXFxuXFxuXFx0XFx0XFx0XFx0XFx0XFx0Ly8gUGVyY2VudGFnZS1jbG9zZSBmaWx0ZXJpbmdcXG5cXHRcXHRcXHRcXHRcXHRcXHQvLyAoOSBwaXhlbCBrZXJuZWwpXFxuXFx0XFx0XFx0XFx0XFx0XFx0Ly8gaHR0cDovL2ZhYmllbnNhbmdsYXJkLm5ldC9zaGFkb3dtYXBwaW5nUENGL1xcblxcblxcdFxcdFxcdFxcdGZsb2F0IHNoYWRvdyA9IDAuMDtcXG5cXG5cXHRcXHRcXHRcXHRmbG9hdCB4UGl4ZWxPZmZzZXQgPSAxLjAgLyBzaGFkb3dNYXBTaXplWyBpIF0ueDtcXG5cXHRcXHRcXHRcXHRmbG9hdCB5UGl4ZWxPZmZzZXQgPSAxLjAgLyBzaGFkb3dNYXBTaXplWyBpIF0ueTtcXG5cXG5cXHRcXHRcXHRcXHRmbG9hdCBkeDAgPSAtMS4wICogeFBpeGVsT2Zmc2V0O1xcblxcdFxcdFxcdFxcdGZsb2F0IGR5MCA9IC0xLjAgKiB5UGl4ZWxPZmZzZXQ7XFxuXFx0XFx0XFx0XFx0ZmxvYXQgZHgxID0gMS4wICogeFBpeGVsT2Zmc2V0O1xcblxcdFxcdFxcdFxcdGZsb2F0IGR5MSA9IDEuMCAqIHlQaXhlbE9mZnNldDtcXG5cXG5cXHRcXHRcXHRcXHRtYXQzIHNoYWRvd0tlcm5lbDtcXG5cXHRcXHRcXHRcXHRtYXQzIGRlcHRoS2VybmVsO1xcblxcblxcdFxcdFxcdFxcdGRlcHRoS2VybmVsWzBdWzBdID0gdW5wYWNrRGVwdGgoIHRleHR1cmUyRCggc2hhZG93TWFwWyBpIF0sIHNoYWRvd0Nvb3JkLnh5ICsgdmVjMiggZHgwLCBkeTAgKSApICk7XFxuXFx0XFx0XFx0XFx0ZGVwdGhLZXJuZWxbMF1bMV0gPSB1bnBhY2tEZXB0aCggdGV4dHVyZTJEKCBzaGFkb3dNYXBbIGkgXSwgc2hhZG93Q29vcmQueHkgKyB2ZWMyKCBkeDAsIDAuMCApICkgKTtcXG5cXHRcXHRcXHRcXHRkZXB0aEtlcm5lbFswXVsyXSA9IHVucGFja0RlcHRoKCB0ZXh0dXJlMkQoIHNoYWRvd01hcFsgaSBdLCBzaGFkb3dDb29yZC54eSArIHZlYzIoIGR4MCwgZHkxICkgKSApO1xcblxcdFxcdFxcdFxcdGRlcHRoS2VybmVsWzFdWzBdID0gdW5wYWNrRGVwdGgoIHRleHR1cmUyRCggc2hhZG93TWFwWyBpIF0sIHNoYWRvd0Nvb3JkLnh5ICsgdmVjMiggMC4wLCBkeTAgKSApICk7XFxuXFx0XFx0XFx0XFx0ZGVwdGhLZXJuZWxbMV1bMV0gPSB1bnBhY2tEZXB0aCggdGV4dHVyZTJEKCBzaGFkb3dNYXBbIGkgXSwgc2hhZG93Q29vcmQueHkgKSApO1xcblxcdFxcdFxcdFxcdGRlcHRoS2VybmVsWzFdWzJdID0gdW5wYWNrRGVwdGgoIHRleHR1cmUyRCggc2hhZG93TWFwWyBpIF0sIHNoYWRvd0Nvb3JkLnh5ICsgdmVjMiggMC4wLCBkeTEgKSApICk7XFxuXFx0XFx0XFx0XFx0ZGVwdGhLZXJuZWxbMl1bMF0gPSB1bnBhY2tEZXB0aCggdGV4dHVyZTJEKCBzaGFkb3dNYXBbIGkgXSwgc2hhZG93Q29vcmQueHkgKyB2ZWMyKCBkeDEsIGR5MCApICkgKTtcXG5cXHRcXHRcXHRcXHRkZXB0aEtlcm5lbFsyXVsxXSA9IHVucGFja0RlcHRoKCB0ZXh0dXJlMkQoIHNoYWRvd01hcFsgaSBdLCBzaGFkb3dDb29yZC54eSArIHZlYzIoIGR4MSwgMC4wICkgKSApO1xcblxcdFxcdFxcdFxcdGRlcHRoS2VybmVsWzJdWzJdID0gdW5wYWNrRGVwdGgoIHRleHR1cmUyRCggc2hhZG93TWFwWyBpIF0sIHNoYWRvd0Nvb3JkLnh5ICsgdmVjMiggZHgxLCBkeTEgKSApICk7XFxuXFxuXFx0XFx0XFx0XFx0dmVjMyBzaGFkb3daID0gdmVjMyggc2hhZG93Q29vcmQueiApO1xcblxcdFxcdFxcdFxcdHNoYWRvd0tlcm5lbFswXSA9IHZlYzMobGVzc1RoYW4oZGVwdGhLZXJuZWxbMF0sIHNoYWRvd1ogKSk7XFxuXFx0XFx0XFx0XFx0c2hhZG93S2VybmVsWzBdICo9IHZlYzMoMC4yNSk7XFxuXFxuXFx0XFx0XFx0XFx0c2hhZG93S2VybmVsWzFdID0gdmVjMyhsZXNzVGhhbihkZXB0aEtlcm5lbFsxXSwgc2hhZG93WiApKTtcXG5cXHRcXHRcXHRcXHRzaGFkb3dLZXJuZWxbMV0gKj0gdmVjMygwLjI1KTtcXG5cXG5cXHRcXHRcXHRcXHRzaGFkb3dLZXJuZWxbMl0gPSB2ZWMzKGxlc3NUaGFuKGRlcHRoS2VybmVsWzJdLCBzaGFkb3daICkpO1xcblxcdFxcdFxcdFxcdHNoYWRvd0tlcm5lbFsyXSAqPSB2ZWMzKDAuMjUpO1xcblxcblxcdFxcdFxcdFxcdHZlYzIgZnJhY3Rpb25hbENvb3JkID0gMS4wIC0gZnJhY3QoIHNoYWRvd0Nvb3JkLnh5ICogc2hhZG93TWFwU2l6ZVtpXS54eSApO1xcblxcblxcdFxcdFxcdFxcdHNoYWRvd0tlcm5lbFswXSA9IG1peCggc2hhZG93S2VybmVsWzFdLCBzaGFkb3dLZXJuZWxbMF0sIGZyYWN0aW9uYWxDb29yZC54ICk7XFxuXFx0XFx0XFx0XFx0c2hhZG93S2VybmVsWzFdID0gbWl4KCBzaGFkb3dLZXJuZWxbMl0sIHNoYWRvd0tlcm5lbFsxXSwgZnJhY3Rpb25hbENvb3JkLnggKTtcXG5cXG5cXHRcXHRcXHRcXHR2ZWM0IHNoYWRvd1ZhbHVlcztcXG5cXHRcXHRcXHRcXHRzaGFkb3dWYWx1ZXMueCA9IG1peCggc2hhZG93S2VybmVsWzBdWzFdLCBzaGFkb3dLZXJuZWxbMF1bMF0sIGZyYWN0aW9uYWxDb29yZC55ICk7XFxuXFx0XFx0XFx0XFx0c2hhZG93VmFsdWVzLnkgPSBtaXgoIHNoYWRvd0tlcm5lbFswXVsyXSwgc2hhZG93S2VybmVsWzBdWzFdLCBmcmFjdGlvbmFsQ29vcmQueSApO1xcblxcdFxcdFxcdFxcdHNoYWRvd1ZhbHVlcy56ID0gbWl4KCBzaGFkb3dLZXJuZWxbMV1bMV0sIHNoYWRvd0tlcm5lbFsxXVswXSwgZnJhY3Rpb25hbENvb3JkLnkgKTtcXG5cXHRcXHRcXHRcXHRzaGFkb3dWYWx1ZXMudyA9IG1peCggc2hhZG93S2VybmVsWzFdWzJdLCBzaGFkb3dLZXJuZWxbMV1bMV0sIGZyYWN0aW9uYWxDb29yZC55ICk7XFxuXFxuXFx0XFx0XFx0XFx0c2hhZG93ID0gZG90KCBzaGFkb3dWYWx1ZXMsIHZlYzQoIDEuMCApICk7XFxuXFxuXFx0XFx0XFx0XFx0c2hhZG93Q29sb3IgPSBzaGFkb3dDb2xvciAqIHZlYzMoICggMS4wIC0gc2hhZG93RGFya25lc3NbIGkgXSAqIHNoYWRvdyApICk7XFxuXFxuXFx0XFx0XFx0I2Vsc2VcXG5cXG5cXHRcXHRcXHRcXHR2ZWM0IHJnYmFEZXB0aCA9IHRleHR1cmUyRCggc2hhZG93TWFwWyBpIF0sIHNoYWRvd0Nvb3JkLnh5ICk7XFxuXFx0XFx0XFx0XFx0ZmxvYXQgZkRlcHRoID0gdW5wYWNrRGVwdGgoIHJnYmFEZXB0aCApO1xcblxcblxcdFxcdFxcdFxcdGlmICggZkRlcHRoIDwgc2hhZG93Q29vcmQueiApXFxuXFxuXFx0XFx0Ly8gc3BvdCB3aXRoIG11bHRpcGxlIHNoYWRvd3MgaXMgZGFya2VyXFxuXFxuXFx0XFx0XFx0XFx0XFx0c2hhZG93Q29sb3IgPSBzaGFkb3dDb2xvciAqIHZlYzMoIDEuMCAtIHNoYWRvd0RhcmtuZXNzWyBpIF0gKTtcXG5cXG5cXHRcXHQvLyBzcG90IHdpdGggbXVsdGlwbGUgc2hhZG93cyBoYXMgdGhlIHNhbWUgY29sb3IgYXMgc2luZ2xlIHNoYWRvdyBzcG90XFxuXFxuXFx0XFx0Ly8gXFx0XFx0XFx0XFx0XFx0c2hhZG93Q29sb3IgPSBtaW4oIHNoYWRvd0NvbG9yLCB2ZWMzKCBzaGFkb3dEYXJrbmVzc1sgaSBdICkgKTtcXG5cXG5cXHRcXHRcXHQjZW5kaWZcXG5cXG5cXHRcXHR9XFxuXFxuXFxuXFx0XFx0I2lmZGVmIFNIQURPV01BUF9ERUJVR1xcblxcblxcdFxcdFxcdCNpZmRlZiBTSEFET1dNQVBfQ0FTQ0FERVxcblxcblxcdFxcdFxcdFxcdGlmICggaW5GcnVzdHVtICYmIGluRnJ1c3R1bUNvdW50ID09IDEgKSBvdXRnb2luZ0xpZ2h0ICo9IGZydXN0dW1Db2xvcnNbIGkgXTtcXG5cXG5cXHRcXHRcXHQjZWxzZVxcblxcblxcdFxcdFxcdFxcdGlmICggaW5GcnVzdHVtICkgb3V0Z29pbmdMaWdodCAqPSBmcnVzdHVtQ29sb3JzWyBpIF07XFxuXFxuXFx0XFx0XFx0I2VuZGlmXFxuXFxuXFx0XFx0I2VuZGlmXFxuXFxuXFx0fVxcblxcblxcdC8vIE5PVEU6IEkgYW0gdW5zdXJlIGlmIHRoaXMgaXMgY29ycmVjdCBpbiBsaW5lYXIgc3BhY2UuICAtYmhvdXN0b24sIERlYyAyOSwgMjAxNFxcblxcdHNoYWRvd0NvbG9yID0gaW5wdXRUb0xpbmVhciggc2hhZG93Q29sb3IgKTtcXG5cXG5cXHRvdXRnb2luZ0xpZ2h0ID0gb3V0Z29pbmdMaWdodCAqIHNoYWRvd0NvbG9yO1xcblxcbiNlbmRpZlxcblwiO1xuVEhSRUUuU2hhZGVyQ2h1bmsud29ybGRwb3NfdmVydGV4PVwiI2lmIGRlZmluZWQoIFVTRV9FTlZNQVAgKSB8fCBkZWZpbmVkKCBQSE9ORyApIHx8IGRlZmluZWQoIExBTUJFUlQgKSB8fCBkZWZpbmVkICggVVNFX1NIQURPV01BUCApXFxuXFxuXFx0I2lmZGVmIFVTRV9TS0lOTklOR1xcblxcblxcdFxcdHZlYzQgd29ybGRQb3NpdGlvbiA9IG1vZGVsTWF0cml4ICogc2tpbm5lZDtcXG5cXG5cXHQjZWxpZiBkZWZpbmVkKCBVU0VfTU9SUEhUQVJHRVRTIClcXG5cXG5cXHRcXHR2ZWM0IHdvcmxkUG9zaXRpb24gPSBtb2RlbE1hdHJpeCAqIHZlYzQoIG1vcnBoZWQsIDEuMCApO1xcblxcblxcdCNlbHNlXFxuXFxuXFx0XFx0dmVjNCB3b3JsZFBvc2l0aW9uID0gbW9kZWxNYXRyaXggKiB2ZWM0KCBwb3NpdGlvbiwgMS4wICk7XFxuXFxuXFx0I2VuZGlmXFxuXFxuI2VuZGlmXFxuXCI7VEhSRUUuU2hhZGVyQ2h1bmsuc2hhZG93bWFwX3BhcnNfZnJhZ21lbnQ9XCIjaWZkZWYgVVNFX1NIQURPV01BUFxcblxcblxcdHVuaWZvcm0gc2FtcGxlcjJEIHNoYWRvd01hcFsgTUFYX1NIQURPV1MgXTtcXG5cXHR1bmlmb3JtIHZlYzIgc2hhZG93TWFwU2l6ZVsgTUFYX1NIQURPV1MgXTtcXG5cXG5cXHR1bmlmb3JtIGZsb2F0IHNoYWRvd0RhcmtuZXNzWyBNQVhfU0hBRE9XUyBdO1xcblxcdHVuaWZvcm0gZmxvYXQgc2hhZG93Qmlhc1sgTUFYX1NIQURPV1MgXTtcXG5cXG5cXHR2YXJ5aW5nIHZlYzQgdlNoYWRvd0Nvb3JkWyBNQVhfU0hBRE9XUyBdO1xcblxcblxcdGZsb2F0IHVucGFja0RlcHRoKCBjb25zdCBpbiB2ZWM0IHJnYmFfZGVwdGggKSB7XFxuXFxuXFx0XFx0Y29uc3QgdmVjNCBiaXRfc2hpZnQgPSB2ZWM0KCAxLjAgLyAoIDI1Ni4wICogMjU2LjAgKiAyNTYuMCApLCAxLjAgLyAoIDI1Ni4wICogMjU2LjAgKSwgMS4wIC8gMjU2LjAsIDEuMCApO1xcblxcdFxcdGZsb2F0IGRlcHRoID0gZG90KCByZ2JhX2RlcHRoLCBiaXRfc2hpZnQgKTtcXG5cXHRcXHRyZXR1cm4gZGVwdGg7XFxuXFxuXFx0fVxcblxcbiNlbmRpZlwiO1xuVEhSRUUuU2hhZGVyQ2h1bmsuc2tpbm5pbmdfcGFyc192ZXJ0ZXg9XCIjaWZkZWYgVVNFX1NLSU5OSU5HXFxuXFxuXFx0dW5pZm9ybSBtYXQ0IGJpbmRNYXRyaXg7XFxuXFx0dW5pZm9ybSBtYXQ0IGJpbmRNYXRyaXhJbnZlcnNlO1xcblxcblxcdCNpZmRlZiBCT05FX1RFWFRVUkVcXG5cXG5cXHRcXHR1bmlmb3JtIHNhbXBsZXIyRCBib25lVGV4dHVyZTtcXG5cXHRcXHR1bmlmb3JtIGludCBib25lVGV4dHVyZVdpZHRoO1xcblxcdFxcdHVuaWZvcm0gaW50IGJvbmVUZXh0dXJlSGVpZ2h0O1xcblxcblxcdFxcdG1hdDQgZ2V0Qm9uZU1hdHJpeCggY29uc3QgaW4gZmxvYXQgaSApIHtcXG5cXG5cXHRcXHRcXHRmbG9hdCBqID0gaSAqIDQuMDtcXG5cXHRcXHRcXHRmbG9hdCB4ID0gbW9kKCBqLCBmbG9hdCggYm9uZVRleHR1cmVXaWR0aCApICk7XFxuXFx0XFx0XFx0ZmxvYXQgeSA9IGZsb29yKCBqIC8gZmxvYXQoIGJvbmVUZXh0dXJlV2lkdGggKSApO1xcblxcblxcdFxcdFxcdGZsb2F0IGR4ID0gMS4wIC8gZmxvYXQoIGJvbmVUZXh0dXJlV2lkdGggKTtcXG5cXHRcXHRcXHRmbG9hdCBkeSA9IDEuMCAvIGZsb2F0KCBib25lVGV4dHVyZUhlaWdodCApO1xcblxcblxcdFxcdFxcdHkgPSBkeSAqICggeSArIDAuNSApO1xcblxcblxcdFxcdFxcdHZlYzQgdjEgPSB0ZXh0dXJlMkQoIGJvbmVUZXh0dXJlLCB2ZWMyKCBkeCAqICggeCArIDAuNSApLCB5ICkgKTtcXG5cXHRcXHRcXHR2ZWM0IHYyID0gdGV4dHVyZTJEKCBib25lVGV4dHVyZSwgdmVjMiggZHggKiAoIHggKyAxLjUgKSwgeSApICk7XFxuXFx0XFx0XFx0dmVjNCB2MyA9IHRleHR1cmUyRCggYm9uZVRleHR1cmUsIHZlYzIoIGR4ICogKCB4ICsgMi41ICksIHkgKSApO1xcblxcdFxcdFxcdHZlYzQgdjQgPSB0ZXh0dXJlMkQoIGJvbmVUZXh0dXJlLCB2ZWMyKCBkeCAqICggeCArIDMuNSApLCB5ICkgKTtcXG5cXG5cXHRcXHRcXHRtYXQ0IGJvbmUgPSBtYXQ0KCB2MSwgdjIsIHYzLCB2NCApO1xcblxcblxcdFxcdFxcdHJldHVybiBib25lO1xcblxcblxcdFxcdH1cXG5cXG5cXHQjZWxzZVxcblxcblxcdFxcdHVuaWZvcm0gbWF0NCBib25lR2xvYmFsTWF0cmljZXNbIE1BWF9CT05FUyBdO1xcblxcblxcdFxcdG1hdDQgZ2V0Qm9uZU1hdHJpeCggY29uc3QgaW4gZmxvYXQgaSApIHtcXG5cXG5cXHRcXHRcXHRtYXQ0IGJvbmUgPSBib25lR2xvYmFsTWF0cmljZXNbIGludChpKSBdO1xcblxcdFxcdFxcdHJldHVybiBib25lO1xcblxcblxcdFxcdH1cXG5cXG5cXHQjZW5kaWZcXG5cXG4jZW5kaWZcXG5cIjtcblRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX3BhcnNfZnJhZ21lbnQ9XCIjaWZkZWYgVVNFX0xPR0RFUFRIQlVGXFxuXFxuXFx0dW5pZm9ybSBmbG9hdCBsb2dEZXB0aEJ1ZkZDO1xcblxcblxcdCNpZmRlZiBVU0VfTE9HREVQVEhCVUZfRVhUXFxuXFxuXFx0XFx0I2V4dGVuc2lvbiBHTF9FWFRfZnJhZ19kZXB0aCA6IGVuYWJsZVxcblxcdFxcdHZhcnlpbmcgZmxvYXQgdkZyYWdEZXB0aDtcXG5cXG5cXHQjZW5kaWZcXG5cXG4jZW5kaWZcIjtUSFJFRS5TaGFkZXJDaHVuay5hbHBoYW1hcF9mcmFnbWVudD1cIiNpZmRlZiBVU0VfQUxQSEFNQVBcXG5cXG5cXHRkaWZmdXNlQ29sb3IuYSAqPSB0ZXh0dXJlMkQoIGFscGhhTWFwLCB2VXYgKS5nO1xcblxcbiNlbmRpZlxcblwiO1RIUkVFLlNoYWRlckNodW5rLmFscGhhbWFwX3BhcnNfZnJhZ21lbnQ9XCIjaWZkZWYgVVNFX0FMUEhBTUFQXFxuXFxuXFx0dW5pZm9ybSBzYW1wbGVyMkQgYWxwaGFNYXA7XFxuXFxuI2VuZGlmXFxuXCI7XG5USFJFRS5Vbmlmb3Jtc1V0aWxzPXttZXJnZTpmdW5jdGlvbihhKXtmb3IodmFyIGI9e30sYz0wO2M8YS5sZW5ndGg7YysrKXt2YXIgZD10aGlzLmNsb25lKGFbY10pLGU7Zm9yKGUgaW4gZCliW2VdPWRbZV19cmV0dXJuIGJ9LGNsb25lOmZ1bmN0aW9uKGEpe3ZhciBiPXt9LGM7Zm9yKGMgaW4gYSl7YltjXT17fTtmb3IodmFyIGQgaW4gYVtjXSl7dmFyIGU9YVtjXVtkXTtiW2NdW2RdPWUgaW5zdGFuY2VvZiBUSFJFRS5Db2xvcnx8ZSBpbnN0YW5jZW9mIFRIUkVFLlZlY3RvcjJ8fGUgaW5zdGFuY2VvZiBUSFJFRS5WZWN0b3IzfHxlIGluc3RhbmNlb2YgVEhSRUUuVmVjdG9yNHx8ZSBpbnN0YW5jZW9mIFRIUkVFLk1hdHJpeDR8fGUgaW5zdGFuY2VvZiBUSFJFRS5UZXh0dXJlP2UuY2xvbmUoKTplIGluc3RhbmNlb2YgQXJyYXk/ZS5zbGljZSgpOmV9fXJldHVybiBifX07XG5USFJFRS5Vbmlmb3Jtc0xpYj17Y29tbW9uOntkaWZmdXNlOnt0eXBlOlwiY1wiLHZhbHVlOm5ldyBUSFJFRS5Db2xvcigxNTY1ODczNCl9LG9wYWNpdHk6e3R5cGU6XCJmXCIsdmFsdWU6MX0sbWFwOnt0eXBlOlwidFwiLHZhbHVlOm51bGx9LG9mZnNldFJlcGVhdDp7dHlwZTpcInY0XCIsdmFsdWU6bmV3IFRIUkVFLlZlY3RvcjQoMCwwLDEsMSl9LGxpZ2h0TWFwOnt0eXBlOlwidFwiLHZhbHVlOm51bGx9LHNwZWN1bGFyTWFwOnt0eXBlOlwidFwiLHZhbHVlOm51bGx9LGFscGhhTWFwOnt0eXBlOlwidFwiLHZhbHVlOm51bGx9LGVudk1hcDp7dHlwZTpcInRcIix2YWx1ZTpudWxsfSxmbGlwRW52TWFwOnt0eXBlOlwiZlwiLHZhbHVlOi0xfSxyZWZsZWN0aXZpdHk6e3R5cGU6XCJmXCIsdmFsdWU6MX0scmVmcmFjdGlvblJhdGlvOnt0eXBlOlwiZlwiLHZhbHVlOi45OH0sbW9ycGhUYXJnZXRJbmZsdWVuY2VzOnt0eXBlOlwiZlwiLHZhbHVlOjB9fSxidW1wOntidW1wTWFwOnt0eXBlOlwidFwiLHZhbHVlOm51bGx9LGJ1bXBTY2FsZTp7dHlwZTpcImZcIixcbnZhbHVlOjF9fSxub3JtYWxtYXA6e25vcm1hbE1hcDp7dHlwZTpcInRcIix2YWx1ZTpudWxsfSxub3JtYWxTY2FsZTp7dHlwZTpcInYyXCIsdmFsdWU6bmV3IFRIUkVFLlZlY3RvcjIoMSwxKX19LGZvZzp7Zm9nRGVuc2l0eTp7dHlwZTpcImZcIix2YWx1ZToyLjVFLTR9LGZvZ05lYXI6e3R5cGU6XCJmXCIsdmFsdWU6MX0sZm9nRmFyOnt0eXBlOlwiZlwiLHZhbHVlOjJFM30sZm9nQ29sb3I6e3R5cGU6XCJjXCIsdmFsdWU6bmV3IFRIUkVFLkNvbG9yKDE2Nzc3MjE1KX19LGxpZ2h0czp7YW1iaWVudExpZ2h0Q29sb3I6e3R5cGU6XCJmdlwiLHZhbHVlOltdfSxkaXJlY3Rpb25hbExpZ2h0RGlyZWN0aW9uOnt0eXBlOlwiZnZcIix2YWx1ZTpbXX0sZGlyZWN0aW9uYWxMaWdodENvbG9yOnt0eXBlOlwiZnZcIix2YWx1ZTpbXX0saGVtaXNwaGVyZUxpZ2h0RGlyZWN0aW9uOnt0eXBlOlwiZnZcIix2YWx1ZTpbXX0saGVtaXNwaGVyZUxpZ2h0U2t5Q29sb3I6e3R5cGU6XCJmdlwiLHZhbHVlOltdfSxoZW1pc3BoZXJlTGlnaHRHcm91bmRDb2xvcjp7dHlwZTpcImZ2XCIsXG52YWx1ZTpbXX0scG9pbnRMaWdodENvbG9yOnt0eXBlOlwiZnZcIix2YWx1ZTpbXX0scG9pbnRMaWdodFBvc2l0aW9uOnt0eXBlOlwiZnZcIix2YWx1ZTpbXX0scG9pbnRMaWdodERpc3RhbmNlOnt0eXBlOlwiZnYxXCIsdmFsdWU6W119LHBvaW50TGlnaHREZWNheTp7dHlwZTpcImZ2MVwiLHZhbHVlOltdfSxzcG90TGlnaHRDb2xvcjp7dHlwZTpcImZ2XCIsdmFsdWU6W119LHNwb3RMaWdodFBvc2l0aW9uOnt0eXBlOlwiZnZcIix2YWx1ZTpbXX0sc3BvdExpZ2h0RGlyZWN0aW9uOnt0eXBlOlwiZnZcIix2YWx1ZTpbXX0sc3BvdExpZ2h0RGlzdGFuY2U6e3R5cGU6XCJmdjFcIix2YWx1ZTpbXX0sc3BvdExpZ2h0QW5nbGVDb3M6e3R5cGU6XCJmdjFcIix2YWx1ZTpbXX0sc3BvdExpZ2h0RXhwb25lbnQ6e3R5cGU6XCJmdjFcIix2YWx1ZTpbXX0sc3BvdExpZ2h0RGVjYXk6e3R5cGU6XCJmdjFcIix2YWx1ZTpbXX19LHBhcnRpY2xlOntwc0NvbG9yOnt0eXBlOlwiY1wiLHZhbHVlOm5ldyBUSFJFRS5Db2xvcigxNTY1ODczNCl9LG9wYWNpdHk6e3R5cGU6XCJmXCIsXG52YWx1ZToxfSxzaXplOnt0eXBlOlwiZlwiLHZhbHVlOjF9LHNjYWxlOnt0eXBlOlwiZlwiLHZhbHVlOjF9LG1hcDp7dHlwZTpcInRcIix2YWx1ZTpudWxsfSxvZmZzZXRSZXBlYXQ6e3R5cGU6XCJ2NFwiLHZhbHVlOm5ldyBUSFJFRS5WZWN0b3I0KDAsMCwxLDEpfSxmb2dEZW5zaXR5Ont0eXBlOlwiZlwiLHZhbHVlOjIuNUUtNH0sZm9nTmVhcjp7dHlwZTpcImZcIix2YWx1ZToxfSxmb2dGYXI6e3R5cGU6XCJmXCIsdmFsdWU6MkUzfSxmb2dDb2xvcjp7dHlwZTpcImNcIix2YWx1ZTpuZXcgVEhSRUUuQ29sb3IoMTY3NzcyMTUpfX0sc2hhZG93bWFwOntzaGFkb3dNYXA6e3R5cGU6XCJ0dlwiLHZhbHVlOltdfSxzaGFkb3dNYXBTaXplOnt0eXBlOlwidjJ2XCIsdmFsdWU6W119LHNoYWRvd0JpYXM6e3R5cGU6XCJmdjFcIix2YWx1ZTpbXX0sc2hhZG93RGFya25lc3M6e3R5cGU6XCJmdjFcIix2YWx1ZTpbXX0sc2hhZG93TWF0cml4Ont0eXBlOlwibTR2XCIsdmFsdWU6W119fX07XG5USFJFRS5TaGFkZXJMaWI9e2Jhc2ljOnt1bmlmb3JtczpUSFJFRS5Vbmlmb3Jtc1V0aWxzLm1lcmdlKFtUSFJFRS5Vbmlmb3Jtc0xpYi5jb21tb24sVEhSRUUuVW5pZm9ybXNMaWIuZm9nLFRIUkVFLlVuaWZvcm1zTGliLnNoYWRvd21hcF0pLHZlcnRleFNoYWRlcjpbVEhSRUUuU2hhZGVyQ2h1bmsuY29tbW9uLFRIUkVFLlNoYWRlckNodW5rLm1hcF9wYXJzX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5saWdodG1hcF9wYXJzX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5lbnZtYXBfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuY29sb3JfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubW9ycGh0YXJnZXRfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuc2tpbm5pbmdfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuc2hhZG93bWFwX3BhcnNfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX3BhcnNfdmVydGV4LFwidm9pZCBtYWluKCkge1wiLFxuVEhSRUUuU2hhZGVyQ2h1bmsubWFwX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5saWdodG1hcF92ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuY29sb3JfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLnNraW5iYXNlX3ZlcnRleCxcIlxcdCNpZmRlZiBVU0VfRU5WTUFQXCIsVEhSRUUuU2hhZGVyQ2h1bmsubW9ycGhub3JtYWxfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLnNraW5ub3JtYWxfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmRlZmF1bHRub3JtYWxfdmVydGV4LFwiXFx0I2VuZGlmXCIsVEhSRUUuU2hhZGVyQ2h1bmsubW9ycGh0YXJnZXRfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLnNraW5uaW5nX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5kZWZhdWx0X3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl92ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsud29ybGRwb3NfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmVudm1hcF92ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuc2hhZG93bWFwX3ZlcnRleCxcblwifVwiXS5qb2luKFwiXFxuXCIpLGZyYWdtZW50U2hhZGVyOltcInVuaWZvcm0gdmVjMyBkaWZmdXNlO1xcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcIixUSFJFRS5TaGFkZXJDaHVuay5jb21tb24sVEhSRUUuU2hhZGVyQ2h1bmsuY29sb3JfcGFyc19mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5tYXBfcGFyc19mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5hbHBoYW1hcF9wYXJzX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmxpZ2h0bWFwX3BhcnNfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuZW52bWFwX3BhcnNfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuZm9nX3BhcnNfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuc2hhZG93bWFwX3BhcnNfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuc3BlY3VsYXJtYXBfcGFyc19mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl9wYXJzX2ZyYWdtZW50LFwidm9pZCBtYWluKCkge1xcblxcdHZlYzMgb3V0Z29pbmdMaWdodCA9IHZlYzMoIDAuMCApO1xcblxcdHZlYzQgZGlmZnVzZUNvbG9yID0gdmVjNCggZGlmZnVzZSwgb3BhY2l0eSApO1wiLFxuVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsubWFwX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmNvbG9yX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmFscGhhbWFwX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmFscGhhdGVzdF9mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5zcGVjdWxhcm1hcF9mcmFnbWVudCxcIlxcdG91dGdvaW5nTGlnaHQgPSBkaWZmdXNlQ29sb3IucmdiO1wiLFRIUkVFLlNoYWRlckNodW5rLmxpZ2h0bWFwX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmVudm1hcF9mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5zaGFkb3dtYXBfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsubGluZWFyX3RvX2dhbW1hX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmZvZ19mcmFnbWVudCxcIlxcdGdsX0ZyYWdDb2xvciA9IHZlYzQoIG91dGdvaW5nTGlnaHQsIGRpZmZ1c2VDb2xvci5hICk7XFxufVwiXS5qb2luKFwiXFxuXCIpfSxcbmxhbWJlcnQ6e3VuaWZvcm1zOlRIUkVFLlVuaWZvcm1zVXRpbHMubWVyZ2UoW1RIUkVFLlVuaWZvcm1zTGliLmNvbW1vbixUSFJFRS5Vbmlmb3Jtc0xpYi5mb2csVEhSRUUuVW5pZm9ybXNMaWIubGlnaHRzLFRIUkVFLlVuaWZvcm1zTGliLnNoYWRvd21hcCx7ZW1pc3NpdmU6e3R5cGU6XCJjXCIsdmFsdWU6bmV3IFRIUkVFLkNvbG9yKDApfSx3cmFwUkdCOnt0eXBlOlwidjNcIix2YWx1ZTpuZXcgVEhSRUUuVmVjdG9yMygxLDEsMSl9fV0pLHZlcnRleFNoYWRlcjpbXCIjZGVmaW5lIExBTUJFUlRcXG52YXJ5aW5nIHZlYzMgdkxpZ2h0RnJvbnQ7XFxuI2lmZGVmIERPVUJMRV9TSURFRFxcblxcdHZhcnlpbmcgdmVjMyB2TGlnaHRCYWNrO1xcbiNlbmRpZlwiLFRIUkVFLlNoYWRlckNodW5rLmNvbW1vbixUSFJFRS5TaGFkZXJDaHVuay5tYXBfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubGlnaHRtYXBfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuZW52bWFwX3BhcnNfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmxpZ2h0c19sYW1iZXJ0X3BhcnNfdmVydGV4LFxuVEhSRUUuU2hhZGVyQ2h1bmsuY29sb3JfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubW9ycGh0YXJnZXRfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuc2tpbm5pbmdfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuc2hhZG93bWFwX3BhcnNfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX3BhcnNfdmVydGV4LFwidm9pZCBtYWluKCkge1wiLFRIUkVFLlNoYWRlckNodW5rLm1hcF92ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubGlnaHRtYXBfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmNvbG9yX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5tb3JwaG5vcm1hbF92ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuc2tpbmJhc2VfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLnNraW5ub3JtYWxfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmRlZmF1bHRub3JtYWxfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLm1vcnBodGFyZ2V0X3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5za2lubmluZ192ZXJ0ZXgsXG5USFJFRS5TaGFkZXJDaHVuay5kZWZhdWx0X3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl92ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsud29ybGRwb3NfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmVudm1hcF92ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubGlnaHRzX2xhbWJlcnRfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLnNoYWRvd21hcF92ZXJ0ZXgsXCJ9XCJdLmpvaW4oXCJcXG5cIiksZnJhZ21lbnRTaGFkZXI6W1widW5pZm9ybSB2ZWMzIGRpZmZ1c2U7XFxudW5pZm9ybSB2ZWMzIGVtaXNzaXZlO1xcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcXG52YXJ5aW5nIHZlYzMgdkxpZ2h0RnJvbnQ7XFxuI2lmZGVmIERPVUJMRV9TSURFRFxcblxcdHZhcnlpbmcgdmVjMyB2TGlnaHRCYWNrO1xcbiNlbmRpZlwiLFRIUkVFLlNoYWRlckNodW5rLmNvbW1vbixUSFJFRS5TaGFkZXJDaHVuay5jb2xvcl9wYXJzX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLm1hcF9wYXJzX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmFscGhhbWFwX3BhcnNfZnJhZ21lbnQsXG5USFJFRS5TaGFkZXJDaHVuay5saWdodG1hcF9wYXJzX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmVudm1hcF9wYXJzX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmZvZ19wYXJzX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLnNoYWRvd21hcF9wYXJzX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLnNwZWN1bGFybWFwX3BhcnNfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfcGFyc19mcmFnbWVudCxcInZvaWQgbWFpbigpIHtcXG5cXHR2ZWMzIG91dGdvaW5nTGlnaHQgPSB2ZWMzKCAwLjAgKTtcXG5cXHR2ZWM0IGRpZmZ1c2VDb2xvciA9IHZlYzQoIGRpZmZ1c2UsIG9wYWNpdHkgKTtcIixUSFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl9mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5tYXBfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuY29sb3JfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuYWxwaGFtYXBfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuYWxwaGF0ZXN0X2ZyYWdtZW50LFxuVEhSRUUuU2hhZGVyQ2h1bmsuc3BlY3VsYXJtYXBfZnJhZ21lbnQsXCJcXHQjaWZkZWYgRE9VQkxFX1NJREVEXFxuXFx0XFx0aWYgKCBnbF9Gcm9udEZhY2luZyApXFxuXFx0XFx0XFx0b3V0Z29pbmdMaWdodCArPSBkaWZmdXNlQ29sb3IucmdiICogdkxpZ2h0RnJvbnQgKyBlbWlzc2l2ZTtcXG5cXHRcXHRlbHNlXFxuXFx0XFx0XFx0b3V0Z29pbmdMaWdodCArPSBkaWZmdXNlQ29sb3IucmdiICogdkxpZ2h0QmFjayArIGVtaXNzaXZlO1xcblxcdCNlbHNlXFxuXFx0XFx0b3V0Z29pbmdMaWdodCArPSBkaWZmdXNlQ29sb3IucmdiICogdkxpZ2h0RnJvbnQgKyBlbWlzc2l2ZTtcXG5cXHQjZW5kaWZcIixUSFJFRS5TaGFkZXJDaHVuay5saWdodG1hcF9mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5lbnZtYXBfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuc2hhZG93bWFwX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmxpbmVhcl90b19nYW1tYV9mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5mb2dfZnJhZ21lbnQsXCJcXHRnbF9GcmFnQ29sb3IgPSB2ZWM0KCBvdXRnb2luZ0xpZ2h0LCBkaWZmdXNlQ29sb3IuYSApO1xcbn1cIl0uam9pbihcIlxcblwiKX0sXG5waG9uZzp7dW5pZm9ybXM6VEhSRUUuVW5pZm9ybXNVdGlscy5tZXJnZShbVEhSRUUuVW5pZm9ybXNMaWIuY29tbW9uLFRIUkVFLlVuaWZvcm1zTGliLmJ1bXAsVEhSRUUuVW5pZm9ybXNMaWIubm9ybWFsbWFwLFRIUkVFLlVuaWZvcm1zTGliLmZvZyxUSFJFRS5Vbmlmb3Jtc0xpYi5saWdodHMsVEhSRUUuVW5pZm9ybXNMaWIuc2hhZG93bWFwLHtlbWlzc2l2ZTp7dHlwZTpcImNcIix2YWx1ZTpuZXcgVEhSRUUuQ29sb3IoMCl9LHNwZWN1bGFyOnt0eXBlOlwiY1wiLHZhbHVlOm5ldyBUSFJFRS5Db2xvcigxMTE4NDgxKX0sc2hpbmluZXNzOnt0eXBlOlwiZlwiLHZhbHVlOjMwfSx3cmFwUkdCOnt0eXBlOlwidjNcIix2YWx1ZTpuZXcgVEhSRUUuVmVjdG9yMygxLDEsMSl9fV0pLHZlcnRleFNoYWRlcjpbXCIjZGVmaW5lIFBIT05HXFxudmFyeWluZyB2ZWMzIHZWaWV3UG9zaXRpb247XFxuI2lmbmRlZiBGTEFUX1NIQURFRFxcblxcdHZhcnlpbmcgdmVjMyB2Tm9ybWFsO1xcbiNlbmRpZlwiLFRIUkVFLlNoYWRlckNodW5rLmNvbW1vbixcblRIUkVFLlNoYWRlckNodW5rLm1hcF9wYXJzX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5saWdodG1hcF9wYXJzX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5lbnZtYXBfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubGlnaHRzX3Bob25nX3BhcnNfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmNvbG9yX3BhcnNfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLm1vcnBodGFyZ2V0X3BhcnNfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLnNraW5uaW5nX3BhcnNfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLnNoYWRvd21hcF9wYXJzX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl9wYXJzX3ZlcnRleCxcInZvaWQgbWFpbigpIHtcIixUSFJFRS5TaGFkZXJDaHVuay5tYXBfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmxpZ2h0bWFwX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5jb2xvcl92ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubW9ycGhub3JtYWxfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLnNraW5iYXNlX3ZlcnRleCxcblRIUkVFLlNoYWRlckNodW5rLnNraW5ub3JtYWxfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmRlZmF1bHRub3JtYWxfdmVydGV4LFwiI2lmbmRlZiBGTEFUX1NIQURFRFxcblxcdHZOb3JtYWwgPSBub3JtYWxpemUoIHRyYW5zZm9ybWVkTm9ybWFsICk7XFxuI2VuZGlmXCIsVEhSRUUuU2hhZGVyQ2h1bmsubW9ycGh0YXJnZXRfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLnNraW5uaW5nX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5kZWZhdWx0X3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl92ZXJ0ZXgsXCJcXHR2Vmlld1Bvc2l0aW9uID0gLW12UG9zaXRpb24ueHl6O1wiLFRIUkVFLlNoYWRlckNodW5rLndvcmxkcG9zX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5lbnZtYXBfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmxpZ2h0c19waG9uZ192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuc2hhZG93bWFwX3ZlcnRleCxcIn1cIl0uam9pbihcIlxcblwiKSxmcmFnbWVudFNoYWRlcjpbXCIjZGVmaW5lIFBIT05HXFxudW5pZm9ybSB2ZWMzIGRpZmZ1c2U7XFxudW5pZm9ybSB2ZWMzIGVtaXNzaXZlO1xcbnVuaWZvcm0gdmVjMyBzcGVjdWxhcjtcXG51bmlmb3JtIGZsb2F0IHNoaW5pbmVzcztcXG51bmlmb3JtIGZsb2F0IG9wYWNpdHk7XCIsXG5USFJFRS5TaGFkZXJDaHVuay5jb21tb24sVEhSRUUuU2hhZGVyQ2h1bmsuY29sb3JfcGFyc19mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5tYXBfcGFyc19mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5hbHBoYW1hcF9wYXJzX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmxpZ2h0bWFwX3BhcnNfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuZW52bWFwX3BhcnNfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuZm9nX3BhcnNfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsubGlnaHRzX3Bob25nX3BhcnNfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuc2hhZG93bWFwX3BhcnNfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuYnVtcG1hcF9wYXJzX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLm5vcm1hbG1hcF9wYXJzX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLnNwZWN1bGFybWFwX3BhcnNfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfcGFyc19mcmFnbWVudCxcblwidm9pZCBtYWluKCkge1xcblxcdHZlYzMgb3V0Z29pbmdMaWdodCA9IHZlYzMoIDAuMCApO1xcblxcdHZlYzQgZGlmZnVzZUNvbG9yID0gdmVjNCggZGlmZnVzZSwgb3BhY2l0eSApO1wiLFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLm1hcF9mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5jb2xvcl9mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5hbHBoYW1hcF9mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5hbHBoYXRlc3RfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsuc3BlY3VsYXJtYXBfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsubGlnaHRzX3Bob25nX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmxpZ2h0bWFwX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmVudm1hcF9mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5zaGFkb3dtYXBfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsubGluZWFyX3RvX2dhbW1hX2ZyYWdtZW50LFxuVEhSRUUuU2hhZGVyQ2h1bmsuZm9nX2ZyYWdtZW50LFwiXFx0Z2xfRnJhZ0NvbG9yID0gdmVjNCggb3V0Z29pbmdMaWdodCwgZGlmZnVzZUNvbG9yLmEgKTtcXG59XCJdLmpvaW4oXCJcXG5cIil9LHBhcnRpY2xlX2Jhc2ljOnt1bmlmb3JtczpUSFJFRS5Vbmlmb3Jtc1V0aWxzLm1lcmdlKFtUSFJFRS5Vbmlmb3Jtc0xpYi5wYXJ0aWNsZSxUSFJFRS5Vbmlmb3Jtc0xpYi5zaGFkb3dtYXBdKSx2ZXJ0ZXhTaGFkZXI6W1widW5pZm9ybSBmbG9hdCBzaXplO1xcbnVuaWZvcm0gZmxvYXQgc2NhbGU7XCIsVEhSRUUuU2hhZGVyQ2h1bmsuY29tbW9uLFRIUkVFLlNoYWRlckNodW5rLmNvbG9yX3BhcnNfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLnNoYWRvd21hcF9wYXJzX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl9wYXJzX3ZlcnRleCxcInZvaWQgbWFpbigpIHtcIixUSFJFRS5TaGFkZXJDaHVuay5jb2xvcl92ZXJ0ZXgsXCJcXHR2ZWM0IG12UG9zaXRpb24gPSBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KCBwb3NpdGlvbiwgMS4wICk7XFxuXFx0I2lmZGVmIFVTRV9TSVpFQVRURU5VQVRJT05cXG5cXHRcXHRnbF9Qb2ludFNpemUgPSBzaXplICogKCBzY2FsZSAvIGxlbmd0aCggbXZQb3NpdGlvbi54eXogKSApO1xcblxcdCNlbHNlXFxuXFx0XFx0Z2xfUG9pbnRTaXplID0gc2l6ZTtcXG5cXHQjZW5kaWZcXG5cXHRnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtdlBvc2l0aW9uO1wiLFxuVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLndvcmxkcG9zX3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5zaGFkb3dtYXBfdmVydGV4LFwifVwiXS5qb2luKFwiXFxuXCIpLGZyYWdtZW50U2hhZGVyOltcInVuaWZvcm0gdmVjMyBwc0NvbG9yO1xcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcIixUSFJFRS5TaGFkZXJDaHVuay5jb21tb24sVEhSRUUuU2hhZGVyQ2h1bmsuY29sb3JfcGFyc19mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5tYXBfcGFydGljbGVfcGFyc19mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5mb2dfcGFyc19mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5zaGFkb3dtYXBfcGFyc19mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl9wYXJzX2ZyYWdtZW50LFwidm9pZCBtYWluKCkge1xcblxcdHZlYzMgb3V0Z29pbmdMaWdodCA9IHZlYzMoIDAuMCApO1xcblxcdHZlYzQgZGlmZnVzZUNvbG9yID0gdmVjNCggcHNDb2xvciwgb3BhY2l0eSApO1wiLFxuVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfZnJhZ21lbnQsVEhSRUUuU2hhZGVyQ2h1bmsubWFwX3BhcnRpY2xlX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmNvbG9yX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmFscGhhdGVzdF9mcmFnbWVudCxcIlxcdG91dGdvaW5nTGlnaHQgPSBkaWZmdXNlQ29sb3IucmdiO1wiLFRIUkVFLlNoYWRlckNodW5rLnNoYWRvd21hcF9mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5mb2dfZnJhZ21lbnQsXCJcXHRnbF9GcmFnQ29sb3IgPSB2ZWM0KCBvdXRnb2luZ0xpZ2h0LCBkaWZmdXNlQ29sb3IuYSApO1xcbn1cIl0uam9pbihcIlxcblwiKX0sZGFzaGVkOnt1bmlmb3JtczpUSFJFRS5Vbmlmb3Jtc1V0aWxzLm1lcmdlKFtUSFJFRS5Vbmlmb3Jtc0xpYi5jb21tb24sVEhSRUUuVW5pZm9ybXNMaWIuZm9nLHtzY2FsZTp7dHlwZTpcImZcIix2YWx1ZToxfSxkYXNoU2l6ZTp7dHlwZTpcImZcIix2YWx1ZToxfSx0b3RhbFNpemU6e3R5cGU6XCJmXCIsdmFsdWU6Mn19XSksXG52ZXJ0ZXhTaGFkZXI6W1widW5pZm9ybSBmbG9hdCBzY2FsZTtcXG5hdHRyaWJ1dGUgZmxvYXQgbGluZURpc3RhbmNlO1xcbnZhcnlpbmcgZmxvYXQgdkxpbmVEaXN0YW5jZTtcIixUSFJFRS5TaGFkZXJDaHVuay5jb21tb24sVEhSRUUuU2hhZGVyQ2h1bmsuY29sb3JfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfcGFyc192ZXJ0ZXgsXCJ2b2lkIG1haW4oKSB7XCIsVEhSRUUuU2hhZGVyQ2h1bmsuY29sb3JfdmVydGV4LFwiXFx0dkxpbmVEaXN0YW5jZSA9IHNjYWxlICogbGluZURpc3RhbmNlO1xcblxcdHZlYzQgbXZQb3NpdGlvbiA9IG1vZGVsVmlld01hdHJpeCAqIHZlYzQoIHBvc2l0aW9uLCAxLjAgKTtcXG5cXHRnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtdlBvc2l0aW9uO1wiLFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX3ZlcnRleCxcIn1cIl0uam9pbihcIlxcblwiKSxmcmFnbWVudFNoYWRlcjpbXCJ1bmlmb3JtIHZlYzMgZGlmZnVzZTtcXG51bmlmb3JtIGZsb2F0IG9wYWNpdHk7XFxudW5pZm9ybSBmbG9hdCBkYXNoU2l6ZTtcXG51bmlmb3JtIGZsb2F0IHRvdGFsU2l6ZTtcXG52YXJ5aW5nIGZsb2F0IHZMaW5lRGlzdGFuY2U7XCIsXG5USFJFRS5TaGFkZXJDaHVuay5jb21tb24sVEhSRUUuU2hhZGVyQ2h1bmsuY29sb3JfcGFyc19mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5mb2dfcGFyc19mcmFnbWVudCxUSFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl9wYXJzX2ZyYWdtZW50LFwidm9pZCBtYWluKCkge1xcblxcdGlmICggbW9kKCB2TGluZURpc3RhbmNlLCB0b3RhbFNpemUgKSA+IGRhc2hTaXplICkge1xcblxcdFxcdGRpc2NhcmQ7XFxuXFx0fVxcblxcdHZlYzMgb3V0Z29pbmdMaWdodCA9IHZlYzMoIDAuMCApO1xcblxcdHZlYzQgZGlmZnVzZUNvbG9yID0gdmVjNCggZGlmZnVzZSwgb3BhY2l0eSApO1wiLFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX2ZyYWdtZW50LFRIUkVFLlNoYWRlckNodW5rLmNvbG9yX2ZyYWdtZW50LFwiXFx0b3V0Z29pbmdMaWdodCA9IGRpZmZ1c2VDb2xvci5yZ2I7XCIsVEhSRUUuU2hhZGVyQ2h1bmsuZm9nX2ZyYWdtZW50LFwiXFx0Z2xfRnJhZ0NvbG9yID0gdmVjNCggb3V0Z29pbmdMaWdodCwgZGlmZnVzZUNvbG9yLmEgKTtcXG59XCJdLmpvaW4oXCJcXG5cIil9LFxuZGVwdGg6e3VuaWZvcm1zOnttTmVhcjp7dHlwZTpcImZcIix2YWx1ZToxfSxtRmFyOnt0eXBlOlwiZlwiLHZhbHVlOjJFM30sb3BhY2l0eTp7dHlwZTpcImZcIix2YWx1ZToxfX0sdmVydGV4U2hhZGVyOltUSFJFRS5TaGFkZXJDaHVuay5jb21tb24sVEhSRUUuU2hhZGVyQ2h1bmsubW9ycGh0YXJnZXRfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfcGFyc192ZXJ0ZXgsXCJ2b2lkIG1haW4oKSB7XCIsVEhSRUUuU2hhZGVyQ2h1bmsubW9ycGh0YXJnZXRfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmRlZmF1bHRfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX3ZlcnRleCxcIn1cIl0uam9pbihcIlxcblwiKSxmcmFnbWVudFNoYWRlcjpbXCJ1bmlmb3JtIGZsb2F0IG1OZWFyO1xcbnVuaWZvcm0gZmxvYXQgbUZhcjtcXG51bmlmb3JtIGZsb2F0IG9wYWNpdHk7XCIsVEhSRUUuU2hhZGVyQ2h1bmsuY29tbW9uLFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX3BhcnNfZnJhZ21lbnQsXG5cInZvaWQgbWFpbigpIHtcIixUSFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl9mcmFnbWVudCxcIlxcdCNpZmRlZiBVU0VfTE9HREVQVEhCVUZfRVhUXFxuXFx0XFx0ZmxvYXQgZGVwdGggPSBnbF9GcmFnRGVwdGhFWFQgLyBnbF9GcmFnQ29vcmQudztcXG5cXHQjZWxzZVxcblxcdFxcdGZsb2F0IGRlcHRoID0gZ2xfRnJhZ0Nvb3JkLnogLyBnbF9GcmFnQ29vcmQudztcXG5cXHQjZW5kaWZcXG5cXHRmbG9hdCBjb2xvciA9IDEuMCAtIHNtb290aHN0ZXAoIG1OZWFyLCBtRmFyLCBkZXB0aCApO1xcblxcdGdsX0ZyYWdDb2xvciA9IHZlYzQoIHZlYzMoIGNvbG9yICksIG9wYWNpdHkgKTtcXG59XCJdLmpvaW4oXCJcXG5cIil9LG5vcm1hbDp7dW5pZm9ybXM6e29wYWNpdHk6e3R5cGU6XCJmXCIsdmFsdWU6MX19LHZlcnRleFNoYWRlcjpbXCJ2YXJ5aW5nIHZlYzMgdk5vcm1hbDtcIixUSFJFRS5TaGFkZXJDaHVuay5jb21tb24sVEhSRUUuU2hhZGVyQ2h1bmsubW9ycGh0YXJnZXRfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfcGFyc192ZXJ0ZXgsXG5cInZvaWQgbWFpbigpIHtcXG5cXHR2Tm9ybWFsID0gbm9ybWFsaXplKCBub3JtYWxNYXRyaXggKiBub3JtYWwgKTtcIixUSFJFRS5TaGFkZXJDaHVuay5tb3JwaHRhcmdldF92ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuZGVmYXVsdF92ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfdmVydGV4LFwifVwiXS5qb2luKFwiXFxuXCIpLGZyYWdtZW50U2hhZGVyOltcInVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcXG52YXJ5aW5nIHZlYzMgdk5vcm1hbDtcIixUSFJFRS5TaGFkZXJDaHVuay5jb21tb24sVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfcGFyc19mcmFnbWVudCxcInZvaWQgbWFpbigpIHtcXG5cXHRnbF9GcmFnQ29sb3IgPSB2ZWM0KCAwLjUgKiBub3JtYWxpemUoIHZOb3JtYWwgKSArIDAuNSwgb3BhY2l0eSApO1wiLFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX2ZyYWdtZW50LFwifVwiXS5qb2luKFwiXFxuXCIpfSxjdWJlOnt1bmlmb3Jtczp7dEN1YmU6e3R5cGU6XCJ0XCIsdmFsdWU6bnVsbH0sXG50RmxpcDp7dHlwZTpcImZcIix2YWx1ZTotMX19LHZlcnRleFNoYWRlcjpbXCJ2YXJ5aW5nIHZlYzMgdldvcmxkUG9zaXRpb247XCIsVEhSRUUuU2hhZGVyQ2h1bmsuY29tbW9uLFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX3BhcnNfdmVydGV4LFwidm9pZCBtYWluKCkge1xcblxcdHZXb3JsZFBvc2l0aW9uID0gdHJhbnNmb3JtRGlyZWN0aW9uKCBwb3NpdGlvbiwgbW9kZWxNYXRyaXggKTtcXG5cXHRnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KCBwb3NpdGlvbiwgMS4wICk7XCIsVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfdmVydGV4LFwifVwiXS5qb2luKFwiXFxuXCIpLGZyYWdtZW50U2hhZGVyOltcInVuaWZvcm0gc2FtcGxlckN1YmUgdEN1YmU7XFxudW5pZm9ybSBmbG9hdCB0RmxpcDtcXG52YXJ5aW5nIHZlYzMgdldvcmxkUG9zaXRpb247XCIsVEhSRUUuU2hhZGVyQ2h1bmsuY29tbW9uLFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX3BhcnNfZnJhZ21lbnQsXG5cInZvaWQgbWFpbigpIHtcXG5cXHRnbF9GcmFnQ29sb3IgPSB0ZXh0dXJlQ3ViZSggdEN1YmUsIHZlYzMoIHRGbGlwICogdldvcmxkUG9zaXRpb24ueCwgdldvcmxkUG9zaXRpb24ueXogKSApO1wiLFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX2ZyYWdtZW50LFwifVwiXS5qb2luKFwiXFxuXCIpfSxlcXVpcmVjdDp7dW5pZm9ybXM6e3RFcXVpcmVjdDp7dHlwZTpcInRcIix2YWx1ZTpudWxsfSx0RmxpcDp7dHlwZTpcImZcIix2YWx1ZTotMX19LHZlcnRleFNoYWRlcjpbXCJ2YXJ5aW5nIHZlYzMgdldvcmxkUG9zaXRpb247XCIsVEhSRUUuU2hhZGVyQ2h1bmsuY29tbW9uLFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX3BhcnNfdmVydGV4LFwidm9pZCBtYWluKCkge1xcblxcdHZXb3JsZFBvc2l0aW9uID0gdHJhbnNmb3JtRGlyZWN0aW9uKCBwb3NpdGlvbiwgbW9kZWxNYXRyaXggKTtcXG5cXHRnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KCBwb3NpdGlvbiwgMS4wICk7XCIsXG5USFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl92ZXJ0ZXgsXCJ9XCJdLmpvaW4oXCJcXG5cIiksZnJhZ21lbnRTaGFkZXI6W1widW5pZm9ybSBzYW1wbGVyMkQgdEVxdWlyZWN0O1xcbnVuaWZvcm0gZmxvYXQgdEZsaXA7XFxudmFyeWluZyB2ZWMzIHZXb3JsZFBvc2l0aW9uO1wiLFRIUkVFLlNoYWRlckNodW5rLmNvbW1vbixUSFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl9wYXJzX2ZyYWdtZW50LFwidm9pZCBtYWluKCkge1xcbnZlYzMgZGlyZWN0aW9uID0gbm9ybWFsaXplKCB2V29ybGRQb3NpdGlvbiApO1xcbnZlYzIgc2FtcGxlVVY7XFxuc2FtcGxlVVYueSA9IHNhdHVyYXRlKCB0RmxpcCAqIGRpcmVjdGlvbi55ICogLTAuNSArIDAuNSApO1xcbnNhbXBsZVVWLnggPSBhdGFuKCBkaXJlY3Rpb24ueiwgZGlyZWN0aW9uLnggKSAqIFJFQ0lQUk9DQUxfUEkyICsgMC41O1xcbmdsX0ZyYWdDb2xvciA9IHRleHR1cmUyRCggdEVxdWlyZWN0LCBzYW1wbGVVViApO1wiLFRIUkVFLlNoYWRlckNodW5rLmxvZ2RlcHRoYnVmX2ZyYWdtZW50LFxuXCJ9XCJdLmpvaW4oXCJcXG5cIil9LGRlcHRoUkdCQTp7dW5pZm9ybXM6e30sdmVydGV4U2hhZGVyOltUSFJFRS5TaGFkZXJDaHVuay5jb21tb24sVEhSRUUuU2hhZGVyQ2h1bmsubW9ycGh0YXJnZXRfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuc2tpbm5pbmdfcGFyc192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfcGFyc192ZXJ0ZXgsXCJ2b2lkIG1haW4oKSB7XCIsVEhSRUUuU2hhZGVyQ2h1bmsuc2tpbmJhc2VfdmVydGV4LFRIUkVFLlNoYWRlckNodW5rLm1vcnBodGFyZ2V0X3ZlcnRleCxUSFJFRS5TaGFkZXJDaHVuay5za2lubmluZ192ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsuZGVmYXVsdF92ZXJ0ZXgsVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfdmVydGV4LFwifVwiXS5qb2luKFwiXFxuXCIpLGZyYWdtZW50U2hhZGVyOltUSFJFRS5TaGFkZXJDaHVuay5jb21tb24sVEhSRUUuU2hhZGVyQ2h1bmsubG9nZGVwdGhidWZfcGFyc19mcmFnbWVudCxcInZlYzQgcGFja19kZXB0aCggY29uc3QgaW4gZmxvYXQgZGVwdGggKSB7XFxuXFx0Y29uc3QgdmVjNCBiaXRfc2hpZnQgPSB2ZWM0KCAyNTYuMCAqIDI1Ni4wICogMjU2LjAsIDI1Ni4wICogMjU2LjAsIDI1Ni4wLCAxLjAgKTtcXG5cXHRjb25zdCB2ZWM0IGJpdF9tYXNrID0gdmVjNCggMC4wLCAxLjAgLyAyNTYuMCwgMS4wIC8gMjU2LjAsIDEuMCAvIDI1Ni4wICk7XFxuXFx0dmVjNCByZXMgPSBtb2QoIGRlcHRoICogYml0X3NoaWZ0ICogdmVjNCggMjU1ICksIHZlYzQoIDI1NiApICkgLyB2ZWM0KCAyNTUgKTtcXG5cXHRyZXMgLT0gcmVzLnh4eXogKiBiaXRfbWFzaztcXG5cXHRyZXR1cm4gcmVzO1xcbn1cXG52b2lkIG1haW4oKSB7XCIsXG5USFJFRS5TaGFkZXJDaHVuay5sb2dkZXB0aGJ1Zl9mcmFnbWVudCxcIlxcdCNpZmRlZiBVU0VfTE9HREVQVEhCVUZfRVhUXFxuXFx0XFx0Z2xfRnJhZ0RhdGFbIDAgXSA9IHBhY2tfZGVwdGgoIGdsX0ZyYWdEZXB0aEVYVCApO1xcblxcdCNlbHNlXFxuXFx0XFx0Z2xfRnJhZ0RhdGFbIDAgXSA9IHBhY2tfZGVwdGgoIGdsX0ZyYWdDb29yZC56ICk7XFxuXFx0I2VuZGlmXFxufVwiXS5qb2luKFwiXFxuXCIpfX07XG5USFJFRS5XZWJHTFJlbmRlcmVyPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoYSl7dmFyIGI9YS5nZW9tZXRyeTthPWEubWF0ZXJpYWw7dmFyIGM9Yi52ZXJ0aWNlcy5sZW5ndGg7aWYoYS5hdHRyaWJ1dGVzKXt2b2lkIDA9PT1iLl9fd2ViZ2xDdXN0b21BdHRyaWJ1dGVzTGlzdCYmKGIuX193ZWJnbEN1c3RvbUF0dHJpYnV0ZXNMaXN0PVtdKTtmb3IodmFyIGQgaW4gYS5hdHRyaWJ1dGVzKXt2YXIgZT1hLmF0dHJpYnV0ZXNbZF07aWYoIWUuX193ZWJnbEluaXRpYWxpemVkfHxlLmNyZWF0ZVVuaXF1ZUJ1ZmZlcnMpe2UuX193ZWJnbEluaXRpYWxpemVkPSEwO3ZhciBmPTE7XCJ2MlwiPT09ZS50eXBlP2Y9MjpcInYzXCI9PT1lLnR5cGU/Zj0zOlwidjRcIj09PWUudHlwZT9mPTQ6XCJjXCI9PT1lLnR5cGUmJihmPTMpO2Uuc2l6ZT1mO2UuYXJyYXk9bmV3IEZsb2F0MzJBcnJheShjKmYpO2UuYnVmZmVyPW0uY3JlYXRlQnVmZmVyKCk7ZS5idWZmZXIuYmVsb25nc1RvQXR0cmlidXRlPWQ7ZS5uZWVkc1VwZGF0ZT1cbiEwfWIuX193ZWJnbEN1c3RvbUF0dHJpYnV0ZXNMaXN0LnB1c2goZSl9fX1mdW5jdGlvbiBjKGEsYil7cmV0dXJuIGEubWF0ZXJpYWwgaW5zdGFuY2VvZiBUSFJFRS5NZXNoRmFjZU1hdGVyaWFsP2EubWF0ZXJpYWwubWF0ZXJpYWxzW2IubWF0ZXJpYWxJbmRleF06YS5tYXRlcmlhbH1mdW5jdGlvbiBkKGEsYixjLGQpe2M9Yy5hdHRyaWJ1dGVzO3ZhciBlPWIuYXR0cmlidXRlcztiPWIuYXR0cmlidXRlc0tleXM7Zm9yKHZhciBmPTAsZz1iLmxlbmd0aDtmPGc7ZisrKXt2YXIgaD1iW2ZdLGs9ZVtoXTtpZigwPD1rKXt2YXIgbj1jW2hdO3ZvaWQgMCE9PW4/KGg9bi5pdGVtU2l6ZSxtLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsbi5idWZmZXIpLFcuZW5hYmxlQXR0cmlidXRlKGspLG0udmVydGV4QXR0cmliUG9pbnRlcihrLGgsbS5GTE9BVCwhMSwwLGQqaCo0KSk6dm9pZCAwIT09YS5kZWZhdWx0QXR0cmlidXRlVmFsdWVzJiYoMj09PWEuZGVmYXVsdEF0dHJpYnV0ZVZhbHVlc1toXS5sZW5ndGg/XG5tLnZlcnRleEF0dHJpYjJmdihrLGEuZGVmYXVsdEF0dHJpYnV0ZVZhbHVlc1toXSk6Mz09PWEuZGVmYXVsdEF0dHJpYnV0ZVZhbHVlc1toXS5sZW5ndGgmJm0udmVydGV4QXR0cmliM2Z2KGssYS5kZWZhdWx0QXR0cmlidXRlVmFsdWVzW2hdKSl9fVcuZGlzYWJsZVVudXNlZEF0dHJpYnV0ZXMoKX1mdW5jdGlvbiBlKGEsYil7cmV0dXJuIGEub2JqZWN0LnJlbmRlck9yZGVyIT09Yi5vYmplY3QucmVuZGVyT3JkZXI/YS5vYmplY3QucmVuZGVyT3JkZXItYi5vYmplY3QucmVuZGVyT3JkZXI6YS5tYXRlcmlhbC5pZCE9PWIubWF0ZXJpYWwuaWQ/YS5tYXRlcmlhbC5pZC1iLm1hdGVyaWFsLmlkOmEueiE9PWIuej9hLnotYi56OmEuaWQtYi5pZH1mdW5jdGlvbiBmKGEsYil7cmV0dXJuIGEub2JqZWN0LnJlbmRlck9yZGVyIT09Yi5vYmplY3QucmVuZGVyT3JkZXI/YS5vYmplY3QucmVuZGVyT3JkZXItYi5vYmplY3QucmVuZGVyT3JkZXI6YS56IT09Yi56P2Iuei1hLno6YS5pZC1iLmlkfWZ1bmN0aW9uIGcoYSxcbmIpe3JldHVybiBiWzBdLWFbMF19ZnVuY3Rpb24gaChhKXtpZighMSE9PWEudmlzaWJsZSl7aWYoIShhIGluc3RhbmNlb2YgVEhSRUUuU2NlbmV8fGEgaW5zdGFuY2VvZiBUSFJFRS5Hcm91cCkpe3ZvaWQgMD09PWEuX193ZWJnbEluaXQmJihhLl9fd2ViZ2xJbml0PSEwLGEuX21vZGVsVmlld01hdHJpeD1uZXcgVEhSRUUuTWF0cml4NCxhLl9ub3JtYWxNYXRyaXg9bmV3IFRIUkVFLk1hdHJpeDMsYS5hZGRFdmVudExpc3RlbmVyKFwicmVtb3ZlZFwiLHdiKSk7dmFyIGM9YS5nZW9tZXRyeTtpZih2b2lkIDAhPT1jJiZ2b2lkIDA9PT1jLl9fd2ViZ2xJbml0KWlmKGMuX193ZWJnbEluaXQ9ITAsYy5hZGRFdmVudExpc3RlbmVyKFwiZGlzcG9zZVwiLGpiKSxjIGluc3RhbmNlb2YgVEhSRUUuQnVmZmVyR2VvbWV0cnkpQi5pbmZvLm1lbW9yeS5nZW9tZXRyaWVzKys7ZWxzZSBpZihhIGluc3RhbmNlb2YgVEhSRUUuTWVzaClxKGEsYyk7ZWxzZSBpZihhIGluc3RhbmNlb2YgVEhSRUUuTGluZSl7aWYodm9pZCAwPT09XG5jLl9fd2ViZ2xWZXJ0ZXhCdWZmZXIpe2MuX193ZWJnbFZlcnRleEJ1ZmZlcj1tLmNyZWF0ZUJ1ZmZlcigpO2MuX193ZWJnbENvbG9yQnVmZmVyPW0uY3JlYXRlQnVmZmVyKCk7Yy5fX3dlYmdsTGluZURpc3RhbmNlQnVmZmVyPW0uY3JlYXRlQnVmZmVyKCk7Qi5pbmZvLm1lbW9yeS5nZW9tZXRyaWVzKys7dmFyIGQ9Yy52ZXJ0aWNlcy5sZW5ndGg7Yy5fX3ZlcnRleEFycmF5PW5ldyBGbG9hdDMyQXJyYXkoMypkKTtjLl9fY29sb3JBcnJheT1uZXcgRmxvYXQzMkFycmF5KDMqZCk7Yy5fX2xpbmVEaXN0YW5jZUFycmF5PW5ldyBGbG9hdDMyQXJyYXkoMSpkKTtjLl9fd2ViZ2xMaW5lQ291bnQ9ZDtiKGEpO2MudmVydGljZXNOZWVkVXBkYXRlPSEwO2MuY29sb3JzTmVlZFVwZGF0ZT0hMDtjLmxpbmVEaXN0YW5jZXNOZWVkVXBkYXRlPSEwfX1lbHNlIGEgaW5zdGFuY2VvZiBUSFJFRS5Qb2ludENsb3VkJiZ2b2lkIDA9PT1jLl9fd2ViZ2xWZXJ0ZXhCdWZmZXImJihjLl9fd2ViZ2xWZXJ0ZXhCdWZmZXI9XG5tLmNyZWF0ZUJ1ZmZlcigpLGMuX193ZWJnbENvbG9yQnVmZmVyPW0uY3JlYXRlQnVmZmVyKCksQi5pbmZvLm1lbW9yeS5nZW9tZXRyaWVzKyssZD1jLnZlcnRpY2VzLmxlbmd0aCxjLl9fdmVydGV4QXJyYXk9bmV3IEZsb2F0MzJBcnJheSgzKmQpLGMuX19jb2xvckFycmF5PW5ldyBGbG9hdDMyQXJyYXkoMypkKSxjLl9fd2ViZ2xQYXJ0aWNsZUNvdW50PWQsYihhKSxjLnZlcnRpY2VzTmVlZFVwZGF0ZT0hMCxjLmNvbG9yc05lZWRVcGRhdGU9ITApO2lmKHZvaWQgMD09PWEuX193ZWJnbEFjdGl2ZSlpZihhLl9fd2ViZ2xBY3RpdmU9ITAsYSBpbnN0YW5jZW9mIFRIUkVFLk1lc2gpaWYoYyBpbnN0YW5jZW9mIFRIUkVFLkJ1ZmZlckdlb21ldHJ5KW4oYmEsYyxhKTtlbHNle2lmKGMgaW5zdGFuY2VvZiBUSFJFRS5HZW9tZXRyeSlmb3IodmFyIGM9VWFbYy5pZF0sZD0wLGU9Yy5sZW5ndGg7ZDxlO2QrKyluKGJhLGNbZF0sYSl9ZWxzZSBhIGluc3RhbmNlb2YgVEhSRUUuTGluZXx8YSBpbnN0YW5jZW9mXG5USFJFRS5Qb2ludENsb3VkP24oYmEsYyxhKTooYSBpbnN0YW5jZW9mIFRIUkVFLkltbWVkaWF0ZVJlbmRlck9iamVjdHx8YS5pbW1lZGlhdGVSZW5kZXJDYWxsYmFjaykmJnFhLnB1c2goe2lkOm51bGwsb2JqZWN0OmEsb3BhcXVlOm51bGwsdHJhbnNwYXJlbnQ6bnVsbCx6OjB9KTtpZihhIGluc3RhbmNlb2YgVEhSRUUuTGlnaHQpY2EucHVzaChhKTtlbHNlIGlmKGEgaW5zdGFuY2VvZiBUSFJFRS5TcHJpdGUpWGEucHVzaChhKTtlbHNlIGlmKGEgaW5zdGFuY2VvZiBUSFJFRS5MZW5zRmxhcmUpWWEucHVzaChhKTtlbHNlIGlmKChjPWJhW2EuaWRdKSYmKCExPT09YS5mcnVzdHVtQ3VsbGVkfHwhMD09PWNiLmludGVyc2VjdHNPYmplY3QoYSkpKWZvcihkPTAsZT1jLmxlbmd0aDtkPGU7ZCsrKXt2YXIgZj1jW2RdLGc9ZixrPWcub2JqZWN0LGw9Zy5idWZmZXIscD1rLmdlb21ldHJ5LGs9ay5tYXRlcmlhbDtrIGluc3RhbmNlb2YgVEhSRUUuTWVzaEZhY2VNYXRlcmlhbD8oaz1rLm1hdGVyaWFsc1twIGluc3RhbmNlb2ZcblRIUkVFLkJ1ZmZlckdlb21ldHJ5PzA6bC5tYXRlcmlhbEluZGV4XSxnLm1hdGVyaWFsPWssay50cmFuc3BhcmVudD9RYS5wdXNoKGcpOkthLnB1c2goZykpOmsmJihnLm1hdGVyaWFsPWssay50cmFuc3BhcmVudD9RYS5wdXNoKGcpOkthLnB1c2goZykpO2YucmVuZGVyPSEwOyEwPT09Qi5zb3J0T2JqZWN0cyYmKHdhLnNldEZyb21NYXRyaXhQb3NpdGlvbihhLm1hdHJpeFdvcmxkKSx3YS5hcHBseVByb2plY3Rpb24oZGIpLGYuej13YS56KX19ZD0wO2ZvcihlPWEuY2hpbGRyZW4ubGVuZ3RoO2Q8ZTtkKyspaChhLmNoaWxkcmVuW2RdKX19ZnVuY3Rpb24gayhhLGIsYyxkLGUpe2Zvcih2YXIgZixnPTAsaD1hLmxlbmd0aDtnPGg7ZysrKXtmPWFbZ107dmFyIGs9Zi5vYmplY3QsbT1mLmJ1ZmZlcjt3KGssYik7aWYoZSlmPWU7ZWxzZXtmPWYubWF0ZXJpYWw7aWYoIWYpY29udGludWU7dShmKX1CLnNldE1hdGVyaWFsRmFjZXMoZik7bSBpbnN0YW5jZW9mIFRIUkVFLkJ1ZmZlckdlb21ldHJ5P1xuQi5yZW5kZXJCdWZmZXJEaXJlY3QoYixjLGQsZixtLGspOkIucmVuZGVyQnVmZmVyKGIsYyxkLGYsbSxrKX19ZnVuY3Rpb24gbChhLGIsYyxkLGUsZil7Zm9yKHZhciBnLGg9MCxrPWEubGVuZ3RoO2g8aztoKyspe2c9YVtoXTt2YXIgbT1nLm9iamVjdDtpZihtLnZpc2libGUpe2lmKGYpZz1mO2Vsc2V7Zz1nW2JdO2lmKCFnKWNvbnRpbnVlO3UoZyl9Qi5yZW5kZXJJbW1lZGlhdGVPYmplY3QoYyxkLGUsZyxtKX19fWZ1bmN0aW9uIHAoYSl7dmFyIGI9YS5vYmplY3QubWF0ZXJpYWw7Yi50cmFuc3BhcmVudD8oYS50cmFuc3BhcmVudD1iLGEub3BhcXVlPW51bGwpOihhLm9wYXF1ZT1iLGEudHJhbnNwYXJlbnQ9bnVsbCl9ZnVuY3Rpb24gcShhLGIpe3ZhciBkPWEubWF0ZXJpYWwsZT0hMTtpZih2b2lkIDA9PT1VYVtiLmlkXXx8ITA9PT1iLmdyb3Vwc05lZWRVcGRhdGUpe2RlbGV0ZSBiYVthLmlkXTtmb3IodmFyIGY9VWEsZz1iLmlkLGQ9ZCBpbnN0YW5jZW9mIFRIUkVFLk1lc2hGYWNlTWF0ZXJpYWwsXG5oPWRhLmdldChcIk9FU19lbGVtZW50X2luZGV4X3VpbnRcIik/NDI5NDk2NzI5Njo2NTUzNSxrLGU9e30sbD1iLm1vcnBoVGFyZ2V0cy5sZW5ndGgscD1iLm1vcnBoTm9ybWFscy5sZW5ndGgscSxzPXt9LHQ9W10scj0wLHc9Yi5mYWNlcy5sZW5ndGg7cjx3O3IrKyl7az1iLmZhY2VzW3JdO3ZhciB1PWQ/ay5tYXRlcmlhbEluZGV4OjA7dSBpbiBlfHwoZVt1XT17aGFzaDp1LGNvdW50ZXI6MH0pO2s9ZVt1XS5oYXNoK1wiX1wiK2VbdV0uY291bnRlcjtrIGluIHN8fChxPXtpZDpRYisrLGZhY2VzMzpbXSxtYXRlcmlhbEluZGV4OnUsdmVydGljZXM6MCxudW1Nb3JwaFRhcmdldHM6bCxudW1Nb3JwaE5vcm1hbHM6cH0sc1trXT1xLHQucHVzaChxKSk7c1trXS52ZXJ0aWNlcyszPmgmJihlW3VdLmNvdW50ZXIrPTEsaz1lW3VdLmhhc2grXCJfXCIrZVt1XS5jb3VudGVyLGsgaW4gc3x8KHE9e2lkOlFiKyssZmFjZXMzOltdLG1hdGVyaWFsSW5kZXg6dSx2ZXJ0aWNlczowLG51bU1vcnBoVGFyZ2V0czpsLFxubnVtTW9ycGhOb3JtYWxzOnB9LHNba109cSx0LnB1c2gocSkpKTtzW2tdLmZhY2VzMy5wdXNoKHIpO3Nba10udmVydGljZXMrPTN9ZltnXT10O2IuZ3JvdXBzTmVlZFVwZGF0ZT0hMX1mPVVhW2IuaWRdO2c9MDtmb3IoZD1mLmxlbmd0aDtnPGQ7ZysrKXtoPWZbZ107aWYodm9pZCAwPT09aC5fX3dlYmdsVmVydGV4QnVmZmVyKXtlPWg7ZS5fX3dlYmdsVmVydGV4QnVmZmVyPW0uY3JlYXRlQnVmZmVyKCk7ZS5fX3dlYmdsTm9ybWFsQnVmZmVyPW0uY3JlYXRlQnVmZmVyKCk7ZS5fX3dlYmdsVGFuZ2VudEJ1ZmZlcj1tLmNyZWF0ZUJ1ZmZlcigpO2UuX193ZWJnbENvbG9yQnVmZmVyPW0uY3JlYXRlQnVmZmVyKCk7ZS5fX3dlYmdsVVZCdWZmZXI9bS5jcmVhdGVCdWZmZXIoKTtlLl9fd2ViZ2xVVjJCdWZmZXI9bS5jcmVhdGVCdWZmZXIoKTtlLl9fd2ViZ2xTa2luSW5kaWNlc0J1ZmZlcj1tLmNyZWF0ZUJ1ZmZlcigpO2UuX193ZWJnbFNraW5XZWlnaHRzQnVmZmVyPW0uY3JlYXRlQnVmZmVyKCk7XG5lLl9fd2ViZ2xGYWNlQnVmZmVyPW0uY3JlYXRlQnVmZmVyKCk7ZS5fX3dlYmdsTGluZUJ1ZmZlcj1tLmNyZWF0ZUJ1ZmZlcigpO2lmKHA9ZS5udW1Nb3JwaFRhcmdldHMpZm9yKGUuX193ZWJnbE1vcnBoVGFyZ2V0c0J1ZmZlcnM9W10sbD0wO2w8cDtsKyspZS5fX3dlYmdsTW9ycGhUYXJnZXRzQnVmZmVycy5wdXNoKG0uY3JlYXRlQnVmZmVyKCkpO2lmKHA9ZS5udW1Nb3JwaE5vcm1hbHMpZm9yKGUuX193ZWJnbE1vcnBoTm9ybWFsc0J1ZmZlcnM9W10sbD0wO2w8cDtsKyspZS5fX3dlYmdsTW9ycGhOb3JtYWxzQnVmZmVycy5wdXNoKG0uY3JlYXRlQnVmZmVyKCkpO0IuaW5mby5tZW1vcnkuZ2VvbWV0cmllcysrO2U9aDtyPWE7dz1yLmdlb21ldHJ5O3A9ZS5mYWNlczM7bD0zKnAubGVuZ3RoO3M9MSpwLmxlbmd0aDt0PTMqcC5sZW5ndGg7cD1jKHIsZSk7ZS5fX3ZlcnRleEFycmF5PW5ldyBGbG9hdDMyQXJyYXkoMypsKTtlLl9fbm9ybWFsQXJyYXk9bmV3IEZsb2F0MzJBcnJheSgzKmwpO1xuZS5fX2NvbG9yQXJyYXk9bmV3IEZsb2F0MzJBcnJheSgzKmwpO2UuX191dkFycmF5PW5ldyBGbG9hdDMyQXJyYXkoMipsKTsxPHcuZmFjZVZlcnRleFV2cy5sZW5ndGgmJihlLl9fdXYyQXJyYXk9bmV3IEZsb2F0MzJBcnJheSgyKmwpKTt3Lmhhc1RhbmdlbnRzJiYoZS5fX3RhbmdlbnRBcnJheT1uZXcgRmxvYXQzMkFycmF5KDQqbCkpO3IuZ2VvbWV0cnkuc2tpbldlaWdodHMubGVuZ3RoJiZyLmdlb21ldHJ5LnNraW5JbmRpY2VzLmxlbmd0aCYmKGUuX19za2luSW5kZXhBcnJheT1uZXcgRmxvYXQzMkFycmF5KDQqbCksZS5fX3NraW5XZWlnaHRBcnJheT1uZXcgRmxvYXQzMkFycmF5KDQqbCkpO3I9bnVsbCE9PWRhLmdldChcIk9FU19lbGVtZW50X2luZGV4X3VpbnRcIikmJjIxODQ1PHM/VWludDMyQXJyYXk6VWludDE2QXJyYXk7ZS5fX3R5cGVBcnJheT1yO2UuX19mYWNlQXJyYXk9bmV3IHIoMypzKTtlLl9fbGluZUFycmF5PW5ldyByKDIqdCk7aWYodz1lLm51bU1vcnBoVGFyZ2V0cylmb3IoZS5fX21vcnBoVGFyZ2V0c0FycmF5cz1cbltdLHI9MDtyPHc7cisrKWUuX19tb3JwaFRhcmdldHNBcnJheXMucHVzaChuZXcgRmxvYXQzMkFycmF5KDMqbCkpO2lmKHc9ZS5udW1Nb3JwaE5vcm1hbHMpZm9yKGUuX19tb3JwaE5vcm1hbHNBcnJheXM9W10scj0wO3I8dztyKyspZS5fX21vcnBoTm9ybWFsc0FycmF5cy5wdXNoKG5ldyBGbG9hdDMyQXJyYXkoMypsKSk7ZS5fX3dlYmdsRmFjZUNvdW50PTMqcztlLl9fd2ViZ2xMaW5lQ291bnQ9Mip0O2lmKHAuYXR0cmlidXRlcylmb3IocyBpbiB2b2lkIDA9PT1lLl9fd2ViZ2xDdXN0b21BdHRyaWJ1dGVzTGlzdCYmKGUuX193ZWJnbEN1c3RvbUF0dHJpYnV0ZXNMaXN0PVtdKSxzPXZvaWQgMCxwLmF0dHJpYnV0ZXMpe3ZhciB0PXAuYXR0cmlidXRlc1tzXSxyPXt9LHY7Zm9yKHYgaW4gdClyW3ZdPXRbdl07aWYoIXIuX193ZWJnbEluaXRpYWxpemVkfHxyLmNyZWF0ZVVuaXF1ZUJ1ZmZlcnMpci5fX3dlYmdsSW5pdGlhbGl6ZWQ9ITAsdz0xLFwidjJcIj09PXIudHlwZT93PTI6XCJ2M1wiPT09XG5yLnR5cGU/dz0zOlwidjRcIj09PXIudHlwZT93PTQ6XCJjXCI9PT1yLnR5cGUmJih3PTMpLHIuc2l6ZT13LHIuYXJyYXk9bmV3IEZsb2F0MzJBcnJheShsKncpLHIuYnVmZmVyPW0uY3JlYXRlQnVmZmVyKCksci5idWZmZXIuYmVsb25nc1RvQXR0cmlidXRlPXMsdC5uZWVkc1VwZGF0ZT0hMCxyLl9fb3JpZ2luYWw9dDtlLl9fd2ViZ2xDdXN0b21BdHRyaWJ1dGVzTGlzdC5wdXNoKHIpfWUuX19pbml0dGVkQXJyYXlzPSEwO2IudmVydGljZXNOZWVkVXBkYXRlPSEwO2IubW9ycGhUYXJnZXRzTmVlZFVwZGF0ZT0hMDtiLmVsZW1lbnRzTmVlZFVwZGF0ZT0hMDtiLnV2c05lZWRVcGRhdGU9ITA7Yi5ub3JtYWxzTmVlZFVwZGF0ZT0hMDtiLnRhbmdlbnRzTmVlZFVwZGF0ZT0hMDtlPWIuY29sb3JzTmVlZFVwZGF0ZT0hMH1lbHNlIGU9ITE7KGV8fHZvaWQgMD09PWEuX193ZWJnbEFjdGl2ZSkmJm4oYmEsaCxhKX1hLl9fd2ViZ2xBY3RpdmU9ITB9ZnVuY3Rpb24gbihhLGIsYyl7dmFyIGQ9Yy5pZDthW2RdPVxuYVtkXXx8W107YVtkXS5wdXNoKHtpZDpkLGJ1ZmZlcjpiLG9iamVjdDpjLG1hdGVyaWFsOm51bGwsejowfSl9ZnVuY3Rpb24gdChhKXt2YXIgYj1hLmdlb21ldHJ5O2lmKGIgaW5zdGFuY2VvZiBUSFJFRS5CdWZmZXJHZW9tZXRyeSlmb3IodmFyIGQ9Yi5hdHRyaWJ1dGVzLGU9Yi5hdHRyaWJ1dGVzS2V5cyxmPTAsZz1lLmxlbmd0aDtmPGc7ZisrKXt2YXIgaD1lW2ZdLGs9ZFtoXSxuPVwiaW5kZXhcIj09PWg/bS5FTEVNRU5UX0FSUkFZX0JVRkZFUjptLkFSUkFZX0JVRkZFUjt2b2lkIDA9PT1rLmJ1ZmZlcj8oay5idWZmZXI9bS5jcmVhdGVCdWZmZXIoKSxtLmJpbmRCdWZmZXIobixrLmJ1ZmZlciksbS5idWZmZXJEYXRhKG4say5hcnJheSxrIGluc3RhbmNlb2YgVEhSRUUuRHluYW1pY0J1ZmZlckF0dHJpYnV0ZT9tLkRZTkFNSUNfRFJBVzptLlNUQVRJQ19EUkFXKSxrLm5lZWRzVXBkYXRlPSExKTohMD09PWsubmVlZHNVcGRhdGUmJihtLmJpbmRCdWZmZXIobixrLmJ1ZmZlciksdm9pZCAwPT09XG5rLnVwZGF0ZVJhbmdlfHwtMT09PWsudXBkYXRlUmFuZ2UuY291bnQ/bS5idWZmZXJTdWJEYXRhKG4sMCxrLmFycmF5KTowPT09ay51cGRhdGVSYW5nZS5jb3VudD9jb25zb2xlLmVycm9yKFwiVEhSRUUuV2ViR0xSZW5kZXJlci51cGRhdGVPYmplY3Q6IHVzaW5nIHVwZGF0ZVJhbmdlIGZvciBUSFJFRS5EeW5hbWljQnVmZmVyQXR0cmlidXRlIGFuZCBtYXJrZWQgYXMgbmVlZHNVcGRhdGUgYnV0IGNvdW50IGlzIDAsIGVuc3VyZSB5b3UgYXJlIHVzaW5nIHNldCBtZXRob2RzIG9yIHVwZGF0aW5nIG1hbnVhbGx5LlwiKToobS5idWZmZXJTdWJEYXRhKG4say51cGRhdGVSYW5nZS5vZmZzZXQqay5hcnJheS5CWVRFU19QRVJfRUxFTUVOVCxrLmFycmF5LnN1YmFycmF5KGsudXBkYXRlUmFuZ2Uub2Zmc2V0LGsudXBkYXRlUmFuZ2Uub2Zmc2V0K2sudXBkYXRlUmFuZ2UuY291bnQpKSxrLnVwZGF0ZVJhbmdlLmNvdW50PTApLGsubmVlZHNVcGRhdGU9ITEpfWVsc2UgaWYoYSBpbnN0YW5jZW9mIFRIUkVFLk1lc2gpeyEwPT09XG5iLmdyb3Vwc05lZWRVcGRhdGUmJnEoYSxiKTtmb3IodmFyIGw9VWFbYi5pZF0sZj0wLHA9bC5sZW5ndGg7ZjxwO2YrKyl7dmFyIHQ9bFtmXSx3PWMoYSx0KSx1PXcuYXR0cmlidXRlcyYmcih3KTtpZihiLnZlcnRpY2VzTmVlZFVwZGF0ZXx8Yi5tb3JwaFRhcmdldHNOZWVkVXBkYXRlfHxiLmVsZW1lbnRzTmVlZFVwZGF0ZXx8Yi51dnNOZWVkVXBkYXRlfHxiLm5vcm1hbHNOZWVkVXBkYXRlfHxiLmNvbG9yc05lZWRVcGRhdGV8fGIudGFuZ2VudHNOZWVkVXBkYXRlfHx1KXt2YXIgdj10LHg9YSxEPW0uRFlOQU1JQ19EUkFXLEE9IWIuZHluYW1pYyxFPXc7aWYodi5fX2luaXR0ZWRBcnJheXMpe3ZhciBHPSExPT09RSBpbnN0YW5jZW9mIFRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsJiZFLnNoYWRpbmc9PT1USFJFRS5GbGF0U2hhZGluZyx5PXZvaWQgMCx6PXZvaWQgMCxGPXZvaWQgMCxCPXZvaWQgMCxJPXZvaWQgMCxIPXZvaWQgMCxNPXZvaWQgMCxSPXZvaWQgMCxQPXZvaWQgMCxVPXZvaWQgMCxcbk89dm9pZCAwLEo9dm9pZCAwLEw9dm9pZCAwLE49dm9pZCAwLEthPXZvaWQgMCxWPXZvaWQgMCxXPXZvaWQgMCxRYT12b2lkIDAsWWE9dm9pZCAwLFhhPXZvaWQgMCxkYT12b2lkIDAsYmE9dm9pZCAwLGphPXZvaWQgMCxQYT12b2lkIDAsa2E9dm9pZCAwLFE9dm9pZCAwLGhhPXZvaWQgMCxpYT12b2lkIDAsb2I9dm9pZCAwLFk9dm9pZCAwLHViPXZvaWQgMCxwYT12b2lkIDAsYWI9dm9pZCAwLG9hPXZvaWQgMCxjYT12b2lkIDAscWE9dm9pZCAwLENhPXZvaWQgMCx0YT12b2lkIDAsbmE9dm9pZCAwLHdhPXZvaWQgMCxMYT0wLE1hPTAsa2I9MCx5Yj0wLHpiPTAsUmE9MCxBYT0wLGViPTAsSGE9MCxsYT0wLHJhPTAsSz0wLHphPXZvaWQgMCxTYT12Ll9fdmVydGV4QXJyYXksQWI9di5fX3V2QXJyYXksbGI9di5fX3V2MkFycmF5LE5hPXYuX19ub3JtYWxBcnJheSxzYT12Ll9fdGFuZ2VudEFycmF5LERhPXYuX19jb2xvckFycmF5LEVhPXYuX19za2luSW5kZXhBcnJheSxGYT12Ll9fc2tpbldlaWdodEFycmF5LFxuR2I9di5fX21vcnBoVGFyZ2V0c0FycmF5cyxCYj12Ll9fbW9ycGhOb3JtYWxzQXJyYXlzLG1iPXYuX193ZWJnbEN1c3RvbUF0dHJpYnV0ZXNMaXN0LEM9dm9pZCAwLFZhPXYuX19mYWNlQXJyYXksVGE9di5fX2xpbmVBcnJheSxlYT14Lmdlb21ldHJ5LGZiPWVhLmVsZW1lbnRzTmVlZFVwZGF0ZSx2Yj1lYS51dnNOZWVkVXBkYXRlLE1iPWVhLm5vcm1hbHNOZWVkVXBkYXRlLE9iPWVhLnRhbmdlbnRzTmVlZFVwZGF0ZSxpYj1lYS5jb2xvcnNOZWVkVXBkYXRlLHNiPWVhLm1vcnBoVGFyZ2V0c05lZWRVcGRhdGUsQ2I9ZWEudmVydGljZXMsJD12LmZhY2VzMyx4YT1lYS5mYWNlcyxIYj1lYS5mYWNlVmVydGV4VXZzWzBdLE9hPWVhLmZhY2VWZXJ0ZXhVdnNbMV0sJGE9ZWEuc2tpbkluZGljZXMsR2E9ZWEuc2tpbldlaWdodHMsbmI9ZWEubW9ycGhUYXJnZXRzLGJiPWVhLm1vcnBoTm9ybWFscztpZihlYS52ZXJ0aWNlc05lZWRVcGRhdGUpe3k9MDtmb3Ioej0kLmxlbmd0aDt5PHo7eSsrKUI9XG54YVskW3ldXSxKPUNiW0IuYV0sTD1DYltCLmJdLE49Q2JbQi5jXSxTYVtNYV09Si54LFNhW01hKzFdPUoueSxTYVtNYSsyXT1KLnosU2FbTWErM109TC54LFNhW01hKzRdPUwueSxTYVtNYSs1XT1MLnosU2FbTWErNl09Ti54LFNhW01hKzddPU4ueSxTYVtNYSs4XT1OLnosTWErPTk7bS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLHYuX193ZWJnbFZlcnRleEJ1ZmZlcik7bS5idWZmZXJEYXRhKG0uQVJSQVlfQlVGRkVSLFNhLEQpfWlmKHNiKWZvcihjYT0wLHFhPW5iLmxlbmd0aDtjYTxxYTtjYSsrKXt5PXJhPTA7Zm9yKHo9JC5sZW5ndGg7eTx6O3krKyluYT0kW3ldLEI9eGFbbmFdLEo9bmJbY2FdLnZlcnRpY2VzW0IuYV0sTD1uYltjYV0udmVydGljZXNbQi5iXSxOPW5iW2NhXS52ZXJ0aWNlc1tCLmNdLENhPUdiW2NhXSxDYVtyYV09Si54LENhW3JhKzFdPUoueSxDYVtyYSsyXT1KLnosQ2FbcmErM109TC54LENhW3JhKzRdPUwueSxDYVtyYSs1XT1MLnosQ2FbcmErNl09Ti54LENhW3JhK1xuN109Ti55LENhW3JhKzhdPU4ueixFLm1vcnBoTm9ybWFscyYmKEc/WGE9WWE9UWE9YmJbY2FdLmZhY2VOb3JtYWxzW25hXTood2E9YmJbY2FdLnZlcnRleE5vcm1hbHNbbmFdLFFhPXdhLmEsWWE9d2EuYixYYT13YS5jKSx0YT1CYltjYV0sdGFbcmFdPVFhLngsdGFbcmErMV09UWEueSx0YVtyYSsyXT1RYS56LHRhW3JhKzNdPVlhLngsdGFbcmErNF09WWEueSx0YVtyYSs1XT1ZYS56LHRhW3JhKzZdPVhhLngsdGFbcmErN109WGEueSx0YVtyYSs4XT1YYS56KSxyYSs9OTttLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsdi5fX3dlYmdsTW9ycGhUYXJnZXRzQnVmZmVyc1tjYV0pO20uYnVmZmVyRGF0YShtLkFSUkFZX0JVRkZFUixHYltjYV0sRCk7RS5tb3JwaE5vcm1hbHMmJihtLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsdi5fX3dlYmdsTW9ycGhOb3JtYWxzQnVmZmVyc1tjYV0pLG0uYnVmZmVyRGF0YShtLkFSUkFZX0JVRkZFUixCYltjYV0sRCkpfWlmKEdhLmxlbmd0aCl7eT0wO1xuZm9yKHo9JC5sZW5ndGg7eTx6O3krKylCPXhhWyRbeV1dLFBhPUdhW0IuYV0sa2E9R2FbQi5iXSxRPUdhW0IuY10sRmFbbGFdPVBhLngsRmFbbGErMV09UGEueSxGYVtsYSsyXT1QYS56LEZhW2xhKzNdPVBhLncsRmFbbGErNF09a2EueCxGYVtsYSs1XT1rYS55LEZhW2xhKzZdPWthLnosRmFbbGErN109a2EudyxGYVtsYSs4XT1RLngsRmFbbGErOV09US55LEZhW2xhKzEwXT1RLnosRmFbbGErMTFdPVEudyxoYT0kYVtCLmFdLGlhPSRhW0IuYl0sb2I9JGFbQi5jXSxFYVtsYV09aGEueCxFYVtsYSsxXT1oYS55LEVhW2xhKzJdPWhhLnosRWFbbGErM109aGEudyxFYVtsYSs0XT1pYS54LEVhW2xhKzVdPWlhLnksRWFbbGErNl09aWEueixFYVtsYSs3XT1pYS53LEVhW2xhKzhdPW9iLngsRWFbbGErOV09b2IueSxFYVtsYSsxMF09b2IueixFYVtsYSsxMV09b2IudyxsYSs9MTI7MDxsYSYmKG0uYmluZEJ1ZmZlcihtLkFSUkFZX0JVRkZFUix2Ll9fd2ViZ2xTa2luSW5kaWNlc0J1ZmZlciksXG5tLmJ1ZmZlckRhdGEobS5BUlJBWV9CVUZGRVIsRWEsRCksbS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLHYuX193ZWJnbFNraW5XZWlnaHRzQnVmZmVyKSxtLmJ1ZmZlckRhdGEobS5BUlJBWV9CVUZGRVIsRmEsRCkpfWlmKGliKXt5PTA7Zm9yKHo9JC5sZW5ndGg7eTx6O3krKylCPXhhWyRbeV1dLE09Qi52ZXJ0ZXhDb2xvcnMsUj1CLmNvbG9yLDM9PT1NLmxlbmd0aCYmRS52ZXJ0ZXhDb2xvcnM9PT1USFJFRS5WZXJ0ZXhDb2xvcnM/KGRhPU1bMF0sYmE9TVsxXSxqYT1NWzJdKTpqYT1iYT1kYT1SLERhW0hhXT1kYS5yLERhW0hhKzFdPWRhLmcsRGFbSGErMl09ZGEuYixEYVtIYSszXT1iYS5yLERhW0hhKzRdPWJhLmcsRGFbSGErNV09YmEuYixEYVtIYSs2XT1qYS5yLERhW0hhKzddPWphLmcsRGFbSGErOF09amEuYixIYSs9OTswPEhhJiYobS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLHYuX193ZWJnbENvbG9yQnVmZmVyKSxtLmJ1ZmZlckRhdGEobS5BUlJBWV9CVUZGRVIsRGEsXG5EKSl9aWYoT2ImJmVhLmhhc1RhbmdlbnRzKXt5PTA7Zm9yKHo9JC5sZW5ndGg7eTx6O3krKylCPXhhWyRbeV1dLFA9Qi52ZXJ0ZXhUYW5nZW50cyxLYT1QWzBdLFY9UFsxXSxXPVBbMl0sc2FbQWFdPUthLngsc2FbQWErMV09S2EueSxzYVtBYSsyXT1LYS56LHNhW0FhKzNdPUthLncsc2FbQWErNF09Vi54LHNhW0FhKzVdPVYueSxzYVtBYSs2XT1WLnosc2FbQWErN109Vi53LHNhW0FhKzhdPVcueCxzYVtBYSs5XT1XLnksc2FbQWErMTBdPVcueixzYVtBYSsxMV09Vy53LEFhKz0xMjttLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsdi5fX3dlYmdsVGFuZ2VudEJ1ZmZlcik7bS5idWZmZXJEYXRhKG0uQVJSQVlfQlVGRkVSLHNhLEQpfWlmKE1iKXt5PTA7Zm9yKHo9JC5sZW5ndGg7eTx6O3krKylpZihCPXhhWyRbeV1dLEk9Qi52ZXJ0ZXhOb3JtYWxzLEg9Qi5ub3JtYWwsMz09PUkubGVuZ3RoJiYhMT09PUcpZm9yKFk9MDszPlk7WSsrKXBhPUlbWV0sTmFbUmFdPXBhLngsTmFbUmErMV09XG5wYS55LE5hW1JhKzJdPXBhLnosUmErPTM7ZWxzZSBmb3IoWT0wOzM+WTtZKyspTmFbUmFdPUgueCxOYVtSYSsxXT1ILnksTmFbUmErMl09SC56LFJhKz0zO20uYmluZEJ1ZmZlcihtLkFSUkFZX0JVRkZFUix2Ll9fd2ViZ2xOb3JtYWxCdWZmZXIpO20uYnVmZmVyRGF0YShtLkFSUkFZX0JVRkZFUixOYSxEKX1pZih2YiYmSGIpe3k9MDtmb3Ioej0kLmxlbmd0aDt5PHo7eSsrKWlmKEY9JFt5XSxVPUhiW0ZdLHZvaWQgMCE9PVUpZm9yKFk9MDszPlk7WSsrKWFiPVVbWV0sQWJba2JdPWFiLngsQWJba2IrMV09YWIueSxrYis9MjswPGtiJiYobS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLHYuX193ZWJnbFVWQnVmZmVyKSxtLmJ1ZmZlckRhdGEobS5BUlJBWV9CVUZGRVIsQWIsRCkpfWlmKHZiJiZPYSl7eT0wO2Zvcih6PSQubGVuZ3RoO3k8ejt5KyspaWYoRj0kW3ldLE89T2FbRl0sdm9pZCAwIT09Tylmb3IoWT0wOzM+WTtZKyspb2E9T1tZXSxsYlt5Yl09b2EueCxsYlt5YisxXT1vYS55LFxueWIrPTI7MDx5YiYmKG0uYmluZEJ1ZmZlcihtLkFSUkFZX0JVRkZFUix2Ll9fd2ViZ2xVVjJCdWZmZXIpLG0uYnVmZmVyRGF0YShtLkFSUkFZX0JVRkZFUixsYixEKSl9aWYoZmIpe3k9MDtmb3Ioej0kLmxlbmd0aDt5PHo7eSsrKVZhW3piXT1MYSxWYVt6YisxXT1MYSsxLFZhW3piKzJdPUxhKzIsemIrPTMsVGFbZWJdPUxhLFRhW2ViKzFdPUxhKzEsVGFbZWIrMl09TGEsVGFbZWIrM109TGErMixUYVtlYis0XT1MYSsxLFRhW2ViKzVdPUxhKzIsZWIrPTYsTGErPTM7bS5iaW5kQnVmZmVyKG0uRUxFTUVOVF9BUlJBWV9CVUZGRVIsdi5fX3dlYmdsRmFjZUJ1ZmZlcik7bS5idWZmZXJEYXRhKG0uRUxFTUVOVF9BUlJBWV9CVUZGRVIsVmEsRCk7bS5iaW5kQnVmZmVyKG0uRUxFTUVOVF9BUlJBWV9CVUZGRVIsdi5fX3dlYmdsTGluZUJ1ZmZlcik7bS5idWZmZXJEYXRhKG0uRUxFTUVOVF9BUlJBWV9CVUZGRVIsVGEsRCl9aWYobWIpZm9yKFk9MCx1Yj1tYi5sZW5ndGg7WTx1YjtZKyspaWYoQz1cbm1iW1ldLEMuX19vcmlnaW5hbC5uZWVkc1VwZGF0ZSl7Sz0wO2lmKDE9PT1DLnNpemUpaWYodm9pZCAwPT09Qy5ib3VuZFRvfHxcInZlcnRpY2VzXCI9PT1DLmJvdW5kVG8pZm9yKHk9MCx6PSQubGVuZ3RoO3k8ejt5KyspQj14YVskW3ldXSxDLmFycmF5W0tdPUMudmFsdWVbQi5hXSxDLmFycmF5W0srMV09Qy52YWx1ZVtCLmJdLEMuYXJyYXlbSysyXT1DLnZhbHVlW0IuY10sSys9MztlbHNle2lmKFwiZmFjZXNcIj09PUMuYm91bmRUbylmb3IoeT0wLHo9JC5sZW5ndGg7eTx6O3krKyl6YT1DLnZhbHVlWyRbeV1dLEMuYXJyYXlbS109emEsQy5hcnJheVtLKzFdPXphLEMuYXJyYXlbSysyXT16YSxLKz0zfWVsc2UgaWYoMj09PUMuc2l6ZSlpZih2b2lkIDA9PT1DLmJvdW5kVG98fFwidmVydGljZXNcIj09PUMuYm91bmRUbylmb3IoeT0wLHo9JC5sZW5ndGg7eTx6O3krKylCPXhhWyRbeV1dLEo9Qy52YWx1ZVtCLmFdLEw9Qy52YWx1ZVtCLmJdLE49Qy52YWx1ZVtCLmNdLEMuYXJyYXlbS109Si54LFxuQy5hcnJheVtLKzFdPUoueSxDLmFycmF5W0srMl09TC54LEMuYXJyYXlbSyszXT1MLnksQy5hcnJheVtLKzRdPU4ueCxDLmFycmF5W0srNV09Ti55LEsrPTY7ZWxzZXtpZihcImZhY2VzXCI9PT1DLmJvdW5kVG8pZm9yKHk9MCx6PSQubGVuZ3RoO3k8ejt5KyspTj1MPUo9emE9Qy52YWx1ZVskW3ldXSxDLmFycmF5W0tdPUoueCxDLmFycmF5W0srMV09Si55LEMuYXJyYXlbSysyXT1MLngsQy5hcnJheVtLKzNdPUwueSxDLmFycmF5W0srNF09Ti54LEMuYXJyYXlbSys1XT1OLnksSys9Nn1lbHNlIGlmKDM9PT1DLnNpemUpe3ZhciBUO1Q9XCJjXCI9PT1DLnR5cGU/W1wiclwiLFwiZ1wiLFwiYlwiXTpbXCJ4XCIsXCJ5XCIsXCJ6XCJdO2lmKHZvaWQgMD09PUMuYm91bmRUb3x8XCJ2ZXJ0aWNlc1wiPT09Qy5ib3VuZFRvKWZvcih5PTAsej0kLmxlbmd0aDt5PHo7eSsrKUI9eGFbJFt5XV0sSj1DLnZhbHVlW0IuYV0sTD1DLnZhbHVlW0IuYl0sTj1DLnZhbHVlW0IuY10sQy5hcnJheVtLXT1KW1RbMF1dLEMuYXJyYXlbSysxXT1cbkpbVFsxXV0sQy5hcnJheVtLKzJdPUpbVFsyXV0sQy5hcnJheVtLKzNdPUxbVFswXV0sQy5hcnJheVtLKzRdPUxbVFsxXV0sQy5hcnJheVtLKzVdPUxbVFsyXV0sQy5hcnJheVtLKzZdPU5bVFswXV0sQy5hcnJheVtLKzddPU5bVFsxXV0sQy5hcnJheVtLKzhdPU5bVFsyXV0sSys9OTtlbHNlIGlmKFwiZmFjZXNcIj09PUMuYm91bmRUbylmb3IoeT0wLHo9JC5sZW5ndGg7eTx6O3krKylOPUw9Sj16YT1DLnZhbHVlWyRbeV1dLEMuYXJyYXlbS109SltUWzBdXSxDLmFycmF5W0srMV09SltUWzFdXSxDLmFycmF5W0srMl09SltUWzJdXSxDLmFycmF5W0srM109TFtUWzBdXSxDLmFycmF5W0srNF09TFtUWzFdXSxDLmFycmF5W0srNV09TFtUWzJdXSxDLmFycmF5W0srNl09TltUWzBdXSxDLmFycmF5W0srN109TltUWzFdXSxDLmFycmF5W0srOF09TltUWzJdXSxLKz05O2Vsc2UgaWYoXCJmYWNlVmVydGljZXNcIj09PUMuYm91bmRUbylmb3IoeT0wLHo9JC5sZW5ndGg7eTx6O3krKyl6YT1DLnZhbHVlWyRbeV1dLFxuSj16YVswXSxMPXphWzFdLE49emFbMl0sQy5hcnJheVtLXT1KW1RbMF1dLEMuYXJyYXlbSysxXT1KW1RbMV1dLEMuYXJyYXlbSysyXT1KW1RbMl1dLEMuYXJyYXlbSyszXT1MW1RbMF1dLEMuYXJyYXlbSys0XT1MW1RbMV1dLEMuYXJyYXlbSys1XT1MW1RbMl1dLEMuYXJyYXlbSys2XT1OW1RbMF1dLEMuYXJyYXlbSys3XT1OW1RbMV1dLEMuYXJyYXlbSys4XT1OW1RbMl1dLEsrPTl9ZWxzZSBpZig0PT09Qy5zaXplKWlmKHZvaWQgMD09PUMuYm91bmRUb3x8XCJ2ZXJ0aWNlc1wiPT09Qy5ib3VuZFRvKWZvcih5PTAsej0kLmxlbmd0aDt5PHo7eSsrKUI9eGFbJFt5XV0sSj1DLnZhbHVlW0IuYV0sTD1DLnZhbHVlW0IuYl0sTj1DLnZhbHVlW0IuY10sQy5hcnJheVtLXT1KLngsQy5hcnJheVtLKzFdPUoueSxDLmFycmF5W0srMl09Si56LEMuYXJyYXlbSyszXT1KLncsQy5hcnJheVtLKzRdPUwueCxDLmFycmF5W0srNV09TC55LEMuYXJyYXlbSys2XT1MLnosQy5hcnJheVtLKzddPUwudyxDLmFycmF5W0srXG44XT1OLngsQy5hcnJheVtLKzldPU4ueSxDLmFycmF5W0srMTBdPU4ueixDLmFycmF5W0srMTFdPU4udyxLKz0xMjtlbHNlIGlmKFwiZmFjZXNcIj09PUMuYm91bmRUbylmb3IoeT0wLHo9JC5sZW5ndGg7eTx6O3krKylOPUw9Sj16YT1DLnZhbHVlWyRbeV1dLEMuYXJyYXlbS109Si54LEMuYXJyYXlbSysxXT1KLnksQy5hcnJheVtLKzJdPUoueixDLmFycmF5W0srM109Si53LEMuYXJyYXlbSys0XT1MLngsQy5hcnJheVtLKzVdPUwueSxDLmFycmF5W0srNl09TC56LEMuYXJyYXlbSys3XT1MLncsQy5hcnJheVtLKzhdPU4ueCxDLmFycmF5W0srOV09Ti55LEMuYXJyYXlbSysxMF09Ti56LEMuYXJyYXlbSysxMV09Ti53LEsrPTEyO2Vsc2UgaWYoXCJmYWNlVmVydGljZXNcIj09PUMuYm91bmRUbylmb3IoeT0wLHo9JC5sZW5ndGg7eTx6O3krKyl6YT1DLnZhbHVlWyRbeV1dLEo9emFbMF0sTD16YVsxXSxOPXphWzJdLEMuYXJyYXlbS109Si54LEMuYXJyYXlbSysxXT1KLnksQy5hcnJheVtLKzJdPVxuSi56LEMuYXJyYXlbSyszXT1KLncsQy5hcnJheVtLKzRdPUwueCxDLmFycmF5W0srNV09TC55LEMuYXJyYXlbSys2XT1MLnosQy5hcnJheVtLKzddPUwudyxDLmFycmF5W0srOF09Ti54LEMuYXJyYXlbSys5XT1OLnksQy5hcnJheVtLKzEwXT1OLnosQy5hcnJheVtLKzExXT1OLncsSys9MTI7bS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLEMuYnVmZmVyKTttLmJ1ZmZlckRhdGEobS5BUlJBWV9CVUZGRVIsQy5hcnJheSxEKX1BJiYoZGVsZXRlIHYuX19pbml0dGVkQXJyYXlzLGRlbGV0ZSB2Ll9fY29sb3JBcnJheSxkZWxldGUgdi5fX25vcm1hbEFycmF5LGRlbGV0ZSB2Ll9fdGFuZ2VudEFycmF5LGRlbGV0ZSB2Ll9fdXZBcnJheSxkZWxldGUgdi5fX3V2MkFycmF5LGRlbGV0ZSB2Ll9fZmFjZUFycmF5LGRlbGV0ZSB2Ll9fdmVydGV4QXJyYXksZGVsZXRlIHYuX19saW5lQXJyYXksZGVsZXRlIHYuX19za2luSW5kZXhBcnJheSxkZWxldGUgdi5fX3NraW5XZWlnaHRBcnJheSl9fX1iLnZlcnRpY2VzTmVlZFVwZGF0ZT1cbiExO2IubW9ycGhUYXJnZXRzTmVlZFVwZGF0ZT0hMTtiLmVsZW1lbnRzTmVlZFVwZGF0ZT0hMTtiLnV2c05lZWRVcGRhdGU9ITE7Yi5ub3JtYWxzTmVlZFVwZGF0ZT0hMTtiLmNvbG9yc05lZWRVcGRhdGU9ITE7Yi50YW5nZW50c05lZWRVcGRhdGU9ITE7dy5hdHRyaWJ1dGVzJiZzKHcpfWVsc2UgaWYoYSBpbnN0YW5jZW9mIFRIUkVFLkxpbmUpe3c9YyhhLGIpO3U9dy5hdHRyaWJ1dGVzJiZyKHcpO2lmKGIudmVydGljZXNOZWVkVXBkYXRlfHxiLmNvbG9yc05lZWRVcGRhdGV8fGIubGluZURpc3RhbmNlc05lZWRVcGRhdGV8fHUpe3ZhciBEYj1tLkRZTkFNSUNfRFJBVyxTLGFhLFosQmEsWCxFYixSYj1iLnZlcnRpY2VzLEliPWIuY29sb3JzLGdiPWIubGluZURpc3RhbmNlcyx5YT1SYi5sZW5ndGgscGI9SWIubGVuZ3RoLHFiPWdiLmxlbmd0aCxXYT1iLl9fdmVydGV4QXJyYXksdGI9Yi5fX2NvbG9yQXJyYXksaGI9Yi5fX2xpbmVEaXN0YW5jZUFycmF5LCRiPWIuY29sb3JzTmVlZFVwZGF0ZSxcbkZiPWIubGluZURpc3RhbmNlc05lZWRVcGRhdGUsU2I9Yi5fX3dlYmdsQ3VzdG9tQXR0cmlidXRlc0xpc3QsSmIsY2IsdWEsS2IsSWEsZmE7aWYoYi52ZXJ0aWNlc05lZWRVcGRhdGUpe2ZvcihTPTA7Uzx5YTtTKyspQmE9UmJbU10sWD0zKlMsV2FbWF09QmEueCxXYVtYKzFdPUJhLnksV2FbWCsyXT1CYS56O20uYmluZEJ1ZmZlcihtLkFSUkFZX0JVRkZFUixiLl9fd2ViZ2xWZXJ0ZXhCdWZmZXIpO20uYnVmZmVyRGF0YShtLkFSUkFZX0JVRkZFUixXYSxEYil9aWYoJGIpe2ZvcihhYT0wO2FhPHBiO2FhKyspRWI9SWJbYWFdLFg9MyphYSx0YltYXT1FYi5yLHRiW1grMV09RWIuZyx0YltYKzJdPUViLmI7bS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLGIuX193ZWJnbENvbG9yQnVmZmVyKTttLmJ1ZmZlckRhdGEobS5BUlJBWV9CVUZGRVIsdGIsRGIpfWlmKEZiKXtmb3IoWj0wO1o8cWI7WisrKWhiW1pdPWdiW1pdO20uYmluZEJ1ZmZlcihtLkFSUkFZX0JVRkZFUixiLl9fd2ViZ2xMaW5lRGlzdGFuY2VCdWZmZXIpO1xubS5idWZmZXJEYXRhKG0uQVJSQVlfQlVGRkVSLGhiLERiKX1pZihTYilmb3IoSmI9MCxjYj1TYi5sZW5ndGg7SmI8Y2I7SmIrKylpZihmYT1TYltKYl0sZmEubmVlZHNVcGRhdGUmJih2b2lkIDA9PT1mYS5ib3VuZFRvfHxcInZlcnRpY2VzXCI9PT1mYS5ib3VuZFRvKSl7WD0wO0tiPWZhLnZhbHVlLmxlbmd0aDtpZigxPT09ZmEuc2l6ZSlmb3IodWE9MDt1YTxLYjt1YSsrKWZhLmFycmF5W3VhXT1mYS52YWx1ZVt1YV07ZWxzZSBpZigyPT09ZmEuc2l6ZSlmb3IodWE9MDt1YTxLYjt1YSsrKUlhPWZhLnZhbHVlW3VhXSxmYS5hcnJheVtYXT1JYS54LGZhLmFycmF5W1grMV09SWEueSxYKz0yO2Vsc2UgaWYoMz09PWZhLnNpemUpaWYoXCJjXCI9PT1mYS50eXBlKWZvcih1YT0wO3VhPEtiO3VhKyspSWE9ZmEudmFsdWVbdWFdLGZhLmFycmF5W1hdPUlhLnIsZmEuYXJyYXlbWCsxXT1JYS5nLGZhLmFycmF5W1grMl09SWEuYixYKz0zO2Vsc2UgZm9yKHVhPTA7dWE8S2I7dWErKylJYT1mYS52YWx1ZVt1YV0sXG5mYS5hcnJheVtYXT1JYS54LGZhLmFycmF5W1grMV09SWEueSxmYS5hcnJheVtYKzJdPUlhLnosWCs9MztlbHNlIGlmKDQ9PT1mYS5zaXplKWZvcih1YT0wO3VhPEtiO3VhKyspSWE9ZmEudmFsdWVbdWFdLGZhLmFycmF5W1hdPUlhLngsZmEuYXJyYXlbWCsxXT1JYS55LGZhLmFycmF5W1grMl09SWEueixmYS5hcnJheVtYKzNdPUlhLncsWCs9NDttLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsZmEuYnVmZmVyKTttLmJ1ZmZlckRhdGEobS5BUlJBWV9CVUZGRVIsZmEuYXJyYXksRGIpO2ZhLm5lZWRzVXBkYXRlPSExfX1iLnZlcnRpY2VzTmVlZFVwZGF0ZT0hMTtiLmNvbG9yc05lZWRVcGRhdGU9ITE7Yi5saW5lRGlzdGFuY2VzTmVlZFVwZGF0ZT0hMTt3LmF0dHJpYnV0ZXMmJnModyl9ZWxzZSBpZihhIGluc3RhbmNlb2YgVEhSRUUuUG9pbnRDbG91ZCl7dz1jKGEsYik7dT13LmF0dHJpYnV0ZXMmJnIodyk7aWYoYi52ZXJ0aWNlc05lZWRVcGRhdGV8fGIuY29sb3JzTmVlZFVwZGF0ZXx8XG51KXt2YXIgZGI9bS5EWU5BTUlDX0RSQVcsVGIsVWIsYWMsbWEsYmMsTmI9Yi52ZXJ0aWNlcyxWYj1OYi5sZW5ndGgsUGI9Yi5jb2xvcnMscmI9UGIubGVuZ3RoLGNjPWIuX192ZXJ0ZXhBcnJheSxkYz1iLl9fY29sb3JBcnJheSx3Yj1iLmNvbG9yc05lZWRVcGRhdGUsZ2M9Yi5fX3dlYmdsQ3VzdG9tQXR0cmlidXRlc0xpc3QsZWMsamIsdmEsTGIsSmEsZ2E7aWYoYi52ZXJ0aWNlc05lZWRVcGRhdGUpe2ZvcihUYj0wO1RiPFZiO1RiKyspYWM9TmJbVGJdLG1hPTMqVGIsY2NbbWFdPWFjLngsY2NbbWErMV09YWMueSxjY1ttYSsyXT1hYy56O20uYmluZEJ1ZmZlcihtLkFSUkFZX0JVRkZFUixiLl9fd2ViZ2xWZXJ0ZXhCdWZmZXIpO20uYnVmZmVyRGF0YShtLkFSUkFZX0JVRkZFUixjYyxkYil9aWYod2Ipe2ZvcihVYj0wO1ViPHJiO1ViKyspYmM9UGJbVWJdLG1hPTMqVWIsZGNbbWFdPWJjLnIsZGNbbWErMV09YmMuZyxkY1ttYSsyXT1iYy5iO20uYmluZEJ1ZmZlcihtLkFSUkFZX0JVRkZFUixcbmIuX193ZWJnbENvbG9yQnVmZmVyKTttLmJ1ZmZlckRhdGEobS5BUlJBWV9CVUZGRVIsZGMsZGIpfWlmKGdjKWZvcihlYz0wLGpiPWdjLmxlbmd0aDtlYzxqYjtlYysrKXtnYT1nY1tlY107aWYoZ2EubmVlZHNVcGRhdGUmJih2b2lkIDA9PT1nYS5ib3VuZFRvfHxcInZlcnRpY2VzXCI9PT1nYS5ib3VuZFRvKSlpZihMYj1nYS52YWx1ZS5sZW5ndGgsbWE9MCwxPT09Z2Euc2l6ZSlmb3IodmE9MDt2YTxMYjt2YSsrKWdhLmFycmF5W3ZhXT1nYS52YWx1ZVt2YV07ZWxzZSBpZigyPT09Z2Euc2l6ZSlmb3IodmE9MDt2YTxMYjt2YSsrKUphPWdhLnZhbHVlW3ZhXSxnYS5hcnJheVttYV09SmEueCxnYS5hcnJheVttYSsxXT1KYS55LG1hKz0yO2Vsc2UgaWYoMz09PWdhLnNpemUpaWYoXCJjXCI9PT1nYS50eXBlKWZvcih2YT0wO3ZhPExiO3ZhKyspSmE9Z2EudmFsdWVbdmFdLGdhLmFycmF5W21hXT1KYS5yLGdhLmFycmF5W21hKzFdPUphLmcsZ2EuYXJyYXlbbWErMl09SmEuYixtYSs9MztlbHNlIGZvcih2YT1cbjA7dmE8TGI7dmErKylKYT1nYS52YWx1ZVt2YV0sZ2EuYXJyYXlbbWFdPUphLngsZ2EuYXJyYXlbbWErMV09SmEueSxnYS5hcnJheVttYSsyXT1KYS56LG1hKz0zO2Vsc2UgaWYoND09PWdhLnNpemUpZm9yKHZhPTA7dmE8TGI7dmErKylKYT1nYS52YWx1ZVt2YV0sZ2EuYXJyYXlbbWFdPUphLngsZ2EuYXJyYXlbbWErMV09SmEueSxnYS5hcnJheVttYSsyXT1KYS56LGdhLmFycmF5W21hKzNdPUphLncsbWErPTQ7bS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLGdhLmJ1ZmZlcik7bS5idWZmZXJEYXRhKG0uQVJSQVlfQlVGRkVSLGdhLmFycmF5LGRiKTtnYS5uZWVkc1VwZGF0ZT0hMX19Yi52ZXJ0aWNlc05lZWRVcGRhdGU9ITE7Yi5jb2xvcnNOZWVkVXBkYXRlPSExO3cuYXR0cmlidXRlcyYmcyh3KX19ZnVuY3Rpb24gcihhKXtmb3IodmFyIGIgaW4gYS5hdHRyaWJ1dGVzKWlmKGEuYXR0cmlidXRlc1tiXS5uZWVkc1VwZGF0ZSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBzKGEpe2Zvcih2YXIgYiBpbiBhLmF0dHJpYnV0ZXMpYS5hdHRyaWJ1dGVzW2JdLm5lZWRzVXBkYXRlPVxuITF9ZnVuY3Rpb24gdShhKXshMD09PWEudHJhbnNwYXJlbnQ/Vy5zZXRCbGVuZGluZyhhLmJsZW5kaW5nLGEuYmxlbmRFcXVhdGlvbixhLmJsZW5kU3JjLGEuYmxlbmREc3QsYS5ibGVuZEVxdWF0aW9uQWxwaGEsYS5ibGVuZFNyY0FscGhhLGEuYmxlbmREc3RBbHBoYSk6Vy5zZXRCbGVuZGluZyhUSFJFRS5Ob0JsZW5kaW5nKTtXLnNldERlcHRoVGVzdChhLmRlcHRoVGVzdCk7Vy5zZXREZXB0aFdyaXRlKGEuZGVwdGhXcml0ZSk7Vy5zZXRDb2xvcldyaXRlKGEuY29sb3JXcml0ZSk7Vy5zZXRQb2x5Z29uT2Zmc2V0KGEucG9seWdvbk9mZnNldCxhLnBvbHlnb25PZmZzZXRGYWN0b3IsYS5wb2x5Z29uT2Zmc2V0VW5pdHMpfWZ1bmN0aW9uIHYoYSxiLGMsZCxlKXt2YXIgZixnLGgsaztNYj0wO2lmKGQubmVlZHNVcGRhdGUpe2QucHJvZ3JhbSYmaGMoZCk7ZC5hZGRFdmVudExpc3RlbmVyKFwiZGlzcG9zZVwiLGljKTt2YXIgbj1wY1tkLnR5cGVdO2lmKG4pe3ZhciBsPVRIUkVFLlNoYWRlckxpYltuXTtcbmQuX193ZWJnbFNoYWRlcj17dW5pZm9ybXM6VEhSRUUuVW5pZm9ybXNVdGlscy5jbG9uZShsLnVuaWZvcm1zKSx2ZXJ0ZXhTaGFkZXI6bC52ZXJ0ZXhTaGFkZXIsZnJhZ21lbnRTaGFkZXI6bC5mcmFnbWVudFNoYWRlcn19ZWxzZSBkLl9fd2ViZ2xTaGFkZXI9e3VuaWZvcm1zOmQudW5pZm9ybXMsdmVydGV4U2hhZGVyOmQudmVydGV4U2hhZGVyLGZyYWdtZW50U2hhZGVyOmQuZnJhZ21lbnRTaGFkZXJ9O2Zvcih2YXIgcD0wLHE9MCxyPTAscz0wLHQ9MCx3PWIubGVuZ3RoO3Q8dzt0Kyspe3ZhciB2PWJbdF07di5vbmx5U2hhZG93fHwhMT09PXYudmlzaWJsZXx8KHYgaW5zdGFuY2VvZiBUSFJFRS5EaXJlY3Rpb25hbExpZ2h0JiZwKyssdiBpbnN0YW5jZW9mIFRIUkVFLlBvaW50TGlnaHQmJnErKyx2IGluc3RhbmNlb2YgVEhSRUUuU3BvdExpZ2h0JiZyKyssdiBpbnN0YW5jZW9mIFRIUkVFLkhlbWlzcGhlcmVMaWdodCYmcysrKX1mPXA7Zz1xO2g9cjtrPXM7Zm9yKHZhciB1LHo9MCxHPVxuMCxGPWIubGVuZ3RoO0c8RjtHKyspe3ZhciBKPWJbR107Si5jYXN0U2hhZG93JiYoSiBpbnN0YW5jZW9mIFRIUkVFLlNwb3RMaWdodCYmeisrLEogaW5zdGFuY2VvZiBUSFJFRS5EaXJlY3Rpb25hbExpZ2h0JiYhSi5zaGFkb3dDYXNjYWRlJiZ6KyspfXU9ejt2YXIgSDtpZihOYiYmZSYmZS5za2VsZXRvbiYmZS5za2VsZXRvbi51c2VWZXJ0ZXhUZXh0dXJlKUg9MTAyNDtlbHNle3ZhciBOPW0uZ2V0UGFyYW1ldGVyKG0uTUFYX1ZFUlRFWF9VTklGT1JNX1ZFQ1RPUlMpLE09TWF0aC5mbG9vcigoTi0yMCkvNCk7dm9pZCAwIT09ZSYmZSBpbnN0YW5jZW9mIFRIUkVFLlNraW5uZWRNZXNoJiYoTT1NYXRoLm1pbihlLnNrZWxldG9uLmJvbmVzLmxlbmd0aCxNKSxNPGUuc2tlbGV0b24uYm9uZXMubGVuZ3RoJiZUSFJFRS53YXJuKFwiV2ViR0xSZW5kZXJlcjogdG9vIG1hbnkgYm9uZXMgLSBcIitlLnNrZWxldG9uLmJvbmVzLmxlbmd0aCtcIiwgdGhpcyBHUFUgc3VwcG9ydHMganVzdCBcIitNK1wiICh0cnkgT3BlbkdMIGluc3RlYWQgb2YgQU5HTEUpXCIpKTtcbkg9TX12YXIgUD17cHJlY2lzaW9uOkwsc3VwcG9ydHNWZXJ0ZXhUZXh0dXJlczpWYixtYXA6ISFkLm1hcCxlbnZNYXA6ISFkLmVudk1hcCxlbnZNYXBNb2RlOmQuZW52TWFwJiZkLmVudk1hcC5tYXBwaW5nLGxpZ2h0TWFwOiEhZC5saWdodE1hcCxidW1wTWFwOiEhZC5idW1wTWFwLG5vcm1hbE1hcDohIWQubm9ybWFsTWFwLHNwZWN1bGFyTWFwOiEhZC5zcGVjdWxhck1hcCxhbHBoYU1hcDohIWQuYWxwaGFNYXAsY29tYmluZTpkLmNvbWJpbmUsdmVydGV4Q29sb3JzOmQudmVydGV4Q29sb3JzLGZvZzpjLHVzZUZvZzpkLmZvZyxmb2dFeHA6YyBpbnN0YW5jZW9mIFRIUkVFLkZvZ0V4cDIsZmxhdFNoYWRpbmc6ZC5zaGFkaW5nPT09VEhSRUUuRmxhdFNoYWRpbmcsc2l6ZUF0dGVudWF0aW9uOmQuc2l6ZUF0dGVudWF0aW9uLGxvZ2FyaXRobWljRGVwdGhCdWZmZXI6amEsc2tpbm5pbmc6ZC5za2lubmluZyxtYXhCb25lczpILHVzZVZlcnRleFRleHR1cmU6TmImJmUmJmUuc2tlbGV0b24mJlxuZS5za2VsZXRvbi51c2VWZXJ0ZXhUZXh0dXJlLG1vcnBoVGFyZ2V0czpkLm1vcnBoVGFyZ2V0cyxtb3JwaE5vcm1hbHM6ZC5tb3JwaE5vcm1hbHMsbWF4TW9ycGhUYXJnZXRzOkIubWF4TW9ycGhUYXJnZXRzLG1heE1vcnBoTm9ybWFsczpCLm1heE1vcnBoTm9ybWFscyxtYXhEaXJMaWdodHM6ZixtYXhQb2ludExpZ2h0czpnLG1heFNwb3RMaWdodHM6aCxtYXhIZW1pTGlnaHRzOmssbWF4U2hhZG93czp1LHNoYWRvd01hcEVuYWJsZWQ6Qi5zaGFkb3dNYXBFbmFibGVkJiZlLnJlY2VpdmVTaGFkb3cmJjA8dSxzaGFkb3dNYXBUeXBlOkIuc2hhZG93TWFwVHlwZSxzaGFkb3dNYXBEZWJ1ZzpCLnNoYWRvd01hcERlYnVnLHNoYWRvd01hcENhc2NhZGU6Qi5zaGFkb3dNYXBDYXNjYWRlLGFscGhhVGVzdDpkLmFscGhhVGVzdCxtZXRhbDpkLm1ldGFsLHdyYXBBcm91bmQ6ZC53cmFwQXJvdW5kLGRvdWJsZVNpZGVkOmQuc2lkZT09PVRIUkVFLkRvdWJsZVNpZGUsZmxpcFNpZGVkOmQuc2lkZT09PVxuVEhSRUUuQmFja1NpZGV9LFI9W107bj9SLnB1c2gobik6KFIucHVzaChkLmZyYWdtZW50U2hhZGVyKSxSLnB1c2goZC52ZXJ0ZXhTaGFkZXIpKTtpZih2b2lkIDAhPT1kLmRlZmluZXMpZm9yKHZhciBPIGluIGQuZGVmaW5lcylSLnB1c2goTyksUi5wdXNoKGQuZGVmaW5lc1tPXSk7Zm9yKE8gaW4gUClSLnB1c2goTyksUi5wdXNoKFBbT10pO2Zvcih2YXIgS2E9Ui5qb2luKCksVixXPTAsUWE9UGEubGVuZ3RoO1c8UWE7VysrKXt2YXIgWWE9UGFbV107aWYoWWEuY29kZT09PUthKXtWPVlhO1YudXNlZFRpbWVzKys7YnJlYWt9fXZvaWQgMD09PVYmJihWPW5ldyBUSFJFRS5XZWJHTFByb2dyYW0oQixLYSxkLFApLFBhLnB1c2goViksQi5pbmZvLm1lbW9yeS5wcm9ncmFtcz1QYS5sZW5ndGgpO2QucHJvZ3JhbT1WO3ZhciBYYT1WLmF0dHJpYnV0ZXM7aWYoZC5tb3JwaFRhcmdldHMpe2QubnVtU3VwcG9ydGVkTW9ycGhUYXJnZXRzPTA7Zm9yKHZhciBjYSxkYT1cIm1vcnBoVGFyZ2V0XCIsYmE9XG4wO2JhPEIubWF4TW9ycGhUYXJnZXRzO2JhKyspY2E9ZGErYmEsMDw9WGFbY2FdJiZkLm51bVN1cHBvcnRlZE1vcnBoVGFyZ2V0cysrfWlmKGQubW9ycGhOb3JtYWxzKWZvcihkLm51bVN1cHBvcnRlZE1vcnBoTm9ybWFscz0wLGRhPVwibW9ycGhOb3JtYWxcIixiYT0wO2JhPEIubWF4TW9ycGhOb3JtYWxzO2JhKyspY2E9ZGErYmEsMDw9WGFbY2FdJiZkLm51bVN1cHBvcnRlZE1vcnBoTm9ybWFscysrO2QudW5pZm9ybXNMaXN0PVtdO2Zvcih2YXIgaGEgaW4gZC5fX3dlYmdsU2hhZGVyLnVuaWZvcm1zKXt2YXIgdGE9ZC5wcm9ncmFtLnVuaWZvcm1zW2hhXTt0YSYmZC51bmlmb3Jtc0xpc3QucHVzaChbZC5fX3dlYmdsU2hhZGVyLnVuaWZvcm1zW2hhXSx0YV0pfWQubmVlZHNVcGRhdGU9ITF9ZC5tb3JwaFRhcmdldHMmJiFlLl9fd2ViZ2xNb3JwaFRhcmdldEluZmx1ZW5jZXMmJihlLl9fd2ViZ2xNb3JwaFRhcmdldEluZmx1ZW5jZXM9bmV3IEZsb2F0MzJBcnJheShCLm1heE1vcnBoVGFyZ2V0cykpO1xudmFyIGFiPSExLG9hPSExLHFhPSExLFVhPWQucHJvZ3JhbSxrYT1VYS51bmlmb3JtcyxRPWQuX193ZWJnbFNoYWRlci51bmlmb3JtcztVYS5pZCE9PW9iJiYobS51c2VQcm9ncmFtKFVhLnByb2dyYW0pLG9iPVVhLmlkLHFhPW9hPWFiPSEwKTtkLmlkIT09dWImJigtMT09PXViJiYocWE9ITApLHViPWQuaWQsb2E9ITApO2lmKGFifHxhIT09dmIpbS51bmlmb3JtTWF0cml4NGZ2KGthLnByb2plY3Rpb25NYXRyaXgsITEsYS5wcm9qZWN0aW9uTWF0cml4LmVsZW1lbnRzKSxqYSYmbS51bmlmb3JtMWYoa2EubG9nRGVwdGhCdWZGQywyLyhNYXRoLmxvZyhhLmZhcisxKS9NYXRoLkxOMikpLGEhPT12YiYmKHZiPWEpLChkIGluc3RhbmNlb2YgVEhSRUUuU2hhZGVyTWF0ZXJpYWx8fGQgaW5zdGFuY2VvZiBUSFJFRS5NZXNoUGhvbmdNYXRlcmlhbHx8ZC5lbnZNYXApJiZudWxsIT09a2EuY2FtZXJhUG9zaXRpb24mJih3YS5zZXRGcm9tTWF0cml4UG9zaXRpb24oYS5tYXRyaXhXb3JsZCksbS51bmlmb3JtM2Yoa2EuY2FtZXJhUG9zaXRpb24sXG53YS54LHdhLnksd2EueikpLChkIGluc3RhbmNlb2YgVEhSRUUuTWVzaFBob25nTWF0ZXJpYWx8fGQgaW5zdGFuY2VvZiBUSFJFRS5NZXNoTGFtYmVydE1hdGVyaWFsfHxkIGluc3RhbmNlb2YgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWx8fGQgaW5zdGFuY2VvZiBUSFJFRS5TaGFkZXJNYXRlcmlhbHx8ZC5za2lubmluZykmJm51bGwhPT1rYS52aWV3TWF0cml4JiZtLnVuaWZvcm1NYXRyaXg0ZnYoa2Eudmlld01hdHJpeCwhMSxhLm1hdHJpeFdvcmxkSW52ZXJzZS5lbGVtZW50cyk7aWYoZC5za2lubmluZylpZihlLmJpbmRNYXRyaXgmJm51bGwhPT1rYS5iaW5kTWF0cml4JiZtLnVuaWZvcm1NYXRyaXg0ZnYoa2EuYmluZE1hdHJpeCwhMSxlLmJpbmRNYXRyaXguZWxlbWVudHMpLGUuYmluZE1hdHJpeEludmVyc2UmJm51bGwhPT1rYS5iaW5kTWF0cml4SW52ZXJzZSYmbS51bmlmb3JtTWF0cml4NGZ2KGthLmJpbmRNYXRyaXhJbnZlcnNlLCExLGUuYmluZE1hdHJpeEludmVyc2UuZWxlbWVudHMpLFxuTmImJmUuc2tlbGV0b24mJmUuc2tlbGV0b24udXNlVmVydGV4VGV4dHVyZSl7aWYobnVsbCE9PWthLmJvbmVUZXh0dXJlKXt2YXIgZGI9RCgpO20udW5pZm9ybTFpKGthLmJvbmVUZXh0dXJlLGRiKTtCLnNldFRleHR1cmUoZS5za2VsZXRvbi5ib25lVGV4dHVyZSxkYil9bnVsbCE9PWthLmJvbmVUZXh0dXJlV2lkdGgmJm0udW5pZm9ybTFpKGthLmJvbmVUZXh0dXJlV2lkdGgsZS5za2VsZXRvbi5ib25lVGV4dHVyZVdpZHRoKTtudWxsIT09a2EuYm9uZVRleHR1cmVIZWlnaHQmJm0udW5pZm9ybTFpKGthLmJvbmVUZXh0dXJlSGVpZ2h0LGUuc2tlbGV0b24uYm9uZVRleHR1cmVIZWlnaHQpfWVsc2UgZS5za2VsZXRvbiYmZS5za2VsZXRvbi5ib25lTWF0cmljZXMmJm51bGwhPT1rYS5ib25lR2xvYmFsTWF0cmljZXMmJm0udW5pZm9ybU1hdHJpeDRmdihrYS5ib25lR2xvYmFsTWF0cmljZXMsITEsZS5za2VsZXRvbi5ib25lTWF0cmljZXMpO2lmKG9hKXtjJiZkLmZvZyYmKFEuZm9nQ29sb3IudmFsdWU9XG5jLmNvbG9yLGMgaW5zdGFuY2VvZiBUSFJFRS5Gb2c/KFEuZm9nTmVhci52YWx1ZT1jLm5lYXIsUS5mb2dGYXIudmFsdWU9Yy5mYXIpOmMgaW5zdGFuY2VvZiBUSFJFRS5Gb2dFeHAyJiYoUS5mb2dEZW5zaXR5LnZhbHVlPWMuZGVuc2l0eSkpO2lmKGQgaW5zdGFuY2VvZiBUSFJFRS5NZXNoUGhvbmdNYXRlcmlhbHx8ZCBpbnN0YW5jZW9mIFRIUkVFLk1lc2hMYW1iZXJ0TWF0ZXJpYWx8fGQubGlnaHRzKXtpZihPYil7dmFyIHFhPSEwLGlhLFphLFksYmI9MCxjYj0wLGliPTAseGIscGIscWIsQ2EsamIsbmE9amMscmI9bmEuZGlyZWN0aW9uYWwuY29sb3JzLExhPW5hLmRpcmVjdGlvbmFsLnBvc2l0aW9ucyxNYT1uYS5wb2ludC5jb2xvcnMsa2I9bmEucG9pbnQucG9zaXRpb25zLHliPW5hLnBvaW50LmRpc3RhbmNlcyx6Yj1uYS5wb2ludC5kZWNheXMsUmE9bmEuc3BvdC5jb2xvcnMsQWE9bmEuc3BvdC5wb3NpdGlvbnMsZWI9bmEuc3BvdC5kaXN0YW5jZXMsSGE9bmEuc3BvdC5kaXJlY3Rpb25zLFxubGE9bmEuc3BvdC5hbmdsZXNDb3MscmE9bmEuc3BvdC5leHBvbmVudHMsSz1uYS5zcG90LmRlY2F5cyx6YT1uYS5oZW1pLnNreUNvbG9ycyxTYT1uYS5oZW1pLmdyb3VuZENvbG9ycyxBYj1uYS5oZW1pLnBvc2l0aW9ucyxsYj0wLE5hPTAsc2E9MCxEYT0wLEVhPTAsRmE9MCxHYj0wLEJiPTAsbWI9MCxDPTAsVmE9MCxUYT0wO2lhPTA7Zm9yKFphPWIubGVuZ3RoO2lhPFphO2lhKyspWT1iW2lhXSxZLm9ubHlTaGFkb3d8fCh4Yj1ZLmNvbG9yLENhPVkuaW50ZW5zaXR5LGpiPVkuZGlzdGFuY2UsWSBpbnN0YW5jZW9mIFRIUkVFLkFtYmllbnRMaWdodD9ZLnZpc2libGUmJihiYis9eGIucixjYis9eGIuZyxpYis9eGIuYik6WSBpbnN0YW5jZW9mIFRIUkVFLkRpcmVjdGlvbmFsTGlnaHQ/KEVhKz0xLFkudmlzaWJsZSYmKHBhLnNldEZyb21NYXRyaXhQb3NpdGlvbihZLm1hdHJpeFdvcmxkKSx3YS5zZXRGcm9tTWF0cml4UG9zaXRpb24oWS50YXJnZXQubWF0cml4V29ybGQpLHBhLnN1Yih3YSksXG5wYS5ub3JtYWxpemUoKSxtYj0zKmxiLExhW21iXT1wYS54LExhW21iKzFdPXBhLnksTGFbbWIrMl09cGEueix5KHJiLG1iLHhiLENhKSxsYis9MSkpOlkgaW5zdGFuY2VvZiBUSFJFRS5Qb2ludExpZ2h0PyhGYSs9MSxZLnZpc2libGUmJihDPTMqTmEseShNYSxDLHhiLENhKSx3YS5zZXRGcm9tTWF0cml4UG9zaXRpb24oWS5tYXRyaXhXb3JsZCksa2JbQ109d2EueCxrYltDKzFdPXdhLnksa2JbQysyXT13YS56LHliW05hXT1qYix6YltOYV09MD09PVkuZGlzdGFuY2U/MDpZLmRlY2F5LE5hKz0xKSk6WSBpbnN0YW5jZW9mIFRIUkVFLlNwb3RMaWdodD8oR2IrPTEsWS52aXNpYmxlJiYoVmE9MypzYSx5KFJhLFZhLHhiLENhKSxwYS5zZXRGcm9tTWF0cml4UG9zaXRpb24oWS5tYXRyaXhXb3JsZCksQWFbVmFdPXBhLngsQWFbVmErMV09cGEueSxBYVtWYSsyXT1wYS56LGViW3NhXT1qYix3YS5zZXRGcm9tTWF0cml4UG9zaXRpb24oWS50YXJnZXQubWF0cml4V29ybGQpLHBhLnN1Yih3YSksXG5wYS5ub3JtYWxpemUoKSxIYVtWYV09cGEueCxIYVtWYSsxXT1wYS55LEhhW1ZhKzJdPXBhLnosbGFbc2FdPU1hdGguY29zKFkuYW5nbGUpLHJhW3NhXT1ZLmV4cG9uZW50LEtbc2FdPTA9PT1ZLmRpc3RhbmNlPzA6WS5kZWNheSxzYSs9MSkpOlkgaW5zdGFuY2VvZiBUSFJFRS5IZW1pc3BoZXJlTGlnaHQmJihCYis9MSxZLnZpc2libGUmJihwYS5zZXRGcm9tTWF0cml4UG9zaXRpb24oWS5tYXRyaXhXb3JsZCkscGEubm9ybWFsaXplKCksVGE9MypEYSxBYltUYV09cGEueCxBYltUYSsxXT1wYS55LEFiW1RhKzJdPXBhLnoscGI9WS5jb2xvcixxYj1ZLmdyb3VuZENvbG9yLHkoemEsVGEscGIsQ2EpLHkoU2EsVGEscWIsQ2EpLERhKz0xKSkpO2lhPTMqbGI7Zm9yKFphPU1hdGgubWF4KHJiLmxlbmd0aCwzKkVhKTtpYTxaYTtpYSsrKXJiW2lhXT0wO2lhPTMqTmE7Zm9yKFphPU1hdGgubWF4KE1hLmxlbmd0aCwzKkZhKTtpYTxaYTtpYSsrKU1hW2lhXT0wO2lhPTMqc2E7Zm9yKFphPU1hdGgubWF4KFJhLmxlbmd0aCxcbjMqR2IpO2lhPFphO2lhKyspUmFbaWFdPTA7aWE9MypEYTtmb3IoWmE9TWF0aC5tYXgoemEubGVuZ3RoLDMqQmIpO2lhPFphO2lhKyspemFbaWFdPTA7aWE9MypEYTtmb3IoWmE9TWF0aC5tYXgoU2EubGVuZ3RoLDMqQmIpO2lhPFphO2lhKyspU2FbaWFdPTA7bmEuZGlyZWN0aW9uYWwubGVuZ3RoPWxiO25hLnBvaW50Lmxlbmd0aD1OYTtuYS5zcG90Lmxlbmd0aD1zYTtuYS5oZW1pLmxlbmd0aD1EYTtuYS5hbWJpZW50WzBdPWJiO25hLmFtYmllbnRbMV09Y2I7bmEuYW1iaWVudFsyXT1pYjtPYj0hMX1pZihxYSl7dmFyIGVhPWpjO1EuYW1iaWVudExpZ2h0Q29sb3IudmFsdWU9ZWEuYW1iaWVudDtRLmRpcmVjdGlvbmFsTGlnaHRDb2xvci52YWx1ZT1lYS5kaXJlY3Rpb25hbC5jb2xvcnM7US5kaXJlY3Rpb25hbExpZ2h0RGlyZWN0aW9uLnZhbHVlPWVhLmRpcmVjdGlvbmFsLnBvc2l0aW9ucztRLnBvaW50TGlnaHRDb2xvci52YWx1ZT1lYS5wb2ludC5jb2xvcnM7US5wb2ludExpZ2h0UG9zaXRpb24udmFsdWU9XG5lYS5wb2ludC5wb3NpdGlvbnM7US5wb2ludExpZ2h0RGlzdGFuY2UudmFsdWU9ZWEucG9pbnQuZGlzdGFuY2VzO1EucG9pbnRMaWdodERlY2F5LnZhbHVlPWVhLnBvaW50LmRlY2F5cztRLnNwb3RMaWdodENvbG9yLnZhbHVlPWVhLnNwb3QuY29sb3JzO1Euc3BvdExpZ2h0UG9zaXRpb24udmFsdWU9ZWEuc3BvdC5wb3NpdGlvbnM7US5zcG90TGlnaHREaXN0YW5jZS52YWx1ZT1lYS5zcG90LmRpc3RhbmNlcztRLnNwb3RMaWdodERpcmVjdGlvbi52YWx1ZT1lYS5zcG90LmRpcmVjdGlvbnM7US5zcG90TGlnaHRBbmdsZUNvcy52YWx1ZT1lYS5zcG90LmFuZ2xlc0NvcztRLnNwb3RMaWdodEV4cG9uZW50LnZhbHVlPWVhLnNwb3QuZXhwb25lbnRzO1Euc3BvdExpZ2h0RGVjYXkudmFsdWU9ZWEuc3BvdC5kZWNheXM7US5oZW1pc3BoZXJlTGlnaHRTa3lDb2xvci52YWx1ZT1lYS5oZW1pLnNreUNvbG9ycztRLmhlbWlzcGhlcmVMaWdodEdyb3VuZENvbG9yLnZhbHVlPWVhLmhlbWkuZ3JvdW5kQ29sb3JzO1xuUS5oZW1pc3BoZXJlTGlnaHREaXJlY3Rpb24udmFsdWU9ZWEuaGVtaS5wb3NpdGlvbnM7eChRLCEwKX1lbHNlIHgoUSwhMSl9aWYoZCBpbnN0YW5jZW9mIFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsfHxkIGluc3RhbmNlb2YgVEhSRUUuTWVzaExhbWJlcnRNYXRlcmlhbHx8ZCBpbnN0YW5jZW9mIFRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsKXtRLm9wYWNpdHkudmFsdWU9ZC5vcGFjaXR5O1EuZGlmZnVzZS52YWx1ZT1kLmNvbG9yO1EubWFwLnZhbHVlPWQubWFwO1EubGlnaHRNYXAudmFsdWU9ZC5saWdodE1hcDtRLnNwZWN1bGFyTWFwLnZhbHVlPWQuc3BlY3VsYXJNYXA7US5hbHBoYU1hcC52YWx1ZT1kLmFscGhhTWFwO2QuYnVtcE1hcCYmKFEuYnVtcE1hcC52YWx1ZT1kLmJ1bXBNYXAsUS5idW1wU2NhbGUudmFsdWU9ZC5idW1wU2NhbGUpO2Qubm9ybWFsTWFwJiYoUS5ub3JtYWxNYXAudmFsdWU9ZC5ub3JtYWxNYXAsUS5ub3JtYWxTY2FsZS52YWx1ZS5jb3B5KGQubm9ybWFsU2NhbGUpKTtcbnZhciBmYjtkLm1hcD9mYj1kLm1hcDpkLnNwZWN1bGFyTWFwP2ZiPWQuc3BlY3VsYXJNYXA6ZC5ub3JtYWxNYXA/ZmI9ZC5ub3JtYWxNYXA6ZC5idW1wTWFwP2ZiPWQuYnVtcE1hcDpkLmFscGhhTWFwJiYoZmI9ZC5hbHBoYU1hcCk7aWYodm9pZCAwIT09ZmIpe3ZhciB3Yj1mYi5vZmZzZXQsUWI9ZmIucmVwZWF0O1Eub2Zmc2V0UmVwZWF0LnZhbHVlLnNldCh3Yi54LHdiLnksUWIueCxRYi55KX1RLmVudk1hcC52YWx1ZT1kLmVudk1hcDtRLmZsaXBFbnZNYXAudmFsdWU9ZC5lbnZNYXAgaW5zdGFuY2VvZiBUSFJFRS5XZWJHTFJlbmRlclRhcmdldEN1YmU/MTotMTtRLnJlZmxlY3Rpdml0eS52YWx1ZT1kLnJlZmxlY3Rpdml0eTtRLnJlZnJhY3Rpb25SYXRpby52YWx1ZT1kLnJlZnJhY3Rpb25SYXRpb31pZihkIGluc3RhbmNlb2YgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwpUS5kaWZmdXNlLnZhbHVlPWQuY29sb3IsUS5vcGFjaXR5LnZhbHVlPWQub3BhY2l0eTtlbHNlIGlmKGQgaW5zdGFuY2VvZlxuVEhSRUUuTGluZURhc2hlZE1hdGVyaWFsKVEuZGlmZnVzZS52YWx1ZT1kLmNvbG9yLFEub3BhY2l0eS52YWx1ZT1kLm9wYWNpdHksUS5kYXNoU2l6ZS52YWx1ZT1kLmRhc2hTaXplLFEudG90YWxTaXplLnZhbHVlPWQuZGFzaFNpemUrZC5nYXBTaXplLFEuc2NhbGUudmFsdWU9ZC5zY2FsZTtlbHNlIGlmKGQgaW5zdGFuY2VvZiBUSFJFRS5Qb2ludENsb3VkTWF0ZXJpYWwpe2lmKFEucHNDb2xvci52YWx1ZT1kLmNvbG9yLFEub3BhY2l0eS52YWx1ZT1kLm9wYWNpdHksUS5zaXplLnZhbHVlPWQuc2l6ZSxRLnNjYWxlLnZhbHVlPVUuaGVpZ2h0LzIsUS5tYXAudmFsdWU9ZC5tYXAsbnVsbCE9PWQubWFwKXt2YXIgV2I9ZC5tYXAub2Zmc2V0LFhiPWQubWFwLnJlcGVhdDtRLm9mZnNldFJlcGVhdC52YWx1ZS5zZXQoV2IueCxXYi55LFhiLngsWGIueSl9fWVsc2UgZCBpbnN0YW5jZW9mIFRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsPyhRLnNoaW5pbmVzcy52YWx1ZT1kLnNoaW5pbmVzcyxRLmVtaXNzaXZlLnZhbHVlPVxuZC5lbWlzc2l2ZSxRLnNwZWN1bGFyLnZhbHVlPWQuc3BlY3VsYXIsZC53cmFwQXJvdW5kJiZRLndyYXBSR0IudmFsdWUuY29weShkLndyYXBSR0IpKTpkIGluc3RhbmNlb2YgVEhSRUUuTWVzaExhbWJlcnRNYXRlcmlhbD8oUS5lbWlzc2l2ZS52YWx1ZT1kLmVtaXNzaXZlLGQud3JhcEFyb3VuZCYmUS53cmFwUkdCLnZhbHVlLmNvcHkoZC53cmFwUkdCKSk6ZCBpbnN0YW5jZW9mIFRIUkVFLk1lc2hEZXB0aE1hdGVyaWFsPyhRLm1OZWFyLnZhbHVlPWEubmVhcixRLm1GYXIudmFsdWU9YS5mYXIsUS5vcGFjaXR5LnZhbHVlPWQub3BhY2l0eSk6ZCBpbnN0YW5jZW9mIFRIUkVFLk1lc2hOb3JtYWxNYXRlcmlhbCYmKFEub3BhY2l0eS52YWx1ZT1kLm9wYWNpdHkpO2lmKGUucmVjZWl2ZVNoYWRvdyYmIWQuX3NoYWRvd1Bhc3MmJlEuc2hhZG93TWF0cml4KWZvcih2YXIgc2I9MCxDYj0wLCQ9Yi5sZW5ndGg7Q2I8JDtDYisrKXt2YXIgeGE9YltDYl07eGEuY2FzdFNoYWRvdyYmKHhhIGluc3RhbmNlb2ZcblRIUkVFLlNwb3RMaWdodHx8eGEgaW5zdGFuY2VvZiBUSFJFRS5EaXJlY3Rpb25hbExpZ2h0JiYheGEuc2hhZG93Q2FzY2FkZSkmJihRLnNoYWRvd01hcC52YWx1ZVtzYl09eGEuc2hhZG93TWFwLFEuc2hhZG93TWFwU2l6ZS52YWx1ZVtzYl09eGEuc2hhZG93TWFwU2l6ZSxRLnNoYWRvd01hdHJpeC52YWx1ZVtzYl09eGEuc2hhZG93TWF0cml4LFEuc2hhZG93RGFya25lc3MudmFsdWVbc2JdPXhhLnNoYWRvd0RhcmtuZXNzLFEuc2hhZG93Qmlhcy52YWx1ZVtzYl09eGEuc2hhZG93QmlhcyxzYisrKX1mb3IodmFyIEhiPWQudW5pZm9ybXNMaXN0LE9hLCRhLEdhLG5iPTAsZmM9SGIubGVuZ3RoO25iPGZjO25iKyspe3ZhciBUPUhiW25iXVswXTtpZighMSE9PVQubmVlZHNVcGRhdGUpe3ZhciBEYj1ULnR5cGUsUz1ULnZhbHVlLGFhPUhiW25iXVsxXTtzd2l0Y2goRGIpe2Nhc2UgXCIxaVwiOm0udW5pZm9ybTFpKGFhLFMpO2JyZWFrO2Nhc2UgXCIxZlwiOm0udW5pZm9ybTFmKGFhLFMpO2JyZWFrO1xuY2FzZSBcIjJmXCI6bS51bmlmb3JtMmYoYWEsU1swXSxTWzFdKTticmVhaztjYXNlIFwiM2ZcIjptLnVuaWZvcm0zZihhYSxTWzBdLFNbMV0sU1syXSk7YnJlYWs7Y2FzZSBcIjRmXCI6bS51bmlmb3JtNGYoYWEsU1swXSxTWzFdLFNbMl0sU1szXSk7YnJlYWs7Y2FzZSBcIjFpdlwiOm0udW5pZm9ybTFpdihhYSxTKTticmVhaztjYXNlIFwiM2l2XCI6bS51bmlmb3JtM2l2KGFhLFMpO2JyZWFrO2Nhc2UgXCIxZnZcIjptLnVuaWZvcm0xZnYoYWEsUyk7YnJlYWs7Y2FzZSBcIjJmdlwiOm0udW5pZm9ybTJmdihhYSxTKTticmVhaztjYXNlIFwiM2Z2XCI6bS51bmlmb3JtM2Z2KGFhLFMpO2JyZWFrO2Nhc2UgXCI0ZnZcIjptLnVuaWZvcm00ZnYoYWEsUyk7YnJlYWs7Y2FzZSBcIk1hdHJpeDNmdlwiOm0udW5pZm9ybU1hdHJpeDNmdihhYSwhMSxTKTticmVhaztjYXNlIFwiTWF0cml4NGZ2XCI6bS51bmlmb3JtTWF0cml4NGZ2KGFhLCExLFMpO2JyZWFrO2Nhc2UgXCJpXCI6bS51bmlmb3JtMWkoYWEsUyk7YnJlYWs7Y2FzZSBcImZcIjptLnVuaWZvcm0xZihhYSxcblMpO2JyZWFrO2Nhc2UgXCJ2MlwiOm0udW5pZm9ybTJmKGFhLFMueCxTLnkpO2JyZWFrO2Nhc2UgXCJ2M1wiOm0udW5pZm9ybTNmKGFhLFMueCxTLnksUy56KTticmVhaztjYXNlIFwidjRcIjptLnVuaWZvcm00ZihhYSxTLngsUy55LFMueixTLncpO2JyZWFrO2Nhc2UgXCJjXCI6bS51bmlmb3JtM2YoYWEsUy5yLFMuZyxTLmIpO2JyZWFrO2Nhc2UgXCJpdjFcIjptLnVuaWZvcm0xaXYoYWEsUyk7YnJlYWs7Y2FzZSBcIml2XCI6bS51bmlmb3JtM2l2KGFhLFMpO2JyZWFrO2Nhc2UgXCJmdjFcIjptLnVuaWZvcm0xZnYoYWEsUyk7YnJlYWs7Y2FzZSBcImZ2XCI6bS51bmlmb3JtM2Z2KGFhLFMpO2JyZWFrO2Nhc2UgXCJ2MnZcIjp2b2lkIDA9PT1ULl9hcnJheSYmKFQuX2FycmF5PW5ldyBGbG9hdDMyQXJyYXkoMipTLmxlbmd0aCkpO2Zvcih2YXIgWj0wLEJhPVMubGVuZ3RoO1o8QmE7WisrKUdhPTIqWixULl9hcnJheVtHYV09U1taXS54LFQuX2FycmF5W0dhKzFdPVNbWl0ueTttLnVuaWZvcm0yZnYoYWEsVC5fYXJyYXkpO1xuYnJlYWs7Y2FzZSBcInYzdlwiOnZvaWQgMD09PVQuX2FycmF5JiYoVC5fYXJyYXk9bmV3IEZsb2F0MzJBcnJheSgzKlMubGVuZ3RoKSk7Wj0wO2ZvcihCYT1TLmxlbmd0aDtaPEJhO1orKylHYT0zKlosVC5fYXJyYXlbR2FdPVNbWl0ueCxULl9hcnJheVtHYSsxXT1TW1pdLnksVC5fYXJyYXlbR2ErMl09U1taXS56O20udW5pZm9ybTNmdihhYSxULl9hcnJheSk7YnJlYWs7Y2FzZSBcInY0dlwiOnZvaWQgMD09PVQuX2FycmF5JiYoVC5fYXJyYXk9bmV3IEZsb2F0MzJBcnJheSg0KlMubGVuZ3RoKSk7Wj0wO2ZvcihCYT1TLmxlbmd0aDtaPEJhO1orKylHYT00KlosVC5fYXJyYXlbR2FdPVNbWl0ueCxULl9hcnJheVtHYSsxXT1TW1pdLnksVC5fYXJyYXlbR2ErMl09U1taXS56LFQuX2FycmF5W0dhKzNdPVNbWl0udzttLnVuaWZvcm00ZnYoYWEsVC5fYXJyYXkpO2JyZWFrO2Nhc2UgXCJtM1wiOm0udW5pZm9ybU1hdHJpeDNmdihhYSwhMSxTLmVsZW1lbnRzKTticmVhaztjYXNlIFwibTN2XCI6dm9pZCAwPT09XG5ULl9hcnJheSYmKFQuX2FycmF5PW5ldyBGbG9hdDMyQXJyYXkoOSpTLmxlbmd0aCkpO1o9MDtmb3IoQmE9Uy5sZW5ndGg7WjxCYTtaKyspU1taXS5mbGF0dGVuVG9BcnJheU9mZnNldChULl9hcnJheSw5KlopO20udW5pZm9ybU1hdHJpeDNmdihhYSwhMSxULl9hcnJheSk7YnJlYWs7Y2FzZSBcIm00XCI6bS51bmlmb3JtTWF0cml4NGZ2KGFhLCExLFMuZWxlbWVudHMpO2JyZWFrO2Nhc2UgXCJtNHZcIjp2b2lkIDA9PT1ULl9hcnJheSYmKFQuX2FycmF5PW5ldyBGbG9hdDMyQXJyYXkoMTYqUy5sZW5ndGgpKTtaPTA7Zm9yKEJhPVMubGVuZ3RoO1o8QmE7WisrKVNbWl0uZmxhdHRlblRvQXJyYXlPZmZzZXQoVC5fYXJyYXksMTYqWik7bS51bmlmb3JtTWF0cml4NGZ2KGFhLCExLFQuX2FycmF5KTticmVhaztjYXNlIFwidFwiOk9hPVM7JGE9RCgpO20udW5pZm9ybTFpKGFhLCRhKTtpZighT2EpY29udGludWU7aWYoT2EgaW5zdGFuY2VvZiBUSFJFRS5DdWJlVGV4dHVyZXx8T2EuaW1hZ2UgaW5zdGFuY2VvZlxuQXJyYXkmJjY9PT1PYS5pbWFnZS5sZW5ndGgpe3ZhciBYPU9hLEViPSRhO2lmKDY9PT1YLmltYWdlLmxlbmd0aClpZihYLm5lZWRzVXBkYXRlKXtYLmltYWdlLl9fd2ViZ2xUZXh0dXJlQ3ViZXx8KFguYWRkRXZlbnRMaXN0ZW5lcihcImRpc3Bvc2VcIixQYiksWC5pbWFnZS5fX3dlYmdsVGV4dHVyZUN1YmU9bS5jcmVhdGVUZXh0dXJlKCksQi5pbmZvLm1lbW9yeS50ZXh0dXJlcysrKTttLmFjdGl2ZVRleHR1cmUobS5URVhUVVJFMCtFYik7bS5iaW5kVGV4dHVyZShtLlRFWFRVUkVfQ1VCRV9NQVAsWC5pbWFnZS5fX3dlYmdsVGV4dHVyZUN1YmUpO20ucGl4ZWxTdG9yZWkobS5VTlBBQ0tfRkxJUF9ZX1dFQkdMLFguZmxpcFkpO2Zvcih2YXIgUmI9WCBpbnN0YW5jZW9mIFRIUkVFLkNvbXByZXNzZWRUZXh0dXJlLEliPVguaW1hZ2VbMF1pbnN0YW5jZW9mIFRIUkVFLkRhdGFUZXh0dXJlLGdiPVtdLHlhPTA7Nj55YTt5YSsrKWdiW3lhXT0hQi5hdXRvU2NhbGVDdWJlbWFwc3x8UmJ8fEliP0liP1xuWC5pbWFnZVt5YV0uaW1hZ2U6WC5pbWFnZVt5YV06RShYLmltYWdlW3lhXSxxYyk7dmFyIFliPWdiWzBdLFpiPVRIUkVFLk1hdGguaXNQb3dlck9mVHdvKFliLndpZHRoKSYmVEhSRUUuTWF0aC5pc1Bvd2VyT2ZUd28oWWIuaGVpZ2h0KSxXYT1JKFguZm9ybWF0KSx0Yj1JKFgudHlwZSk7QShtLlRFWFRVUkVfQ1VCRV9NQVAsWCxaYik7Zm9yKHlhPTA7Nj55YTt5YSsrKWlmKFJiKWZvcih2YXIgaGIsJGI9Z2JbeWFdLm1pcG1hcHMsRmI9MCxTYj0kYi5sZW5ndGg7RmI8U2I7RmIrKyloYj0kYltGYl0sWC5mb3JtYXQhPT1USFJFRS5SR0JBRm9ybWF0JiZYLmZvcm1hdCE9PVRIUkVFLlJHQkZvcm1hdD8tMTxrYygpLmluZGV4T2YoV2EpP20uY29tcHJlc3NlZFRleEltYWdlMkQobS5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1greWEsRmIsV2EsaGIud2lkdGgsaGIuaGVpZ2h0LDAsaGIuZGF0YSk6VEhSRUUud2FybihcIlRIUkVFLldlYkdMUmVuZGVyZXI6IEF0dGVtcHQgdG8gbG9hZCB1bnN1cHBvcnRlZCBjb21wcmVzc2VkIHRleHR1cmUgZm9ybWF0IGluIC5zZXRDdWJlVGV4dHVyZSgpXCIpOlxubS50ZXhJbWFnZTJEKG0uVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YK3lhLEZiLFdhLGhiLndpZHRoLGhiLmhlaWdodCwwLFdhLHRiLGhiLmRhdGEpO2Vsc2UgSWI/bS50ZXhJbWFnZTJEKG0uVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YK3lhLDAsV2EsZ2JbeWFdLndpZHRoLGdiW3lhXS5oZWlnaHQsMCxXYSx0YixnYlt5YV0uZGF0YSk6bS50ZXhJbWFnZTJEKG0uVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9YK3lhLDAsV2EsV2EsdGIsZ2JbeWFdKTtYLmdlbmVyYXRlTWlwbWFwcyYmWmImJm0uZ2VuZXJhdGVNaXBtYXAobS5URVhUVVJFX0NVQkVfTUFQKTtYLm5lZWRzVXBkYXRlPSExO2lmKFgub25VcGRhdGUpWC5vblVwZGF0ZSgpfWVsc2UgbS5hY3RpdmVUZXh0dXJlKG0uVEVYVFVSRTArRWIpLG0uYmluZFRleHR1cmUobS5URVhUVVJFX0NVQkVfTUFQLFguaW1hZ2UuX193ZWJnbFRleHR1cmVDdWJlKX1lbHNlIGlmKE9hIGluc3RhbmNlb2YgVEhSRUUuV2ViR0xSZW5kZXJUYXJnZXRDdWJlKXt2YXIgSmI9XG5PYTttLmFjdGl2ZVRleHR1cmUobS5URVhUVVJFMCskYSk7bS5iaW5kVGV4dHVyZShtLlRFWFRVUkVfQ1VCRV9NQVAsSmIuX193ZWJnbFRleHR1cmUpfWVsc2UgQi5zZXRUZXh0dXJlKE9hLCRhKTticmVhaztjYXNlIFwidHZcIjp2b2lkIDA9PT1ULl9hcnJheSYmKFQuX2FycmF5PVtdKTtaPTA7Zm9yKEJhPVQudmFsdWUubGVuZ3RoO1o8QmE7WisrKVQuX2FycmF5W1pdPUQoKTttLnVuaWZvcm0xaXYoYWEsVC5fYXJyYXkpO1o9MDtmb3IoQmE9VC52YWx1ZS5sZW5ndGg7WjxCYTtaKyspT2E9VC52YWx1ZVtaXSwkYT1ULl9hcnJheVtaXSxPYSYmQi5zZXRUZXh0dXJlKE9hLCRhKTticmVhaztkZWZhdWx0OlRIUkVFLndhcm4oXCJUSFJFRS5XZWJHTFJlbmRlcmVyOiBVbmtub3duIHVuaWZvcm0gdHlwZTogXCIrRGIpfX19fW0udW5pZm9ybU1hdHJpeDRmdihrYS5tb2RlbFZpZXdNYXRyaXgsITEsZS5fbW9kZWxWaWV3TWF0cml4LmVsZW1lbnRzKTtrYS5ub3JtYWxNYXRyaXgmJm0udW5pZm9ybU1hdHJpeDNmdihrYS5ub3JtYWxNYXRyaXgsXG4hMSxlLl9ub3JtYWxNYXRyaXguZWxlbWVudHMpO251bGwhPT1rYS5tb2RlbE1hdHJpeCYmbS51bmlmb3JtTWF0cml4NGZ2KGthLm1vZGVsTWF0cml4LCExLGUubWF0cml4V29ybGQuZWxlbWVudHMpO3JldHVybiBVYX1mdW5jdGlvbiB4KGEsYil7YS5hbWJpZW50TGlnaHRDb2xvci5uZWVkc1VwZGF0ZT1iO2EuZGlyZWN0aW9uYWxMaWdodENvbG9yLm5lZWRzVXBkYXRlPWI7YS5kaXJlY3Rpb25hbExpZ2h0RGlyZWN0aW9uLm5lZWRzVXBkYXRlPWI7YS5wb2ludExpZ2h0Q29sb3IubmVlZHNVcGRhdGU9YjthLnBvaW50TGlnaHRQb3NpdGlvbi5uZWVkc1VwZGF0ZT1iO2EucG9pbnRMaWdodERpc3RhbmNlLm5lZWRzVXBkYXRlPWI7YS5wb2ludExpZ2h0RGVjYXkubmVlZHNVcGRhdGU9YjthLnNwb3RMaWdodENvbG9yLm5lZWRzVXBkYXRlPWI7YS5zcG90TGlnaHRQb3NpdGlvbi5uZWVkc1VwZGF0ZT1iO2Euc3BvdExpZ2h0RGlzdGFuY2UubmVlZHNVcGRhdGU9YjthLnNwb3RMaWdodERpcmVjdGlvbi5uZWVkc1VwZGF0ZT1cbmI7YS5zcG90TGlnaHRBbmdsZUNvcy5uZWVkc1VwZGF0ZT1iO2Euc3BvdExpZ2h0RXhwb25lbnQubmVlZHNVcGRhdGU9YjthLnNwb3RMaWdodERlY2F5Lm5lZWRzVXBkYXRlPWI7YS5oZW1pc3BoZXJlTGlnaHRTa3lDb2xvci5uZWVkc1VwZGF0ZT1iO2EuaGVtaXNwaGVyZUxpZ2h0R3JvdW5kQ29sb3IubmVlZHNVcGRhdGU9YjthLmhlbWlzcGhlcmVMaWdodERpcmVjdGlvbi5uZWVkc1VwZGF0ZT1ifWZ1bmN0aW9uIEQoKXt2YXIgYT1NYjthPj1XYiYmVEhSRUUud2FybihcIldlYkdMUmVuZGVyZXI6IHRyeWluZyB0byB1c2UgXCIrYStcIiB0ZXh0dXJlIHVuaXRzIHdoaWxlIHRoaXMgR1BVIHN1cHBvcnRzIG9ubHkgXCIrV2IpO01iKz0xO3JldHVybiBhfWZ1bmN0aW9uIHcoYSxiKXthLl9tb2RlbFZpZXdNYXRyaXgubXVsdGlwbHlNYXRyaWNlcyhiLm1hdHJpeFdvcmxkSW52ZXJzZSxhLm1hdHJpeFdvcmxkKTthLl9ub3JtYWxNYXRyaXguZ2V0Tm9ybWFsTWF0cml4KGEuX21vZGVsVmlld01hdHJpeCl9XG5mdW5jdGlvbiB5KGEsYixjLGQpe2FbYl09Yy5yKmQ7YVtiKzFdPWMuZypkO2FbYisyXT1jLmIqZH1mdW5jdGlvbiBBKGEsYixjKXtjPyhtLnRleFBhcmFtZXRlcmkoYSxtLlRFWFRVUkVfV1JBUF9TLEkoYi53cmFwUykpLG0udGV4UGFyYW1ldGVyaShhLG0uVEVYVFVSRV9XUkFQX1QsSShiLndyYXBUKSksbS50ZXhQYXJhbWV0ZXJpKGEsbS5URVhUVVJFX01BR19GSUxURVIsSShiLm1hZ0ZpbHRlcikpLG0udGV4UGFyYW1ldGVyaShhLG0uVEVYVFVSRV9NSU5fRklMVEVSLEkoYi5taW5GaWx0ZXIpKSk6KG0udGV4UGFyYW1ldGVyaShhLG0uVEVYVFVSRV9XUkFQX1MsbS5DTEFNUF9UT19FREdFKSxtLnRleFBhcmFtZXRlcmkoYSxtLlRFWFRVUkVfV1JBUF9ULG0uQ0xBTVBfVE9fRURHRSksYi53cmFwUz09PVRIUkVFLkNsYW1wVG9FZGdlV3JhcHBpbmcmJmIud3JhcFQ9PT1USFJFRS5DbGFtcFRvRWRnZVdyYXBwaW5nfHxUSFJFRS53YXJuKFwiVEhSRUUuV2ViR0xSZW5kZXJlcjogVGV4dHVyZSBpcyBub3QgcG93ZXIgb2YgdHdvLiBUZXh0dXJlLndyYXBTIGFuZCBUZXh0dXJlLndyYXBUIHNob3VsZCBiZSBzZXQgdG8gVEhSRUUuQ2xhbXBUb0VkZ2VXcmFwcGluZy4gKCBcIitcbmIuc291cmNlRmlsZStcIiApXCIpLG0udGV4UGFyYW1ldGVyaShhLG0uVEVYVFVSRV9NQUdfRklMVEVSLHooYi5tYWdGaWx0ZXIpKSxtLnRleFBhcmFtZXRlcmkoYSxtLlRFWFRVUkVfTUlOX0ZJTFRFUix6KGIubWluRmlsdGVyKSksYi5taW5GaWx0ZXIhPT1USFJFRS5OZWFyZXN0RmlsdGVyJiZiLm1pbkZpbHRlciE9PVRIUkVFLkxpbmVhckZpbHRlciYmVEhSRUUud2FybihcIlRIUkVFLldlYkdMUmVuZGVyZXI6IFRleHR1cmUgaXMgbm90IHBvd2VyIG9mIHR3by4gVGV4dHVyZS5taW5GaWx0ZXIgc2hvdWxkIGJlIHNldCB0byBUSFJFRS5OZWFyZXN0RmlsdGVyIG9yIFRIUkVFLkxpbmVhckZpbHRlci4gKCBcIitiLnNvdXJjZUZpbGUrXCIgKVwiKSk7KGM9ZGEuZ2V0KFwiRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljXCIpKSYmYi50eXBlIT09VEhSRUUuRmxvYXRUeXBlJiZiLnR5cGUhPT1USFJFRS5IYWxmRmxvYXRUeXBlJiYoMTxiLmFuaXNvdHJvcHl8fGIuX19jdXJyZW50QW5pc290cm9weSkmJlxuKG0udGV4UGFyYW1ldGVyZihhLGMuVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQsTWF0aC5taW4oYi5hbmlzb3Ryb3B5LEIuZ2V0TWF4QW5pc290cm9weSgpKSksYi5fX2N1cnJlbnRBbmlzb3Ryb3B5PWIuYW5pc290cm9weSl9ZnVuY3Rpb24gRShhLGIpe2lmKGEud2lkdGg+Ynx8YS5oZWlnaHQ+Yil7dmFyIGM9Yi9NYXRoLm1heChhLndpZHRoLGEuaGVpZ2h0KSxkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7ZC53aWR0aD1NYXRoLmZsb29yKGEud2lkdGgqYyk7ZC5oZWlnaHQ9TWF0aC5mbG9vcihhLmhlaWdodCpjKTtkLmdldENvbnRleHQoXCIyZFwiKS5kcmF3SW1hZ2UoYSwwLDAsYS53aWR0aCxhLmhlaWdodCwwLDAsZC53aWR0aCxkLmhlaWdodCk7VEhSRUUud2FybihcIlRIUkVFLldlYkdMUmVuZGVyZXI6IGltYWdlIGlzIHRvbyBiaWcgKFwiK2Eud2lkdGgrXCJ4XCIrYS5oZWlnaHQrXCIpLiBSZXNpemVkIHRvIFwiK2Qud2lkdGgrXCJ4XCIrZC5oZWlnaHQsYSk7cmV0dXJuIGR9cmV0dXJuIGF9XG5mdW5jdGlvbiBHKGEsYil7bS5iaW5kUmVuZGVyYnVmZmVyKG0uUkVOREVSQlVGRkVSLGEpO2IuZGVwdGhCdWZmZXImJiFiLnN0ZW5jaWxCdWZmZXI/KG0ucmVuZGVyYnVmZmVyU3RvcmFnZShtLlJFTkRFUkJVRkZFUixtLkRFUFRIX0NPTVBPTkVOVDE2LGIud2lkdGgsYi5oZWlnaHQpLG0uZnJhbWVidWZmZXJSZW5kZXJidWZmZXIobS5GUkFNRUJVRkZFUixtLkRFUFRIX0FUVEFDSE1FTlQsbS5SRU5ERVJCVUZGRVIsYSkpOmIuZGVwdGhCdWZmZXImJmIuc3RlbmNpbEJ1ZmZlcj8obS5yZW5kZXJidWZmZXJTdG9yYWdlKG0uUkVOREVSQlVGRkVSLG0uREVQVEhfU1RFTkNJTCxiLndpZHRoLGIuaGVpZ2h0KSxtLmZyYW1lYnVmZmVyUmVuZGVyYnVmZmVyKG0uRlJBTUVCVUZGRVIsbS5ERVBUSF9TVEVOQ0lMX0FUVEFDSE1FTlQsbS5SRU5ERVJCVUZGRVIsYSkpOm0ucmVuZGVyYnVmZmVyU3RvcmFnZShtLlJFTkRFUkJVRkZFUixtLlJHQkE0LGIud2lkdGgsYi5oZWlnaHQpfWZ1bmN0aW9uIEYoYSl7YSBpbnN0YW5jZW9mXG5USFJFRS5XZWJHTFJlbmRlclRhcmdldEN1YmU/KG0uYmluZFRleHR1cmUobS5URVhUVVJFX0NVQkVfTUFQLGEuX193ZWJnbFRleHR1cmUpLG0uZ2VuZXJhdGVNaXBtYXAobS5URVhUVVJFX0NVQkVfTUFQKSxtLmJpbmRUZXh0dXJlKG0uVEVYVFVSRV9DVUJFX01BUCxudWxsKSk6KG0uYmluZFRleHR1cmUobS5URVhUVVJFXzJELGEuX193ZWJnbFRleHR1cmUpLG0uZ2VuZXJhdGVNaXBtYXAobS5URVhUVVJFXzJEKSxtLmJpbmRUZXh0dXJlKG0uVEVYVFVSRV8yRCxudWxsKSl9ZnVuY3Rpb24geihhKXtyZXR1cm4gYT09PVRIUkVFLk5lYXJlc3RGaWx0ZXJ8fGE9PT1USFJFRS5OZWFyZXN0TWlwTWFwTmVhcmVzdEZpbHRlcnx8YT09PVRIUkVFLk5lYXJlc3RNaXBNYXBMaW5lYXJGaWx0ZXI/bS5ORUFSRVNUOm0uTElORUFSfWZ1bmN0aW9uIEkoYSl7dmFyIGI7aWYoYT09PVRIUkVFLlJlcGVhdFdyYXBwaW5nKXJldHVybiBtLlJFUEVBVDtpZihhPT09VEhSRUUuQ2xhbXBUb0VkZ2VXcmFwcGluZylyZXR1cm4gbS5DTEFNUF9UT19FREdFO1xuaWYoYT09PVRIUkVFLk1pcnJvcmVkUmVwZWF0V3JhcHBpbmcpcmV0dXJuIG0uTUlSUk9SRURfUkVQRUFUO2lmKGE9PT1USFJFRS5OZWFyZXN0RmlsdGVyKXJldHVybiBtLk5FQVJFU1Q7aWYoYT09PVRIUkVFLk5lYXJlc3RNaXBNYXBOZWFyZXN0RmlsdGVyKXJldHVybiBtLk5FQVJFU1RfTUlQTUFQX05FQVJFU1Q7aWYoYT09PVRIUkVFLk5lYXJlc3RNaXBNYXBMaW5lYXJGaWx0ZXIpcmV0dXJuIG0uTkVBUkVTVF9NSVBNQVBfTElORUFSO2lmKGE9PT1USFJFRS5MaW5lYXJGaWx0ZXIpcmV0dXJuIG0uTElORUFSO2lmKGE9PT1USFJFRS5MaW5lYXJNaXBNYXBOZWFyZXN0RmlsdGVyKXJldHVybiBtLkxJTkVBUl9NSVBNQVBfTkVBUkVTVDtpZihhPT09VEhSRUUuTGluZWFyTWlwTWFwTGluZWFyRmlsdGVyKXJldHVybiBtLkxJTkVBUl9NSVBNQVBfTElORUFSO2lmKGE9PT1USFJFRS5VbnNpZ25lZEJ5dGVUeXBlKXJldHVybiBtLlVOU0lHTkVEX0JZVEU7aWYoYT09PVRIUkVFLlVuc2lnbmVkU2hvcnQ0NDQ0VHlwZSlyZXR1cm4gbS5VTlNJR05FRF9TSE9SVF80XzRfNF80O1xuaWYoYT09PVRIUkVFLlVuc2lnbmVkU2hvcnQ1NTUxVHlwZSlyZXR1cm4gbS5VTlNJR05FRF9TSE9SVF81XzVfNV8xO2lmKGE9PT1USFJFRS5VbnNpZ25lZFNob3J0NTY1VHlwZSlyZXR1cm4gbS5VTlNJR05FRF9TSE9SVF81XzZfNTtpZihhPT09VEhSRUUuQnl0ZVR5cGUpcmV0dXJuIG0uQllURTtpZihhPT09VEhSRUUuU2hvcnRUeXBlKXJldHVybiBtLlNIT1JUO2lmKGE9PT1USFJFRS5VbnNpZ25lZFNob3J0VHlwZSlyZXR1cm4gbS5VTlNJR05FRF9TSE9SVDtpZihhPT09VEhSRUUuSW50VHlwZSlyZXR1cm4gbS5JTlQ7aWYoYT09PVRIUkVFLlVuc2lnbmVkSW50VHlwZSlyZXR1cm4gbS5VTlNJR05FRF9JTlQ7aWYoYT09PVRIUkVFLkZsb2F0VHlwZSlyZXR1cm4gbS5GTE9BVDtiPWRhLmdldChcIk9FU190ZXh0dXJlX2hhbGZfZmxvYXRcIik7aWYobnVsbCE9PWImJmE9PT1USFJFRS5IYWxmRmxvYXRUeXBlKXJldHVybiBiLkhBTEZfRkxPQVRfT0VTO2lmKGE9PT1USFJFRS5BbHBoYUZvcm1hdClyZXR1cm4gbS5BTFBIQTtcbmlmKGE9PT1USFJFRS5SR0JGb3JtYXQpcmV0dXJuIG0uUkdCO2lmKGE9PT1USFJFRS5SR0JBRm9ybWF0KXJldHVybiBtLlJHQkE7aWYoYT09PVRIUkVFLkx1bWluYW5jZUZvcm1hdClyZXR1cm4gbS5MVU1JTkFOQ0U7aWYoYT09PVRIUkVFLkx1bWluYW5jZUFscGhhRm9ybWF0KXJldHVybiBtLkxVTUlOQU5DRV9BTFBIQTtpZihhPT09VEhSRUUuQWRkRXF1YXRpb24pcmV0dXJuIG0uRlVOQ19BREQ7aWYoYT09PVRIUkVFLlN1YnRyYWN0RXF1YXRpb24pcmV0dXJuIG0uRlVOQ19TVUJUUkFDVDtpZihhPT09VEhSRUUuUmV2ZXJzZVN1YnRyYWN0RXF1YXRpb24pcmV0dXJuIG0uRlVOQ19SRVZFUlNFX1NVQlRSQUNUO2lmKGE9PT1USFJFRS5aZXJvRmFjdG9yKXJldHVybiBtLlpFUk87aWYoYT09PVRIUkVFLk9uZUZhY3RvcilyZXR1cm4gbS5PTkU7aWYoYT09PVRIUkVFLlNyY0NvbG9yRmFjdG9yKXJldHVybiBtLlNSQ19DT0xPUjtpZihhPT09VEhSRUUuT25lTWludXNTcmNDb2xvckZhY3RvcilyZXR1cm4gbS5PTkVfTUlOVVNfU1JDX0NPTE9SO1xuaWYoYT09PVRIUkVFLlNyY0FscGhhRmFjdG9yKXJldHVybiBtLlNSQ19BTFBIQTtpZihhPT09VEhSRUUuT25lTWludXNTcmNBbHBoYUZhY3RvcilyZXR1cm4gbS5PTkVfTUlOVVNfU1JDX0FMUEhBO2lmKGE9PT1USFJFRS5Ec3RBbHBoYUZhY3RvcilyZXR1cm4gbS5EU1RfQUxQSEE7aWYoYT09PVRIUkVFLk9uZU1pbnVzRHN0QWxwaGFGYWN0b3IpcmV0dXJuIG0uT05FX01JTlVTX0RTVF9BTFBIQTtpZihhPT09VEhSRUUuRHN0Q29sb3JGYWN0b3IpcmV0dXJuIG0uRFNUX0NPTE9SO2lmKGE9PT1USFJFRS5PbmVNaW51c0RzdENvbG9yRmFjdG9yKXJldHVybiBtLk9ORV9NSU5VU19EU1RfQ09MT1I7aWYoYT09PVRIUkVFLlNyY0FscGhhU2F0dXJhdGVGYWN0b3IpcmV0dXJuIG0uU1JDX0FMUEhBX1NBVFVSQVRFO2I9ZGEuZ2V0KFwiV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3MzdGNcIik7aWYobnVsbCE9PWIpe2lmKGE9PT1USFJFRS5SR0JfUzNUQ19EWFQxX0Zvcm1hdClyZXR1cm4gYi5DT01QUkVTU0VEX1JHQl9TM1RDX0RYVDFfRVhUO1xuaWYoYT09PVRIUkVFLlJHQkFfUzNUQ19EWFQxX0Zvcm1hdClyZXR1cm4gYi5DT01QUkVTU0VEX1JHQkFfUzNUQ19EWFQxX0VYVDtpZihhPT09VEhSRUUuUkdCQV9TM1RDX0RYVDNfRm9ybWF0KXJldHVybiBiLkNPTVBSRVNTRURfUkdCQV9TM1RDX0RYVDNfRVhUO2lmKGE9PT1USFJFRS5SR0JBX1MzVENfRFhUNV9Gb3JtYXQpcmV0dXJuIGIuQ09NUFJFU1NFRF9SR0JBX1MzVENfRFhUNV9FWFR9Yj1kYS5nZXQoXCJXRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfcHZydGNcIik7aWYobnVsbCE9PWIpe2lmKGE9PT1USFJFRS5SR0JfUFZSVENfNEJQUFYxX0Zvcm1hdClyZXR1cm4gYi5DT01QUkVTU0VEX1JHQl9QVlJUQ180QlBQVjFfSU1HO2lmKGE9PT1USFJFRS5SR0JfUFZSVENfMkJQUFYxX0Zvcm1hdClyZXR1cm4gYi5DT01QUkVTU0VEX1JHQl9QVlJUQ18yQlBQVjFfSU1HO2lmKGE9PT1USFJFRS5SR0JBX1BWUlRDXzRCUFBWMV9Gb3JtYXQpcmV0dXJuIGIuQ09NUFJFU1NFRF9SR0JBX1BWUlRDXzRCUFBWMV9JTUc7XG5pZihhPT09VEhSRUUuUkdCQV9QVlJUQ18yQlBQVjFfRm9ybWF0KXJldHVybiBiLkNPTVBSRVNTRURfUkdCQV9QVlJUQ18yQlBQVjFfSU1HfWI9ZGEuZ2V0KFwiRVhUX2JsZW5kX21pbm1heFwiKTtpZihudWxsIT09Yil7aWYoYT09PVRIUkVFLk1pbkVxdWF0aW9uKXJldHVybiBiLk1JTl9FWFQ7aWYoYT09PVRIUkVFLk1heEVxdWF0aW9uKXJldHVybiBiLk1BWF9FWFR9cmV0dXJuIDB9Y29uc29sZS5sb2coXCJUSFJFRS5XZWJHTFJlbmRlcmVyXCIsVEhSRUUuUkVWSVNJT04pO2E9YXx8e307dmFyIFU9dm9pZCAwIT09YS5jYW52YXM/YS5jYW52YXM6ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKSxNPXZvaWQgMCE9PWEuY29udGV4dD9hLmNvbnRleHQ6bnVsbCxIPTEsTD12b2lkIDAhPT1hLnByZWNpc2lvbj9hLnByZWNpc2lvbjpcImhpZ2hwXCIsUD12b2lkIDAhPT1hLmFscGhhP2EuYWxwaGE6ITEsTj12b2lkIDAhPT1hLmRlcHRoP2EuZGVwdGg6ITAsUj12b2lkIDAhPT1hLnN0ZW5jaWw/XG5hLnN0ZW5jaWw6ITAsVj12b2lkIDAhPT1hLmFudGlhbGlhcz9hLmFudGlhbGlhczohMSxKPXZvaWQgMCE9PWEucHJlbXVsdGlwbGllZEFscGhhP2EucHJlbXVsdGlwbGllZEFscGhhOiEwLG9hPXZvaWQgMCE9PWEucHJlc2VydmVEcmF3aW5nQnVmZmVyP2EucHJlc2VydmVEcmF3aW5nQnVmZmVyOiExLGphPXZvaWQgMCE9PWEubG9nYXJpdGhtaWNEZXB0aEJ1ZmZlcj9hLmxvZ2FyaXRobWljRGVwdGhCdWZmZXI6ITEsaGE9bmV3IFRIUkVFLkNvbG9yKDApLE89MCxjYT1bXSxiYT17fSxxYT1bXSxLYT1bXSxRYT1bXSxYYT1bXSxZYT1bXTt0aGlzLmRvbUVsZW1lbnQ9VTt0aGlzLmNvbnRleHQ9bnVsbDt0aGlzLnNvcnRPYmplY3RzPXRoaXMuYXV0b0NsZWFyU3RlbmNpbD10aGlzLmF1dG9DbGVhckRlcHRoPXRoaXMuYXV0b0NsZWFyQ29sb3I9dGhpcy5hdXRvQ2xlYXI9ITA7dGhpcy5nYW1tYUZhY3Rvcj0yO3RoaXMuc2hhZG93TWFwRW5hYmxlZD10aGlzLmdhbW1hT3V0cHV0PXRoaXMuZ2FtbWFJbnB1dD1cbiExO3RoaXMuc2hhZG93TWFwVHlwZT1USFJFRS5QQ0ZTaGFkb3dNYXA7dGhpcy5zaGFkb3dNYXBDdWxsRmFjZT1USFJFRS5DdWxsRmFjZUZyb250O3RoaXMuc2hhZG93TWFwQ2FzY2FkZT10aGlzLnNoYWRvd01hcERlYnVnPSExO3RoaXMubWF4TW9ycGhUYXJnZXRzPTg7dGhpcy5tYXhNb3JwaE5vcm1hbHM9NDt0aGlzLmF1dG9TY2FsZUN1YmVtYXBzPSEwO3RoaXMuaW5mbz17bWVtb3J5Ontwcm9ncmFtczowLGdlb21ldHJpZXM6MCx0ZXh0dXJlczowfSxyZW5kZXI6e2NhbGxzOjAsdmVydGljZXM6MCxmYWNlczowLHBvaW50czowfX07dmFyIEI9dGhpcyxQYT1bXSxvYj1udWxsLGFiPW51bGwsdWI9LTEsdGE9XCJcIix2Yj1udWxsLE1iPTAsaWI9MCxiYj0wLHBiPVUud2lkdGgscWI9VS5oZWlnaHQsWGI9MCxmYz0wLGNiPW5ldyBUSFJFRS5GcnVzdHVtLGRiPW5ldyBUSFJFRS5NYXRyaXg0LHdhPW5ldyBUSFJFRS5WZWN0b3IzLHBhPW5ldyBUSFJFRS5WZWN0b3IzLE9iPSEwLGpjPXthbWJpZW50OlswLFxuMCwwXSxkaXJlY3Rpb25hbDp7bGVuZ3RoOjAsY29sb3JzOltdLHBvc2l0aW9uczpbXX0scG9pbnQ6e2xlbmd0aDowLGNvbG9yczpbXSxwb3NpdGlvbnM6W10sZGlzdGFuY2VzOltdLGRlY2F5czpbXX0sc3BvdDp7bGVuZ3RoOjAsY29sb3JzOltdLHBvc2l0aW9uczpbXSxkaXN0YW5jZXM6W10sZGlyZWN0aW9uczpbXSxhbmdsZXNDb3M6W10sZXhwb25lbnRzOltdLGRlY2F5czpbXX0saGVtaTp7bGVuZ3RoOjAsc2t5Q29sb3JzOltdLGdyb3VuZENvbG9yczpbXSxwb3NpdGlvbnM6W119fSxtO3RyeXt2YXIgWWI9e2FscGhhOlAsZGVwdGg6TixzdGVuY2lsOlIsYW50aWFsaWFzOlYscHJlbXVsdGlwbGllZEFscGhhOkoscHJlc2VydmVEcmF3aW5nQnVmZmVyOm9hfTttPU18fFUuZ2V0Q29udGV4dChcIndlYmdsXCIsWWIpfHxVLmdldENvbnRleHQoXCJleHBlcmltZW50YWwtd2ViZ2xcIixZYik7aWYobnVsbD09PW0pe2lmKG51bGwhPT1VLmdldENvbnRleHQoXCJ3ZWJnbFwiKSl0aHJvd1wiRXJyb3IgY3JlYXRpbmcgV2ViR0wgY29udGV4dCB3aXRoIHlvdXIgc2VsZWN0ZWQgYXR0cmlidXRlcy5cIjtcbnRocm93XCJFcnJvciBjcmVhdGluZyBXZWJHTCBjb250ZXh0LlwiO31VLmFkZEV2ZW50TGlzdGVuZXIoXCJ3ZWJnbGNvbnRleHRsb3N0XCIsZnVuY3Rpb24oYSl7YS5wcmV2ZW50RGVmYXVsdCgpO1piKCk7bGMoKTtiYT17fX0sITEpfWNhdGNoKHJjKXtUSFJFRS5lcnJvcihcIlRIUkVFLldlYkdMUmVuZGVyZXI6IFwiK3JjKX12YXIgVz1uZXcgVEhSRUUuV2ViR0xTdGF0ZShtLEkpO3ZvaWQgMD09PW0uZ2V0U2hhZGVyUHJlY2lzaW9uRm9ybWF0JiYobS5nZXRTaGFkZXJQcmVjaXNpb25Gb3JtYXQ9ZnVuY3Rpb24oKXtyZXR1cm57cmFuZ2VNaW46MSxyYW5nZU1heDoxLHByZWNpc2lvbjoxfX0pO3ZhciBkYT1uZXcgVEhSRUUuV2ViR0xFeHRlbnNpb25zKG0pO2RhLmdldChcIk9FU190ZXh0dXJlX2Zsb2F0XCIpO2RhLmdldChcIk9FU190ZXh0dXJlX2Zsb2F0X2xpbmVhclwiKTtkYS5nZXQoXCJPRVNfdGV4dHVyZV9oYWxmX2Zsb2F0XCIpO2RhLmdldChcIk9FU190ZXh0dXJlX2hhbGZfZmxvYXRfbGluZWFyXCIpO1xuZGEuZ2V0KFwiT0VTX3N0YW5kYXJkX2Rlcml2YXRpdmVzXCIpO2phJiZkYS5nZXQoXCJFWFRfZnJhZ19kZXB0aFwiKTt2YXIgcmI9ZnVuY3Rpb24oYSxiLGMsZCl7ITA9PT1KJiYoYSo9ZCxiKj1kLGMqPWQpO20uY2xlYXJDb2xvcihhLGIsYyxkKX0sbGM9ZnVuY3Rpb24oKXttLmNsZWFyQ29sb3IoMCwwLDAsMSk7bS5jbGVhckRlcHRoKDEpO20uY2xlYXJTdGVuY2lsKDApO20uZW5hYmxlKG0uREVQVEhfVEVTVCk7bS5kZXB0aEZ1bmMobS5MRVFVQUwpO20uZnJvbnRGYWNlKG0uQ0NXKTttLmN1bGxGYWNlKG0uQkFDSyk7bS5lbmFibGUobS5DVUxMX0ZBQ0UpO20uZW5hYmxlKG0uQkxFTkQpO20uYmxlbmRFcXVhdGlvbihtLkZVTkNfQUREKTttLmJsZW5kRnVuYyhtLlNSQ19BTFBIQSxtLk9ORV9NSU5VU19TUkNfQUxQSEEpO20udmlld3BvcnQoaWIsYmIscGIscWIpO3JiKGhhLnIsaGEuZyxoYS5iLE8pfSxaYj1mdW5jdGlvbigpe3ZiPW9iPW51bGw7dGE9XCJcIjt1Yj0tMTtPYj0hMDtXLnJlc2V0KCl9O1xubGMoKTt0aGlzLmNvbnRleHQ9bTt0aGlzLnN0YXRlPVc7dmFyIFdiPW0uZ2V0UGFyYW1ldGVyKG0uTUFYX1RFWFRVUkVfSU1BR0VfVU5JVFMpLHNjPW0uZ2V0UGFyYW1ldGVyKG0uTUFYX1ZFUlRFWF9URVhUVVJFX0lNQUdFX1VOSVRTKSx0Yz1tLmdldFBhcmFtZXRlcihtLk1BWF9URVhUVVJFX1NJWkUpLHFjPW0uZ2V0UGFyYW1ldGVyKG0uTUFYX0NVQkVfTUFQX1RFWFRVUkVfU0laRSksVmI9MDxzYyxOYj1WYiYmZGEuZ2V0KFwiT0VTX3RleHR1cmVfZmxvYXRcIiksdWM9bS5nZXRTaGFkZXJQcmVjaXNpb25Gb3JtYXQobS5WRVJURVhfU0hBREVSLG0uSElHSF9GTE9BVCksdmM9bS5nZXRTaGFkZXJQcmVjaXNpb25Gb3JtYXQobS5WRVJURVhfU0hBREVSLG0uTUVESVVNX0ZMT0FUKSx3Yz1tLmdldFNoYWRlclByZWNpc2lvbkZvcm1hdChtLkZSQUdNRU5UX1NIQURFUixtLkhJR0hfRkxPQVQpLHhjPW0uZ2V0U2hhZGVyUHJlY2lzaW9uRm9ybWF0KG0uRlJBR01FTlRfU0hBREVSLG0uTUVESVVNX0ZMT0FUKSxcbmtjPWZ1bmN0aW9uKCl7dmFyIGE7cmV0dXJuIGZ1bmN0aW9uKCl7aWYodm9pZCAwIT09YSlyZXR1cm4gYTthPVtdO2lmKGRhLmdldChcIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9wdnJ0Y1wiKXx8ZGEuZ2V0KFwiV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3MzdGNcIikpZm9yKHZhciBiPW0uZ2V0UGFyYW1ldGVyKG0uQ09NUFJFU1NFRF9URVhUVVJFX0ZPUk1BVFMpLGM9MDtjPGIubGVuZ3RoO2MrKylhLnB1c2goYltjXSk7cmV0dXJuIGF9fSgpLHljPTA8dWMucHJlY2lzaW9uJiYwPHdjLnByZWNpc2lvbixtYz0wPHZjLnByZWNpc2lvbiYmMDx4Yy5wcmVjaXNpb247XCJoaWdocFwiIT09THx8eWN8fChtYz8oTD1cIm1lZGl1bXBcIixUSFJFRS53YXJuKFwiVEhSRUUuV2ViR0xSZW5kZXJlcjogaGlnaHAgbm90IHN1cHBvcnRlZCwgdXNpbmcgbWVkaXVtcC5cIikpOihMPVwibG93cFwiLFRIUkVFLndhcm4oXCJUSFJFRS5XZWJHTFJlbmRlcmVyOiBoaWdocCBhbmQgbWVkaXVtcCBub3Qgc3VwcG9ydGVkLCB1c2luZyBsb3dwLlwiKSkpO1xuXCJtZWRpdW1wXCIhPT1MfHxtY3x8KEw9XCJsb3dwXCIsVEhSRUUud2FybihcIlRIUkVFLldlYkdMUmVuZGVyZXI6IG1lZGl1bXAgbm90IHN1cHBvcnRlZCwgdXNpbmcgbG93cC5cIikpO3ZhciB6Yz1uZXcgVEhSRUUuU2hhZG93TWFwUGx1Z2luKHRoaXMsY2EsYmEscWEpLEFjPW5ldyBUSFJFRS5TcHJpdGVQbHVnaW4odGhpcyxYYSksQmM9bmV3IFRIUkVFLkxlbnNGbGFyZVBsdWdpbih0aGlzLFlhKTt0aGlzLmdldENvbnRleHQ9ZnVuY3Rpb24oKXtyZXR1cm4gbX07dGhpcy5mb3JjZUNvbnRleHRMb3NzPWZ1bmN0aW9uKCl7ZGEuZ2V0KFwiV0VCR0xfbG9zZV9jb250ZXh0XCIpLmxvc2VDb250ZXh0KCl9O3RoaXMuc3VwcG9ydHNWZXJ0ZXhUZXh0dXJlcz1mdW5jdGlvbigpe3JldHVybiBWYn07dGhpcy5zdXBwb3J0c0Zsb2F0VGV4dHVyZXM9ZnVuY3Rpb24oKXtyZXR1cm4gZGEuZ2V0KFwiT0VTX3RleHR1cmVfZmxvYXRcIil9O3RoaXMuc3VwcG9ydHNIYWxmRmxvYXRUZXh0dXJlcz1mdW5jdGlvbigpe3JldHVybiBkYS5nZXQoXCJPRVNfdGV4dHVyZV9oYWxmX2Zsb2F0XCIpfTtcbnRoaXMuc3VwcG9ydHNTdGFuZGFyZERlcml2YXRpdmVzPWZ1bmN0aW9uKCl7cmV0dXJuIGRhLmdldChcIk9FU19zdGFuZGFyZF9kZXJpdmF0aXZlc1wiKX07dGhpcy5zdXBwb3J0c0NvbXByZXNzZWRUZXh0dXJlUzNUQz1mdW5jdGlvbigpe3JldHVybiBkYS5nZXQoXCJXRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfczN0Y1wiKX07dGhpcy5zdXBwb3J0c0NvbXByZXNzZWRUZXh0dXJlUFZSVEM9ZnVuY3Rpb24oKXtyZXR1cm4gZGEuZ2V0KFwiV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3B2cnRjXCIpfTt0aGlzLnN1cHBvcnRzQmxlbmRNaW5NYXg9ZnVuY3Rpb24oKXtyZXR1cm4gZGEuZ2V0KFwiRVhUX2JsZW5kX21pbm1heFwiKX07dGhpcy5nZXRNYXhBbmlzb3Ryb3B5PWZ1bmN0aW9uKCl7dmFyIGE7cmV0dXJuIGZ1bmN0aW9uKCl7aWYodm9pZCAwIT09YSlyZXR1cm4gYTt2YXIgYj1kYS5nZXQoXCJFWFRfdGV4dHVyZV9maWx0ZXJfYW5pc290cm9waWNcIik7cmV0dXJuIGE9bnVsbCE9PWI/bS5nZXRQYXJhbWV0ZXIoYi5NQVhfVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQpOlxuMH19KCk7dGhpcy5nZXRQcmVjaXNpb249ZnVuY3Rpb24oKXtyZXR1cm4gTH07dGhpcy5nZXRQaXhlbFJhdGlvPWZ1bmN0aW9uKCl7cmV0dXJuIEh9O3RoaXMuc2V0UGl4ZWxSYXRpbz1mdW5jdGlvbihhKXtIPWF9O3RoaXMuc2V0U2l6ZT1mdW5jdGlvbihhLGIsYyl7VS53aWR0aD1hKkg7VS5oZWlnaHQ9YipIOyExIT09YyYmKFUuc3R5bGUud2lkdGg9YStcInB4XCIsVS5zdHlsZS5oZWlnaHQ9YitcInB4XCIpO3RoaXMuc2V0Vmlld3BvcnQoMCwwLGEsYil9O3RoaXMuc2V0Vmlld3BvcnQ9ZnVuY3Rpb24oYSxiLGMsZCl7aWI9YSpIO2JiPWIqSDtwYj1jKkg7cWI9ZCpIO20udmlld3BvcnQoaWIsYmIscGIscWIpfTt0aGlzLnNldFNjaXNzb3I9ZnVuY3Rpb24oYSxiLGMsZCl7bS5zY2lzc29yKGEqSCxiKkgsYypILGQqSCl9O3RoaXMuZW5hYmxlU2Npc3NvclRlc3Q9ZnVuY3Rpb24oYSl7YT9tLmVuYWJsZShtLlNDSVNTT1JfVEVTVCk6bS5kaXNhYmxlKG0uU0NJU1NPUl9URVNUKX07dGhpcy5nZXRDbGVhckNvbG9yPVxuZnVuY3Rpb24oKXtyZXR1cm4gaGF9O3RoaXMuc2V0Q2xlYXJDb2xvcj1mdW5jdGlvbihhLGIpe2hhLnNldChhKTtPPXZvaWQgMCE9PWI/YjoxO3JiKGhhLnIsaGEuZyxoYS5iLE8pfTt0aGlzLmdldENsZWFyQWxwaGE9ZnVuY3Rpb24oKXtyZXR1cm4gT307dGhpcy5zZXRDbGVhckFscGhhPWZ1bmN0aW9uKGEpe089YTtyYihoYS5yLGhhLmcsaGEuYixPKX07dGhpcy5jbGVhcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9MDtpZih2b2lkIDA9PT1hfHxhKWR8PW0uQ09MT1JfQlVGRkVSX0JJVDtpZih2b2lkIDA9PT1ifHxiKWR8PW0uREVQVEhfQlVGRkVSX0JJVDtpZih2b2lkIDA9PT1jfHxjKWR8PW0uU1RFTkNJTF9CVUZGRVJfQklUO20uY2xlYXIoZCl9O3RoaXMuY2xlYXJDb2xvcj1mdW5jdGlvbigpe20uY2xlYXIobS5DT0xPUl9CVUZGRVJfQklUKX07dGhpcy5jbGVhckRlcHRoPWZ1bmN0aW9uKCl7bS5jbGVhcihtLkRFUFRIX0JVRkZFUl9CSVQpfTt0aGlzLmNsZWFyU3RlbmNpbD1mdW5jdGlvbigpe20uY2xlYXIobS5TVEVOQ0lMX0JVRkZFUl9CSVQpfTtcbnRoaXMuY2xlYXJUYXJnZXQ9ZnVuY3Rpb24oYSxiLGMsZCl7dGhpcy5zZXRSZW5kZXJUYXJnZXQoYSk7dGhpcy5jbGVhcihiLGMsZCl9O3RoaXMucmVzZXRHTFN0YXRlPVpiO3ZhciB3Yj1mdW5jdGlvbihhKXthLnRhcmdldC50cmF2ZXJzZShmdW5jdGlvbihhKXthLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZW1vdmVcIix3Yik7aWYoYSBpbnN0YW5jZW9mIFRIUkVFLk1lc2h8fGEgaW5zdGFuY2VvZiBUSFJFRS5Qb2ludENsb3VkfHxhIGluc3RhbmNlb2YgVEhSRUUuTGluZSlkZWxldGUgYmFbYS5pZF07ZWxzZSBpZihhIGluc3RhbmNlb2YgVEhSRUUuSW1tZWRpYXRlUmVuZGVyT2JqZWN0fHxhLmltbWVkaWF0ZVJlbmRlckNhbGxiYWNrKWZvcih2YXIgYj1xYSxjPWIubGVuZ3RoLTE7MDw9YztjLS0pYltjXS5vYmplY3Q9PT1hJiZiLnNwbGljZShjLDEpO2RlbGV0ZSBhLl9fd2ViZ2xJbml0O2RlbGV0ZSBhLl9tb2RlbFZpZXdNYXRyaXg7ZGVsZXRlIGEuX25vcm1hbE1hdHJpeDtkZWxldGUgYS5fX3dlYmdsQWN0aXZlfSl9LFxuamI9ZnVuY3Rpb24oYSl7YT1hLnRhcmdldDthLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJkaXNwb3NlXCIsamIpO2RlbGV0ZSBhLl9fd2ViZ2xJbml0O2lmKGEgaW5zdGFuY2VvZiBUSFJFRS5CdWZmZXJHZW9tZXRyeSl7Zm9yKHZhciBiIGluIGEuYXR0cmlidXRlcyl7dmFyIGM9YS5hdHRyaWJ1dGVzW2JdO3ZvaWQgMCE9PWMuYnVmZmVyJiYobS5kZWxldGVCdWZmZXIoYy5idWZmZXIpLGRlbGV0ZSBjLmJ1ZmZlcil9Qi5pbmZvLm1lbW9yeS5nZW9tZXRyaWVzLS19ZWxzZSBpZihiPVVhW2EuaWRdLHZvaWQgMCE9PWIpe2Zvcih2YXIgYz0wLGQ9Yi5sZW5ndGg7YzxkO2MrKyl7dmFyIGU9YltjXTtpZih2b2lkIDAhPT1lLm51bU1vcnBoVGFyZ2V0cyl7Zm9yKHZhciBmPTAsZz1lLm51bU1vcnBoVGFyZ2V0cztmPGc7ZisrKW0uZGVsZXRlQnVmZmVyKGUuX193ZWJnbE1vcnBoVGFyZ2V0c0J1ZmZlcnNbZl0pO2RlbGV0ZSBlLl9fd2ViZ2xNb3JwaFRhcmdldHNCdWZmZXJzfWlmKHZvaWQgMCE9PWUubnVtTW9ycGhOb3JtYWxzKXtmPVxuMDtmb3IoZz1lLm51bU1vcnBoTm9ybWFscztmPGc7ZisrKW0uZGVsZXRlQnVmZmVyKGUuX193ZWJnbE1vcnBoTm9ybWFsc0J1ZmZlcnNbZl0pO2RlbGV0ZSBlLl9fd2ViZ2xNb3JwaE5vcm1hbHNCdWZmZXJzfW5jKGUpfWRlbGV0ZSBVYVthLmlkXX1lbHNlIG5jKGEpO3RhPVwiXCJ9LFBiPWZ1bmN0aW9uKGEpe2E9YS50YXJnZXQ7YS5yZW1vdmVFdmVudExpc3RlbmVyKFwiZGlzcG9zZVwiLFBiKTthLmltYWdlJiZhLmltYWdlLl9fd2ViZ2xUZXh0dXJlQ3ViZT8obS5kZWxldGVUZXh0dXJlKGEuaW1hZ2UuX193ZWJnbFRleHR1cmVDdWJlKSxkZWxldGUgYS5pbWFnZS5fX3dlYmdsVGV4dHVyZUN1YmUpOnZvaWQgMCE9PWEuX193ZWJnbEluaXQmJihtLmRlbGV0ZVRleHR1cmUoYS5fX3dlYmdsVGV4dHVyZSksZGVsZXRlIGEuX193ZWJnbFRleHR1cmUsZGVsZXRlIGEuX193ZWJnbEluaXQpO0IuaW5mby5tZW1vcnkudGV4dHVyZXMtLX0sb2M9ZnVuY3Rpb24oYSl7YT1hLnRhcmdldDthLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJkaXNwb3NlXCIsXG5vYyk7aWYoYSYmdm9pZCAwIT09YS5fX3dlYmdsVGV4dHVyZSl7bS5kZWxldGVUZXh0dXJlKGEuX193ZWJnbFRleHR1cmUpO2RlbGV0ZSBhLl9fd2ViZ2xUZXh0dXJlO2lmKGEgaW5zdGFuY2VvZiBUSFJFRS5XZWJHTFJlbmRlclRhcmdldEN1YmUpZm9yKHZhciBiPTA7Nj5iO2IrKyltLmRlbGV0ZUZyYW1lYnVmZmVyKGEuX193ZWJnbEZyYW1lYnVmZmVyW2JdKSxtLmRlbGV0ZVJlbmRlcmJ1ZmZlcihhLl9fd2ViZ2xSZW5kZXJidWZmZXJbYl0pO2Vsc2UgbS5kZWxldGVGcmFtZWJ1ZmZlcihhLl9fd2ViZ2xGcmFtZWJ1ZmZlciksbS5kZWxldGVSZW5kZXJidWZmZXIoYS5fX3dlYmdsUmVuZGVyYnVmZmVyKTtkZWxldGUgYS5fX3dlYmdsRnJhbWVidWZmZXI7ZGVsZXRlIGEuX193ZWJnbFJlbmRlcmJ1ZmZlcn1CLmluZm8ubWVtb3J5LnRleHR1cmVzLS19LGljPWZ1bmN0aW9uKGEpe2E9YS50YXJnZXQ7YS5yZW1vdmVFdmVudExpc3RlbmVyKFwiZGlzcG9zZVwiLGljKTtoYyhhKX0sbmM9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPVxuXCJfX3dlYmdsVmVydGV4QnVmZmVyIF9fd2ViZ2xOb3JtYWxCdWZmZXIgX193ZWJnbFRhbmdlbnRCdWZmZXIgX193ZWJnbENvbG9yQnVmZmVyIF9fd2ViZ2xVVkJ1ZmZlciBfX3dlYmdsVVYyQnVmZmVyIF9fd2ViZ2xTa2luSW5kaWNlc0J1ZmZlciBfX3dlYmdsU2tpbldlaWdodHNCdWZmZXIgX193ZWJnbEZhY2VCdWZmZXIgX193ZWJnbExpbmVCdWZmZXIgX193ZWJnbExpbmVEaXN0YW5jZUJ1ZmZlclwiLnNwbGl0KFwiIFwiKSxjPTAsZD1iLmxlbmd0aDtjPGQ7YysrKXt2YXIgZT1iW2NdO3ZvaWQgMCE9PWFbZV0mJihtLmRlbGV0ZUJ1ZmZlcihhW2VdKSxkZWxldGUgYVtlXSl9aWYodm9pZCAwIT09YS5fX3dlYmdsQ3VzdG9tQXR0cmlidXRlc0xpc3Qpe2ZvcihlIGluIGEuX193ZWJnbEN1c3RvbUF0dHJpYnV0ZXNMaXN0KW0uZGVsZXRlQnVmZmVyKGEuX193ZWJnbEN1c3RvbUF0dHJpYnV0ZXNMaXN0W2VdLmJ1ZmZlcik7ZGVsZXRlIGEuX193ZWJnbEN1c3RvbUF0dHJpYnV0ZXNMaXN0fUIuaW5mby5tZW1vcnkuZ2VvbWV0cmllcy0tfSxcbmhjPWZ1bmN0aW9uKGEpe3ZhciBiPWEucHJvZ3JhbS5wcm9ncmFtO2lmKHZvaWQgMCE9PWIpe2EucHJvZ3JhbT12b2lkIDA7dmFyIGMsZCxlPSExO2E9MDtmb3IoYz1QYS5sZW5ndGg7YTxjO2ErKylpZihkPVBhW2FdLGQucHJvZ3JhbT09PWIpe2QudXNlZFRpbWVzLS07MD09PWQudXNlZFRpbWVzJiYoZT0hMCk7YnJlYWt9aWYoITA9PT1lKXtlPVtdO2E9MDtmb3IoYz1QYS5sZW5ndGg7YTxjO2ErKylkPVBhW2FdLGQucHJvZ3JhbSE9PWImJmUucHVzaChkKTtQYT1lO20uZGVsZXRlUHJvZ3JhbShiKTtCLmluZm8ubWVtb3J5LnByb2dyYW1zLS19fX07dGhpcy5yZW5kZXJCdWZmZXJJbW1lZGlhdGU9ZnVuY3Rpb24oYSxiLGMpe1cuaW5pdEF0dHJpYnV0ZXMoKTthLmhhc1Bvc2l0aW9ucyYmIWEuX193ZWJnbFZlcnRleEJ1ZmZlciYmKGEuX193ZWJnbFZlcnRleEJ1ZmZlcj1tLmNyZWF0ZUJ1ZmZlcigpKTthLmhhc05vcm1hbHMmJiFhLl9fd2ViZ2xOb3JtYWxCdWZmZXImJihhLl9fd2ViZ2xOb3JtYWxCdWZmZXI9XG5tLmNyZWF0ZUJ1ZmZlcigpKTthLmhhc1V2cyYmIWEuX193ZWJnbFV2QnVmZmVyJiYoYS5fX3dlYmdsVXZCdWZmZXI9bS5jcmVhdGVCdWZmZXIoKSk7YS5oYXNDb2xvcnMmJiFhLl9fd2ViZ2xDb2xvckJ1ZmZlciYmKGEuX193ZWJnbENvbG9yQnVmZmVyPW0uY3JlYXRlQnVmZmVyKCkpO2EuaGFzUG9zaXRpb25zJiYobS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLGEuX193ZWJnbFZlcnRleEJ1ZmZlciksbS5idWZmZXJEYXRhKG0uQVJSQVlfQlVGRkVSLGEucG9zaXRpb25BcnJheSxtLkRZTkFNSUNfRFJBVyksVy5lbmFibGVBdHRyaWJ1dGUoYi5hdHRyaWJ1dGVzLnBvc2l0aW9uKSxtLnZlcnRleEF0dHJpYlBvaW50ZXIoYi5hdHRyaWJ1dGVzLnBvc2l0aW9uLDMsbS5GTE9BVCwhMSwwLDApKTtpZihhLmhhc05vcm1hbHMpe20uYmluZEJ1ZmZlcihtLkFSUkFZX0JVRkZFUixhLl9fd2ViZ2xOb3JtYWxCdWZmZXIpO2lmKCExPT09YyBpbnN0YW5jZW9mIFRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsJiZcbmMuc2hhZGluZz09PVRIUkVFLkZsYXRTaGFkaW5nKXt2YXIgZCxlLGYsZyxoLGssbixsLHAscSxyLHM9MyphLmNvdW50O2ZvcihyPTA7cjxzO3IrPTkpcT1hLm5vcm1hbEFycmF5LGQ9cVtyXSxlPXFbcisxXSxmPXFbcisyXSxnPXFbciszXSxrPXFbcis0XSxsPXFbcis1XSxoPXFbcis2XSxuPXFbcis3XSxwPXFbcis4XSxkPShkK2craCkvMyxlPShlK2srbikvMyxmPShmK2wrcCkvMyxxW3JdPWQscVtyKzFdPWUscVtyKzJdPWYscVtyKzNdPWQscVtyKzRdPWUscVtyKzVdPWYscVtyKzZdPWQscVtyKzddPWUscVtyKzhdPWZ9bS5idWZmZXJEYXRhKG0uQVJSQVlfQlVGRkVSLGEubm9ybWFsQXJyYXksbS5EWU5BTUlDX0RSQVcpO1cuZW5hYmxlQXR0cmlidXRlKGIuYXR0cmlidXRlcy5ub3JtYWwpO20udmVydGV4QXR0cmliUG9pbnRlcihiLmF0dHJpYnV0ZXMubm9ybWFsLDMsbS5GTE9BVCwhMSwwLDApfWEuaGFzVXZzJiZjLm1hcCYmKG0uYmluZEJ1ZmZlcihtLkFSUkFZX0JVRkZFUixhLl9fd2ViZ2xVdkJ1ZmZlciksXG5tLmJ1ZmZlckRhdGEobS5BUlJBWV9CVUZGRVIsYS51dkFycmF5LG0uRFlOQU1JQ19EUkFXKSxXLmVuYWJsZUF0dHJpYnV0ZShiLmF0dHJpYnV0ZXMudXYpLG0udmVydGV4QXR0cmliUG9pbnRlcihiLmF0dHJpYnV0ZXMudXYsMixtLkZMT0FULCExLDAsMCkpO2EuaGFzQ29sb3JzJiZjLnZlcnRleENvbG9ycyE9PVRIUkVFLk5vQ29sb3JzJiYobS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLGEuX193ZWJnbENvbG9yQnVmZmVyKSxtLmJ1ZmZlckRhdGEobS5BUlJBWV9CVUZGRVIsYS5jb2xvckFycmF5LG0uRFlOQU1JQ19EUkFXKSxXLmVuYWJsZUF0dHJpYnV0ZShiLmF0dHJpYnV0ZXMuY29sb3IpLG0udmVydGV4QXR0cmliUG9pbnRlcihiLmF0dHJpYnV0ZXMuY29sb3IsMyxtLkZMT0FULCExLDAsMCkpO1cuZGlzYWJsZVVudXNlZEF0dHJpYnV0ZXMoKTttLmRyYXdBcnJheXMobS5UUklBTkdMRVMsMCxhLmNvdW50KTthLmNvdW50PTB9O3RoaXMucmVuZGVyQnVmZmVyRGlyZWN0PWZ1bmN0aW9uKGEsXG5iLGMsZSxmLGcpe2lmKCExIT09ZS52aXNpYmxlKWlmKHQoZyksYT12KGEsYixjLGUsZyksYj0hMSxjPVwiZGlyZWN0X1wiK2YuaWQrXCJfXCIrYS5pZCtcIl9cIisoZS53aXJlZnJhbWU/MTowKSxjIT09dGEmJih0YT1jLGI9ITApLGImJlcuaW5pdEF0dHJpYnV0ZXMoKSxnIGluc3RhbmNlb2YgVEhSRUUuTWVzaCl7Zz0hMD09PWUud2lyZWZyYW1lP20uTElORVM6bS5UUklBTkdMRVM7dmFyIGg9Zi5hdHRyaWJ1dGVzLmluZGV4O2lmKGgpe3ZhciBrLG47aC5hcnJheSBpbnN0YW5jZW9mIFVpbnQzMkFycmF5JiZkYS5nZXQoXCJPRVNfZWxlbWVudF9pbmRleF91aW50XCIpPyhrPW0uVU5TSUdORURfSU5ULG49NCk6KGs9bS5VTlNJR05FRF9TSE9SVCxuPTIpO2M9Zi5vZmZzZXRzO2lmKDA9PT1jLmxlbmd0aCliJiYoZChlLGEsZiwwKSxtLmJpbmRCdWZmZXIobS5FTEVNRU5UX0FSUkFZX0JVRkZFUixoLmJ1ZmZlcikpLG0uZHJhd0VsZW1lbnRzKGcsaC5hcnJheS5sZW5ndGgsaywwKSxCLmluZm8ucmVuZGVyLmNhbGxzKyssXG5CLmluZm8ucmVuZGVyLnZlcnRpY2VzKz1oLmFycmF5Lmxlbmd0aCxCLmluZm8ucmVuZGVyLmZhY2VzKz1oLmFycmF5Lmxlbmd0aC8zO2Vsc2V7Yj0hMDtmb3IodmFyIGw9MCxwPWMubGVuZ3RoO2w8cDtsKyspe3ZhciBxPWNbbF0uaW5kZXg7YiYmKGQoZSxhLGYscSksbS5iaW5kQnVmZmVyKG0uRUxFTUVOVF9BUlJBWV9CVUZGRVIsaC5idWZmZXIpKTttLmRyYXdFbGVtZW50cyhnLGNbbF0uY291bnQsayxjW2xdLnN0YXJ0Km4pO0IuaW5mby5yZW5kZXIuY2FsbHMrKztCLmluZm8ucmVuZGVyLnZlcnRpY2VzKz1jW2xdLmNvdW50O0IuaW5mby5yZW5kZXIuZmFjZXMrPWNbbF0uY291bnQvM319fWVsc2UgYiYmZChlLGEsZiwwKSxlPWYuYXR0cmlidXRlcy5wb3NpdGlvbixtLmRyYXdBcnJheXMoZywwLGUuYXJyYXkubGVuZ3RoL2UuaXRlbVNpemUpLEIuaW5mby5yZW5kZXIuY2FsbHMrKyxCLmluZm8ucmVuZGVyLnZlcnRpY2VzKz1lLmFycmF5Lmxlbmd0aC9lLml0ZW1TaXplLEIuaW5mby5yZW5kZXIuZmFjZXMrPVxuZS5hcnJheS5sZW5ndGgvKDMqZS5pdGVtU2l6ZSl9ZWxzZSBpZihnIGluc3RhbmNlb2YgVEhSRUUuUG9pbnRDbG91ZClpZihnPW0uUE9JTlRTLGg9Zi5hdHRyaWJ1dGVzLmluZGV4KWlmKGguYXJyYXkgaW5zdGFuY2VvZiBVaW50MzJBcnJheSYmZGEuZ2V0KFwiT0VTX2VsZW1lbnRfaW5kZXhfdWludFwiKT8oaz1tLlVOU0lHTkVEX0lOVCxuPTQpOihrPW0uVU5TSUdORURfU0hPUlQsbj0yKSxjPWYub2Zmc2V0cywwPT09Yy5sZW5ndGgpYiYmKGQoZSxhLGYsMCksbS5iaW5kQnVmZmVyKG0uRUxFTUVOVF9BUlJBWV9CVUZGRVIsaC5idWZmZXIpKSxtLmRyYXdFbGVtZW50cyhnLGguYXJyYXkubGVuZ3RoLGssMCksQi5pbmZvLnJlbmRlci5jYWxscysrLEIuaW5mby5yZW5kZXIucG9pbnRzKz1oLmFycmF5Lmxlbmd0aDtlbHNlIGZvcigxPGMubGVuZ3RoJiYoYj0hMCksbD0wLHA9Yy5sZW5ndGg7bDxwO2wrKylxPWNbbF0uaW5kZXgsYiYmKGQoZSxhLGYscSksbS5iaW5kQnVmZmVyKG0uRUxFTUVOVF9BUlJBWV9CVUZGRVIsXG5oLmJ1ZmZlcikpLG0uZHJhd0VsZW1lbnRzKGcsY1tsXS5jb3VudCxrLGNbbF0uc3RhcnQqbiksQi5pbmZvLnJlbmRlci5jYWxscysrLEIuaW5mby5yZW5kZXIucG9pbnRzKz1jW2xdLmNvdW50O2Vsc2UgaWYoYiYmZChlLGEsZiwwKSxlPWYuYXR0cmlidXRlcy5wb3NpdGlvbixjPWYub2Zmc2V0cywwPT09Yy5sZW5ndGgpbS5kcmF3QXJyYXlzKGcsMCxlLmFycmF5Lmxlbmd0aC8zKSxCLmluZm8ucmVuZGVyLmNhbGxzKyssQi5pbmZvLnJlbmRlci5wb2ludHMrPWUuYXJyYXkubGVuZ3RoLzM7ZWxzZSBmb3IobD0wLHA9Yy5sZW5ndGg7bDxwO2wrKyltLmRyYXdBcnJheXMoZyxjW2xdLmluZGV4LGNbbF0uY291bnQpLEIuaW5mby5yZW5kZXIuY2FsbHMrKyxCLmluZm8ucmVuZGVyLnBvaW50cys9Y1tsXS5jb3VudDtlbHNlIGlmKGcgaW5zdGFuY2VvZiBUSFJFRS5MaW5lKWlmKGc9Zy5tb2RlPT09VEhSRUUuTGluZVN0cmlwP20uTElORV9TVFJJUDptLkxJTkVTLFcuc2V0TGluZVdpZHRoKGUubGluZXdpZHRoKlxuSCksaD1mLmF0dHJpYnV0ZXMuaW5kZXgpaWYoaC5hcnJheSBpbnN0YW5jZW9mIFVpbnQzMkFycmF5PyhrPW0uVU5TSUdORURfSU5ULG49NCk6KGs9bS5VTlNJR05FRF9TSE9SVCxuPTIpLGM9Zi5vZmZzZXRzLDA9PT1jLmxlbmd0aCliJiYoZChlLGEsZiwwKSxtLmJpbmRCdWZmZXIobS5FTEVNRU5UX0FSUkFZX0JVRkZFUixoLmJ1ZmZlcikpLG0uZHJhd0VsZW1lbnRzKGcsaC5hcnJheS5sZW5ndGgsaywwKSxCLmluZm8ucmVuZGVyLmNhbGxzKyssQi5pbmZvLnJlbmRlci52ZXJ0aWNlcys9aC5hcnJheS5sZW5ndGg7ZWxzZSBmb3IoMTxjLmxlbmd0aCYmKGI9ITApLGw9MCxwPWMubGVuZ3RoO2w8cDtsKyspcT1jW2xdLmluZGV4LGImJihkKGUsYSxmLHEpLG0uYmluZEJ1ZmZlcihtLkVMRU1FTlRfQVJSQVlfQlVGRkVSLGguYnVmZmVyKSksbS5kcmF3RWxlbWVudHMoZyxjW2xdLmNvdW50LGssY1tsXS5zdGFydCpuKSxCLmluZm8ucmVuZGVyLmNhbGxzKyssQi5pbmZvLnJlbmRlci52ZXJ0aWNlcys9XG5jW2xdLmNvdW50O2Vsc2UgaWYoYiYmZChlLGEsZiwwKSxlPWYuYXR0cmlidXRlcy5wb3NpdGlvbixjPWYub2Zmc2V0cywwPT09Yy5sZW5ndGgpbS5kcmF3QXJyYXlzKGcsMCxlLmFycmF5Lmxlbmd0aC8zKSxCLmluZm8ucmVuZGVyLmNhbGxzKyssQi5pbmZvLnJlbmRlci52ZXJ0aWNlcys9ZS5hcnJheS5sZW5ndGgvMztlbHNlIGZvcihsPTAscD1jLmxlbmd0aDtsPHA7bCsrKW0uZHJhd0FycmF5cyhnLGNbbF0uaW5kZXgsY1tsXS5jb3VudCksQi5pbmZvLnJlbmRlci5jYWxscysrLEIuaW5mby5yZW5kZXIudmVydGljZXMrPWNbbF0uY291bnR9O3RoaXMucmVuZGVyQnVmZmVyPWZ1bmN0aW9uKGEsYixjLGQsZSxmKXtpZighMSE9PWQudmlzaWJsZSl7dChmKTtjPXYoYSxiLGMsZCxmKTtiPWMuYXR0cmlidXRlczthPSExO2M9ZS5pZCtcIl9cIitjLmlkK1wiX1wiKyhkLndpcmVmcmFtZT8xOjApO2MhPT10YSYmKHRhPWMsYT0hMCk7YSYmVy5pbml0QXR0cmlidXRlcygpO2lmKCFkLm1vcnBoVGFyZ2V0cyYmXG4wPD1iLnBvc2l0aW9uKWEmJihtLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsZS5fX3dlYmdsVmVydGV4QnVmZmVyKSxXLmVuYWJsZUF0dHJpYnV0ZShiLnBvc2l0aW9uKSxtLnZlcnRleEF0dHJpYlBvaW50ZXIoYi5wb3NpdGlvbiwzLG0uRkxPQVQsITEsMCwwKSk7ZWxzZSBpZihmLm1vcnBoVGFyZ2V0QmFzZSl7Yz1kLnByb2dyYW0uYXR0cmlidXRlczstMSE9PWYubW9ycGhUYXJnZXRCYXNlJiYwPD1jLnBvc2l0aW9uPyhtLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsZS5fX3dlYmdsTW9ycGhUYXJnZXRzQnVmZmVyc1tmLm1vcnBoVGFyZ2V0QmFzZV0pLFcuZW5hYmxlQXR0cmlidXRlKGMucG9zaXRpb24pLG0udmVydGV4QXR0cmliUG9pbnRlcihjLnBvc2l0aW9uLDMsbS5GTE9BVCwhMSwwLDApKTowPD1jLnBvc2l0aW9uJiYobS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLGUuX193ZWJnbFZlcnRleEJ1ZmZlciksVy5lbmFibGVBdHRyaWJ1dGUoYy5wb3NpdGlvbiksbS52ZXJ0ZXhBdHRyaWJQb2ludGVyKGMucG9zaXRpb24sXG4zLG0uRkxPQVQsITEsMCwwKSk7aWYoZi5tb3JwaFRhcmdldEZvcmNlZE9yZGVyLmxlbmd0aClmb3IodmFyIGg9MCxrPWYubW9ycGhUYXJnZXRGb3JjZWRPcmRlcixuPWYubW9ycGhUYXJnZXRJbmZsdWVuY2VzLGw7aDxkLm51bVN1cHBvcnRlZE1vcnBoVGFyZ2V0cyYmaDxrLmxlbmd0aDspbD1jW1wibW9ycGhUYXJnZXRcIitoXSwwPD1sJiYobS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLGUuX193ZWJnbE1vcnBoVGFyZ2V0c0J1ZmZlcnNba1toXV0pLFcuZW5hYmxlQXR0cmlidXRlKGwpLG0udmVydGV4QXR0cmliUG9pbnRlcihsLDMsbS5GTE9BVCwhMSwwLDApKSxsPWNbXCJtb3JwaE5vcm1hbFwiK2hdLDA8PWwmJmQubW9ycGhOb3JtYWxzJiYobS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLGUuX193ZWJnbE1vcnBoTm9ybWFsc0J1ZmZlcnNba1toXV0pLFcuZW5hYmxlQXR0cmlidXRlKGwpLG0udmVydGV4QXR0cmliUG9pbnRlcihsLDMsbS5GTE9BVCwhMSwwLDApKSxmLl9fd2ViZ2xNb3JwaFRhcmdldEluZmx1ZW5jZXNbaF09XG5uW2tbaF1dLGgrKztlbHNle2s9W107bj1mLm1vcnBoVGFyZ2V0SW5mbHVlbmNlcztoPWYuZ2VvbWV0cnkubW9ycGhUYXJnZXRzO24ubGVuZ3RoPmgubGVuZ3RoJiYoY29uc29sZS53YXJuKFwiVEhSRUUuV2ViR0xSZW5kZXJlcjogSW5mbHVlbmNlcyBhcnJheSBpcyBiaWdnZXIgdGhhbiBtb3JwaFRhcmdldHMgYXJyYXkuXCIpLG4ubGVuZ3RoPWgubGVuZ3RoKTtoPTA7Zm9yKGw9bi5sZW5ndGg7aDxsO2grKylrLnB1c2goW25baF0saF0pO2subGVuZ3RoPmQubnVtU3VwcG9ydGVkTW9ycGhUYXJnZXRzPyhrLnNvcnQoZyksay5sZW5ndGg9ZC5udW1TdXBwb3J0ZWRNb3JwaFRhcmdldHMpOmsubGVuZ3RoPmQubnVtU3VwcG9ydGVkTW9ycGhOb3JtYWxzP2suc29ydChnKTowPT09ay5sZW5ndGgmJmsucHVzaChbMCwwXSk7Zm9yKHZhciBoPTAscD1kLm51bVN1cHBvcnRlZE1vcnBoVGFyZ2V0cztoPHA7aCsrKWlmKGtbaF0pe3ZhciBxPWtbaF1bMV07bD1jW1wibW9ycGhUYXJnZXRcIitoXTswPD1sJiZcbihtLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsZS5fX3dlYmdsTW9ycGhUYXJnZXRzQnVmZmVyc1txXSksVy5lbmFibGVBdHRyaWJ1dGUobCksbS52ZXJ0ZXhBdHRyaWJQb2ludGVyKGwsMyxtLkZMT0FULCExLDAsMCkpO2w9Y1tcIm1vcnBoTm9ybWFsXCIraF07MDw9bCYmZC5tb3JwaE5vcm1hbHMmJihtLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsZS5fX3dlYmdsTW9ycGhOb3JtYWxzQnVmZmVyc1txXSksVy5lbmFibGVBdHRyaWJ1dGUobCksbS52ZXJ0ZXhBdHRyaWJQb2ludGVyKGwsMyxtLkZMT0FULCExLDAsMCkpO2YuX193ZWJnbE1vcnBoVGFyZ2V0SW5mbHVlbmNlc1toXT1uW3FdfWVsc2UgZi5fX3dlYmdsTW9ycGhUYXJnZXRJbmZsdWVuY2VzW2hdPTB9bnVsbCE9PWQucHJvZ3JhbS51bmlmb3Jtcy5tb3JwaFRhcmdldEluZmx1ZW5jZXMmJm0udW5pZm9ybTFmdihkLnByb2dyYW0udW5pZm9ybXMubW9ycGhUYXJnZXRJbmZsdWVuY2VzLGYuX193ZWJnbE1vcnBoVGFyZ2V0SW5mbHVlbmNlcyl9aWYoYSl7aWYoZS5fX3dlYmdsQ3VzdG9tQXR0cmlidXRlc0xpc3QpZm9yKGM9XG4wLG49ZS5fX3dlYmdsQ3VzdG9tQXR0cmlidXRlc0xpc3QubGVuZ3RoO2M8bjtjKyspaz1lLl9fd2ViZ2xDdXN0b21BdHRyaWJ1dGVzTGlzdFtjXSwwPD1iW2suYnVmZmVyLmJlbG9uZ3NUb0F0dHJpYnV0ZV0mJihtLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsay5idWZmZXIpLFcuZW5hYmxlQXR0cmlidXRlKGJbay5idWZmZXIuYmVsb25nc1RvQXR0cmlidXRlXSksbS52ZXJ0ZXhBdHRyaWJQb2ludGVyKGJbay5idWZmZXIuYmVsb25nc1RvQXR0cmlidXRlXSxrLnNpemUsbS5GTE9BVCwhMSwwLDApKTswPD1iLmNvbG9yJiYoMDxmLmdlb21ldHJ5LmNvbG9ycy5sZW5ndGh8fDA8Zi5nZW9tZXRyeS5mYWNlcy5sZW5ndGg/KG0uYmluZEJ1ZmZlcihtLkFSUkFZX0JVRkZFUixlLl9fd2ViZ2xDb2xvckJ1ZmZlciksVy5lbmFibGVBdHRyaWJ1dGUoYi5jb2xvciksbS52ZXJ0ZXhBdHRyaWJQb2ludGVyKGIuY29sb3IsMyxtLkZMT0FULCExLDAsMCkpOnZvaWQgMCE9PWQuZGVmYXVsdEF0dHJpYnV0ZVZhbHVlcyYmXG5tLnZlcnRleEF0dHJpYjNmdihiLmNvbG9yLGQuZGVmYXVsdEF0dHJpYnV0ZVZhbHVlcy5jb2xvcikpOzA8PWIubm9ybWFsJiYobS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLGUuX193ZWJnbE5vcm1hbEJ1ZmZlciksVy5lbmFibGVBdHRyaWJ1dGUoYi5ub3JtYWwpLG0udmVydGV4QXR0cmliUG9pbnRlcihiLm5vcm1hbCwzLG0uRkxPQVQsITEsMCwwKSk7MDw9Yi50YW5nZW50JiYobS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLGUuX193ZWJnbFRhbmdlbnRCdWZmZXIpLFcuZW5hYmxlQXR0cmlidXRlKGIudGFuZ2VudCksbS52ZXJ0ZXhBdHRyaWJQb2ludGVyKGIudGFuZ2VudCw0LG0uRkxPQVQsITEsMCwwKSk7MDw9Yi51diYmKGYuZ2VvbWV0cnkuZmFjZVZlcnRleFV2c1swXT8obS5iaW5kQnVmZmVyKG0uQVJSQVlfQlVGRkVSLGUuX193ZWJnbFVWQnVmZmVyKSxXLmVuYWJsZUF0dHJpYnV0ZShiLnV2KSxtLnZlcnRleEF0dHJpYlBvaW50ZXIoYi51diwyLG0uRkxPQVQsITEsMCxcbjApKTp2b2lkIDAhPT1kLmRlZmF1bHRBdHRyaWJ1dGVWYWx1ZXMmJm0udmVydGV4QXR0cmliMmZ2KGIudXYsZC5kZWZhdWx0QXR0cmlidXRlVmFsdWVzLnV2KSk7MDw9Yi51djImJihmLmdlb21ldHJ5LmZhY2VWZXJ0ZXhVdnNbMV0/KG0uYmluZEJ1ZmZlcihtLkFSUkFZX0JVRkZFUixlLl9fd2ViZ2xVVjJCdWZmZXIpLFcuZW5hYmxlQXR0cmlidXRlKGIudXYyKSxtLnZlcnRleEF0dHJpYlBvaW50ZXIoYi51djIsMixtLkZMT0FULCExLDAsMCkpOnZvaWQgMCE9PWQuZGVmYXVsdEF0dHJpYnV0ZVZhbHVlcyYmbS52ZXJ0ZXhBdHRyaWIyZnYoYi51djIsZC5kZWZhdWx0QXR0cmlidXRlVmFsdWVzLnV2MikpO2Quc2tpbm5pbmcmJjA8PWIuc2tpbkluZGV4JiYwPD1iLnNraW5XZWlnaHQmJihtLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsZS5fX3dlYmdsU2tpbkluZGljZXNCdWZmZXIpLFcuZW5hYmxlQXR0cmlidXRlKGIuc2tpbkluZGV4KSxtLnZlcnRleEF0dHJpYlBvaW50ZXIoYi5za2luSW5kZXgsXG40LG0uRkxPQVQsITEsMCwwKSxtLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsZS5fX3dlYmdsU2tpbldlaWdodHNCdWZmZXIpLFcuZW5hYmxlQXR0cmlidXRlKGIuc2tpbldlaWdodCksbS52ZXJ0ZXhBdHRyaWJQb2ludGVyKGIuc2tpbldlaWdodCw0LG0uRkxPQVQsITEsMCwwKSk7MDw9Yi5saW5lRGlzdGFuY2UmJihtLmJpbmRCdWZmZXIobS5BUlJBWV9CVUZGRVIsZS5fX3dlYmdsTGluZURpc3RhbmNlQnVmZmVyKSxXLmVuYWJsZUF0dHJpYnV0ZShiLmxpbmVEaXN0YW5jZSksbS52ZXJ0ZXhBdHRyaWJQb2ludGVyKGIubGluZURpc3RhbmNlLDEsbS5GTE9BVCwhMSwwLDApKX1XLmRpc2FibGVVbnVzZWRBdHRyaWJ1dGVzKCk7ZiBpbnN0YW5jZW9mIFRIUkVFLk1lc2g/KGY9ZS5fX3R5cGVBcnJheT09PVVpbnQzMkFycmF5P20uVU5TSUdORURfSU5UOm0uVU5TSUdORURfU0hPUlQsZC53aXJlZnJhbWU/KFcuc2V0TGluZVdpZHRoKGQud2lyZWZyYW1lTGluZXdpZHRoKkgpLGEmJm0uYmluZEJ1ZmZlcihtLkVMRU1FTlRfQVJSQVlfQlVGRkVSLFxuZS5fX3dlYmdsTGluZUJ1ZmZlciksbS5kcmF3RWxlbWVudHMobS5MSU5FUyxlLl9fd2ViZ2xMaW5lQ291bnQsZiwwKSk6KGEmJm0uYmluZEJ1ZmZlcihtLkVMRU1FTlRfQVJSQVlfQlVGRkVSLGUuX193ZWJnbEZhY2VCdWZmZXIpLG0uZHJhd0VsZW1lbnRzKG0uVFJJQU5HTEVTLGUuX193ZWJnbEZhY2VDb3VudCxmLDApKSxCLmluZm8ucmVuZGVyLmNhbGxzKyssQi5pbmZvLnJlbmRlci52ZXJ0aWNlcys9ZS5fX3dlYmdsRmFjZUNvdW50LEIuaW5mby5yZW5kZXIuZmFjZXMrPWUuX193ZWJnbEZhY2VDb3VudC8zKTpmIGluc3RhbmNlb2YgVEhSRUUuTGluZT8oZj1mLm1vZGU9PT1USFJFRS5MaW5lU3RyaXA/bS5MSU5FX1NUUklQOm0uTElORVMsVy5zZXRMaW5lV2lkdGgoZC5saW5ld2lkdGgqSCksbS5kcmF3QXJyYXlzKGYsMCxlLl9fd2ViZ2xMaW5lQ291bnQpLEIuaW5mby5yZW5kZXIuY2FsbHMrKyk6ZiBpbnN0YW5jZW9mIFRIUkVFLlBvaW50Q2xvdWQmJihtLmRyYXdBcnJheXMobS5QT0lOVFMsXG4wLGUuX193ZWJnbFBhcnRpY2xlQ291bnQpLEIuaW5mby5yZW5kZXIuY2FsbHMrKyxCLmluZm8ucmVuZGVyLnBvaW50cys9ZS5fX3dlYmdsUGFydGljbGVDb3VudCl9fTt0aGlzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyxkKXtpZighMT09PWIgaW5zdGFuY2VvZiBUSFJFRS5DYW1lcmEpVEhSRUUuZXJyb3IoXCJUSFJFRS5XZWJHTFJlbmRlcmVyLnJlbmRlcjogY2FtZXJhIGlzIG5vdCBhbiBpbnN0YW5jZSBvZiBUSFJFRS5DYW1lcmEuXCIpO2Vsc2V7dmFyIGc9YS5mb2c7dGE9XCJcIjt1Yj0tMTt2Yj1udWxsO09iPSEwOyEwPT09YS5hdXRvVXBkYXRlJiZhLnVwZGF0ZU1hdHJpeFdvcmxkKCk7dm9pZCAwPT09Yi5wYXJlbnQmJmIudXBkYXRlTWF0cml4V29ybGQoKTthLnRyYXZlcnNlKGZ1bmN0aW9uKGEpe2EgaW5zdGFuY2VvZiBUSFJFRS5Ta2lubmVkTWVzaCYmYS5za2VsZXRvbi51cGRhdGUoKX0pO2IubWF0cml4V29ybGRJbnZlcnNlLmdldEludmVyc2UoYi5tYXRyaXhXb3JsZCk7ZGIubXVsdGlwbHlNYXRyaWNlcyhiLnByb2plY3Rpb25NYXRyaXgsXG5iLm1hdHJpeFdvcmxkSW52ZXJzZSk7Y2Iuc2V0RnJvbU1hdHJpeChkYik7Y2EubGVuZ3RoPTA7S2EubGVuZ3RoPTA7UWEubGVuZ3RoPTA7WGEubGVuZ3RoPTA7WWEubGVuZ3RoPTA7aChhKTshMD09PUIuc29ydE9iamVjdHMmJihLYS5zb3J0KGUpLFFhLnNvcnQoZikpO3pjLnJlbmRlcihhLGIpO0IuaW5mby5yZW5kZXIuY2FsbHM9MDtCLmluZm8ucmVuZGVyLnZlcnRpY2VzPTA7Qi5pbmZvLnJlbmRlci5mYWNlcz0wO0IuaW5mby5yZW5kZXIucG9pbnRzPTA7dGhpcy5zZXRSZW5kZXJUYXJnZXQoYyk7KHRoaXMuYXV0b0NsZWFyfHxkKSYmdGhpcy5jbGVhcih0aGlzLmF1dG9DbGVhckNvbG9yLHRoaXMuYXV0b0NsZWFyRGVwdGgsdGhpcy5hdXRvQ2xlYXJTdGVuY2lsKTtkPTA7Zm9yKHZhciBuPXFhLmxlbmd0aDtkPG47ZCsrKXt2YXIgbT1xYVtkXSxxPW0ub2JqZWN0O3EudmlzaWJsZSYmKHcocSxiKSxwKG0pKX1hLm92ZXJyaWRlTWF0ZXJpYWw/KGQ9YS5vdmVycmlkZU1hdGVyaWFsLHUoZCksXG5rKEthLGIsY2EsZyxkKSxrKFFhLGIsY2EsZyxkKSxsKHFhLFwiXCIsYixjYSxnLGQpKTooVy5zZXRCbGVuZGluZyhUSFJFRS5Ob0JsZW5kaW5nKSxrKEthLGIsY2EsZyxudWxsKSxsKHFhLFwib3BhcXVlXCIsYixjYSxnLG51bGwpLGsoUWEsYixjYSxnLG51bGwpLGwocWEsXCJ0cmFuc3BhcmVudFwiLGIsY2EsZyxudWxsKSk7QWMucmVuZGVyKGEsYik7QmMucmVuZGVyKGEsYixYYixmYyk7YyYmYy5nZW5lcmF0ZU1pcG1hcHMmJmMubWluRmlsdGVyIT09VEhSRUUuTmVhcmVzdEZpbHRlciYmYy5taW5GaWx0ZXIhPT1USFJFRS5MaW5lYXJGaWx0ZXImJkYoYyk7Vy5zZXREZXB0aFRlc3QoITApO1cuc2V0RGVwdGhXcml0ZSghMCk7Vy5zZXRDb2xvcldyaXRlKCEwKX19O3RoaXMucmVuZGVySW1tZWRpYXRlT2JqZWN0PWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9dihhLGIsYyxkLGUpO3RhPVwiXCI7Qi5zZXRNYXRlcmlhbEZhY2VzKGQpO2UuaW1tZWRpYXRlUmVuZGVyQ2FsbGJhY2s/ZS5pbW1lZGlhdGVSZW5kZXJDYWxsYmFjayhmLFxubSxjYik6ZS5yZW5kZXIoZnVuY3Rpb24oYSl7Qi5yZW5kZXJCdWZmZXJJbW1lZGlhdGUoYSxmLGQpfSl9O3ZhciBVYT17fSxRYj0wLHBjPXtNZXNoRGVwdGhNYXRlcmlhbDpcImRlcHRoXCIsTWVzaE5vcm1hbE1hdGVyaWFsOlwibm9ybWFsXCIsTWVzaEJhc2ljTWF0ZXJpYWw6XCJiYXNpY1wiLE1lc2hMYW1iZXJ0TWF0ZXJpYWw6XCJsYW1iZXJ0XCIsTWVzaFBob25nTWF0ZXJpYWw6XCJwaG9uZ1wiLExpbmVCYXNpY01hdGVyaWFsOlwiYmFzaWNcIixMaW5lRGFzaGVkTWF0ZXJpYWw6XCJkYXNoZWRcIixQb2ludENsb3VkTWF0ZXJpYWw6XCJwYXJ0aWNsZV9iYXNpY1wifTt0aGlzLnNldEZhY2VDdWxsaW5nPWZ1bmN0aW9uKGEsYil7YT09PVRIUkVFLkN1bGxGYWNlTm9uZT9tLmRpc2FibGUobS5DVUxMX0ZBQ0UpOihiPT09VEhSRUUuRnJvbnRGYWNlRGlyZWN0aW9uQ1c/bS5mcm9udEZhY2UobS5DVyk6bS5mcm9udEZhY2UobS5DQ1cpLGE9PT1USFJFRS5DdWxsRmFjZUJhY2s/bS5jdWxsRmFjZShtLkJBQ0spOmE9PT1cblRIUkVFLkN1bGxGYWNlRnJvbnQ/bS5jdWxsRmFjZShtLkZST05UKTptLmN1bGxGYWNlKG0uRlJPTlRfQU5EX0JBQ0spLG0uZW5hYmxlKG0uQ1VMTF9GQUNFKSl9O3RoaXMuc2V0TWF0ZXJpYWxGYWNlcz1mdW5jdGlvbihhKXtXLnNldERvdWJsZVNpZGVkKGEuc2lkZT09PVRIUkVFLkRvdWJsZVNpZGUpO1cuc2V0RmxpcFNpZGVkKGEuc2lkZT09PVRIUkVFLkJhY2tTaWRlKX07dGhpcy51cGxvYWRUZXh0dXJlPWZ1bmN0aW9uKGEpe3ZvaWQgMD09PWEuX193ZWJnbEluaXQmJihhLl9fd2ViZ2xJbml0PSEwLGEuYWRkRXZlbnRMaXN0ZW5lcihcImRpc3Bvc2VcIixQYiksYS5fX3dlYmdsVGV4dHVyZT1tLmNyZWF0ZVRleHR1cmUoKSxCLmluZm8ubWVtb3J5LnRleHR1cmVzKyspO20uYmluZFRleHR1cmUobS5URVhUVVJFXzJELGEuX193ZWJnbFRleHR1cmUpO20ucGl4ZWxTdG9yZWkobS5VTlBBQ0tfRkxJUF9ZX1dFQkdMLGEuZmxpcFkpO20ucGl4ZWxTdG9yZWkobS5VTlBBQ0tfUFJFTVVMVElQTFlfQUxQSEFfV0VCR0wsXG5hLnByZW11bHRpcGx5QWxwaGEpO20ucGl4ZWxTdG9yZWkobS5VTlBBQ0tfQUxJR05NRU5ULGEudW5wYWNrQWxpZ25tZW50KTthLmltYWdlPUUoYS5pbWFnZSx0Yyk7dmFyIGI9YS5pbWFnZSxjPVRIUkVFLk1hdGguaXNQb3dlck9mVHdvKGIud2lkdGgpJiZUSFJFRS5NYXRoLmlzUG93ZXJPZlR3byhiLmhlaWdodCksZD1JKGEuZm9ybWF0KSxlPUkoYS50eXBlKTtBKG0uVEVYVFVSRV8yRCxhLGMpO3ZhciBmPWEubWlwbWFwcztpZihhIGluc3RhbmNlb2YgVEhSRUUuRGF0YVRleHR1cmUpaWYoMDxmLmxlbmd0aCYmYyl7Zm9yKHZhciBnPTAsaD1mLmxlbmd0aDtnPGg7ZysrKWI9ZltnXSxtLnRleEltYWdlMkQobS5URVhUVVJFXzJELGcsZCxiLndpZHRoLGIuaGVpZ2h0LDAsZCxlLGIuZGF0YSk7YS5nZW5lcmF0ZU1pcG1hcHM9ITF9ZWxzZSBtLnRleEltYWdlMkQobS5URVhUVVJFXzJELDAsZCxiLndpZHRoLGIuaGVpZ2h0LDAsZCxlLGIuZGF0YSk7ZWxzZSBpZihhIGluc3RhbmNlb2YgVEhSRUUuQ29tcHJlc3NlZFRleHR1cmUpZm9yKGc9XG4wLGg9Zi5sZW5ndGg7ZzxoO2crKyliPWZbZ10sYS5mb3JtYXQhPT1USFJFRS5SR0JBRm9ybWF0JiZhLmZvcm1hdCE9PVRIUkVFLlJHQkZvcm1hdD8tMTxrYygpLmluZGV4T2YoZCk/bS5jb21wcmVzc2VkVGV4SW1hZ2UyRChtLlRFWFRVUkVfMkQsZyxkLGIud2lkdGgsYi5oZWlnaHQsMCxiLmRhdGEpOlRIUkVFLndhcm4oXCJUSFJFRS5XZWJHTFJlbmRlcmVyOiBBdHRlbXB0IHRvIGxvYWQgdW5zdXBwb3J0ZWQgY29tcHJlc3NlZCB0ZXh0dXJlIGZvcm1hdCBpbiAudXBsb2FkVGV4dHVyZSgpXCIpOm0udGV4SW1hZ2UyRChtLlRFWFRVUkVfMkQsZyxkLGIud2lkdGgsYi5oZWlnaHQsMCxkLGUsYi5kYXRhKTtlbHNlIGlmKDA8Zi5sZW5ndGgmJmMpe2c9MDtmb3IoaD1mLmxlbmd0aDtnPGg7ZysrKWI9ZltnXSxtLnRleEltYWdlMkQobS5URVhUVVJFXzJELGcsZCxkLGUsYik7YS5nZW5lcmF0ZU1pcG1hcHM9ITF9ZWxzZSBtLnRleEltYWdlMkQobS5URVhUVVJFXzJELDAsZCxkLGUsYS5pbWFnZSk7XG5hLmdlbmVyYXRlTWlwbWFwcyYmYyYmbS5nZW5lcmF0ZU1pcG1hcChtLlRFWFRVUkVfMkQpO2EubmVlZHNVcGRhdGU9ITE7aWYoYS5vblVwZGF0ZSlhLm9uVXBkYXRlKCl9O3RoaXMuc2V0VGV4dHVyZT1mdW5jdGlvbihhLGIpe20uYWN0aXZlVGV4dHVyZShtLlRFWFRVUkUwK2IpO2EubmVlZHNVcGRhdGU/Qi51cGxvYWRUZXh0dXJlKGEpOm0uYmluZFRleHR1cmUobS5URVhUVVJFXzJELGEuX193ZWJnbFRleHR1cmUpfTt0aGlzLnNldFJlbmRlclRhcmdldD1mdW5jdGlvbihhKXt2YXIgYj1hIGluc3RhbmNlb2YgVEhSRUUuV2ViR0xSZW5kZXJUYXJnZXRDdWJlO2lmKGEmJnZvaWQgMD09PWEuX193ZWJnbEZyYW1lYnVmZmVyKXt2b2lkIDA9PT1hLmRlcHRoQnVmZmVyJiYoYS5kZXB0aEJ1ZmZlcj0hMCk7dm9pZCAwPT09YS5zdGVuY2lsQnVmZmVyJiYoYS5zdGVuY2lsQnVmZmVyPSEwKTthLmFkZEV2ZW50TGlzdGVuZXIoXCJkaXNwb3NlXCIsb2MpO2EuX193ZWJnbFRleHR1cmU9bS5jcmVhdGVUZXh0dXJlKCk7XG5CLmluZm8ubWVtb3J5LnRleHR1cmVzKys7dmFyIGM9VEhSRUUuTWF0aC5pc1Bvd2VyT2ZUd28oYS53aWR0aCkmJlRIUkVFLk1hdGguaXNQb3dlck9mVHdvKGEuaGVpZ2h0KSxkPUkoYS5mb3JtYXQpLGU9SShhLnR5cGUpO2lmKGIpe2EuX193ZWJnbEZyYW1lYnVmZmVyPVtdO2EuX193ZWJnbFJlbmRlcmJ1ZmZlcj1bXTttLmJpbmRUZXh0dXJlKG0uVEVYVFVSRV9DVUJFX01BUCxhLl9fd2ViZ2xUZXh0dXJlKTtBKG0uVEVYVFVSRV9DVUJFX01BUCxhLGMpO2Zvcih2YXIgZj0wOzY+ZjtmKyspe2EuX193ZWJnbEZyYW1lYnVmZmVyW2ZdPW0uY3JlYXRlRnJhbWVidWZmZXIoKTthLl9fd2ViZ2xSZW5kZXJidWZmZXJbZl09bS5jcmVhdGVSZW5kZXJidWZmZXIoKTttLnRleEltYWdlMkQobS5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1grZiwwLGQsYS53aWR0aCxhLmhlaWdodCwwLGQsZSxudWxsKTt2YXIgZz1hLGg9bS5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1grZjttLmJpbmRGcmFtZWJ1ZmZlcihtLkZSQU1FQlVGRkVSLFxuYS5fX3dlYmdsRnJhbWVidWZmZXJbZl0pO20uZnJhbWVidWZmZXJUZXh0dXJlMkQobS5GUkFNRUJVRkZFUixtLkNPTE9SX0FUVEFDSE1FTlQwLGgsZy5fX3dlYmdsVGV4dHVyZSwwKTtHKGEuX193ZWJnbFJlbmRlcmJ1ZmZlcltmXSxhKX1jJiZtLmdlbmVyYXRlTWlwbWFwKG0uVEVYVFVSRV9DVUJFX01BUCl9ZWxzZSBhLl9fd2ViZ2xGcmFtZWJ1ZmZlcj1tLmNyZWF0ZUZyYW1lYnVmZmVyKCksYS5fX3dlYmdsUmVuZGVyYnVmZmVyPWEuc2hhcmVEZXB0aEZyb20/YS5zaGFyZURlcHRoRnJvbS5fX3dlYmdsUmVuZGVyYnVmZmVyOm0uY3JlYXRlUmVuZGVyYnVmZmVyKCksbS5iaW5kVGV4dHVyZShtLlRFWFRVUkVfMkQsYS5fX3dlYmdsVGV4dHVyZSksQShtLlRFWFRVUkVfMkQsYSxjKSxtLnRleEltYWdlMkQobS5URVhUVVJFXzJELDAsZCxhLndpZHRoLGEuaGVpZ2h0LDAsZCxlLG51bGwpLGQ9bS5URVhUVVJFXzJELG0uYmluZEZyYW1lYnVmZmVyKG0uRlJBTUVCVUZGRVIsYS5fX3dlYmdsRnJhbWVidWZmZXIpLFxubS5mcmFtZWJ1ZmZlclRleHR1cmUyRChtLkZSQU1FQlVGRkVSLG0uQ09MT1JfQVRUQUNITUVOVDAsZCxhLl9fd2ViZ2xUZXh0dXJlLDApLGEuc2hhcmVEZXB0aEZyb20/YS5kZXB0aEJ1ZmZlciYmIWEuc3RlbmNpbEJ1ZmZlcj9tLmZyYW1lYnVmZmVyUmVuZGVyYnVmZmVyKG0uRlJBTUVCVUZGRVIsbS5ERVBUSF9BVFRBQ0hNRU5ULG0uUkVOREVSQlVGRkVSLGEuX193ZWJnbFJlbmRlcmJ1ZmZlcik6YS5kZXB0aEJ1ZmZlciYmYS5zdGVuY2lsQnVmZmVyJiZtLmZyYW1lYnVmZmVyUmVuZGVyYnVmZmVyKG0uRlJBTUVCVUZGRVIsbS5ERVBUSF9TVEVOQ0lMX0FUVEFDSE1FTlQsbS5SRU5ERVJCVUZGRVIsYS5fX3dlYmdsUmVuZGVyYnVmZmVyKTpHKGEuX193ZWJnbFJlbmRlcmJ1ZmZlcixhKSxjJiZtLmdlbmVyYXRlTWlwbWFwKG0uVEVYVFVSRV8yRCk7Yj9tLmJpbmRUZXh0dXJlKG0uVEVYVFVSRV9DVUJFX01BUCxudWxsKTptLmJpbmRUZXh0dXJlKG0uVEVYVFVSRV8yRCxudWxsKTttLmJpbmRSZW5kZXJidWZmZXIobS5SRU5ERVJCVUZGRVIsXG5udWxsKTttLmJpbmRGcmFtZWJ1ZmZlcihtLkZSQU1FQlVGRkVSLG51bGwpfWE/KGI9Yj9hLl9fd2ViZ2xGcmFtZWJ1ZmZlclthLmFjdGl2ZUN1YmVGYWNlXTphLl9fd2ViZ2xGcmFtZWJ1ZmZlcixjPWEud2lkdGgsYT1hLmhlaWdodCxlPWQ9MCk6KGI9bnVsbCxjPXBiLGE9cWIsZD1pYixlPWJiKTtiIT09YWImJihtLmJpbmRGcmFtZWJ1ZmZlcihtLkZSQU1FQlVGRkVSLGIpLG0udmlld3BvcnQoZCxlLGMsYSksYWI9Yik7WGI9YztmYz1hfTt0aGlzLnJlYWRSZW5kZXJUYXJnZXRQaXhlbHM9ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2lmKCEoYSBpbnN0YW5jZW9mIFRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0KSljb25zb2xlLmVycm9yKFwiVEhSRUUuV2ViR0xSZW5kZXJlci5yZWFkUmVuZGVyVGFyZ2V0UGl4ZWxzOiByZW5kZXJUYXJnZXQgaXMgbm90IFRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0LlwiKTtlbHNlIGlmKGEuX193ZWJnbEZyYW1lYnVmZmVyKWlmKGEuZm9ybWF0IT09VEhSRUUuUkdCQUZvcm1hdCljb25zb2xlLmVycm9yKFwiVEhSRUUuV2ViR0xSZW5kZXJlci5yZWFkUmVuZGVyVGFyZ2V0UGl4ZWxzOiByZW5kZXJUYXJnZXQgaXMgbm90IGluIFJHQkEgZm9ybWF0LiByZWFkUGl4ZWxzIGNhbiByZWFkIG9ubHkgUkdCQSBmb3JtYXQuXCIpO1xuZWxzZXt2YXIgZz0hMTthLl9fd2ViZ2xGcmFtZWJ1ZmZlciE9PWFiJiYobS5iaW5kRnJhbWVidWZmZXIobS5GUkFNRUJVRkZFUixhLl9fd2ViZ2xGcmFtZWJ1ZmZlciksZz0hMCk7bS5jaGVja0ZyYW1lYnVmZmVyU3RhdHVzKG0uRlJBTUVCVUZGRVIpPT09bS5GUkFNRUJVRkZFUl9DT01QTEVURT9tLnJlYWRQaXhlbHMoYixjLGQsZSxtLlJHQkEsbS5VTlNJR05FRF9CWVRFLGYpOmNvbnNvbGUuZXJyb3IoXCJUSFJFRS5XZWJHTFJlbmRlcmVyLnJlYWRSZW5kZXJUYXJnZXRQaXhlbHM6IHJlYWRQaXhlbHMgZnJvbSByZW5kZXJUYXJnZXQgZmFpbGVkLiBGcmFtZWJ1ZmZlciBub3QgY29tcGxldGUuXCIpO2cmJm0uYmluZEZyYW1lYnVmZmVyKG0uRlJBTUVCVUZGRVIsYWIpfX07dGhpcy5pbml0TWF0ZXJpYWw9ZnVuY3Rpb24oKXtUSFJFRS53YXJuKFwiVEhSRUUuV2ViR0xSZW5kZXJlcjogLmluaXRNYXRlcmlhbCgpIGhhcyBiZWVuIHJlbW92ZWQuXCIpfTt0aGlzLmFkZFByZVBsdWdpbj1mdW5jdGlvbigpe1RIUkVFLndhcm4oXCJUSFJFRS5XZWJHTFJlbmRlcmVyOiAuYWRkUHJlUGx1Z2luKCkgaGFzIGJlZW4gcmVtb3ZlZC5cIil9O1xudGhpcy5hZGRQb3N0UGx1Z2luPWZ1bmN0aW9uKCl7VEhSRUUud2FybihcIlRIUkVFLldlYkdMUmVuZGVyZXI6IC5hZGRQb3N0UGx1Z2luKCkgaGFzIGJlZW4gcmVtb3ZlZC5cIil9O3RoaXMudXBkYXRlU2hhZG93TWFwPWZ1bmN0aW9uKCl7VEhSRUUud2FybihcIlRIUkVFLldlYkdMUmVuZGVyZXI6IC51cGRhdGVTaGFkb3dNYXAoKSBoYXMgYmVlbiByZW1vdmVkLlwiKX19O1xuVEhSRUUuV2ViR0xSZW5kZXJUYXJnZXQ9ZnVuY3Rpb24oYSxiLGMpe3RoaXMud2lkdGg9YTt0aGlzLmhlaWdodD1iO2M9Y3x8e307dGhpcy53cmFwUz12b2lkIDAhPT1jLndyYXBTP2Mud3JhcFM6VEhSRUUuQ2xhbXBUb0VkZ2VXcmFwcGluZzt0aGlzLndyYXBUPXZvaWQgMCE9PWMud3JhcFQ/Yy53cmFwVDpUSFJFRS5DbGFtcFRvRWRnZVdyYXBwaW5nO3RoaXMubWFnRmlsdGVyPXZvaWQgMCE9PWMubWFnRmlsdGVyP2MubWFnRmlsdGVyOlRIUkVFLkxpbmVhckZpbHRlcjt0aGlzLm1pbkZpbHRlcj12b2lkIDAhPT1jLm1pbkZpbHRlcj9jLm1pbkZpbHRlcjpUSFJFRS5MaW5lYXJNaXBNYXBMaW5lYXJGaWx0ZXI7dGhpcy5hbmlzb3Ryb3B5PXZvaWQgMCE9PWMuYW5pc290cm9weT9jLmFuaXNvdHJvcHk6MTt0aGlzLm9mZnNldD1uZXcgVEhSRUUuVmVjdG9yMigwLDApO3RoaXMucmVwZWF0PW5ldyBUSFJFRS5WZWN0b3IyKDEsMSk7dGhpcy5mb3JtYXQ9dm9pZCAwIT09Yy5mb3JtYXQ/Yy5mb3JtYXQ6XG5USFJFRS5SR0JBRm9ybWF0O3RoaXMudHlwZT12b2lkIDAhPT1jLnR5cGU/Yy50eXBlOlRIUkVFLlVuc2lnbmVkQnl0ZVR5cGU7dGhpcy5kZXB0aEJ1ZmZlcj12b2lkIDAhPT1jLmRlcHRoQnVmZmVyP2MuZGVwdGhCdWZmZXI6ITA7dGhpcy5zdGVuY2lsQnVmZmVyPXZvaWQgMCE9PWMuc3RlbmNpbEJ1ZmZlcj9jLnN0ZW5jaWxCdWZmZXI6ITA7dGhpcy5nZW5lcmF0ZU1pcG1hcHM9ITA7dGhpcy5zaGFyZURlcHRoRnJvbT12b2lkIDAhPT1jLnNoYXJlRGVwdGhGcm9tP2Muc2hhcmVEZXB0aEZyb206bnVsbH07XG5USFJFRS5XZWJHTFJlbmRlclRhcmdldC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0LHNldFNpemU6ZnVuY3Rpb24oYSxiKXt0aGlzLndpZHRoPWE7dGhpcy5oZWlnaHQ9Yn0sY2xvbmU6ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuV2ViR0xSZW5kZXJUYXJnZXQodGhpcy53aWR0aCx0aGlzLmhlaWdodCk7YS53cmFwUz10aGlzLndyYXBTO2Eud3JhcFQ9dGhpcy53cmFwVDthLm1hZ0ZpbHRlcj10aGlzLm1hZ0ZpbHRlcjthLm1pbkZpbHRlcj10aGlzLm1pbkZpbHRlcjthLmFuaXNvdHJvcHk9dGhpcy5hbmlzb3Ryb3B5O2Eub2Zmc2V0LmNvcHkodGhpcy5vZmZzZXQpO2EucmVwZWF0LmNvcHkodGhpcy5yZXBlYXQpO2EuZm9ybWF0PXRoaXMuZm9ybWF0O2EudHlwZT10aGlzLnR5cGU7YS5kZXB0aEJ1ZmZlcj10aGlzLmRlcHRoQnVmZmVyO2Euc3RlbmNpbEJ1ZmZlcj10aGlzLnN0ZW5jaWxCdWZmZXI7YS5nZW5lcmF0ZU1pcG1hcHM9dGhpcy5nZW5lcmF0ZU1pcG1hcHM7XG5hLnNoYXJlRGVwdGhGcm9tPXRoaXMuc2hhcmVEZXB0aEZyb207cmV0dXJuIGF9LGRpc3Bvc2U6ZnVuY3Rpb24oKXt0aGlzLmRpc3BhdGNoRXZlbnQoe3R5cGU6XCJkaXNwb3NlXCJ9KX19O1RIUkVFLkV2ZW50RGlzcGF0Y2hlci5wcm90b3R5cGUuYXBwbHkoVEhSRUUuV2ViR0xSZW5kZXJUYXJnZXQucHJvdG90eXBlKTtUSFJFRS5XZWJHTFJlbmRlclRhcmdldEN1YmU9ZnVuY3Rpb24oYSxiLGMpe1RIUkVFLldlYkdMUmVuZGVyVGFyZ2V0LmNhbGwodGhpcyxhLGIsYyk7dGhpcy5hY3RpdmVDdWJlRmFjZT0wfTtUSFJFRS5XZWJHTFJlbmRlclRhcmdldEN1YmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuV2ViR0xSZW5kZXJUYXJnZXQucHJvdG90eXBlKTtUSFJFRS5XZWJHTFJlbmRlclRhcmdldEN1YmUucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLldlYkdMUmVuZGVyVGFyZ2V0Q3ViZTtcblRIUkVFLldlYkdMRXh0ZW5zaW9ucz1mdW5jdGlvbihhKXt2YXIgYj17fTt0aGlzLmdldD1mdW5jdGlvbihjKXtpZih2b2lkIDAhPT1iW2NdKXJldHVybiBiW2NdO3ZhciBkO3N3aXRjaChjKXtjYXNlIFwiRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljXCI6ZD1hLmdldEV4dGVuc2lvbihcIkVYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpY1wiKXx8YS5nZXRFeHRlbnNpb24oXCJNT1pfRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljXCIpfHxhLmdldEV4dGVuc2lvbihcIldFQktJVF9FWFRfdGV4dHVyZV9maWx0ZXJfYW5pc290cm9waWNcIik7YnJlYWs7Y2FzZSBcIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9zM3RjXCI6ZD1hLmdldEV4dGVuc2lvbihcIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9zM3RjXCIpfHxhLmdldEV4dGVuc2lvbihcIk1PWl9XRUJHTF9jb21wcmVzc2VkX3RleHR1cmVfczN0Y1wiKXx8YS5nZXRFeHRlbnNpb24oXCJXRUJLSVRfV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3MzdGNcIik7XG5icmVhaztjYXNlIFwiV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3B2cnRjXCI6ZD1hLmdldEV4dGVuc2lvbihcIldFQkdMX2NvbXByZXNzZWRfdGV4dHVyZV9wdnJ0Y1wiKXx8YS5nZXRFeHRlbnNpb24oXCJXRUJLSVRfV0VCR0xfY29tcHJlc3NlZF90ZXh0dXJlX3B2cnRjXCIpO2JyZWFrO2RlZmF1bHQ6ZD1hLmdldEV4dGVuc2lvbihjKX1udWxsPT09ZCYmVEhSRUUud2FybihcIlRIUkVFLldlYkdMUmVuZGVyZXI6IFwiK2MrXCIgZXh0ZW5zaW9uIG5vdCBzdXBwb3J0ZWQuXCIpO3JldHVybiBiW2NdPWR9fTtcblRIUkVFLldlYkdMUHJvZ3JhbT1mdW5jdGlvbigpe3ZhciBhPTA7cmV0dXJuIGZ1bmN0aW9uKGIsYyxkLGUpe3ZhciBmPWIuY29udGV4dCxnPWQuZGVmaW5lcyxoPWQuX193ZWJnbFNoYWRlci51bmlmb3JtcyxrPWQuYXR0cmlidXRlcyxsPWQuX193ZWJnbFNoYWRlci52ZXJ0ZXhTaGFkZXIscD1kLl9fd2ViZ2xTaGFkZXIuZnJhZ21lbnRTaGFkZXIscT1kLmluZGV4MEF0dHJpYnV0ZU5hbWU7dm9pZCAwPT09cSYmITA9PT1lLm1vcnBoVGFyZ2V0cyYmKHE9XCJwb3NpdGlvblwiKTt2YXIgbj1cIlNIQURPV01BUF9UWVBFX0JBU0lDXCI7ZS5zaGFkb3dNYXBUeXBlPT09VEhSRUUuUENGU2hhZG93TWFwP249XCJTSEFET1dNQVBfVFlQRV9QQ0ZcIjplLnNoYWRvd01hcFR5cGU9PT1USFJFRS5QQ0ZTb2Z0U2hhZG93TWFwJiYobj1cIlNIQURPV01BUF9UWVBFX1BDRl9TT0ZUXCIpO3ZhciB0PVwiRU5WTUFQX1RZUEVfQ1VCRVwiLHI9XCJFTlZNQVBfTU9ERV9SRUZMRUNUSU9OXCIscz1cIkVOVk1BUF9CTEVORElOR19NVUxUSVBMWVwiO1xuaWYoZS5lbnZNYXApe3N3aXRjaChkLmVudk1hcC5tYXBwaW5nKXtjYXNlIFRIUkVFLkN1YmVSZWZsZWN0aW9uTWFwcGluZzpjYXNlIFRIUkVFLkN1YmVSZWZyYWN0aW9uTWFwcGluZzp0PVwiRU5WTUFQX1RZUEVfQ1VCRVwiO2JyZWFrO2Nhc2UgVEhSRUUuRXF1aXJlY3Rhbmd1bGFyUmVmbGVjdGlvbk1hcHBpbmc6Y2FzZSBUSFJFRS5FcXVpcmVjdGFuZ3VsYXJSZWZyYWN0aW9uTWFwcGluZzp0PVwiRU5WTUFQX1RZUEVfRVFVSVJFQ1wiO2JyZWFrO2Nhc2UgVEhSRUUuU3BoZXJpY2FsUmVmbGVjdGlvbk1hcHBpbmc6dD1cIkVOVk1BUF9UWVBFX1NQSEVSRVwifXN3aXRjaChkLmVudk1hcC5tYXBwaW5nKXtjYXNlIFRIUkVFLkN1YmVSZWZyYWN0aW9uTWFwcGluZzpjYXNlIFRIUkVFLkVxdWlyZWN0YW5ndWxhclJlZnJhY3Rpb25NYXBwaW5nOnI9XCJFTlZNQVBfTU9ERV9SRUZSQUNUSU9OXCJ9c3dpdGNoKGQuY29tYmluZSl7Y2FzZSBUSFJFRS5NdWx0aXBseU9wZXJhdGlvbjpzPVwiRU5WTUFQX0JMRU5ESU5HX01VTFRJUExZXCI7XG5icmVhaztjYXNlIFRIUkVFLk1peE9wZXJhdGlvbjpzPVwiRU5WTUFQX0JMRU5ESU5HX01JWFwiO2JyZWFrO2Nhc2UgVEhSRUUuQWRkT3BlcmF0aW9uOnM9XCJFTlZNQVBfQkxFTkRJTkdfQUREXCJ9fXZhciB1PTA8Yi5nYW1tYUZhY3Rvcj9iLmdhbW1hRmFjdG9yOjEsdix4O3Y9W107Zm9yKHZhciBEIGluIGcpeD1nW0RdLCExIT09eCYmKHg9XCIjZGVmaW5lIFwiK0QrXCIgXCIreCx2LnB1c2goeCkpO3Y9di5qb2luKFwiXFxuXCIpO2c9Zi5jcmVhdGVQcm9ncmFtKCk7ZCBpbnN0YW5jZW9mIFRIUkVFLlJhd1NoYWRlck1hdGVyaWFsP2I9ZD1cIlwiOihkPVtcInByZWNpc2lvbiBcIitlLnByZWNpc2lvbitcIiBmbG9hdDtcIixcInByZWNpc2lvbiBcIitlLnByZWNpc2lvbitcIiBpbnQ7XCIsdixlLnN1cHBvcnRzVmVydGV4VGV4dHVyZXM/XCIjZGVmaW5lIFZFUlRFWF9URVhUVVJFU1wiOlwiXCIsYi5nYW1tYUlucHV0P1wiI2RlZmluZSBHQU1NQV9JTlBVVFwiOlwiXCIsYi5nYW1tYU91dHB1dD9cIiNkZWZpbmUgR0FNTUFfT1VUUFVUXCI6XG5cIlwiLFwiI2RlZmluZSBHQU1NQV9GQUNUT1IgXCIrdSxcIiNkZWZpbmUgTUFYX0RJUl9MSUdIVFMgXCIrZS5tYXhEaXJMaWdodHMsXCIjZGVmaW5lIE1BWF9QT0lOVF9MSUdIVFMgXCIrZS5tYXhQb2ludExpZ2h0cyxcIiNkZWZpbmUgTUFYX1NQT1RfTElHSFRTIFwiK2UubWF4U3BvdExpZ2h0cyxcIiNkZWZpbmUgTUFYX0hFTUlfTElHSFRTIFwiK2UubWF4SGVtaUxpZ2h0cyxcIiNkZWZpbmUgTUFYX1NIQURPV1MgXCIrZS5tYXhTaGFkb3dzLFwiI2RlZmluZSBNQVhfQk9ORVMgXCIrZS5tYXhCb25lcyxlLm1hcD9cIiNkZWZpbmUgVVNFX01BUFwiOlwiXCIsZS5lbnZNYXA/XCIjZGVmaW5lIFVTRV9FTlZNQVBcIjpcIlwiLGUuZW52TWFwP1wiI2RlZmluZSBcIityOlwiXCIsZS5saWdodE1hcD9cIiNkZWZpbmUgVVNFX0xJR0hUTUFQXCI6XCJcIixlLmJ1bXBNYXA/XCIjZGVmaW5lIFVTRV9CVU1QTUFQXCI6XCJcIixlLm5vcm1hbE1hcD9cIiNkZWZpbmUgVVNFX05PUk1BTE1BUFwiOlwiXCIsZS5zcGVjdWxhck1hcD9cIiNkZWZpbmUgVVNFX1NQRUNVTEFSTUFQXCI6XG5cIlwiLGUuYWxwaGFNYXA/XCIjZGVmaW5lIFVTRV9BTFBIQU1BUFwiOlwiXCIsZS52ZXJ0ZXhDb2xvcnM/XCIjZGVmaW5lIFVTRV9DT0xPUlwiOlwiXCIsZS5mbGF0U2hhZGluZz9cIiNkZWZpbmUgRkxBVF9TSEFERURcIjpcIlwiLGUuc2tpbm5pbmc/XCIjZGVmaW5lIFVTRV9TS0lOTklOR1wiOlwiXCIsZS51c2VWZXJ0ZXhUZXh0dXJlP1wiI2RlZmluZSBCT05FX1RFWFRVUkVcIjpcIlwiLGUubW9ycGhUYXJnZXRzP1wiI2RlZmluZSBVU0VfTU9SUEhUQVJHRVRTXCI6XCJcIixlLm1vcnBoTm9ybWFscz9cIiNkZWZpbmUgVVNFX01PUlBITk9STUFMU1wiOlwiXCIsZS53cmFwQXJvdW5kP1wiI2RlZmluZSBXUkFQX0FST1VORFwiOlwiXCIsZS5kb3VibGVTaWRlZD9cIiNkZWZpbmUgRE9VQkxFX1NJREVEXCI6XCJcIixlLmZsaXBTaWRlZD9cIiNkZWZpbmUgRkxJUF9TSURFRFwiOlwiXCIsZS5zaGFkb3dNYXBFbmFibGVkP1wiI2RlZmluZSBVU0VfU0hBRE9XTUFQXCI6XCJcIixlLnNoYWRvd01hcEVuYWJsZWQ/XCIjZGVmaW5lIFwiK246XCJcIixlLnNoYWRvd01hcERlYnVnP1xuXCIjZGVmaW5lIFNIQURPV01BUF9ERUJVR1wiOlwiXCIsZS5zaGFkb3dNYXBDYXNjYWRlP1wiI2RlZmluZSBTSEFET1dNQVBfQ0FTQ0FERVwiOlwiXCIsZS5zaXplQXR0ZW51YXRpb24/XCIjZGVmaW5lIFVTRV9TSVpFQVRURU5VQVRJT05cIjpcIlwiLGUubG9nYXJpdGhtaWNEZXB0aEJ1ZmZlcj9cIiNkZWZpbmUgVVNFX0xPR0RFUFRIQlVGXCI6XCJcIixcInVuaWZvcm0gbWF0NCBtb2RlbE1hdHJpeDtcXG51bmlmb3JtIG1hdDQgbW9kZWxWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uTWF0cml4O1xcbnVuaWZvcm0gbWF0NCB2aWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0MyBub3JtYWxNYXRyaXg7XFxudW5pZm9ybSB2ZWMzIGNhbWVyYVBvc2l0aW9uO1xcbmF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uO1xcbmF0dHJpYnV0ZSB2ZWMzIG5vcm1hbDtcXG5hdHRyaWJ1dGUgdmVjMiB1djtcXG5hdHRyaWJ1dGUgdmVjMiB1djI7XFxuI2lmZGVmIFVTRV9DT0xPUlxcblxcdGF0dHJpYnV0ZSB2ZWMzIGNvbG9yO1xcbiNlbmRpZlxcbiNpZmRlZiBVU0VfTU9SUEhUQVJHRVRTXFxuXFx0YXR0cmlidXRlIHZlYzMgbW9ycGhUYXJnZXQwO1xcblxcdGF0dHJpYnV0ZSB2ZWMzIG1vcnBoVGFyZ2V0MTtcXG5cXHRhdHRyaWJ1dGUgdmVjMyBtb3JwaFRhcmdldDI7XFxuXFx0YXR0cmlidXRlIHZlYzMgbW9ycGhUYXJnZXQzO1xcblxcdCNpZmRlZiBVU0VfTU9SUEhOT1JNQUxTXFxuXFx0XFx0YXR0cmlidXRlIHZlYzMgbW9ycGhOb3JtYWwwO1xcblxcdFxcdGF0dHJpYnV0ZSB2ZWMzIG1vcnBoTm9ybWFsMTtcXG5cXHRcXHRhdHRyaWJ1dGUgdmVjMyBtb3JwaE5vcm1hbDI7XFxuXFx0XFx0YXR0cmlidXRlIHZlYzMgbW9ycGhOb3JtYWwzO1xcblxcdCNlbHNlXFxuXFx0XFx0YXR0cmlidXRlIHZlYzMgbW9ycGhUYXJnZXQ0O1xcblxcdFxcdGF0dHJpYnV0ZSB2ZWMzIG1vcnBoVGFyZ2V0NTtcXG5cXHRcXHRhdHRyaWJ1dGUgdmVjMyBtb3JwaFRhcmdldDY7XFxuXFx0XFx0YXR0cmlidXRlIHZlYzMgbW9ycGhUYXJnZXQ3O1xcblxcdCNlbmRpZlxcbiNlbmRpZlxcbiNpZmRlZiBVU0VfU0tJTk5JTkdcXG5cXHRhdHRyaWJ1dGUgdmVjNCBza2luSW5kZXg7XFxuXFx0YXR0cmlidXRlIHZlYzQgc2tpbldlaWdodDtcXG4jZW5kaWZcXG5cIl0uam9pbihcIlxcblwiKSxcbmI9W1wicHJlY2lzaW9uIFwiK2UucHJlY2lzaW9uK1wiIGZsb2F0O1wiLFwicHJlY2lzaW9uIFwiK2UucHJlY2lzaW9uK1wiIGludDtcIixlLmJ1bXBNYXB8fGUubm9ybWFsTWFwfHxlLmZsYXRTaGFkaW5nP1wiI2V4dGVuc2lvbiBHTF9PRVNfc3RhbmRhcmRfZGVyaXZhdGl2ZXMgOiBlbmFibGVcIjpcIlwiLHYsXCIjZGVmaW5lIE1BWF9ESVJfTElHSFRTIFwiK2UubWF4RGlyTGlnaHRzLFwiI2RlZmluZSBNQVhfUE9JTlRfTElHSFRTIFwiK2UubWF4UG9pbnRMaWdodHMsXCIjZGVmaW5lIE1BWF9TUE9UX0xJR0hUUyBcIitlLm1heFNwb3RMaWdodHMsXCIjZGVmaW5lIE1BWF9IRU1JX0xJR0hUUyBcIitlLm1heEhlbWlMaWdodHMsXCIjZGVmaW5lIE1BWF9TSEFET1dTIFwiK2UubWF4U2hhZG93cyxlLmFscGhhVGVzdD9cIiNkZWZpbmUgQUxQSEFURVNUIFwiK2UuYWxwaGFUZXN0OlwiXCIsYi5nYW1tYUlucHV0P1wiI2RlZmluZSBHQU1NQV9JTlBVVFwiOlwiXCIsYi5nYW1tYU91dHB1dD9cIiNkZWZpbmUgR0FNTUFfT1VUUFVUXCI6XCJcIixcIiNkZWZpbmUgR0FNTUFfRkFDVE9SIFwiK1xudSxlLnVzZUZvZyYmZS5mb2c/XCIjZGVmaW5lIFVTRV9GT0dcIjpcIlwiLGUudXNlRm9nJiZlLmZvZ0V4cD9cIiNkZWZpbmUgRk9HX0VYUDJcIjpcIlwiLGUubWFwP1wiI2RlZmluZSBVU0VfTUFQXCI6XCJcIixlLmVudk1hcD9cIiNkZWZpbmUgVVNFX0VOVk1BUFwiOlwiXCIsZS5lbnZNYXA/XCIjZGVmaW5lIFwiK3Q6XCJcIixlLmVudk1hcD9cIiNkZWZpbmUgXCIrcjpcIlwiLGUuZW52TWFwP1wiI2RlZmluZSBcIitzOlwiXCIsZS5saWdodE1hcD9cIiNkZWZpbmUgVVNFX0xJR0hUTUFQXCI6XCJcIixlLmJ1bXBNYXA/XCIjZGVmaW5lIFVTRV9CVU1QTUFQXCI6XCJcIixlLm5vcm1hbE1hcD9cIiNkZWZpbmUgVVNFX05PUk1BTE1BUFwiOlwiXCIsZS5zcGVjdWxhck1hcD9cIiNkZWZpbmUgVVNFX1NQRUNVTEFSTUFQXCI6XCJcIixlLmFscGhhTWFwP1wiI2RlZmluZSBVU0VfQUxQSEFNQVBcIjpcIlwiLGUudmVydGV4Q29sb3JzP1wiI2RlZmluZSBVU0VfQ09MT1JcIjpcIlwiLGUuZmxhdFNoYWRpbmc/XCIjZGVmaW5lIEZMQVRfU0hBREVEXCI6XCJcIixlLm1ldGFsP1wiI2RlZmluZSBNRVRBTFwiOlxuXCJcIixlLndyYXBBcm91bmQ/XCIjZGVmaW5lIFdSQVBfQVJPVU5EXCI6XCJcIixlLmRvdWJsZVNpZGVkP1wiI2RlZmluZSBET1VCTEVfU0lERURcIjpcIlwiLGUuZmxpcFNpZGVkP1wiI2RlZmluZSBGTElQX1NJREVEXCI6XCJcIixlLnNoYWRvd01hcEVuYWJsZWQ/XCIjZGVmaW5lIFVTRV9TSEFET1dNQVBcIjpcIlwiLGUuc2hhZG93TWFwRW5hYmxlZD9cIiNkZWZpbmUgXCIrbjpcIlwiLGUuc2hhZG93TWFwRGVidWc/XCIjZGVmaW5lIFNIQURPV01BUF9ERUJVR1wiOlwiXCIsZS5zaGFkb3dNYXBDYXNjYWRlP1wiI2RlZmluZSBTSEFET1dNQVBfQ0FTQ0FERVwiOlwiXCIsZS5sb2dhcml0aG1pY0RlcHRoQnVmZmVyP1wiI2RlZmluZSBVU0VfTE9HREVQVEhCVUZcIjpcIlwiLFwidW5pZm9ybSBtYXQ0IHZpZXdNYXRyaXg7XFxudW5pZm9ybSB2ZWMzIGNhbWVyYVBvc2l0aW9uO1xcblwiXS5qb2luKFwiXFxuXCIpKTtsPW5ldyBUSFJFRS5XZWJHTFNoYWRlcihmLGYuVkVSVEVYX1NIQURFUixkK2wpO3A9bmV3IFRIUkVFLldlYkdMU2hhZGVyKGYsZi5GUkFHTUVOVF9TSEFERVIsXG5iK3ApO2YuYXR0YWNoU2hhZGVyKGcsbCk7Zi5hdHRhY2hTaGFkZXIoZyxwKTt2b2lkIDAhPT1xJiZmLmJpbmRBdHRyaWJMb2NhdGlvbihnLDAscSk7Zi5saW5rUHJvZ3JhbShnKTtxPWYuZ2V0UHJvZ3JhbUluZm9Mb2coZyk7ITE9PT1mLmdldFByb2dyYW1QYXJhbWV0ZXIoZyxmLkxJTktfU1RBVFVTKSYmVEhSRUUuZXJyb3IoXCJUSFJFRS5XZWJHTFByb2dyYW06IHNoYWRlciBlcnJvcjogXCIrZi5nZXRFcnJvcigpLFwiZ2wuVkFMSURBVEVfU1RBVFVTXCIsZi5nZXRQcm9ncmFtUGFyYW1ldGVyKGcsZi5WQUxJREFURV9TVEFUVVMpLFwiZ2wuZ2V0UFJvZ3JhbUluZm9Mb2dcIixxKTtcIlwiIT09cSYmVEhSRUUud2FybihcIlRIUkVFLldlYkdMUHJvZ3JhbTogZ2wuZ2V0UHJvZ3JhbUluZm9Mb2coKVwiK3EpO2YuZGVsZXRlU2hhZGVyKGwpO2YuZGVsZXRlU2hhZGVyKHApO3E9XCJ2aWV3TWF0cml4IG1vZGVsVmlld01hdHJpeCBwcm9qZWN0aW9uTWF0cml4IG5vcm1hbE1hdHJpeCBtb2RlbE1hdHJpeCBjYW1lcmFQb3NpdGlvbiBtb3JwaFRhcmdldEluZmx1ZW5jZXMgYmluZE1hdHJpeCBiaW5kTWF0cml4SW52ZXJzZVwiLnNwbGl0KFwiIFwiKTtcbmUudXNlVmVydGV4VGV4dHVyZT8ocS5wdXNoKFwiYm9uZVRleHR1cmVcIikscS5wdXNoKFwiYm9uZVRleHR1cmVXaWR0aFwiKSxxLnB1c2goXCJib25lVGV4dHVyZUhlaWdodFwiKSk6cS5wdXNoKFwiYm9uZUdsb2JhbE1hdHJpY2VzXCIpO2UubG9nYXJpdGhtaWNEZXB0aEJ1ZmZlciYmcS5wdXNoKFwibG9nRGVwdGhCdWZGQ1wiKTtmb3IodmFyIHcgaW4gaClxLnB1c2godyk7aD1xO3c9e307cT0wO2ZvcihiPWgubGVuZ3RoO3E8YjtxKyspbj1oW3FdLHdbbl09Zi5nZXRVbmlmb3JtTG9jYXRpb24oZyxuKTt0aGlzLnVuaWZvcm1zPXc7cT1cInBvc2l0aW9uIG5vcm1hbCB1diB1djIgdGFuZ2VudCBjb2xvciBza2luSW5kZXggc2tpbldlaWdodCBsaW5lRGlzdGFuY2VcIi5zcGxpdChcIiBcIik7Zm9yKGg9MDtoPGUubWF4TW9ycGhUYXJnZXRzO2grKylxLnB1c2goXCJtb3JwaFRhcmdldFwiK2gpO2ZvcihoPTA7aDxlLm1heE1vcnBoTm9ybWFscztoKyspcS5wdXNoKFwibW9ycGhOb3JtYWxcIitoKTtmb3IodmFyIHkgaW4gaylxLnB1c2goeSk7XG5lPXE7az17fTt5PTA7Zm9yKGg9ZS5sZW5ndGg7eTxoO3krKyl3PWVbeV0sa1t3XT1mLmdldEF0dHJpYkxvY2F0aW9uKGcsdyk7dGhpcy5hdHRyaWJ1dGVzPWs7dGhpcy5hdHRyaWJ1dGVzS2V5cz1PYmplY3Qua2V5cyh0aGlzLmF0dHJpYnV0ZXMpO3RoaXMuaWQ9YSsrO3RoaXMuY29kZT1jO3RoaXMudXNlZFRpbWVzPTE7dGhpcy5wcm9ncmFtPWc7dGhpcy52ZXJ0ZXhTaGFkZXI9bDt0aGlzLmZyYWdtZW50U2hhZGVyPXA7cmV0dXJuIHRoaXN9fSgpO1xuVEhSRUUuV2ViR0xTaGFkZXI9ZnVuY3Rpb24oKXt2YXIgYT1mdW5jdGlvbihhKXthPWEuc3BsaXQoXCJcXG5cIik7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspYVtjXT1jKzErXCI6IFwiK2FbY107cmV0dXJuIGEuam9pbihcIlxcblwiKX07cmV0dXJuIGZ1bmN0aW9uKGIsYyxkKXtjPWIuY3JlYXRlU2hhZGVyKGMpO2Iuc2hhZGVyU291cmNlKGMsZCk7Yi5jb21waWxlU2hhZGVyKGMpOyExPT09Yi5nZXRTaGFkZXJQYXJhbWV0ZXIoYyxiLkNPTVBJTEVfU1RBVFVTKSYmVEhSRUUuZXJyb3IoXCJUSFJFRS5XZWJHTFNoYWRlcjogU2hhZGVyIGNvdWxkbid0IGNvbXBpbGUuXCIpO1wiXCIhPT1iLmdldFNoYWRlckluZm9Mb2coYykmJlRIUkVFLndhcm4oXCJUSFJFRS5XZWJHTFNoYWRlcjogZ2wuZ2V0U2hhZGVySW5mb0xvZygpXCIsYi5nZXRTaGFkZXJJbmZvTG9nKGMpLGEoZCkpO3JldHVybiBjfX0oKTtcblRIUkVFLldlYkdMU3RhdGU9ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZXcgVWludDhBcnJheSgxNiksZD1uZXcgVWludDhBcnJheSgxNiksZT1udWxsLGY9bnVsbCxnPW51bGwsaD1udWxsLGs9bnVsbCxsPW51bGwscD1udWxsLHE9bnVsbCxuPW51bGwsdD1udWxsLHI9bnVsbCxzPW51bGwsdT1udWxsLHY9bnVsbCx4PW51bGwsRD1udWxsO3RoaXMuaW5pdEF0dHJpYnV0ZXM9ZnVuY3Rpb24oKXtmb3IodmFyIGE9MCxiPWMubGVuZ3RoO2E8YjthKyspY1thXT0wfTt0aGlzLmVuYWJsZUF0dHJpYnV0ZT1mdW5jdGlvbihiKXtjW2JdPTE7MD09PWRbYl0mJihhLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KGIpLGRbYl09MSl9O3RoaXMuZGlzYWJsZVVudXNlZEF0dHJpYnV0ZXM9ZnVuY3Rpb24oKXtmb3IodmFyIGI9MCxlPWQubGVuZ3RoO2I8ZTtiKyspZFtiXSE9PWNbYl0mJihhLmRpc2FibGVWZXJ0ZXhBdHRyaWJBcnJheShiKSxkW2JdPTApfTt0aGlzLnNldEJsZW5kaW5nPWZ1bmN0aW9uKGMsZCxcbm4scSxyLHMsdCl7YyE9PWUmJihjPT09VEhSRUUuTm9CbGVuZGluZz9hLmRpc2FibGUoYS5CTEVORCk6Yz09PVRIUkVFLkFkZGl0aXZlQmxlbmRpbmc/KGEuZW5hYmxlKGEuQkxFTkQpLGEuYmxlbmRFcXVhdGlvbihhLkZVTkNfQUREKSxhLmJsZW5kRnVuYyhhLlNSQ19BTFBIQSxhLk9ORSkpOmM9PT1USFJFRS5TdWJ0cmFjdGl2ZUJsZW5kaW5nPyhhLmVuYWJsZShhLkJMRU5EKSxhLmJsZW5kRXF1YXRpb24oYS5GVU5DX0FERCksYS5ibGVuZEZ1bmMoYS5aRVJPLGEuT05FX01JTlVTX1NSQ19DT0xPUikpOmM9PT1USFJFRS5NdWx0aXBseUJsZW5kaW5nPyhhLmVuYWJsZShhLkJMRU5EKSxhLmJsZW5kRXF1YXRpb24oYS5GVU5DX0FERCksYS5ibGVuZEZ1bmMoYS5aRVJPLGEuU1JDX0NPTE9SKSk6Yz09PVRIUkVFLkN1c3RvbUJsZW5kaW5nP2EuZW5hYmxlKGEuQkxFTkQpOihhLmVuYWJsZShhLkJMRU5EKSxhLmJsZW5kRXF1YXRpb25TZXBhcmF0ZShhLkZVTkNfQURELGEuRlVOQ19BREQpLFxuYS5ibGVuZEZ1bmNTZXBhcmF0ZShhLlNSQ19BTFBIQSxhLk9ORV9NSU5VU19TUkNfQUxQSEEsYS5PTkUsYS5PTkVfTUlOVVNfU1JDX0FMUEhBKSksZT1jKTtpZihjPT09VEhSRUUuQ3VzdG9tQmxlbmRpbmcpe3I9cnx8ZDtzPXN8fG47dD10fHxxO2lmKGQhPT1mfHxyIT09aylhLmJsZW5kRXF1YXRpb25TZXBhcmF0ZShiKGQpLGIocikpLGY9ZCxrPXI7aWYobiE9PWd8fHEhPT1ofHxzIT09bHx8dCE9PXApYS5ibGVuZEZ1bmNTZXBhcmF0ZShiKG4pLGIocSksYihzKSxiKHQpKSxnPW4saD1xLGw9cyxwPXR9ZWxzZSBwPWw9az1oPWc9Zj1udWxsfTt0aGlzLnNldERlcHRoVGVzdD1mdW5jdGlvbihiKXtxIT09YiYmKGI/YS5lbmFibGUoYS5ERVBUSF9URVNUKTphLmRpc2FibGUoYS5ERVBUSF9URVNUKSxxPWIpfTt0aGlzLnNldERlcHRoV3JpdGU9ZnVuY3Rpb24oYil7biE9PWImJihhLmRlcHRoTWFzayhiKSxuPWIpfTt0aGlzLnNldENvbG9yV3JpdGU9ZnVuY3Rpb24oYil7dCE9PWImJihhLmNvbG9yTWFzayhiLFxuYixiLGIpLHQ9Yil9O3RoaXMuc2V0RG91YmxlU2lkZWQ9ZnVuY3Rpb24oYil7ciE9PWImJihiP2EuZGlzYWJsZShhLkNVTExfRkFDRSk6YS5lbmFibGUoYS5DVUxMX0ZBQ0UpLHI9Yil9O3RoaXMuc2V0RmxpcFNpZGVkPWZ1bmN0aW9uKGIpe3MhPT1iJiYoYj9hLmZyb250RmFjZShhLkNXKTphLmZyb250RmFjZShhLkNDVykscz1iKX07dGhpcy5zZXRMaW5lV2lkdGg9ZnVuY3Rpb24oYil7YiE9PXUmJihhLmxpbmVXaWR0aChiKSx1PWIpfTt0aGlzLnNldFBvbHlnb25PZmZzZXQ9ZnVuY3Rpb24oYixjLGQpe3YhPT1iJiYoYj9hLmVuYWJsZShhLlBPTFlHT05fT0ZGU0VUX0ZJTEwpOmEuZGlzYWJsZShhLlBPTFlHT05fT0ZGU0VUX0ZJTEwpLHY9Yik7IWJ8fHg9PT1jJiZEPT09ZHx8KGEucG9seWdvbk9mZnNldChjLGQpLHg9YyxEPWQpfTt0aGlzLnJlc2V0PWZ1bmN0aW9uKCl7Zm9yKHZhciBhPTA7YTxkLmxlbmd0aDthKyspZFthXT0wO3M9cj10PW49cT1lPW51bGx9fTtcblRIUkVFLkxlbnNGbGFyZVBsdWdpbj1mdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGcsaCxrLGwscCxxLG49YS5jb250ZXh0LHQscixzLHUsdix4O3RoaXMucmVuZGVyPWZ1bmN0aW9uKEQsdyx5LEEpe2lmKDAhPT1iLmxlbmd0aCl7RD1uZXcgVEhSRUUuVmVjdG9yMzt2YXIgRT1BL3ksRz0uNSp5LEY9LjUqQSx6PTE2L0EsST1uZXcgVEhSRUUuVmVjdG9yMih6KkUseiksVT1uZXcgVEhSRUUuVmVjdG9yMygxLDEsMCksTT1uZXcgVEhSRUUuVmVjdG9yMigxLDEpO2lmKHZvaWQgMD09PXMpe3ZhciB6PW5ldyBGbG9hdDMyQXJyYXkoWy0xLC0xLDAsMCwxLC0xLDEsMCwxLDEsMSwxLC0xLDEsMCwxXSksSD1uZXcgVWludDE2QXJyYXkoWzAsMSwyLDAsMiwzXSk7dD1uLmNyZWF0ZUJ1ZmZlcigpO3I9bi5jcmVhdGVCdWZmZXIoKTtuLmJpbmRCdWZmZXIobi5BUlJBWV9CVUZGRVIsdCk7bi5idWZmZXJEYXRhKG4uQVJSQVlfQlVGRkVSLHosbi5TVEFUSUNfRFJBVyk7bi5iaW5kQnVmZmVyKG4uRUxFTUVOVF9BUlJBWV9CVUZGRVIsXG5yKTtuLmJ1ZmZlckRhdGEobi5FTEVNRU5UX0FSUkFZX0JVRkZFUixILG4uU1RBVElDX0RSQVcpO3Y9bi5jcmVhdGVUZXh0dXJlKCk7eD1uLmNyZWF0ZVRleHR1cmUoKTtuLmJpbmRUZXh0dXJlKG4uVEVYVFVSRV8yRCx2KTtuLnRleEltYWdlMkQobi5URVhUVVJFXzJELDAsbi5SR0IsMTYsMTYsMCxuLlJHQixuLlVOU0lHTkVEX0JZVEUsbnVsbCk7bi50ZXhQYXJhbWV0ZXJpKG4uVEVYVFVSRV8yRCxuLlRFWFRVUkVfV1JBUF9TLG4uQ0xBTVBfVE9fRURHRSk7bi50ZXhQYXJhbWV0ZXJpKG4uVEVYVFVSRV8yRCxuLlRFWFRVUkVfV1JBUF9ULG4uQ0xBTVBfVE9fRURHRSk7bi50ZXhQYXJhbWV0ZXJpKG4uVEVYVFVSRV8yRCxuLlRFWFRVUkVfTUFHX0ZJTFRFUixuLk5FQVJFU1QpO24udGV4UGFyYW1ldGVyaShuLlRFWFRVUkVfMkQsbi5URVhUVVJFX01JTl9GSUxURVIsbi5ORUFSRVNUKTtuLmJpbmRUZXh0dXJlKG4uVEVYVFVSRV8yRCx4KTtuLnRleEltYWdlMkQobi5URVhUVVJFXzJELDAsXG5uLlJHQkEsMTYsMTYsMCxuLlJHQkEsbi5VTlNJR05FRF9CWVRFLG51bGwpO24udGV4UGFyYW1ldGVyaShuLlRFWFRVUkVfMkQsbi5URVhUVVJFX1dSQVBfUyxuLkNMQU1QX1RPX0VER0UpO24udGV4UGFyYW1ldGVyaShuLlRFWFRVUkVfMkQsbi5URVhUVVJFX1dSQVBfVCxuLkNMQU1QX1RPX0VER0UpO24udGV4UGFyYW1ldGVyaShuLlRFWFRVUkVfMkQsbi5URVhUVVJFX01BR19GSUxURVIsbi5ORUFSRVNUKTtuLnRleFBhcmFtZXRlcmkobi5URVhUVVJFXzJELG4uVEVYVFVSRV9NSU5fRklMVEVSLG4uTkVBUkVTVCk7dmFyIHo9KHU9MDxuLmdldFBhcmFtZXRlcihuLk1BWF9WRVJURVhfVEVYVFVSRV9JTUFHRV9VTklUUykpP3t2ZXJ0ZXhTaGFkZXI6XCJ1bmlmb3JtIGxvd3AgaW50IHJlbmRlclR5cGU7XFxudW5pZm9ybSB2ZWMzIHNjcmVlblBvc2l0aW9uO1xcbnVuaWZvcm0gdmVjMiBzY2FsZTtcXG51bmlmb3JtIGZsb2F0IHJvdGF0aW9uO1xcbnVuaWZvcm0gc2FtcGxlcjJEIG9jY2x1c2lvbk1hcDtcXG5hdHRyaWJ1dGUgdmVjMiBwb3NpdGlvbjtcXG5hdHRyaWJ1dGUgdmVjMiB1djtcXG52YXJ5aW5nIHZlYzIgdlVWO1xcbnZhcnlpbmcgZmxvYXQgdlZpc2liaWxpdHk7XFxudm9pZCBtYWluKCkge1xcbnZVViA9IHV2O1xcbnZlYzIgcG9zID0gcG9zaXRpb247XFxuaWYoIHJlbmRlclR5cGUgPT0gMiApIHtcXG52ZWM0IHZpc2liaWxpdHkgPSB0ZXh0dXJlMkQoIG9jY2x1c2lvbk1hcCwgdmVjMiggMC4xLCAwLjEgKSApO1xcbnZpc2liaWxpdHkgKz0gdGV4dHVyZTJEKCBvY2NsdXNpb25NYXAsIHZlYzIoIDAuNSwgMC4xICkgKTtcXG52aXNpYmlsaXR5ICs9IHRleHR1cmUyRCggb2NjbHVzaW9uTWFwLCB2ZWMyKCAwLjksIDAuMSApICk7XFxudmlzaWJpbGl0eSArPSB0ZXh0dXJlMkQoIG9jY2x1c2lvbk1hcCwgdmVjMiggMC45LCAwLjUgKSApO1xcbnZpc2liaWxpdHkgKz0gdGV4dHVyZTJEKCBvY2NsdXNpb25NYXAsIHZlYzIoIDAuOSwgMC45ICkgKTtcXG52aXNpYmlsaXR5ICs9IHRleHR1cmUyRCggb2NjbHVzaW9uTWFwLCB2ZWMyKCAwLjUsIDAuOSApICk7XFxudmlzaWJpbGl0eSArPSB0ZXh0dXJlMkQoIG9jY2x1c2lvbk1hcCwgdmVjMiggMC4xLCAwLjkgKSApO1xcbnZpc2liaWxpdHkgKz0gdGV4dHVyZTJEKCBvY2NsdXNpb25NYXAsIHZlYzIoIDAuMSwgMC41ICkgKTtcXG52aXNpYmlsaXR5ICs9IHRleHR1cmUyRCggb2NjbHVzaW9uTWFwLCB2ZWMyKCAwLjUsIDAuNSApICk7XFxudlZpc2liaWxpdHkgPSAgICAgICAgdmlzaWJpbGl0eS5yIC8gOS4wO1xcbnZWaXNpYmlsaXR5ICo9IDEuMCAtIHZpc2liaWxpdHkuZyAvIDkuMDtcXG52VmlzaWJpbGl0eSAqPSAgICAgICB2aXNpYmlsaXR5LmIgLyA5LjA7XFxudlZpc2liaWxpdHkgKj0gMS4wIC0gdmlzaWJpbGl0eS5hIC8gOS4wO1xcbnBvcy54ID0gY29zKCByb3RhdGlvbiApICogcG9zaXRpb24ueCAtIHNpbiggcm90YXRpb24gKSAqIHBvc2l0aW9uLnk7XFxucG9zLnkgPSBzaW4oIHJvdGF0aW9uICkgKiBwb3NpdGlvbi54ICsgY29zKCByb3RhdGlvbiApICogcG9zaXRpb24ueTtcXG59XFxuZ2xfUG9zaXRpb24gPSB2ZWM0KCAoIHBvcyAqIHNjYWxlICsgc2NyZWVuUG9zaXRpb24ueHkgKS54eSwgc2NyZWVuUG9zaXRpb24ueiwgMS4wICk7XFxufVwiLFxuZnJhZ21lbnRTaGFkZXI6XCJ1bmlmb3JtIGxvd3AgaW50IHJlbmRlclR5cGU7XFxudW5pZm9ybSBzYW1wbGVyMkQgbWFwO1xcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcXG51bmlmb3JtIHZlYzMgY29sb3I7XFxudmFyeWluZyB2ZWMyIHZVVjtcXG52YXJ5aW5nIGZsb2F0IHZWaXNpYmlsaXR5O1xcbnZvaWQgbWFpbigpIHtcXG5pZiggcmVuZGVyVHlwZSA9PSAwICkge1xcbmdsX0ZyYWdDb2xvciA9IHZlYzQoIDEuMCwgMC4wLCAxLjAsIDAuMCApO1xcbn0gZWxzZSBpZiggcmVuZGVyVHlwZSA9PSAxICkge1xcbmdsX0ZyYWdDb2xvciA9IHRleHR1cmUyRCggbWFwLCB2VVYgKTtcXG59IGVsc2Uge1xcbnZlYzQgdGV4dHVyZSA9IHRleHR1cmUyRCggbWFwLCB2VVYgKTtcXG50ZXh0dXJlLmEgKj0gb3BhY2l0eSAqIHZWaXNpYmlsaXR5O1xcbmdsX0ZyYWdDb2xvciA9IHRleHR1cmU7XFxuZ2xfRnJhZ0NvbG9yLnJnYiAqPSBjb2xvcjtcXG59XFxufVwifTp7dmVydGV4U2hhZGVyOlwidW5pZm9ybSBsb3dwIGludCByZW5kZXJUeXBlO1xcbnVuaWZvcm0gdmVjMyBzY3JlZW5Qb3NpdGlvbjtcXG51bmlmb3JtIHZlYzIgc2NhbGU7XFxudW5pZm9ybSBmbG9hdCByb3RhdGlvbjtcXG5hdHRyaWJ1dGUgdmVjMiBwb3NpdGlvbjtcXG5hdHRyaWJ1dGUgdmVjMiB1djtcXG52YXJ5aW5nIHZlYzIgdlVWO1xcbnZvaWQgbWFpbigpIHtcXG52VVYgPSB1djtcXG52ZWMyIHBvcyA9IHBvc2l0aW9uO1xcbmlmKCByZW5kZXJUeXBlID09IDIgKSB7XFxucG9zLnggPSBjb3MoIHJvdGF0aW9uICkgKiBwb3NpdGlvbi54IC0gc2luKCByb3RhdGlvbiApICogcG9zaXRpb24ueTtcXG5wb3MueSA9IHNpbiggcm90YXRpb24gKSAqIHBvc2l0aW9uLnggKyBjb3MoIHJvdGF0aW9uICkgKiBwb3NpdGlvbi55O1xcbn1cXG5nbF9Qb3NpdGlvbiA9IHZlYzQoICggcG9zICogc2NhbGUgKyBzY3JlZW5Qb3NpdGlvbi54eSApLnh5LCBzY3JlZW5Qb3NpdGlvbi56LCAxLjAgKTtcXG59XCIsXG5mcmFnbWVudFNoYWRlcjpcInByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O1xcbnVuaWZvcm0gbG93cCBpbnQgcmVuZGVyVHlwZTtcXG51bmlmb3JtIHNhbXBsZXIyRCBtYXA7XFxudW5pZm9ybSBzYW1wbGVyMkQgb2NjbHVzaW9uTWFwO1xcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcXG51bmlmb3JtIHZlYzMgY29sb3I7XFxudmFyeWluZyB2ZWMyIHZVVjtcXG52b2lkIG1haW4oKSB7XFxuaWYoIHJlbmRlclR5cGUgPT0gMCApIHtcXG5nbF9GcmFnQ29sb3IgPSB2ZWM0KCB0ZXh0dXJlMkQoIG1hcCwgdlVWICkucmdiLCAwLjAgKTtcXG59IGVsc2UgaWYoIHJlbmRlclR5cGUgPT0gMSApIHtcXG5nbF9GcmFnQ29sb3IgPSB0ZXh0dXJlMkQoIG1hcCwgdlVWICk7XFxufSBlbHNlIHtcXG5mbG9hdCB2aXNpYmlsaXR5ID0gdGV4dHVyZTJEKCBvY2NsdXNpb25NYXAsIHZlYzIoIDAuNSwgMC4xICkgKS5hO1xcbnZpc2liaWxpdHkgKz0gdGV4dHVyZTJEKCBvY2NsdXNpb25NYXAsIHZlYzIoIDAuOSwgMC41ICkgKS5hO1xcbnZpc2liaWxpdHkgKz0gdGV4dHVyZTJEKCBvY2NsdXNpb25NYXAsIHZlYzIoIDAuNSwgMC45ICkgKS5hO1xcbnZpc2liaWxpdHkgKz0gdGV4dHVyZTJEKCBvY2NsdXNpb25NYXAsIHZlYzIoIDAuMSwgMC41ICkgKS5hO1xcbnZpc2liaWxpdHkgPSAoIDEuMCAtIHZpc2liaWxpdHkgLyA0LjAgKTtcXG52ZWM0IHRleHR1cmUgPSB0ZXh0dXJlMkQoIG1hcCwgdlVWICk7XFxudGV4dHVyZS5hICo9IG9wYWNpdHkgKiB2aXNpYmlsaXR5O1xcbmdsX0ZyYWdDb2xvciA9IHRleHR1cmU7XFxuZ2xfRnJhZ0NvbG9yLnJnYiAqPSBjb2xvcjtcXG59XFxufVwifSxcbkg9bi5jcmVhdGVQcm9ncmFtKCksTD1uLmNyZWF0ZVNoYWRlcihuLkZSQUdNRU5UX1NIQURFUiksUD1uLmNyZWF0ZVNoYWRlcihuLlZFUlRFWF9TSEFERVIpLE49XCJwcmVjaXNpb24gXCIrYS5nZXRQcmVjaXNpb24oKStcIiBmbG9hdDtcXG5cIjtuLnNoYWRlclNvdXJjZShMLE4rei5mcmFnbWVudFNoYWRlcik7bi5zaGFkZXJTb3VyY2UoUCxOK3oudmVydGV4U2hhZGVyKTtuLmNvbXBpbGVTaGFkZXIoTCk7bi5jb21waWxlU2hhZGVyKFApO24uYXR0YWNoU2hhZGVyKEgsTCk7bi5hdHRhY2hTaGFkZXIoSCxQKTtuLmxpbmtQcm9ncmFtKEgpO3M9SDtwPW4uZ2V0QXR0cmliTG9jYXRpb24ocyxcInBvc2l0aW9uXCIpO3E9bi5nZXRBdHRyaWJMb2NhdGlvbihzLFwidXZcIik7Yz1uLmdldFVuaWZvcm1Mb2NhdGlvbihzLFwicmVuZGVyVHlwZVwiKTtkPW4uZ2V0VW5pZm9ybUxvY2F0aW9uKHMsXCJtYXBcIik7ZT1uLmdldFVuaWZvcm1Mb2NhdGlvbihzLFwib2NjbHVzaW9uTWFwXCIpO2Y9bi5nZXRVbmlmb3JtTG9jYXRpb24ocyxcblwib3BhY2l0eVwiKTtnPW4uZ2V0VW5pZm9ybUxvY2F0aW9uKHMsXCJjb2xvclwiKTtoPW4uZ2V0VW5pZm9ybUxvY2F0aW9uKHMsXCJzY2FsZVwiKTtrPW4uZ2V0VW5pZm9ybUxvY2F0aW9uKHMsXCJyb3RhdGlvblwiKTtsPW4uZ2V0VW5pZm9ybUxvY2F0aW9uKHMsXCJzY3JlZW5Qb3NpdGlvblwiKX1uLnVzZVByb2dyYW0ocyk7bi5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheShwKTtuLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KHEpO24udW5pZm9ybTFpKGUsMCk7bi51bmlmb3JtMWkoZCwxKTtuLmJpbmRCdWZmZXIobi5BUlJBWV9CVUZGRVIsdCk7bi52ZXJ0ZXhBdHRyaWJQb2ludGVyKHAsMixuLkZMT0FULCExLDE2LDApO24udmVydGV4QXR0cmliUG9pbnRlcihxLDIsbi5GTE9BVCwhMSwxNiw4KTtuLmJpbmRCdWZmZXIobi5FTEVNRU5UX0FSUkFZX0JVRkZFUixyKTtuLmRpc2FibGUobi5DVUxMX0ZBQ0UpO24uZGVwdGhNYXNrKCExKTtIPTA7Zm9yKEw9Yi5sZW5ndGg7SDxMO0grKylpZih6PTE2L0EsSS5zZXQoeipcbkUseiksUD1iW0hdLEQuc2V0KFAubWF0cml4V29ybGQuZWxlbWVudHNbMTJdLFAubWF0cml4V29ybGQuZWxlbWVudHNbMTNdLFAubWF0cml4V29ybGQuZWxlbWVudHNbMTRdKSxELmFwcGx5TWF0cml4NCh3Lm1hdHJpeFdvcmxkSW52ZXJzZSksRC5hcHBseVByb2plY3Rpb24ody5wcm9qZWN0aW9uTWF0cml4KSxVLmNvcHkoRCksTS54PVUueCpHK0csTS55PVUueSpGK0YsdXx8MDxNLngmJk0ueDx5JiYwPE0ueSYmTS55PEEpe24uYWN0aXZlVGV4dHVyZShuLlRFWFRVUkUxKTtuLmJpbmRUZXh0dXJlKG4uVEVYVFVSRV8yRCx2KTtuLmNvcHlUZXhJbWFnZTJEKG4uVEVYVFVSRV8yRCwwLG4uUkdCLE0ueC04LE0ueS04LDE2LDE2LDApO24udW5pZm9ybTFpKGMsMCk7bi51bmlmb3JtMmYoaCxJLngsSS55KTtuLnVuaWZvcm0zZihsLFUueCxVLnksVS56KTtuLmRpc2FibGUobi5CTEVORCk7bi5lbmFibGUobi5ERVBUSF9URVNUKTtuLmRyYXdFbGVtZW50cyhuLlRSSUFOR0xFUyw2LG4uVU5TSUdORURfU0hPUlQsXG4wKTtuLmFjdGl2ZVRleHR1cmUobi5URVhUVVJFMCk7bi5iaW5kVGV4dHVyZShuLlRFWFRVUkVfMkQseCk7bi5jb3B5VGV4SW1hZ2UyRChuLlRFWFRVUkVfMkQsMCxuLlJHQkEsTS54LTgsTS55LTgsMTYsMTYsMCk7bi51bmlmb3JtMWkoYywxKTtuLmRpc2FibGUobi5ERVBUSF9URVNUKTtuLmFjdGl2ZVRleHR1cmUobi5URVhUVVJFMSk7bi5iaW5kVGV4dHVyZShuLlRFWFRVUkVfMkQsdik7bi5kcmF3RWxlbWVudHMobi5UUklBTkdMRVMsNixuLlVOU0lHTkVEX1NIT1JULDApO1AucG9zaXRpb25TY3JlZW4uY29weShVKTtQLmN1c3RvbVVwZGF0ZUNhbGxiYWNrP1AuY3VzdG9tVXBkYXRlQ2FsbGJhY2soUCk6UC51cGRhdGVMZW5zRmxhcmVzKCk7bi51bmlmb3JtMWkoYywyKTtuLmVuYWJsZShuLkJMRU5EKTtmb3IodmFyIE49MCxSPVAubGVuc0ZsYXJlcy5sZW5ndGg7TjxSO04rKyl7dmFyIFY9UC5sZW5zRmxhcmVzW05dOy4wMDE8Vi5vcGFjaXR5JiYuMDAxPFYuc2NhbGUmJihVLng9Vi54LFxuVS55PVYueSxVLno9Vi56LHo9Vi5zaXplKlYuc2NhbGUvQSxJLng9eipFLEkueT16LG4udW5pZm9ybTNmKGwsVS54LFUueSxVLnopLG4udW5pZm9ybTJmKGgsSS54LEkueSksbi51bmlmb3JtMWYoayxWLnJvdGF0aW9uKSxuLnVuaWZvcm0xZihmLFYub3BhY2l0eSksbi51bmlmb3JtM2YoZyxWLmNvbG9yLnIsVi5jb2xvci5nLFYuY29sb3IuYiksYS5zdGF0ZS5zZXRCbGVuZGluZyhWLmJsZW5kaW5nLFYuYmxlbmRFcXVhdGlvbixWLmJsZW5kU3JjLFYuYmxlbmREc3QpLGEuc2V0VGV4dHVyZShWLnRleHR1cmUsMSksbi5kcmF3RWxlbWVudHMobi5UUklBTkdMRVMsNixuLlVOU0lHTkVEX1NIT1JULDApKX19bi5lbmFibGUobi5DVUxMX0ZBQ0UpO24uZW5hYmxlKG4uREVQVEhfVEVTVCk7bi5kZXB0aE1hc2soITApO2EucmVzZXRHTFN0YXRlKCl9fX07XG5USFJFRS5TaGFkb3dNYXBQbHVnaW49ZnVuY3Rpb24oYSxiLGMsZCl7ZnVuY3Rpb24gZShhLGIsZCl7aWYoYi52aXNpYmxlKXt2YXIgZj1jW2IuaWRdO2lmKGYmJmIuY2FzdFNoYWRvdyYmKCExPT09Yi5mcnVzdHVtQ3VsbGVkfHwhMD09PXAuaW50ZXJzZWN0c09iamVjdChiKSkpZm9yKHZhciBnPTAsaD1mLmxlbmd0aDtnPGg7ZysrKXt2YXIgaz1mW2ddO2IuX21vZGVsVmlld01hdHJpeC5tdWx0aXBseU1hdHJpY2VzKGQubWF0cml4V29ybGRJbnZlcnNlLGIubWF0cml4V29ybGQpO3MucHVzaChrKX1nPTA7Zm9yKGg9Yi5jaGlsZHJlbi5sZW5ndGg7ZzxoO2crKyllKGEsYi5jaGlsZHJlbltnXSxkKX19dmFyIGY9YS5jb250ZXh0LGcsaCxrLGwscD1uZXcgVEhSRUUuRnJ1c3R1bSxxPW5ldyBUSFJFRS5NYXRyaXg0LG49bmV3IFRIUkVFLlZlY3RvcjMsdD1uZXcgVEhSRUUuVmVjdG9yMyxyPW5ldyBUSFJFRS5WZWN0b3IzLHM9W10sdT1USFJFRS5TaGFkZXJMaWIuZGVwdGhSR0JBLHY9VEhSRUUuVW5pZm9ybXNVdGlscy5jbG9uZSh1LnVuaWZvcm1zKTtcbmc9bmV3IFRIUkVFLlNoYWRlck1hdGVyaWFsKHt1bmlmb3Jtczp2LHZlcnRleFNoYWRlcjp1LnZlcnRleFNoYWRlcixmcmFnbWVudFNoYWRlcjp1LmZyYWdtZW50U2hhZGVyfSk7aD1uZXcgVEhSRUUuU2hhZGVyTWF0ZXJpYWwoe3VuaWZvcm1zOnYsdmVydGV4U2hhZGVyOnUudmVydGV4U2hhZGVyLGZyYWdtZW50U2hhZGVyOnUuZnJhZ21lbnRTaGFkZXIsbW9ycGhUYXJnZXRzOiEwfSk7az1uZXcgVEhSRUUuU2hhZGVyTWF0ZXJpYWwoe3VuaWZvcm1zOnYsdmVydGV4U2hhZGVyOnUudmVydGV4U2hhZGVyLGZyYWdtZW50U2hhZGVyOnUuZnJhZ21lbnRTaGFkZXIsc2tpbm5pbmc6ITB9KTtsPW5ldyBUSFJFRS5TaGFkZXJNYXRlcmlhbCh7dW5pZm9ybXM6dix2ZXJ0ZXhTaGFkZXI6dS52ZXJ0ZXhTaGFkZXIsZnJhZ21lbnRTaGFkZXI6dS5mcmFnbWVudFNoYWRlcixtb3JwaFRhcmdldHM6ITAsc2tpbm5pbmc6ITB9KTtnLl9zaGFkb3dQYXNzPSEwO2guX3NoYWRvd1Bhc3M9ITA7ay5fc2hhZG93UGFzcz1cbiEwO2wuX3NoYWRvd1Bhc3M9ITA7dGhpcy5yZW5kZXI9ZnVuY3Rpb24oYyx2KXtpZighMSE9PWEuc2hhZG93TWFwRW5hYmxlZCl7dmFyIHUseSxBLEUsRyxGLHosSSxVPVtdO0U9MDtmLmNsZWFyQ29sb3IoMSwxLDEsMSk7Zi5kaXNhYmxlKGYuQkxFTkQpO2YuZW5hYmxlKGYuQ1VMTF9GQUNFKTtmLmZyb250RmFjZShmLkNDVyk7YS5zaGFkb3dNYXBDdWxsRmFjZT09PVRIUkVFLkN1bGxGYWNlRnJvbnQ/Zi5jdWxsRmFjZShmLkZST05UKTpmLmN1bGxGYWNlKGYuQkFDSyk7YS5zdGF0ZS5zZXREZXB0aFRlc3QoITApO3U9MDtmb3IoeT1iLmxlbmd0aDt1PHk7dSsrKWlmKEE9Ylt1XSxBLmNhc3RTaGFkb3cpaWYoQSBpbnN0YW5jZW9mIFRIUkVFLkRpcmVjdGlvbmFsTGlnaHQmJkEuc2hhZG93Q2FzY2FkZSlmb3IoRz0wO0c8QS5zaGFkb3dDYXNjYWRlQ291bnQ7RysrKXt2YXIgTTtpZihBLnNoYWRvd0Nhc2NhZGVBcnJheVtHXSlNPUEuc2hhZG93Q2FzY2FkZUFycmF5W0ddO2Vsc2V7ej1BO1xudmFyIEg9RztNPW5ldyBUSFJFRS5EaXJlY3Rpb25hbExpZ2h0O00uaXNWaXJ0dWFsPSEwO00ub25seVNoYWRvdz0hMDtNLmNhc3RTaGFkb3c9ITA7TS5zaGFkb3dDYW1lcmFOZWFyPXouc2hhZG93Q2FtZXJhTmVhcjtNLnNoYWRvd0NhbWVyYUZhcj16LnNoYWRvd0NhbWVyYUZhcjtNLnNoYWRvd0NhbWVyYUxlZnQ9ei5zaGFkb3dDYW1lcmFMZWZ0O00uc2hhZG93Q2FtZXJhUmlnaHQ9ei5zaGFkb3dDYW1lcmFSaWdodDtNLnNoYWRvd0NhbWVyYUJvdHRvbT16LnNoYWRvd0NhbWVyYUJvdHRvbTtNLnNoYWRvd0NhbWVyYVRvcD16LnNoYWRvd0NhbWVyYVRvcDtNLnNoYWRvd0NhbWVyYVZpc2libGU9ei5zaGFkb3dDYW1lcmFWaXNpYmxlO00uc2hhZG93RGFya25lc3M9ei5zaGFkb3dEYXJrbmVzcztNLnNoYWRvd0JpYXM9ei5zaGFkb3dDYXNjYWRlQmlhc1tIXTtNLnNoYWRvd01hcFdpZHRoPXouc2hhZG93Q2FzY2FkZVdpZHRoW0hdO00uc2hhZG93TWFwSGVpZ2h0PXouc2hhZG93Q2FzY2FkZUhlaWdodFtIXTtcbk0ucG9pbnRzV29ybGQ9W107TS5wb2ludHNGcnVzdHVtPVtdO0k9TS5wb2ludHNXb3JsZDtGPU0ucG9pbnRzRnJ1c3R1bTtmb3IodmFyIEw9MDs4Pkw7TCsrKUlbTF09bmV3IFRIUkVFLlZlY3RvcjMsRltMXT1uZXcgVEhSRUUuVmVjdG9yMztJPXouc2hhZG93Q2FzY2FkZU5lYXJaW0hdO3o9ei5zaGFkb3dDYXNjYWRlRmFyWltIXTtGWzBdLnNldCgtMSwtMSxJKTtGWzFdLnNldCgxLC0xLEkpO0ZbMl0uc2V0KC0xLDEsSSk7RlszXS5zZXQoMSwxLEkpO0ZbNF0uc2V0KC0xLC0xLHopO0ZbNV0uc2V0KDEsLTEseik7Rls2XS5zZXQoLTEsMSx6KTtGWzddLnNldCgxLDEseik7TS5vcmlnaW5hbENhbWVyYT12O0Y9bmV3IFRIUkVFLkd5cm9zY29wZTtGLnBvc2l0aW9uLmNvcHkoQS5zaGFkb3dDYXNjYWRlT2Zmc2V0KTtGLmFkZChNKTtGLmFkZChNLnRhcmdldCk7di5hZGQoRik7QS5zaGFkb3dDYXNjYWRlQXJyYXlbR109TX1IPUE7ST1HO3o9SC5zaGFkb3dDYXNjYWRlQXJyYXlbSV07ei5wb3NpdGlvbi5jb3B5KEgucG9zaXRpb24pO1xuei50YXJnZXQucG9zaXRpb24uY29weShILnRhcmdldC5wb3NpdGlvbik7ei5sb29rQXQoei50YXJnZXQpO3ouc2hhZG93Q2FtZXJhVmlzaWJsZT1ILnNoYWRvd0NhbWVyYVZpc2libGU7ei5zaGFkb3dEYXJrbmVzcz1ILnNoYWRvd0RhcmtuZXNzO3ouc2hhZG93Qmlhcz1ILnNoYWRvd0Nhc2NhZGVCaWFzW0ldO0Y9SC5zaGFkb3dDYXNjYWRlTmVhclpbSV07SD1ILnNoYWRvd0Nhc2NhZGVGYXJaW0ldO3o9ei5wb2ludHNGcnVzdHVtO3pbMF0uej1GO3pbMV0uej1GO3pbMl0uej1GO3pbM10uej1GO3pbNF0uej1IO3pbNV0uej1IO3pbNl0uej1IO3pbN10uej1IO1VbRV09TTtFKyt9ZWxzZSBVW0VdPUEsRSsrO3U9MDtmb3IoeT1VLmxlbmd0aDt1PHk7dSsrKXtBPVVbdV07QS5zaGFkb3dNYXB8fChHPVRIUkVFLkxpbmVhckZpbHRlcixhLnNoYWRvd01hcFR5cGU9PT1USFJFRS5QQ0ZTb2Z0U2hhZG93TWFwJiYoRz1USFJFRS5OZWFyZXN0RmlsdGVyKSxBLnNoYWRvd01hcD1uZXcgVEhSRUUuV2ViR0xSZW5kZXJUYXJnZXQoQS5zaGFkb3dNYXBXaWR0aCxcbkEuc2hhZG93TWFwSGVpZ2h0LHttaW5GaWx0ZXI6RyxtYWdGaWx0ZXI6Ryxmb3JtYXQ6VEhSRUUuUkdCQUZvcm1hdH0pLEEuc2hhZG93TWFwU2l6ZT1uZXcgVEhSRUUuVmVjdG9yMihBLnNoYWRvd01hcFdpZHRoLEEuc2hhZG93TWFwSGVpZ2h0KSxBLnNoYWRvd01hdHJpeD1uZXcgVEhSRUUuTWF0cml4NCk7aWYoIUEuc2hhZG93Q2FtZXJhKXtpZihBIGluc3RhbmNlb2YgVEhSRUUuU3BvdExpZ2h0KUEuc2hhZG93Q2FtZXJhPW5ldyBUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYShBLnNoYWRvd0NhbWVyYUZvdixBLnNoYWRvd01hcFdpZHRoL0Euc2hhZG93TWFwSGVpZ2h0LEEuc2hhZG93Q2FtZXJhTmVhcixBLnNoYWRvd0NhbWVyYUZhcik7ZWxzZSBpZihBIGluc3RhbmNlb2YgVEhSRUUuRGlyZWN0aW9uYWxMaWdodClBLnNoYWRvd0NhbWVyYT1uZXcgVEhSRUUuT3J0aG9ncmFwaGljQ2FtZXJhKEEuc2hhZG93Q2FtZXJhTGVmdCxBLnNoYWRvd0NhbWVyYVJpZ2h0LEEuc2hhZG93Q2FtZXJhVG9wLFxuQS5zaGFkb3dDYW1lcmFCb3R0b20sQS5zaGFkb3dDYW1lcmFOZWFyLEEuc2hhZG93Q2FtZXJhRmFyKTtlbHNle1RIUkVFLmVycm9yKFwiVEhSRUUuU2hhZG93TWFwUGx1Z2luOiBVbnN1cHBvcnRlZCBsaWdodCB0eXBlIGZvciBzaGFkb3dcIixBKTtjb250aW51ZX1jLmFkZChBLnNoYWRvd0NhbWVyYSk7ITA9PT1jLmF1dG9VcGRhdGUmJmMudXBkYXRlTWF0cml4V29ybGQoKX1BLnNoYWRvd0NhbWVyYVZpc2libGUmJiFBLmNhbWVyYUhlbHBlciYmKEEuY2FtZXJhSGVscGVyPW5ldyBUSFJFRS5DYW1lcmFIZWxwZXIoQS5zaGFkb3dDYW1lcmEpLGMuYWRkKEEuY2FtZXJhSGVscGVyKSk7aWYoQS5pc1ZpcnR1YWwmJk0ub3JpZ2luYWxDYW1lcmE9PXYpe0c9djtFPUEuc2hhZG93Q2FtZXJhO0Y9QS5wb2ludHNGcnVzdHVtO3o9QS5wb2ludHNXb3JsZDtuLnNldChJbmZpbml0eSxJbmZpbml0eSxJbmZpbml0eSk7dC5zZXQoLUluZmluaXR5LC1JbmZpbml0eSwtSW5maW5pdHkpO2ZvcihIPTA7OD5cbkg7SCsrKUk9eltIXSxJLmNvcHkoRltIXSksSS51bnByb2plY3QoRyksSS5hcHBseU1hdHJpeDQoRS5tYXRyaXhXb3JsZEludmVyc2UpLEkueDxuLngmJihuLng9SS54KSxJLng+dC54JiYodC54PUkueCksSS55PG4ueSYmKG4ueT1JLnkpLEkueT50LnkmJih0Lnk9SS55KSxJLno8bi56JiYobi56PUkueiksSS56PnQueiYmKHQuej1JLnopO0UubGVmdD1uLng7RS5yaWdodD10Lng7RS50b3A9dC55O0UuYm90dG9tPW4ueTtFLnVwZGF0ZVByb2plY3Rpb25NYXRyaXgoKX1FPUEuc2hhZG93TWFwO0Y9QS5zaGFkb3dNYXRyaXg7Rz1BLnNoYWRvd0NhbWVyYTtHLnBvc2l0aW9uLnNldEZyb21NYXRyaXhQb3NpdGlvbihBLm1hdHJpeFdvcmxkKTtyLnNldEZyb21NYXRyaXhQb3NpdGlvbihBLnRhcmdldC5tYXRyaXhXb3JsZCk7Ry5sb29rQXQocik7Ry51cGRhdGVNYXRyaXhXb3JsZCgpO0cubWF0cml4V29ybGRJbnZlcnNlLmdldEludmVyc2UoRy5tYXRyaXhXb3JsZCk7QS5jYW1lcmFIZWxwZXImJlxuKEEuY2FtZXJhSGVscGVyLnZpc2libGU9QS5zaGFkb3dDYW1lcmFWaXNpYmxlKTtBLnNoYWRvd0NhbWVyYVZpc2libGUmJkEuY2FtZXJhSGVscGVyLnVwZGF0ZSgpO0Yuc2V0KC41LDAsMCwuNSwwLC41LDAsLjUsMCwwLC41LC41LDAsMCwwLDEpO0YubXVsdGlwbHkoRy5wcm9qZWN0aW9uTWF0cml4KTtGLm11bHRpcGx5KEcubWF0cml4V29ybGRJbnZlcnNlKTtxLm11bHRpcGx5TWF0cmljZXMoRy5wcm9qZWN0aW9uTWF0cml4LEcubWF0cml4V29ybGRJbnZlcnNlKTtwLnNldEZyb21NYXRyaXgocSk7YS5zZXRSZW5kZXJUYXJnZXQoRSk7YS5jbGVhcigpO3MubGVuZ3RoPTA7ZShjLGMsRyk7QT0wO2ZvcihFPXMubGVuZ3RoO0E8RTtBKyspej1zW0FdLEY9ei5vYmplY3Qsej16LmJ1ZmZlcixIPUYubWF0ZXJpYWwgaW5zdGFuY2VvZiBUSFJFRS5NZXNoRmFjZU1hdGVyaWFsP0YubWF0ZXJpYWwubWF0ZXJpYWxzWzBdOkYubWF0ZXJpYWwsST12b2lkIDAhPT1GLmdlb21ldHJ5Lm1vcnBoVGFyZ2V0cyYmXG4wPEYuZ2VvbWV0cnkubW9ycGhUYXJnZXRzLmxlbmd0aCYmSC5tb3JwaFRhcmdldHMsTD1GIGluc3RhbmNlb2YgVEhSRUUuU2tpbm5lZE1lc2gmJkguc2tpbm5pbmcsST1GLmN1c3RvbURlcHRoTWF0ZXJpYWw/Ri5jdXN0b21EZXB0aE1hdGVyaWFsOkw/ST9sOms6ST9oOmcsYS5zZXRNYXRlcmlhbEZhY2VzKEgpLHogaW5zdGFuY2VvZiBUSFJFRS5CdWZmZXJHZW9tZXRyeT9hLnJlbmRlckJ1ZmZlckRpcmVjdChHLGIsbnVsbCxJLHosRik6YS5yZW5kZXJCdWZmZXIoRyxiLG51bGwsSSx6LEYpO0E9MDtmb3IoRT1kLmxlbmd0aDtBPEU7QSsrKXo9ZFtBXSxGPXoub2JqZWN0LEYudmlzaWJsZSYmRi5jYXN0U2hhZG93JiYoRi5fbW9kZWxWaWV3TWF0cml4Lm11bHRpcGx5TWF0cmljZXMoRy5tYXRyaXhXb3JsZEludmVyc2UsRi5tYXRyaXhXb3JsZCksYS5yZW5kZXJJbW1lZGlhdGVPYmplY3QoRyxiLG51bGwsZyxGKSl9dT1hLmdldENsZWFyQ29sb3IoKTt5PWEuZ2V0Q2xlYXJBbHBoYSgpO2YuY2xlYXJDb2xvcih1LnIsXG51LmcsdS5iLHkpO2YuZW5hYmxlKGYuQkxFTkQpO2Euc2hhZG93TWFwQ3VsbEZhY2U9PT1USFJFRS5DdWxsRmFjZUZyb250JiZmLmN1bGxGYWNlKGYuQkFDSyk7YS5yZXNldEdMU3RhdGUoKX19fTtcblRIUkVFLlNwcml0ZVBsdWdpbj1mdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGcsaCxrLGwscCxxLG4sdCxyLHMsdSx2LHg7ZnVuY3Rpb24gRChhLGIpe3JldHVybiBhLnohPT1iLno/Yi56LWEuejpiLmlkLWEuaWR9dmFyIHc9YS5jb250ZXh0LHksQSxFLEcsRj1uZXcgVEhSRUUuVmVjdG9yMyx6PW5ldyBUSFJFRS5RdWF0ZXJuaW9uLEk9bmV3IFRIUkVFLlZlY3RvcjM7dGhpcy5yZW5kZXI9ZnVuY3Rpb24oVSxNKXtpZigwIT09Yi5sZW5ndGgpe2lmKHZvaWQgMD09PUUpe3ZhciBIPW5ldyBGbG9hdDMyQXJyYXkoWy0uNSwtLjUsMCwwLC41LC0uNSwxLDAsLjUsLjUsMSwxLC0uNSwuNSwwLDFdKSxMPW5ldyBVaW50MTZBcnJheShbMCwxLDIsMCwyLDNdKTt5PXcuY3JlYXRlQnVmZmVyKCk7QT13LmNyZWF0ZUJ1ZmZlcigpO3cuYmluZEJ1ZmZlcih3LkFSUkFZX0JVRkZFUix5KTt3LmJ1ZmZlckRhdGEody5BUlJBWV9CVUZGRVIsSCx3LlNUQVRJQ19EUkFXKTt3LmJpbmRCdWZmZXIody5FTEVNRU5UX0FSUkFZX0JVRkZFUixcbkEpO3cuYnVmZmVyRGF0YSh3LkVMRU1FTlRfQVJSQVlfQlVGRkVSLEwsdy5TVEFUSUNfRFJBVyk7dmFyIEg9dy5jcmVhdGVQcm9ncmFtKCksTD13LmNyZWF0ZVNoYWRlcih3LlZFUlRFWF9TSEFERVIpLFA9dy5jcmVhdGVTaGFkZXIody5GUkFHTUVOVF9TSEFERVIpO3cuc2hhZGVyU291cmNlKEwsW1wicHJlY2lzaW9uIFwiK2EuZ2V0UHJlY2lzaW9uKCkrXCIgZmxvYXQ7XCIsXCJ1bmlmb3JtIG1hdDQgbW9kZWxWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uTWF0cml4O1xcbnVuaWZvcm0gZmxvYXQgcm90YXRpb247XFxudW5pZm9ybSB2ZWMyIHNjYWxlO1xcbnVuaWZvcm0gdmVjMiB1dk9mZnNldDtcXG51bmlmb3JtIHZlYzIgdXZTY2FsZTtcXG5hdHRyaWJ1dGUgdmVjMiBwb3NpdGlvbjtcXG5hdHRyaWJ1dGUgdmVjMiB1djtcXG52YXJ5aW5nIHZlYzIgdlVWO1xcbnZvaWQgbWFpbigpIHtcXG52VVYgPSB1dk9mZnNldCArIHV2ICogdXZTY2FsZTtcXG52ZWMyIGFsaWduZWRQb3NpdGlvbiA9IHBvc2l0aW9uICogc2NhbGU7XFxudmVjMiByb3RhdGVkUG9zaXRpb247XFxucm90YXRlZFBvc2l0aW9uLnggPSBjb3MoIHJvdGF0aW9uICkgKiBhbGlnbmVkUG9zaXRpb24ueCAtIHNpbiggcm90YXRpb24gKSAqIGFsaWduZWRQb3NpdGlvbi55O1xcbnJvdGF0ZWRQb3NpdGlvbi55ID0gc2luKCByb3RhdGlvbiApICogYWxpZ25lZFBvc2l0aW9uLnggKyBjb3MoIHJvdGF0aW9uICkgKiBhbGlnbmVkUG9zaXRpb24ueTtcXG52ZWM0IGZpbmFsUG9zaXRpb247XFxuZmluYWxQb3NpdGlvbiA9IG1vZGVsVmlld01hdHJpeCAqIHZlYzQoIDAuMCwgMC4wLCAwLjAsIDEuMCApO1xcbmZpbmFsUG9zaXRpb24ueHkgKz0gcm90YXRlZFBvc2l0aW9uO1xcbmZpbmFsUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogZmluYWxQb3NpdGlvbjtcXG5nbF9Qb3NpdGlvbiA9IGZpbmFsUG9zaXRpb247XFxufVwiXS5qb2luKFwiXFxuXCIpKTtcbncuc2hhZGVyU291cmNlKFAsW1wicHJlY2lzaW9uIFwiK2EuZ2V0UHJlY2lzaW9uKCkrXCIgZmxvYXQ7XCIsXCJ1bmlmb3JtIHZlYzMgY29sb3I7XFxudW5pZm9ybSBzYW1wbGVyMkQgbWFwO1xcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcXG51bmlmb3JtIGludCBmb2dUeXBlO1xcbnVuaWZvcm0gdmVjMyBmb2dDb2xvcjtcXG51bmlmb3JtIGZsb2F0IGZvZ0RlbnNpdHk7XFxudW5pZm9ybSBmbG9hdCBmb2dOZWFyO1xcbnVuaWZvcm0gZmxvYXQgZm9nRmFyO1xcbnVuaWZvcm0gZmxvYXQgYWxwaGFUZXN0O1xcbnZhcnlpbmcgdmVjMiB2VVY7XFxudm9pZCBtYWluKCkge1xcbnZlYzQgdGV4dHVyZSA9IHRleHR1cmUyRCggbWFwLCB2VVYgKTtcXG5pZiAoIHRleHR1cmUuYSA8IGFscGhhVGVzdCApIGRpc2NhcmQ7XFxuZ2xfRnJhZ0NvbG9yID0gdmVjNCggY29sb3IgKiB0ZXh0dXJlLnh5eiwgdGV4dHVyZS5hICogb3BhY2l0eSApO1xcbmlmICggZm9nVHlwZSA+IDAgKSB7XFxuZmxvYXQgZGVwdGggPSBnbF9GcmFnQ29vcmQueiAvIGdsX0ZyYWdDb29yZC53O1xcbmZsb2F0IGZvZ0ZhY3RvciA9IDAuMDtcXG5pZiAoIGZvZ1R5cGUgPT0gMSApIHtcXG5mb2dGYWN0b3IgPSBzbW9vdGhzdGVwKCBmb2dOZWFyLCBmb2dGYXIsIGRlcHRoICk7XFxufSBlbHNlIHtcXG5jb25zdCBmbG9hdCBMT0cyID0gMS40NDI2OTU7XFxuZmxvYXQgZm9nRmFjdG9yID0gZXhwMiggLSBmb2dEZW5zaXR5ICogZm9nRGVuc2l0eSAqIGRlcHRoICogZGVwdGggKiBMT0cyICk7XFxuZm9nRmFjdG9yID0gMS4wIC0gY2xhbXAoIGZvZ0ZhY3RvciwgMC4wLCAxLjAgKTtcXG59XFxuZ2xfRnJhZ0NvbG9yID0gbWl4KCBnbF9GcmFnQ29sb3IsIHZlYzQoIGZvZ0NvbG9yLCBnbF9GcmFnQ29sb3IudyApLCBmb2dGYWN0b3IgKTtcXG59XFxufVwiXS5qb2luKFwiXFxuXCIpKTtcbncuY29tcGlsZVNoYWRlcihMKTt3LmNvbXBpbGVTaGFkZXIoUCk7dy5hdHRhY2hTaGFkZXIoSCxMKTt3LmF0dGFjaFNoYWRlcihILFApO3cubGlua1Byb2dyYW0oSCk7RT1IO3Y9dy5nZXRBdHRyaWJMb2NhdGlvbihFLFwicG9zaXRpb25cIik7eD13LmdldEF0dHJpYkxvY2F0aW9uKEUsXCJ1dlwiKTtjPXcuZ2V0VW5pZm9ybUxvY2F0aW9uKEUsXCJ1dk9mZnNldFwiKTtkPXcuZ2V0VW5pZm9ybUxvY2F0aW9uKEUsXCJ1dlNjYWxlXCIpO2U9dy5nZXRVbmlmb3JtTG9jYXRpb24oRSxcInJvdGF0aW9uXCIpO2Y9dy5nZXRVbmlmb3JtTG9jYXRpb24oRSxcInNjYWxlXCIpO2c9dy5nZXRVbmlmb3JtTG9jYXRpb24oRSxcImNvbG9yXCIpO2g9dy5nZXRVbmlmb3JtTG9jYXRpb24oRSxcIm1hcFwiKTtrPXcuZ2V0VW5pZm9ybUxvY2F0aW9uKEUsXCJvcGFjaXR5XCIpO2w9dy5nZXRVbmlmb3JtTG9jYXRpb24oRSxcIm1vZGVsVmlld01hdHJpeFwiKTtwPXcuZ2V0VW5pZm9ybUxvY2F0aW9uKEUsXCJwcm9qZWN0aW9uTWF0cml4XCIpO3E9XG53LmdldFVuaWZvcm1Mb2NhdGlvbihFLFwiZm9nVHlwZVwiKTtuPXcuZ2V0VW5pZm9ybUxvY2F0aW9uKEUsXCJmb2dEZW5zaXR5XCIpO3Q9dy5nZXRVbmlmb3JtTG9jYXRpb24oRSxcImZvZ05lYXJcIik7cj13LmdldFVuaWZvcm1Mb2NhdGlvbihFLFwiZm9nRmFyXCIpO3M9dy5nZXRVbmlmb3JtTG9jYXRpb24oRSxcImZvZ0NvbG9yXCIpO3U9dy5nZXRVbmlmb3JtTG9jYXRpb24oRSxcImFscGhhVGVzdFwiKTtIPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7SC53aWR0aD04O0guaGVpZ2h0PTg7TD1ILmdldENvbnRleHQoXCIyZFwiKTtMLmZpbGxTdHlsZT1cIndoaXRlXCI7TC5maWxsUmVjdCgwLDAsOCw4KTtHPW5ldyBUSFJFRS5UZXh0dXJlKEgpO0cubmVlZHNVcGRhdGU9ITB9dy51c2VQcm9ncmFtKEUpO3cuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkodik7dy5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheSh4KTt3LmRpc2FibGUody5DVUxMX0ZBQ0UpO3cuZW5hYmxlKHcuQkxFTkQpO3cuYmluZEJ1ZmZlcih3LkFSUkFZX0JVRkZFUixcbnkpO3cudmVydGV4QXR0cmliUG9pbnRlcih2LDIsdy5GTE9BVCwhMSwxNiwwKTt3LnZlcnRleEF0dHJpYlBvaW50ZXIoeCwyLHcuRkxPQVQsITEsMTYsOCk7dy5iaW5kQnVmZmVyKHcuRUxFTUVOVF9BUlJBWV9CVUZGRVIsQSk7dy51bmlmb3JtTWF0cml4NGZ2KHAsITEsTS5wcm9qZWN0aW9uTWF0cml4LmVsZW1lbnRzKTt3LmFjdGl2ZVRleHR1cmUody5URVhUVVJFMCk7dy51bmlmb3JtMWkoaCwwKTtMPUg9MDsoUD1VLmZvZyk/KHcudW5pZm9ybTNmKHMsUC5jb2xvci5yLFAuY29sb3IuZyxQLmNvbG9yLmIpLFAgaW5zdGFuY2VvZiBUSFJFRS5Gb2c/KHcudW5pZm9ybTFmKHQsUC5uZWFyKSx3LnVuaWZvcm0xZihyLFAuZmFyKSx3LnVuaWZvcm0xaShxLDEpLEw9SD0xKTpQIGluc3RhbmNlb2YgVEhSRUUuRm9nRXhwMiYmKHcudW5pZm9ybTFmKG4sUC5kZW5zaXR5KSx3LnVuaWZvcm0xaShxLDIpLEw9SD0yKSk6KHcudW5pZm9ybTFpKHEsMCksTD1IPTApO2Zvcih2YXIgUD0wLE49Yi5sZW5ndGg7UDxcbk47UCsrKXt2YXIgUj1iW1BdO1IuX21vZGVsVmlld01hdHJpeC5tdWx0aXBseU1hdHJpY2VzKE0ubWF0cml4V29ybGRJbnZlcnNlLFIubWF0cml4V29ybGQpO1Iuej0tUi5fbW9kZWxWaWV3TWF0cml4LmVsZW1lbnRzWzE0XX1iLnNvcnQoRCk7Zm9yKHZhciBWPVtdLFA9MCxOPWIubGVuZ3RoO1A8TjtQKyspe3ZhciBSPWJbUF0sSj1SLm1hdGVyaWFsO3cudW5pZm9ybTFmKHUsSi5hbHBoYVRlc3QpO3cudW5pZm9ybU1hdHJpeDRmdihsLCExLFIuX21vZGVsVmlld01hdHJpeC5lbGVtZW50cyk7Ui5tYXRyaXhXb3JsZC5kZWNvbXBvc2UoRix6LEkpO1ZbMF09SS54O1ZbMV09SS55O1I9MDtVLmZvZyYmSi5mb2cmJihSPUwpO0ghPT1SJiYody51bmlmb3JtMWkocSxSKSxIPVIpO251bGwhPT1KLm1hcD8ody51bmlmb3JtMmYoYyxKLm1hcC5vZmZzZXQueCxKLm1hcC5vZmZzZXQueSksdy51bmlmb3JtMmYoZCxKLm1hcC5yZXBlYXQueCxKLm1hcC5yZXBlYXQueSkpOih3LnVuaWZvcm0yZihjLFxuMCwwKSx3LnVuaWZvcm0yZihkLDEsMSkpO3cudW5pZm9ybTFmKGssSi5vcGFjaXR5KTt3LnVuaWZvcm0zZihnLEouY29sb3IucixKLmNvbG9yLmcsSi5jb2xvci5iKTt3LnVuaWZvcm0xZihlLEoucm90YXRpb24pO3cudW5pZm9ybTJmdihmLFYpO2Euc3RhdGUuc2V0QmxlbmRpbmcoSi5ibGVuZGluZyxKLmJsZW5kRXF1YXRpb24sSi5ibGVuZFNyYyxKLmJsZW5kRHN0KTthLnN0YXRlLnNldERlcHRoVGVzdChKLmRlcHRoVGVzdCk7YS5zdGF0ZS5zZXREZXB0aFdyaXRlKEouZGVwdGhXcml0ZSk7Si5tYXAmJkoubWFwLmltYWdlJiZKLm1hcC5pbWFnZS53aWR0aD9hLnNldFRleHR1cmUoSi5tYXAsMCk6YS5zZXRUZXh0dXJlKEcsMCk7dy5kcmF3RWxlbWVudHMody5UUklBTkdMRVMsNix3LlVOU0lHTkVEX1NIT1JULDApfXcuZW5hYmxlKHcuQ1VMTF9GQUNFKTthLnJlc2V0R0xTdGF0ZSgpfX19O1xuVEhSRUUuR2VvbWV0cnlVdGlscz17bWVyZ2U6ZnVuY3Rpb24oYSxiLGMpe1RIUkVFLndhcm4oXCJUSFJFRS5HZW9tZXRyeVV0aWxzOiAubWVyZ2UoKSBoYXMgYmVlbiBtb3ZlZCB0byBHZW9tZXRyeS4gVXNlIGdlb21ldHJ5Lm1lcmdlKCBnZW9tZXRyeTIsIG1hdHJpeCwgbWF0ZXJpYWxJbmRleE9mZnNldCApIGluc3RlYWQuXCIpO3ZhciBkO2IgaW5zdGFuY2VvZiBUSFJFRS5NZXNoJiYoYi5tYXRyaXhBdXRvVXBkYXRlJiZiLnVwZGF0ZU1hdHJpeCgpLGQ9Yi5tYXRyaXgsYj1iLmdlb21ldHJ5KTthLm1lcmdlKGIsZCxjKX0sY2VudGVyOmZ1bmN0aW9uKGEpe1RIUkVFLndhcm4oXCJUSFJFRS5HZW9tZXRyeVV0aWxzOiAuY2VudGVyKCkgaGFzIGJlZW4gbW92ZWQgdG8gR2VvbWV0cnkuIFVzZSBnZW9tZXRyeS5jZW50ZXIoKSBpbnN0ZWFkLlwiKTtyZXR1cm4gYS5jZW50ZXIoKX19O1xuVEhSRUUuSW1hZ2VVdGlscz17Y3Jvc3NPcmlnaW46dm9pZCAwLGxvYWRUZXh0dXJlOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPW5ldyBUSFJFRS5JbWFnZUxvYWRlcjtlLmNyb3NzT3JpZ2luPXRoaXMuY3Jvc3NPcmlnaW47dmFyIGY9bmV3IFRIUkVFLlRleHR1cmUodm9pZCAwLGIpO2UubG9hZChhLGZ1bmN0aW9uKGEpe2YuaW1hZ2U9YTtmLm5lZWRzVXBkYXRlPSEwO2MmJmMoZil9LHZvaWQgMCxmdW5jdGlvbihhKXtkJiZkKGEpfSk7Zi5zb3VyY2VGaWxlPWE7cmV0dXJuIGZ9LGxvYWRUZXh0dXJlQ3ViZTpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1uZXcgVEhSRUUuSW1hZ2VMb2FkZXI7ZS5jcm9zc09yaWdpbj10aGlzLmNyb3NzT3JpZ2luO3ZhciBmPW5ldyBUSFJFRS5DdWJlVGV4dHVyZShbXSxiKTtmLmZsaXBZPSExO3ZhciBnPTA7Yj1mdW5jdGlvbihiKXtlLmxvYWQoYVtiXSxmdW5jdGlvbihhKXtmLmltYWdlc1tiXT1hO2crPTE7Nj09PWcmJihmLm5lZWRzVXBkYXRlPSEwLGMmJlxuYyhmKSl9LHZvaWQgMCxkKX07Zm9yKHZhciBoPTAsaz1hLmxlbmd0aDtoPGs7KytoKWIoaCk7cmV0dXJuIGZ9LGxvYWRDb21wcmVzc2VkVGV4dHVyZTpmdW5jdGlvbigpe1RIUkVFLmVycm9yKFwiVEhSRUUuSW1hZ2VVdGlscy5sb2FkQ29tcHJlc3NlZFRleHR1cmUgaGFzIGJlZW4gcmVtb3ZlZC4gVXNlIFRIUkVFLkREU0xvYWRlciBpbnN0ZWFkLlwiKX0sbG9hZENvbXByZXNzZWRUZXh0dXJlQ3ViZTpmdW5jdGlvbigpe1RIUkVFLmVycm9yKFwiVEhSRUUuSW1hZ2VVdGlscy5sb2FkQ29tcHJlc3NlZFRleHR1cmVDdWJlIGhhcyBiZWVuIHJlbW92ZWQuIFVzZSBUSFJFRS5ERFNMb2FkZXIgaW5zdGVhZC5cIil9LGdldE5vcm1hbE1hcDpmdW5jdGlvbihhLGIpe3ZhciBjPWZ1bmN0aW9uKGEpe3ZhciBiPU1hdGguc3FydChhWzBdKmFbMF0rYVsxXSphWzFdK2FbMl0qYVsyXSk7cmV0dXJuW2FbMF0vYixhWzFdL2IsYVsyXS9iXX07Ynw9MTt2YXIgZD1hLndpZHRoLGU9YS5oZWlnaHQsZj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuZi53aWR0aD1kO2YuaGVpZ2h0PWU7dmFyIGc9Zi5nZXRDb250ZXh0KFwiMmRcIik7Zy5kcmF3SW1hZ2UoYSwwLDApO2Zvcih2YXIgaD1nLmdldEltYWdlRGF0YSgwLDAsZCxlKS5kYXRhLGs9Zy5jcmVhdGVJbWFnZURhdGEoZCxlKSxsPWsuZGF0YSxwPTA7cDxkO3ArKylmb3IodmFyIHE9MDtxPGU7cSsrKXt2YXIgbj0wPnEtMT8wOnEtMSx0PXErMT5lLTE/ZS0xOnErMSxyPTA+cC0xPzA6cC0xLHM9cCsxPmQtMT9kLTE6cCsxLHU9W10sdj1bMCwwLGhbNCoocSpkK3ApXS8yNTUqYl07dS5wdXNoKFstMSwwLGhbNCoocSpkK3IpXS8yNTUqYl0pO3UucHVzaChbLTEsLTEsaFs0KihuKmQrcildLzI1NSpiXSk7dS5wdXNoKFswLC0xLGhbNCoobipkK3ApXS8yNTUqYl0pO3UucHVzaChbMSwtMSxoWzQqKG4qZCtzKV0vMjU1KmJdKTt1LnB1c2goWzEsMCxoWzQqKHEqZCtzKV0vMjU1KmJdKTt1LnB1c2goWzEsMSxoWzQqKHQqZCtzKV0vMjU1KmJdKTt1LnB1c2goWzAsMSxoWzQqKHQqZCtwKV0vMjU1KlxuYl0pO3UucHVzaChbLTEsMSxoWzQqKHQqZCtyKV0vMjU1KmJdKTtuPVtdO3I9dS5sZW5ndGg7Zm9yKHQ9MDt0PHI7dCsrKXt2YXIgcz11W3RdLHg9dVsodCsxKSVyXSxzPVtzWzBdLXZbMF0sc1sxXS12WzFdLHNbMl0tdlsyXV0seD1beFswXS12WzBdLHhbMV0tdlsxXSx4WzJdLXZbMl1dO24ucHVzaChjKFtzWzFdKnhbMl0tc1syXSp4WzFdLHNbMl0qeFswXS1zWzBdKnhbMl0sc1swXSp4WzFdLXNbMV0qeFswXV0pKX11PVswLDAsMF07Zm9yKHQ9MDt0PG4ubGVuZ3RoO3QrKyl1WzBdKz1uW3RdWzBdLHVbMV0rPW5bdF1bMV0sdVsyXSs9blt0XVsyXTt1WzBdLz1uLmxlbmd0aDt1WzFdLz1uLmxlbmd0aDt1WzJdLz1uLmxlbmd0aDt2PTQqKHEqZCtwKTtsW3ZdPSh1WzBdKzEpLzIqMjU1fDA7bFt2KzFdPSh1WzFdKzEpLzIqMjU1fDA7bFt2KzJdPTI1NSp1WzJdfDA7bFt2KzNdPTI1NX1nLnB1dEltYWdlRGF0YShrLDAsMCk7cmV0dXJuIGZ9LGdlbmVyYXRlRGF0YVRleHR1cmU6ZnVuY3Rpb24oYSxcbmIsYyl7dmFyIGQ9YSpiLGU9bmV3IFVpbnQ4QXJyYXkoMypkKSxmPU1hdGguZmxvb3IoMjU1KmMuciksZz1NYXRoLmZsb29yKDI1NSpjLmcpO2M9TWF0aC5mbG9vcigyNTUqYy5iKTtmb3IodmFyIGg9MDtoPGQ7aCsrKWVbMypoXT1mLGVbMypoKzFdPWcsZVszKmgrMl09YzthPW5ldyBUSFJFRS5EYXRhVGV4dHVyZShlLGEsYixUSFJFRS5SR0JGb3JtYXQpO2EubmVlZHNVcGRhdGU9ITA7cmV0dXJuIGF9fTtcblRIUkVFLlNjZW5lVXRpbHM9e2NyZWF0ZU11bHRpTWF0ZXJpYWxPYmplY3Q6ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9bmV3IFRIUkVFLk9iamVjdDNELGQ9MCxlPWIubGVuZ3RoO2Q8ZTtkKyspYy5hZGQobmV3IFRIUkVFLk1lc2goYSxiW2RdKSk7cmV0dXJuIGN9LGRldGFjaDpmdW5jdGlvbihhLGIsYyl7YS5hcHBseU1hdHJpeChiLm1hdHJpeFdvcmxkKTtiLnJlbW92ZShhKTtjLmFkZChhKX0sYXR0YWNoOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1uZXcgVEhSRUUuTWF0cml4NDtkLmdldEludmVyc2UoYy5tYXRyaXhXb3JsZCk7YS5hcHBseU1hdHJpeChkKTtiLnJlbW92ZShhKTtjLmFkZChhKX19O1xuVEhSRUUuRm9udFV0aWxzPXtmYWNlczp7fSxmYWNlOlwiaGVsdmV0aWtlclwiLHdlaWdodDpcIm5vcm1hbFwiLHN0eWxlOlwibm9ybWFsXCIsc2l6ZToxNTAsZGl2aXNpb25zOjEwLGdldEZhY2U6ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIHRoaXMuZmFjZXNbdGhpcy5mYWNlXVt0aGlzLndlaWdodF1bdGhpcy5zdHlsZV19Y2F0Y2goYSl7dGhyb3dcIlRoZSBmb250IFwiK3RoaXMuZmFjZStcIiB3aXRoIFwiK3RoaXMud2VpZ2h0K1wiIHdlaWdodCBhbmQgXCIrdGhpcy5zdHlsZStcIiBzdHlsZSBpcyBtaXNzaW5nLlwiO319LGxvYWRGYWNlOmZ1bmN0aW9uKGEpe3ZhciBiPWEuZmFtaWx5TmFtZS50b0xvd2VyQ2FzZSgpO3RoaXMuZmFjZXNbYl09dGhpcy5mYWNlc1tiXXx8e307dGhpcy5mYWNlc1tiXVthLmNzc0ZvbnRXZWlnaHRdPXRoaXMuZmFjZXNbYl1bYS5jc3NGb250V2VpZ2h0XXx8e307dGhpcy5mYWNlc1tiXVthLmNzc0ZvbnRXZWlnaHRdW2EuY3NzRm9udFN0eWxlXT1hO3JldHVybiB0aGlzLmZhY2VzW2JdW2EuY3NzRm9udFdlaWdodF1bYS5jc3NGb250U3R5bGVdPVxuYX0sZHJhd1RleHQ6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5nZXRGYWNlKCksYz10aGlzLnNpemUvYi5yZXNvbHV0aW9uLGQ9MCxlPVN0cmluZyhhKS5zcGxpdChcIlwiKSxmPWUubGVuZ3RoLGc9W107Zm9yKGE9MDthPGY7YSsrKXt2YXIgaD1uZXcgVEhSRUUuUGF0aCxoPXRoaXMuZXh0cmFjdEdseXBoUG9pbnRzKGVbYV0sYixjLGQsaCksZD1kK2gub2Zmc2V0O2cucHVzaChoLnBhdGgpfXJldHVybntwYXRoczpnLG9mZnNldDpkLzJ9fSxleHRyYWN0R2x5cGhQb2ludHM6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1bXSxnLGgsayxsLHAscSxuLHQscixzLHUsdj1iLmdseXBoc1thXXx8Yi5nbHlwaHNbXCI/XCJdO2lmKHYpe2lmKHYubylmb3IoYj12Ll9jYWNoZWRPdXRsaW5lfHwodi5fY2FjaGVkT3V0bGluZT12Lm8uc3BsaXQoXCIgXCIpKSxsPWIubGVuZ3RoLGE9MDthPGw7KXN3aXRjaChrPWJbYSsrXSxrKXtjYXNlIFwibVwiOms9YlthKytdKmMrZDtwPWJbYSsrXSpjO2UubW92ZVRvKGsscCk7XG5icmVhaztjYXNlIFwibFwiOms9YlthKytdKmMrZDtwPWJbYSsrXSpjO2UubGluZVRvKGsscCk7YnJlYWs7Y2FzZSBcInFcIjprPWJbYSsrXSpjK2Q7cD1iW2ErK10qYzt0PWJbYSsrXSpjK2Q7cj1iW2ErK10qYztlLnF1YWRyYXRpY0N1cnZlVG8odCxyLGsscCk7aWYoZz1mW2YubGVuZ3RoLTFdKWZvcihxPWcueCxuPWcueSxnPTEsaD10aGlzLmRpdmlzaW9ucztnPD1oO2crKyl7dmFyIHg9Zy9oO1RIUkVFLlNoYXBlLlV0aWxzLmIyKHgscSx0LGspO1RIUkVFLlNoYXBlLlV0aWxzLmIyKHgsbixyLHApfWJyZWFrO2Nhc2UgXCJiXCI6aWYoaz1iW2ErK10qYytkLHA9YlthKytdKmMsdD1iW2ErK10qYytkLHI9YlthKytdKmMscz1iW2ErK10qYytkLHU9YlthKytdKmMsZS5iZXppZXJDdXJ2ZVRvKHQscixzLHUsayxwKSxnPWZbZi5sZW5ndGgtMV0pZm9yKHE9Zy54LG49Zy55LGc9MSxoPXRoaXMuZGl2aXNpb25zO2c8PWg7ZysrKXg9Zy9oLFRIUkVFLlNoYXBlLlV0aWxzLmIzKHgscSx0LHMsayksVEhSRUUuU2hhcGUuVXRpbHMuYjMoeCxcbm4scix1LHApfXJldHVybntvZmZzZXQ6di5oYSpjLHBhdGg6ZX19fX07XG5USFJFRS5Gb250VXRpbHMuZ2VuZXJhdGVTaGFwZXM9ZnVuY3Rpb24oYSxiKXtiPWJ8fHt9O3ZhciBjPXZvaWQgMCE9PWIuY3VydmVTZWdtZW50cz9iLmN1cnZlU2VnbWVudHM6NCxkPXZvaWQgMCE9PWIuZm9udD9iLmZvbnQ6XCJoZWx2ZXRpa2VyXCIsZT12b2lkIDAhPT1iLndlaWdodD9iLndlaWdodDpcIm5vcm1hbFwiLGY9dm9pZCAwIT09Yi5zdHlsZT9iLnN0eWxlOlwibm9ybWFsXCI7VEhSRUUuRm9udFV0aWxzLnNpemU9dm9pZCAwIT09Yi5zaXplP2Iuc2l6ZToxMDA7VEhSRUUuRm9udFV0aWxzLmRpdmlzaW9ucz1jO1RIUkVFLkZvbnRVdGlscy5mYWNlPWQ7VEhSRUUuRm9udFV0aWxzLndlaWdodD1lO1RIUkVFLkZvbnRVdGlscy5zdHlsZT1mO2M9VEhSRUUuRm9udFV0aWxzLmRyYXdUZXh0KGEpLnBhdGhzO2Q9W107ZT0wO2ZvcihmPWMubGVuZ3RoO2U8ZjtlKyspQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoZCxjW2VdLnRvU2hhcGVzKCkpO3JldHVybiBkfTtcbihmdW5jdGlvbihhKXt2YXIgYj1mdW5jdGlvbihhKXtmb3IodmFyIGI9YS5sZW5ndGgsZT0wLGY9Yi0xLGc9MDtnPGI7Zj1nKyspZSs9YVtmXS54KmFbZ10ueS1hW2ddLngqYVtmXS55O3JldHVybi41KmV9O2EuVHJpYW5ndWxhdGU9ZnVuY3Rpb24oYSxkKXt2YXIgZT1hLmxlbmd0aDtpZigzPmUpcmV0dXJuIG51bGw7dmFyIGY9W10sZz1bXSxoPVtdLGssbCxwO2lmKDA8YihhKSlmb3IobD0wO2w8ZTtsKyspZ1tsXT1sO2Vsc2UgZm9yKGw9MDtsPGU7bCsrKWdbbF09ZS0xLWw7dmFyIHE9MiplO2ZvcihsPWUtMTsyPGU7KXtpZigwPj1xLS0pe1RIUkVFLndhcm4oXCJUSFJFRS5Gb250VXRpbHM6IFdhcm5pbmcsIHVuYWJsZSB0byB0cmlhbmd1bGF0ZSBwb2x5Z29uISBpbiBUcmlhbmd1bGF0ZS5wcm9jZXNzKClcIik7YnJlYWt9az1sO2U8PWsmJihrPTApO2w9aysxO2U8PWwmJihsPTApO3A9bCsxO2U8PXAmJihwPTApO3ZhciBuO2E6e3ZhciB0PW49dm9pZCAwLHI9dm9pZCAwLHM9dm9pZCAwLFxudT12b2lkIDAsdj12b2lkIDAseD12b2lkIDAsRD12b2lkIDAsdz12b2lkIDAsdD1hW2dba11dLngscj1hW2dba11dLnkscz1hW2dbbF1dLngsdT1hW2dbbF1dLnksdj1hW2dbcF1dLngseD1hW2dbcF1dLnk7aWYoMUUtMTA+KHMtdCkqKHgtciktKHUtcikqKHYtdCkpbj0hMTtlbHNle3ZhciB5PXZvaWQgMCxBPXZvaWQgMCxFPXZvaWQgMCxHPXZvaWQgMCxGPXZvaWQgMCx6PXZvaWQgMCxJPXZvaWQgMCxVPXZvaWQgMCxNPXZvaWQgMCxIPXZvaWQgMCxNPVU9ST13PUQ9dm9pZCAwLHk9di1zLEE9eC11LEU9dC12LEc9ci14LEY9cy10LHo9dS1yO2ZvcihuPTA7bjxlO24rKylpZihEPWFbZ1tuXV0ueCx3PWFbZ1tuXV0ueSwhKEQ9PT10JiZ3PT09cnx8RD09PXMmJnc9PT11fHxEPT09diYmdz09PXgpJiYoST1ELXQsVT13LXIsTT1ELXMsSD13LXUsRC09dix3LT14LE09eSpILUEqTSxJPUYqVS16KkksVT1FKnctRypELC0xRS0xMDw9TSYmLTFFLTEwPD1VJiYtMUUtMTA8PUkpKXtuPSExO2JyZWFrIGF9bj1cbiEwfX1pZihuKXtmLnB1c2goW2FbZ1trXV0sYVtnW2xdXSxhW2dbcF1dXSk7aC5wdXNoKFtnW2tdLGdbbF0sZ1twXV0pO2s9bDtmb3IocD1sKzE7cDxlO2srKyxwKyspZ1trXT1nW3BdO2UtLTtxPTIqZX19cmV0dXJuIGQ/aDpmfTthLlRyaWFuZ3VsYXRlLmFyZWE9YjtyZXR1cm4gYX0pKFRIUkVFLkZvbnRVdGlscyk7c2VsZi5fdHlwZWZhY2VfanM9e2ZhY2VzOlRIUkVFLkZvbnRVdGlscy5mYWNlcyxsb2FkRmFjZTpUSFJFRS5Gb250VXRpbHMubG9hZEZhY2V9O1RIUkVFLnR5cGVmYWNlX2pzPXNlbGYuX3R5cGVmYWNlX2pzO1xuVEhSRUUuQXVkaW89ZnVuY3Rpb24oYSl7VEhSRUUuT2JqZWN0M0QuY2FsbCh0aGlzKTt0aGlzLnR5cGU9XCJBdWRpb1wiO3RoaXMuY29udGV4dD1hLmNvbnRleHQ7dGhpcy5zb3VyY2U9dGhpcy5jb250ZXh0LmNyZWF0ZUJ1ZmZlclNvdXJjZSgpO3RoaXMuc291cmNlLm9uZW5kZWQ9dGhpcy5vbkVuZGVkLmJpbmQodGhpcyk7dGhpcy5nYWluPXRoaXMuY29udGV4dC5jcmVhdGVHYWluKCk7dGhpcy5nYWluLmNvbm5lY3QodGhpcy5jb250ZXh0LmRlc3RpbmF0aW9uKTt0aGlzLnBhbm5lcj10aGlzLmNvbnRleHQuY3JlYXRlUGFubmVyKCk7dGhpcy5wYW5uZXIuY29ubmVjdCh0aGlzLmdhaW4pO3RoaXMuYXV0b3BsYXk9ITE7dGhpcy5zdGFydFRpbWU9MDt0aGlzLmlzUGxheWluZz0hMX07VEhSRUUuQXVkaW8ucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuT2JqZWN0M0QucHJvdG90eXBlKTtUSFJFRS5BdWRpby5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuQXVkaW87XG5USFJFRS5BdWRpby5wcm90b3R5cGUubG9hZD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9bmV3IFhNTEh0dHBSZXF1ZXN0O2Mub3BlbihcIkdFVFwiLGEsITApO2MucmVzcG9uc2VUeXBlPVwiYXJyYXlidWZmZXJcIjtjLm9ubG9hZD1mdW5jdGlvbihhKXtiLmNvbnRleHQuZGVjb2RlQXVkaW9EYXRhKHRoaXMucmVzcG9uc2UsZnVuY3Rpb24oYSl7Yi5zb3VyY2UuYnVmZmVyPWE7Yi5hdXRvcGxheSYmYi5wbGF5KCl9KX07Yy5zZW5kKCk7cmV0dXJuIHRoaXN9O1xuVEhSRUUuQXVkaW8ucHJvdG90eXBlLnBsYXk9ZnVuY3Rpb24oKXtpZighMD09PXRoaXMuaXNQbGF5aW5nKVRIUkVFLndhcm4oXCJUSFJFRS5BdWRpbzogQXVkaW8gaXMgYWxyZWFkeSBwbGF5aW5nLlwiKTtlbHNle3ZhciBhPXRoaXMuY29udGV4dC5jcmVhdGVCdWZmZXJTb3VyY2UoKTthLmJ1ZmZlcj10aGlzLnNvdXJjZS5idWZmZXI7YS5sb29wPXRoaXMuc291cmNlLmxvb3A7YS5vbmVuZGVkPXRoaXMuc291cmNlLm9uZW5kZWQ7YS5jb25uZWN0KHRoaXMucGFubmVyKTthLnN0YXJ0KDAsdGhpcy5zdGFydFRpbWUpO3RoaXMuaXNQbGF5aW5nPSEwO3RoaXMuc291cmNlPWF9fTtUSFJFRS5BdWRpby5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24oKXt0aGlzLnNvdXJjZS5zdG9wKCk7dGhpcy5zdGFydFRpbWU9dGhpcy5jb250ZXh0LmN1cnJlbnRUaW1lfTtUSFJFRS5BdWRpby5wcm90b3R5cGUuc3RvcD1mdW5jdGlvbigpe3RoaXMuc291cmNlLnN0b3AoKTt0aGlzLnN0YXJ0VGltZT0wfTtcblRIUkVFLkF1ZGlvLnByb3RvdHlwZS5vbkVuZGVkPWZ1bmN0aW9uKCl7dGhpcy5pc1BsYXlpbmc9ITF9O1RIUkVFLkF1ZGlvLnByb3RvdHlwZS5zZXRMb29wPWZ1bmN0aW9uKGEpe3RoaXMuc291cmNlLmxvb3A9YX07VEhSRUUuQXVkaW8ucHJvdG90eXBlLnNldFJlZkRpc3RhbmNlPWZ1bmN0aW9uKGEpe3RoaXMucGFubmVyLnJlZkRpc3RhbmNlPWF9O1RIUkVFLkF1ZGlvLnByb3RvdHlwZS5zZXRSb2xsb2ZmRmFjdG9yPWZ1bmN0aW9uKGEpe3RoaXMucGFubmVyLnJvbGxvZmZGYWN0b3I9YX07VEhSRUUuQXVkaW8ucHJvdG90eXBlLnNldFZvbHVtZT1mdW5jdGlvbihhKXt0aGlzLmdhaW4uZ2Fpbi52YWx1ZT1hfTtcblRIUkVFLkF1ZGlvLnByb3RvdHlwZS51cGRhdGVNYXRyaXhXb3JsZD1mdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbihiKXtUSFJFRS5PYmplY3QzRC5wcm90b3R5cGUudXBkYXRlTWF0cml4V29ybGQuY2FsbCh0aGlzLGIpO2Euc2V0RnJvbU1hdHJpeFBvc2l0aW9uKHRoaXMubWF0cml4V29ybGQpO3RoaXMucGFubmVyLnNldFBvc2l0aW9uKGEueCxhLnksYS56KX19KCk7VEhSRUUuQXVkaW9MaXN0ZW5lcj1mdW5jdGlvbigpe1RIUkVFLk9iamVjdDNELmNhbGwodGhpcyk7dGhpcy50eXBlPVwiQXVkaW9MaXN0ZW5lclwiO3RoaXMuY29udGV4dD1uZXcgKHdpbmRvdy5BdWRpb0NvbnRleHR8fHdpbmRvdy53ZWJraXRBdWRpb0NvbnRleHQpfTtUSFJFRS5BdWRpb0xpc3RlbmVyLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk9iamVjdDNELnByb3RvdHlwZSk7VEhSRUUuQXVkaW9MaXN0ZW5lci5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuQXVkaW9MaXN0ZW5lcjtcblRIUkVFLkF1ZGlvTGlzdGVuZXIucHJvdG90eXBlLnVwZGF0ZU1hdHJpeFdvcmxkPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjMsYj1uZXcgVEhSRUUuUXVhdGVybmlvbixjPW5ldyBUSFJFRS5WZWN0b3IzLGQ9bmV3IFRIUkVFLlZlY3RvcjMsZT1uZXcgVEhSRUUuVmVjdG9yMyxmPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbihnKXtUSFJFRS5PYmplY3QzRC5wcm90b3R5cGUudXBkYXRlTWF0cml4V29ybGQuY2FsbCh0aGlzLGcpO2c9dGhpcy5jb250ZXh0Lmxpc3RlbmVyO3ZhciBoPXRoaXMudXA7dGhpcy5tYXRyaXhXb3JsZC5kZWNvbXBvc2UoYSxiLGMpO2Quc2V0KDAsMCwtMSkuYXBwbHlRdWF0ZXJuaW9uKGIpO2Uuc3ViVmVjdG9ycyhhLGYpO2cuc2V0UG9zaXRpb24oYS54LGEueSxhLnopO2cuc2V0T3JpZW50YXRpb24oZC54LGQueSxkLnosaC54LGgueSxoLnopO2cuc2V0VmVsb2NpdHkoZS54LGUueSxlLnopO2YuY29weShhKX19KCk7XG5USFJFRS5DdXJ2ZT1mdW5jdGlvbigpe307VEhSRUUuQ3VydmUucHJvdG90eXBlLmdldFBvaW50PWZ1bmN0aW9uKGEpe1RIUkVFLndhcm4oXCJUSFJFRS5DdXJ2ZTogV2FybmluZywgZ2V0UG9pbnQoKSBub3QgaW1wbGVtZW50ZWQhXCIpO3JldHVybiBudWxsfTtUSFJFRS5DdXJ2ZS5wcm90b3R5cGUuZ2V0UG9pbnRBdD1mdW5jdGlvbihhKXthPXRoaXMuZ2V0VXRvVG1hcHBpbmcoYSk7cmV0dXJuIHRoaXMuZ2V0UG9pbnQoYSl9O1RIUkVFLkN1cnZlLnByb3RvdHlwZS5nZXRQb2ludHM9ZnVuY3Rpb24oYSl7YXx8KGE9NSk7dmFyIGIsYz1bXTtmb3IoYj0wO2I8PWE7YisrKWMucHVzaCh0aGlzLmdldFBvaW50KGIvYSkpO3JldHVybiBjfTtUSFJFRS5DdXJ2ZS5wcm90b3R5cGUuZ2V0U3BhY2VkUG9pbnRzPWZ1bmN0aW9uKGEpe2F8fChhPTUpO3ZhciBiLGM9W107Zm9yKGI9MDtiPD1hO2IrKyljLnB1c2godGhpcy5nZXRQb2ludEF0KGIvYSkpO3JldHVybiBjfTtcblRIUkVFLkN1cnZlLnByb3RvdHlwZS5nZXRMZW5ndGg9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmdldExlbmd0aHMoKTtyZXR1cm4gYVthLmxlbmd0aC0xXX07VEhSRUUuQ3VydmUucHJvdG90eXBlLmdldExlbmd0aHM9ZnVuY3Rpb24oYSl7YXx8KGE9dGhpcy5fX2FyY0xlbmd0aERpdmlzaW9ucz90aGlzLl9fYXJjTGVuZ3RoRGl2aXNpb25zOjIwMCk7aWYodGhpcy5jYWNoZUFyY0xlbmd0aHMmJnRoaXMuY2FjaGVBcmNMZW5ndGhzLmxlbmd0aD09YSsxJiYhdGhpcy5uZWVkc1VwZGF0ZSlyZXR1cm4gdGhpcy5jYWNoZUFyY0xlbmd0aHM7dGhpcy5uZWVkc1VwZGF0ZT0hMTt2YXIgYj1bXSxjLGQ9dGhpcy5nZXRQb2ludCgwKSxlLGY9MDtiLnB1c2goMCk7Zm9yKGU9MTtlPD1hO2UrKyljPXRoaXMuZ2V0UG9pbnQoZS9hKSxmKz1jLmRpc3RhbmNlVG8oZCksYi5wdXNoKGYpLGQ9YztyZXR1cm4gdGhpcy5jYWNoZUFyY0xlbmd0aHM9Yn07XG5USFJFRS5DdXJ2ZS5wcm90b3R5cGUudXBkYXRlQXJjTGVuZ3Rocz1mdW5jdGlvbigpe3RoaXMubmVlZHNVcGRhdGU9ITA7dGhpcy5nZXRMZW5ndGhzKCl9O1RIUkVFLkN1cnZlLnByb3RvdHlwZS5nZXRVdG9UbWFwcGluZz1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuZ2V0TGVuZ3RocygpLGQ9MCxlPWMubGVuZ3RoLGY7Zj1iP2I6YSpjW2UtMV07Zm9yKHZhciBnPTAsaD1lLTEsaztnPD1oOylpZihkPU1hdGguZmxvb3IoZysoaC1nKS8yKSxrPWNbZF0tZiwwPmspZz1kKzE7ZWxzZSBpZigwPGspaD1kLTE7ZWxzZXtoPWQ7YnJlYWt9ZD1oO2lmKGNbZF09PWYpcmV0dXJuIGQvKGUtMSk7Zz1jW2RdO3JldHVybiBjPShkKyhmLWcpLyhjW2QrMV0tZykpLyhlLTEpfTtUSFJFRS5DdXJ2ZS5wcm90b3R5cGUuZ2V0VGFuZ2VudD1mdW5jdGlvbihhKXt2YXIgYj1hLTFFLTQ7YSs9MUUtNDswPmImJihiPTApOzE8YSYmKGE9MSk7Yj10aGlzLmdldFBvaW50KGIpO3JldHVybiB0aGlzLmdldFBvaW50KGEpLmNsb25lKCkuc3ViKGIpLm5vcm1hbGl6ZSgpfTtcblRIUkVFLkN1cnZlLnByb3RvdHlwZS5nZXRUYW5nZW50QXQ9ZnVuY3Rpb24oYSl7YT10aGlzLmdldFV0b1RtYXBwaW5nKGEpO3JldHVybiB0aGlzLmdldFRhbmdlbnQoYSl9O1xuVEhSRUUuQ3VydmUuVXRpbHM9e3RhbmdlbnRRdWFkcmF0aWNCZXppZXI6ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuIDIqKDEtYSkqKGMtYikrMiphKihkLWMpfSx0YW5nZW50Q3ViaWNCZXppZXI6ZnVuY3Rpb24oYSxiLGMsZCxlKXtyZXR1cm4tMypiKigxLWEpKigxLWEpKzMqYyooMS1hKSooMS1hKS02KmEqYyooMS1hKSs2KmEqZCooMS1hKS0zKmEqYSpkKzMqYSphKmV9LHRhbmdlbnRTcGxpbmU6ZnVuY3Rpb24oYSxiLGMsZCxlKXtyZXR1cm4gNiphKmEtNiphKygzKmEqYS00KmErMSkrKC02KmEqYSs2KmEpKygzKmEqYS0yKmEpfSxpbnRlcnBvbGF0ZTpmdW5jdGlvbihhLGIsYyxkLGUpe2E9LjUqKGMtYSk7ZD0uNSooZC1iKTt2YXIgZj1lKmU7cmV0dXJuKDIqYi0yKmMrYStkKSplKmYrKC0zKmIrMypjLTIqYS1kKSpmK2EqZStifX07XG5USFJFRS5DdXJ2ZS5jcmVhdGU9ZnVuY3Rpb24oYSxiKXthLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkN1cnZlLnByb3RvdHlwZSk7YS5wcm90b3R5cGUuY29uc3RydWN0b3I9YTthLnByb3RvdHlwZS5nZXRQb2ludD1iO3JldHVybiBhfTtUSFJFRS5DdXJ2ZVBhdGg9ZnVuY3Rpb24oKXt0aGlzLmN1cnZlcz1bXTt0aGlzLmJlbmRzPVtdO3RoaXMuYXV0b0Nsb3NlPSExfTtUSFJFRS5DdXJ2ZVBhdGgucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuQ3VydmUucHJvdG90eXBlKTtUSFJFRS5DdXJ2ZVBhdGgucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkN1cnZlUGF0aDtUSFJFRS5DdXJ2ZVBhdGgucHJvdG90eXBlLmFkZD1mdW5jdGlvbihhKXt0aGlzLmN1cnZlcy5wdXNoKGEpfTtUSFJFRS5DdXJ2ZVBhdGgucHJvdG90eXBlLmNoZWNrQ29ubmVjdGlvbj1mdW5jdGlvbigpe307XG5USFJFRS5DdXJ2ZVBhdGgucHJvdG90eXBlLmNsb3NlUGF0aD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuY3VydmVzWzBdLmdldFBvaW50KDApLGI9dGhpcy5jdXJ2ZXNbdGhpcy5jdXJ2ZXMubGVuZ3RoLTFdLmdldFBvaW50KDEpO2EuZXF1YWxzKGIpfHx0aGlzLmN1cnZlcy5wdXNoKG5ldyBUSFJFRS5MaW5lQ3VydmUoYixhKSl9O1RIUkVFLkN1cnZlUGF0aC5wcm90b3R5cGUuZ2V0UG9pbnQ9ZnVuY3Rpb24oYSl7dmFyIGI9YSp0aGlzLmdldExlbmd0aCgpLGM9dGhpcy5nZXRDdXJ2ZUxlbmd0aHMoKTtmb3IoYT0wO2E8Yy5sZW5ndGg7KXtpZihjW2FdPj1iKXJldHVybiBiPWNbYV0tYixhPXRoaXMuY3VydmVzW2FdLGI9MS1iL2EuZ2V0TGVuZ3RoKCksYS5nZXRQb2ludEF0KGIpO2ErK31yZXR1cm4gbnVsbH07VEhSRUUuQ3VydmVQYXRoLnByb3RvdHlwZS5nZXRMZW5ndGg9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmdldEN1cnZlTGVuZ3RocygpO3JldHVybiBhW2EubGVuZ3RoLTFdfTtcblRIUkVFLkN1cnZlUGF0aC5wcm90b3R5cGUuZ2V0Q3VydmVMZW5ndGhzPWZ1bmN0aW9uKCl7aWYodGhpcy5jYWNoZUxlbmd0aHMmJnRoaXMuY2FjaGVMZW5ndGhzLmxlbmd0aD09dGhpcy5jdXJ2ZXMubGVuZ3RoKXJldHVybiB0aGlzLmNhY2hlTGVuZ3Roczt2YXIgYT1bXSxiPTAsYyxkPXRoaXMuY3VydmVzLmxlbmd0aDtmb3IoYz0wO2M8ZDtjKyspYis9dGhpcy5jdXJ2ZXNbY10uZ2V0TGVuZ3RoKCksYS5wdXNoKGIpO3JldHVybiB0aGlzLmNhY2hlTGVuZ3Rocz1hfTtcblRIUkVFLkN1cnZlUGF0aC5wcm90b3R5cGUuZ2V0Qm91bmRpbmdCb3g9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmdldFBvaW50cygpLGIsYyxkLGUsZixnO2I9Yz1OdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFk7ZT1mPU51bWJlci5QT1NJVElWRV9JTkZJTklUWTt2YXIgaCxrLGwscCxxPWFbMF1pbnN0YW5jZW9mIFRIUkVFLlZlY3RvcjM7cD1xP25ldyBUSFJFRS5WZWN0b3IzOm5ldyBUSFJFRS5WZWN0b3IyO2s9MDtmb3IobD1hLmxlbmd0aDtrPGw7aysrKWg9YVtrXSxoLng+Yj9iPWgueDpoLng8ZSYmKGU9aC54KSxoLnk+Yz9jPWgueTpoLnk8ZiYmKGY9aC55KSxxJiYoaC56PmQ/ZD1oLno6aC56PGcmJihnPWgueikpLHAuYWRkKGgpO2E9e21pblg6ZSxtaW5ZOmYsbWF4WDpiLG1heFk6Y307cSYmKGEubWF4Wj1kLGEubWluWj1nKTtyZXR1cm4gYX07XG5USFJFRS5DdXJ2ZVBhdGgucHJvdG90eXBlLmNyZWF0ZVBvaW50c0dlb21ldHJ5PWZ1bmN0aW9uKGEpe2E9dGhpcy5nZXRQb2ludHMoYSwhMCk7cmV0dXJuIHRoaXMuY3JlYXRlR2VvbWV0cnkoYSl9O1RIUkVFLkN1cnZlUGF0aC5wcm90b3R5cGUuY3JlYXRlU3BhY2VkUG9pbnRzR2VvbWV0cnk9ZnVuY3Rpb24oYSl7YT10aGlzLmdldFNwYWNlZFBvaW50cyhhLCEwKTtyZXR1cm4gdGhpcy5jcmVhdGVHZW9tZXRyeShhKX07VEhSRUUuQ3VydmVQYXRoLnByb3RvdHlwZS5jcmVhdGVHZW9tZXRyeT1mdW5jdGlvbihhKXtmb3IodmFyIGI9bmV3IFRIUkVFLkdlb21ldHJ5LGM9MDtjPGEubGVuZ3RoO2MrKyliLnZlcnRpY2VzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjMoYVtjXS54LGFbY10ueSxhW2NdLnp8fDApKTtyZXR1cm4gYn07VEhSRUUuQ3VydmVQYXRoLnByb3RvdHlwZS5hZGRXcmFwUGF0aD1mdW5jdGlvbihhKXt0aGlzLmJlbmRzLnB1c2goYSl9O1xuVEhSRUUuQ3VydmVQYXRoLnByb3RvdHlwZS5nZXRUcmFuc2Zvcm1lZFBvaW50cz1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuZ2V0UG9pbnRzKGEpLGQsZTtifHwoYj10aGlzLmJlbmRzKTtkPTA7Zm9yKGU9Yi5sZW5ndGg7ZDxlO2QrKyljPXRoaXMuZ2V0V3JhcFBvaW50cyhjLGJbZF0pO3JldHVybiBjfTtUSFJFRS5DdXJ2ZVBhdGgucHJvdG90eXBlLmdldFRyYW5zZm9ybWVkU3BhY2VkUG9pbnRzPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5nZXRTcGFjZWRQb2ludHMoYSksZCxlO2J8fChiPXRoaXMuYmVuZHMpO2Q9MDtmb3IoZT1iLmxlbmd0aDtkPGU7ZCsrKWM9dGhpcy5nZXRXcmFwUG9pbnRzKGMsYltkXSk7cmV0dXJuIGN9O1xuVEhSRUUuQ3VydmVQYXRoLnByb3RvdHlwZS5nZXRXcmFwUG9pbnRzPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5nZXRCb3VuZGluZ0JveCgpLGQsZSxmLGcsaCxrO2Q9MDtmb3IoZT1hLmxlbmd0aDtkPGU7ZCsrKWY9YVtkXSxnPWYueCxoPWYueSxrPWcvYy5tYXhYLGs9Yi5nZXRVdG9UbWFwcGluZyhrLGcpLGc9Yi5nZXRQb2ludChrKSxrPWIuZ2V0VGFuZ2VudChrKSxrLnNldCgtay55LGsueCkubXVsdGlwbHlTY2FsYXIoaCksZi54PWcueCtrLngsZi55PWcueStrLnk7cmV0dXJuIGF9O1RIUkVFLkd5cm9zY29wZT1mdW5jdGlvbigpe1RIUkVFLk9iamVjdDNELmNhbGwodGhpcyl9O1RIUkVFLkd5cm9zY29wZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5PYmplY3QzRC5wcm90b3R5cGUpO1RIUkVFLkd5cm9zY29wZS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuR3lyb3Njb3BlO1xuVEhSRUUuR3lyb3Njb3BlLnByb3RvdHlwZS51cGRhdGVNYXRyaXhXb3JsZD1mdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzLGI9bmV3IFRIUkVFLlF1YXRlcm5pb24sYz1uZXcgVEhSRUUuVmVjdG9yMyxkPW5ldyBUSFJFRS5WZWN0b3IzLGU9bmV3IFRIUkVFLlF1YXRlcm5pb24sZj1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oZyl7dGhpcy5tYXRyaXhBdXRvVXBkYXRlJiZ0aGlzLnVwZGF0ZU1hdHJpeCgpO2lmKHRoaXMubWF0cml4V29ybGROZWVkc1VwZGF0ZXx8Zyl0aGlzLnBhcmVudD8odGhpcy5tYXRyaXhXb3JsZC5tdWx0aXBseU1hdHJpY2VzKHRoaXMucGFyZW50Lm1hdHJpeFdvcmxkLHRoaXMubWF0cml4KSx0aGlzLm1hdHJpeFdvcmxkLmRlY29tcG9zZShkLGUsZiksdGhpcy5tYXRyaXguZGVjb21wb3NlKGEsYixjKSx0aGlzLm1hdHJpeFdvcmxkLmNvbXBvc2UoZCxiLGYpKTp0aGlzLm1hdHJpeFdvcmxkLmNvcHkodGhpcy5tYXRyaXgpLHRoaXMubWF0cml4V29ybGROZWVkc1VwZGF0ZT1cbiExLGc9ITA7Zm9yKHZhciBoPTAsaz10aGlzLmNoaWxkcmVuLmxlbmd0aDtoPGs7aCsrKXRoaXMuY2hpbGRyZW5baF0udXBkYXRlTWF0cml4V29ybGQoZyl9fSgpO1RIUkVFLlBhdGg9ZnVuY3Rpb24oYSl7VEhSRUUuQ3VydmVQYXRoLmNhbGwodGhpcyk7dGhpcy5hY3Rpb25zPVtdO2EmJnRoaXMuZnJvbVBvaW50cyhhKX07VEhSRUUuUGF0aC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5DdXJ2ZVBhdGgucHJvdG90eXBlKTtUSFJFRS5QYXRoLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5QYXRoO1RIUkVFLlBhdGhBY3Rpb25zPXtNT1ZFX1RPOlwibW92ZVRvXCIsTElORV9UTzpcImxpbmVUb1wiLFFVQURSQVRJQ19DVVJWRV9UTzpcInF1YWRyYXRpY0N1cnZlVG9cIixCRVpJRVJfQ1VSVkVfVE86XCJiZXppZXJDdXJ2ZVRvXCIsQ1NQTElORV9USFJVOlwic3BsaW5lVGhydVwiLEFSQzpcImFyY1wiLEVMTElQU0U6XCJlbGxpcHNlXCJ9O1xuVEhSRUUuUGF0aC5wcm90b3R5cGUuZnJvbVBvaW50cz1mdW5jdGlvbihhKXt0aGlzLm1vdmVUbyhhWzBdLngsYVswXS55KTtmb3IodmFyIGI9MSxjPWEubGVuZ3RoO2I8YztiKyspdGhpcy5saW5lVG8oYVtiXS54LGFbYl0ueSl9O1RIUkVFLlBhdGgucHJvdG90eXBlLm1vdmVUbz1mdW5jdGlvbihhLGIpe3ZhciBjPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7dGhpcy5hY3Rpb25zLnB1c2goe2FjdGlvbjpUSFJFRS5QYXRoQWN0aW9ucy5NT1ZFX1RPLGFyZ3M6Y30pfTtcblRIUkVFLlBhdGgucHJvdG90eXBlLmxpbmVUbz1mdW5jdGlvbihhLGIpe3ZhciBjPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyksZD10aGlzLmFjdGlvbnNbdGhpcy5hY3Rpb25zLmxlbmd0aC0xXS5hcmdzLGQ9bmV3IFRIUkVFLkxpbmVDdXJ2ZShuZXcgVEhSRUUuVmVjdG9yMihkW2QubGVuZ3RoLTJdLGRbZC5sZW5ndGgtMV0pLG5ldyBUSFJFRS5WZWN0b3IyKGEsYikpO3RoaXMuY3VydmVzLnB1c2goZCk7dGhpcy5hY3Rpb25zLnB1c2goe2FjdGlvbjpUSFJFRS5QYXRoQWN0aW9ucy5MSU5FX1RPLGFyZ3M6Y30pfTtcblRIUkVFLlBhdGgucHJvdG90eXBlLnF1YWRyYXRpY0N1cnZlVG89ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSxmPXRoaXMuYWN0aW9uc1t0aGlzLmFjdGlvbnMubGVuZ3RoLTFdLmFyZ3MsZj1uZXcgVEhSRUUuUXVhZHJhdGljQmV6aWVyQ3VydmUobmV3IFRIUkVFLlZlY3RvcjIoZltmLmxlbmd0aC0yXSxmW2YubGVuZ3RoLTFdKSxuZXcgVEhSRUUuVmVjdG9yMihhLGIpLG5ldyBUSFJFRS5WZWN0b3IyKGMsZCkpO3RoaXMuY3VydmVzLnB1c2goZik7dGhpcy5hY3Rpb25zLnB1c2goe2FjdGlvbjpUSFJFRS5QYXRoQWN0aW9ucy5RVUFEUkFUSUNfQ1VSVkVfVE8sYXJnczplfSl9O1xuVEhSRUUuUGF0aC5wcm90b3R5cGUuYmV6aWVyQ3VydmVUbz1mdW5jdGlvbihhLGIsYyxkLGUsZil7dmFyIGc9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSxoPXRoaXMuYWN0aW9uc1t0aGlzLmFjdGlvbnMubGVuZ3RoLTFdLmFyZ3MsaD1uZXcgVEhSRUUuQ3ViaWNCZXppZXJDdXJ2ZShuZXcgVEhSRUUuVmVjdG9yMihoW2gubGVuZ3RoLTJdLGhbaC5sZW5ndGgtMV0pLG5ldyBUSFJFRS5WZWN0b3IyKGEsYiksbmV3IFRIUkVFLlZlY3RvcjIoYyxkKSxuZXcgVEhSRUUuVmVjdG9yMihlLGYpKTt0aGlzLmN1cnZlcy5wdXNoKGgpO3RoaXMuYWN0aW9ucy5wdXNoKHthY3Rpb246VEhSRUUuUGF0aEFjdGlvbnMuQkVaSUVSX0NVUlZFX1RPLGFyZ3M6Z30pfTtcblRIUkVFLlBhdGgucHJvdG90eXBlLnNwbGluZVRocnU9ZnVuY3Rpb24oYSl7dmFyIGI9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSxjPXRoaXMuYWN0aW9uc1t0aGlzLmFjdGlvbnMubGVuZ3RoLTFdLmFyZ3MsYz1bbmV3IFRIUkVFLlZlY3RvcjIoY1tjLmxlbmd0aC0yXSxjW2MubGVuZ3RoLTFdKV07QXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoYyxhKTtjPW5ldyBUSFJFRS5TcGxpbmVDdXJ2ZShjKTt0aGlzLmN1cnZlcy5wdXNoKGMpO3RoaXMuYWN0aW9ucy5wdXNoKHthY3Rpb246VEhSRUUuUGF0aEFjdGlvbnMuQ1NQTElORV9USFJVLGFyZ3M6Yn0pfTtUSFJFRS5QYXRoLnByb3RvdHlwZS5hcmM9ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3ZhciBnPXRoaXMuYWN0aW9uc1t0aGlzLmFjdGlvbnMubGVuZ3RoLTFdLmFyZ3M7dGhpcy5hYnNhcmMoYStnW2cubGVuZ3RoLTJdLGIrZ1tnLmxlbmd0aC0xXSxjLGQsZSxmKX07XG5USFJFRS5QYXRoLnByb3RvdHlwZS5hYnNhcmM9ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3RoaXMuYWJzZWxsaXBzZShhLGIsYyxjLGQsZSxmKX07VEhSRUUuUGF0aC5wcm90b3R5cGUuZWxsaXBzZT1mdW5jdGlvbihhLGIsYyxkLGUsZixnKXt2YXIgaD10aGlzLmFjdGlvbnNbdGhpcy5hY3Rpb25zLmxlbmd0aC0xXS5hcmdzO3RoaXMuYWJzZWxsaXBzZShhK2hbaC5sZW5ndGgtMl0sYitoW2gubGVuZ3RoLTFdLGMsZCxlLGYsZyl9O1RIUkVFLlBhdGgucHJvdG90eXBlLmFic2VsbGlwc2U9ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyl7dmFyIGg9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSxrPW5ldyBUSFJFRS5FbGxpcHNlQ3VydmUoYSxiLGMsZCxlLGYsZyk7dGhpcy5jdXJ2ZXMucHVzaChrKTtrPWsuZ2V0UG9pbnQoMSk7aC5wdXNoKGsueCk7aC5wdXNoKGsueSk7dGhpcy5hY3Rpb25zLnB1c2goe2FjdGlvbjpUSFJFRS5QYXRoQWN0aW9ucy5FTExJUFNFLGFyZ3M6aH0pfTtcblRIUkVFLlBhdGgucHJvdG90eXBlLmdldFNwYWNlZFBvaW50cz1mdW5jdGlvbihhLGIpe2F8fChhPTQwKTtmb3IodmFyIGM9W10sZD0wO2Q8YTtkKyspYy5wdXNoKHRoaXMuZ2V0UG9pbnQoZC9hKSk7cmV0dXJuIGN9O1xuVEhSRUUuUGF0aC5wcm90b3R5cGUuZ2V0UG9pbnRzPWZ1bmN0aW9uKGEsYil7aWYodGhpcy51c2VTcGFjZWRQb2ludHMpcmV0dXJuIGNvbnNvbGUubG9nKFwidGF0YVwiKSx0aGlzLmdldFNwYWNlZFBvaW50cyhhLGIpO2E9YXx8MTI7dmFyIGM9W10sZCxlLGYsZyxoLGssbCxwLHEsbix0LHIscztkPTA7Zm9yKGU9dGhpcy5hY3Rpb25zLmxlbmd0aDtkPGU7ZCsrKXN3aXRjaChmPXRoaXMuYWN0aW9uc1tkXSxnPWYuYWN0aW9uLGY9Zi5hcmdzLGcpe2Nhc2UgVEhSRUUuUGF0aEFjdGlvbnMuTU9WRV9UTzpjLnB1c2gobmV3IFRIUkVFLlZlY3RvcjIoZlswXSxmWzFdKSk7YnJlYWs7Y2FzZSBUSFJFRS5QYXRoQWN0aW9ucy5MSU5FX1RPOmMucHVzaChuZXcgVEhSRUUuVmVjdG9yMihmWzBdLGZbMV0pKTticmVhaztjYXNlIFRIUkVFLlBhdGhBY3Rpb25zLlFVQURSQVRJQ19DVVJWRV9UTzpoPWZbMl07az1mWzNdO3E9ZlswXTtuPWZbMV07MDxjLmxlbmd0aD8oZz1jW2MubGVuZ3RoLTFdLHQ9Zy54LFxucj1nLnkpOihnPXRoaXMuYWN0aW9uc1tkLTFdLmFyZ3MsdD1nW2cubGVuZ3RoLTJdLHI9Z1tnLmxlbmd0aC0xXSk7Zm9yKGY9MTtmPD1hO2YrKylzPWYvYSxnPVRIUkVFLlNoYXBlLlV0aWxzLmIyKHMsdCxxLGgpLHM9VEhSRUUuU2hhcGUuVXRpbHMuYjIocyxyLG4sayksYy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IyKGcscykpO2JyZWFrO2Nhc2UgVEhSRUUuUGF0aEFjdGlvbnMuQkVaSUVSX0NVUlZFX1RPOmg9Zls0XTtrPWZbNV07cT1mWzBdO249ZlsxXTtsPWZbMl07cD1mWzNdOzA8Yy5sZW5ndGg/KGc9Y1tjLmxlbmd0aC0xXSx0PWcueCxyPWcueSk6KGc9dGhpcy5hY3Rpb25zW2QtMV0uYXJncyx0PWdbZy5sZW5ndGgtMl0scj1nW2cubGVuZ3RoLTFdKTtmb3IoZj0xO2Y8PWE7ZisrKXM9Zi9hLGc9VEhSRUUuU2hhcGUuVXRpbHMuYjMocyx0LHEsbCxoKSxzPVRIUkVFLlNoYXBlLlV0aWxzLmIzKHMscixuLHAsayksYy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IyKGcscykpO2JyZWFrO2Nhc2UgVEhSRUUuUGF0aEFjdGlvbnMuQ1NQTElORV9USFJVOmc9XG50aGlzLmFjdGlvbnNbZC0xXS5hcmdzO3M9W25ldyBUSFJFRS5WZWN0b3IyKGdbZy5sZW5ndGgtMl0sZ1tnLmxlbmd0aC0xXSldO2c9YSpmWzBdLmxlbmd0aDtzPXMuY29uY2F0KGZbMF0pO3M9bmV3IFRIUkVFLlNwbGluZUN1cnZlKHMpO2ZvcihmPTE7Zjw9ZztmKyspYy5wdXNoKHMuZ2V0UG9pbnRBdChmL2cpKTticmVhaztjYXNlIFRIUkVFLlBhdGhBY3Rpb25zLkFSQzpoPWZbMF07az1mWzFdO249ZlsyXTtsPWZbM107Zz1mWzRdO3E9ISFmWzVdO3Q9Zy1sO3I9MiphO2ZvcihmPTE7Zjw9cjtmKyspcz1mL3IscXx8KHM9MS1zKSxzPWwrcyp0LGc9aCtuKk1hdGguY29zKHMpLHM9aytuKk1hdGguc2luKHMpLGMucHVzaChuZXcgVEhSRUUuVmVjdG9yMihnLHMpKTticmVhaztjYXNlIFRIUkVFLlBhdGhBY3Rpb25zLkVMTElQU0U6Zm9yKGg9ZlswXSxrPWZbMV0sbj1mWzJdLHA9ZlszXSxsPWZbNF0sZz1mWzVdLHE9ISFmWzZdLHQ9Zy1sLHI9MiphLGY9MTtmPD1yO2YrKylzPWYvcixxfHxcbihzPTEtcykscz1sK3MqdCxnPWgrbipNYXRoLmNvcyhzKSxzPWsrcCpNYXRoLnNpbihzKSxjLnB1c2gobmV3IFRIUkVFLlZlY3RvcjIoZyxzKSl9ZD1jW2MubGVuZ3RoLTFdOzFFLTEwPk1hdGguYWJzKGQueC1jWzBdLngpJiYxRS0xMD5NYXRoLmFicyhkLnktY1swXS55KSYmYy5zcGxpY2UoYy5sZW5ndGgtMSwxKTtiJiZjLnB1c2goY1swXSk7cmV0dXJuIGN9O1xuVEhSRUUuUGF0aC5wcm90b3R5cGUudG9TaGFwZXM9ZnVuY3Rpb24oYSxiKXtmdW5jdGlvbiBjKGEpe2Zvcih2YXIgYj1bXSxjPTAsZD1hLmxlbmd0aDtjPGQ7YysrKXt2YXIgZT1hW2NdLGY9bmV3IFRIUkVFLlNoYXBlO2YuYWN0aW9ucz1lLmFjdGlvbnM7Zi5jdXJ2ZXM9ZS5jdXJ2ZXM7Yi5wdXNoKGYpfXJldHVybiBifWZ1bmN0aW9uIGQoYSxiKXtmb3IodmFyIGM9Yi5sZW5ndGgsZD0hMSxlPWMtMSxmPTA7ZjxjO2U9ZisrKXt2YXIgZz1iW2VdLGg9YltmXSxrPWgueC1nLngsbj1oLnktZy55O2lmKDFFLTEwPE1hdGguYWJzKG4pKXtpZigwPm4mJihnPWJbZl0saz0tayxoPWJbZV0sbj0tbiksIShhLnk8Zy55fHxhLnk+aC55KSlpZihhLnk9PWcueSl7aWYoYS54PT1nLngpcmV0dXJuITB9ZWxzZXtlPW4qKGEueC1nLngpLWsqKGEueS1nLnkpO2lmKDA9PWUpcmV0dXJuITA7MD5lfHwoZD0hZCl9fWVsc2UgaWYoYS55PT1nLnkmJihoLng8PWEueCYmYS54PD1nLnh8fGcueDw9YS54JiZhLng8PVxuaC54KSlyZXR1cm4hMH1yZXR1cm4gZH12YXIgZT1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmPVtdLGc9bmV3IFRIUkVFLlBhdGg7Yj0wO2ZvcihjPWEubGVuZ3RoO2I8YztiKyspZD1hW2JdLGU9ZC5hcmdzLGQ9ZC5hY3Rpb24sZD09VEhSRUUuUGF0aEFjdGlvbnMuTU9WRV9UTyYmMCE9Zy5hY3Rpb25zLmxlbmd0aCYmKGYucHVzaChnKSxnPW5ldyBUSFJFRS5QYXRoKSxnW2RdLmFwcGx5KGcsZSk7MCE9Zy5hY3Rpb25zLmxlbmd0aCYmZi5wdXNoKGcpO3JldHVybiBmfSh0aGlzLmFjdGlvbnMpO2lmKDA9PWUubGVuZ3RoKXJldHVybltdO2lmKCEwPT09YilyZXR1cm4gYyhlKTt2YXIgZixnLGgsaz1bXTtpZigxPT1lLmxlbmd0aClyZXR1cm4gZz1lWzBdLGg9bmV3IFRIUkVFLlNoYXBlLGguYWN0aW9ucz1nLmFjdGlvbnMsaC5jdXJ2ZXM9Zy5jdXJ2ZXMsay5wdXNoKGgpLGs7dmFyIGw9IVRIUkVFLlNoYXBlLlV0aWxzLmlzQ2xvY2tXaXNlKGVbMF0uZ2V0UG9pbnRzKCkpLGw9YT8hbDpsO1xuaD1bXTt2YXIgcD1bXSxxPVtdLG49MCx0O3Bbbl09dm9pZCAwO3Fbbl09W107dmFyIHIscztyPTA7Zm9yKHM9ZS5sZW5ndGg7cjxzO3IrKylnPWVbcl0sdD1nLmdldFBvaW50cygpLGY9VEhSRUUuU2hhcGUuVXRpbHMuaXNDbG9ja1dpc2UodCksKGY9YT8hZjpmKT8oIWwmJnBbbl0mJm4rKyxwW25dPXtzOm5ldyBUSFJFRS5TaGFwZSxwOnR9LHBbbl0ucy5hY3Rpb25zPWcuYWN0aW9ucyxwW25dLnMuY3VydmVzPWcuY3VydmVzLGwmJm4rKyxxW25dPVtdKTpxW25dLnB1c2goe2g6ZyxwOnRbMF19KTtpZighcFswXSlyZXR1cm4gYyhlKTtpZigxPHAubGVuZ3RoKXtyPSExO3M9W107Zz0wO2ZvcihlPXAubGVuZ3RoO2c8ZTtnKyspaFtnXT1bXTtnPTA7Zm9yKGU9cC5sZW5ndGg7ZzxlO2crKylmb3IoZj1xW2ddLGw9MDtsPGYubGVuZ3RoO2wrKyl7bj1mW2xdO3Q9ITA7Zm9yKHZhciB1PTA7dTxwLmxlbmd0aDt1KyspZChuLnAscFt1XS5wKSYmKGchPXUmJnMucHVzaCh7ZnJvbXM6Zyx0b3M6dSxcbmhvbGU6bH0pLHQ/KHQ9ITEsaFt1XS5wdXNoKG4pKTpyPSEwKTt0JiZoW2ddLnB1c2gobil9MDxzLmxlbmd0aCYmKHJ8fChxPWgpKX1yPTA7Zm9yKHM9cC5sZW5ndGg7cjxzO3IrKylmb3IoaD1wW3JdLnMsay5wdXNoKGgpLGc9cVtyXSxlPTAsZj1nLmxlbmd0aDtlPGY7ZSsrKWguaG9sZXMucHVzaChnW2VdLmgpO3JldHVybiBrfTtUSFJFRS5TaGFwZT1mdW5jdGlvbigpe1RIUkVFLlBhdGguYXBwbHkodGhpcyxhcmd1bWVudHMpO3RoaXMuaG9sZXM9W119O1RIUkVFLlNoYXBlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLlBhdGgucHJvdG90eXBlKTtUSFJFRS5TaGFwZS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuU2hhcGU7VEhSRUUuU2hhcGUucHJvdG90eXBlLmV4dHJ1ZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIG5ldyBUSFJFRS5FeHRydWRlR2VvbWV0cnkodGhpcyxhKX07XG5USFJFRS5TaGFwZS5wcm90b3R5cGUubWFrZUdlb21ldHJ5PWZ1bmN0aW9uKGEpe3JldHVybiBuZXcgVEhSRUUuU2hhcGVHZW9tZXRyeSh0aGlzLGEpfTtUSFJFRS5TaGFwZS5wcm90b3R5cGUuZ2V0UG9pbnRzSG9sZXM9ZnVuY3Rpb24oYSl7dmFyIGIsYz10aGlzLmhvbGVzLmxlbmd0aCxkPVtdO2ZvcihiPTA7YjxjO2IrKylkW2JdPXRoaXMuaG9sZXNbYl0uZ2V0VHJhbnNmb3JtZWRQb2ludHMoYSx0aGlzLmJlbmRzKTtyZXR1cm4gZH07VEhSRUUuU2hhcGUucHJvdG90eXBlLmdldFNwYWNlZFBvaW50c0hvbGVzPWZ1bmN0aW9uKGEpe3ZhciBiLGM9dGhpcy5ob2xlcy5sZW5ndGgsZD1bXTtmb3IoYj0wO2I8YztiKyspZFtiXT10aGlzLmhvbGVzW2JdLmdldFRyYW5zZm9ybWVkU3BhY2VkUG9pbnRzKGEsdGhpcy5iZW5kcyk7cmV0dXJuIGR9O1xuVEhSRUUuU2hhcGUucHJvdG90eXBlLmV4dHJhY3RBbGxQb2ludHM9ZnVuY3Rpb24oYSl7cmV0dXJue3NoYXBlOnRoaXMuZ2V0VHJhbnNmb3JtZWRQb2ludHMoYSksaG9sZXM6dGhpcy5nZXRQb2ludHNIb2xlcyhhKX19O1RIUkVFLlNoYXBlLnByb3RvdHlwZS5leHRyYWN0UG9pbnRzPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLnVzZVNwYWNlZFBvaW50cz90aGlzLmV4dHJhY3RBbGxTcGFjZWRQb2ludHMoYSk6dGhpcy5leHRyYWN0QWxsUG9pbnRzKGEpfTtUSFJFRS5TaGFwZS5wcm90b3R5cGUuZXh0cmFjdEFsbFNwYWNlZFBvaW50cz1mdW5jdGlvbihhKXtyZXR1cm57c2hhcGU6dGhpcy5nZXRUcmFuc2Zvcm1lZFNwYWNlZFBvaW50cyhhKSxob2xlczp0aGlzLmdldFNwYWNlZFBvaW50c0hvbGVzKGEpfX07XG5USFJFRS5TaGFwZS5VdGlscz17dHJpYW5ndWxhdGVTaGFwZTpmdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGMoYSxiLGMpe3JldHVybiBhLnghPWIueD9hLng8Yi54P2EueDw9Yy54JiZjLng8PWIueDpiLng8PWMueCYmYy54PD1hLng6YS55PGIueT9hLnk8PWMueSYmYy55PD1iLnk6Yi55PD1jLnkmJmMueTw9YS55fWZ1bmN0aW9uIGQoYSxiLGQsZSxmKXt2YXIgZz1iLngtYS54LGg9Yi55LWEueSxrPWUueC1kLngsbD1lLnktZC55LHA9YS54LWQueCxxPWEueS1kLnksRT1oKmstZypsLEc9aCpwLWcqcTtpZigxRS0xMDxNYXRoLmFicyhFKSl7aWYoMDxFKXtpZigwPkd8fEc+RSlyZXR1cm5bXTtrPWwqcC1rKnE7aWYoMD5rfHxrPkUpcmV0dXJuW119ZWxzZXtpZigwPEd8fEc8RSlyZXR1cm5bXTtrPWwqcC1rKnE7aWYoMDxrfHxrPEUpcmV0dXJuW119aWYoMD09aylyZXR1cm4hZnx8MCE9RyYmRyE9RT9bYV06W107aWYoaz09RSlyZXR1cm4hZnx8MCE9RyYmRyE9RT9bYl06W107aWYoMD09RylyZXR1cm5bZF07XG5pZihHPT1FKXJldHVybltlXTtmPWsvRTtyZXR1cm5be3g6YS54K2YqZyx5OmEueStmKmh9XX1pZigwIT1HfHxsKnAhPWsqcSlyZXR1cm5bXTtoPTA9PWcmJjA9PWg7az0wPT1rJiYwPT1sO2lmKGgmJmspcmV0dXJuIGEueCE9ZC54fHxhLnkhPWQueT9bXTpbYV07aWYoaClyZXR1cm4gYyhkLGUsYSk/W2FdOltdO2lmKGspcmV0dXJuIGMoYSxiLGQpP1tkXTpbXTswIT1nPyhhLng8Yi54PyhnPWEsaz1hLngsaD1iLGE9Yi54KTooZz1iLGs9Yi54LGg9YSxhPWEueCksZC54PGUueD8oYj1kLEU9ZC54LGw9ZSxkPWUueCk6KGI9ZSxFPWUueCxsPWQsZD1kLngpKTooYS55PGIueT8oZz1hLGs9YS55LGg9YixhPWIueSk6KGc9YixrPWIueSxoPWEsYT1hLnkpLGQueTxlLnk/KGI9ZCxFPWQueSxsPWUsZD1lLnkpOihiPWUsRT1lLnksbD1kLGQ9ZC55KSk7cmV0dXJuIGs8PUU/YTxFP1tdOmE9PUU/Zj9bXTpbYl06YTw9ZD9bYixoXTpbYixsXTprPmQ/W106az09ZD9mP1tdOltnXTphPD1kP1tnLGhdOlxuW2csbF19ZnVuY3Rpb24gZShhLGIsYyxkKXt2YXIgZT1iLngtYS54LGY9Yi55LWEueTtiPWMueC1hLng7Yz1jLnktYS55O3ZhciBnPWQueC1hLng7ZD1kLnktYS55O2E9ZSpjLWYqYjtlPWUqZC1mKmc7cmV0dXJuIDFFLTEwPE1hdGguYWJzKGEpPyhiPWcqYy1kKmIsMDxhPzA8PWUmJjA8PWI6MDw9ZXx8MDw9Yik6MDxlfXZhciBmLGcsaCxrLGwscD17fTtoPWEuY29uY2F0KCk7Zj0wO2ZvcihnPWIubGVuZ3RoO2Y8ZztmKyspQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoaCxiW2ZdKTtmPTA7Zm9yKGc9aC5sZW5ndGg7ZjxnO2YrKylsPWhbZl0ueCtcIjpcIitoW2ZdLnksdm9pZCAwIT09cFtsXSYmVEhSRUUud2FybihcIlRIUkVFLlNoYXBlOiBEdXBsaWNhdGUgcG9pbnRcIixsKSxwW2xdPWY7Zj1mdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGMoYSxiKXt2YXIgZD1oLmxlbmd0aC0xLGY9YS0xOzA+ZiYmKGY9ZCk7dmFyIGc9YSsxO2c+ZCYmKGc9MCk7ZD1lKGhbYV0saFtmXSxoW2ddLGtbYl0pO1xuaWYoIWQpcmV0dXJuITE7ZD1rLmxlbmd0aC0xO2Y9Yi0xOzA+ZiYmKGY9ZCk7Zz1iKzE7Zz5kJiYoZz0wKTtyZXR1cm4oZD1lKGtbYl0sa1tmXSxrW2ddLGhbYV0pKT8hMDohMX1mdW5jdGlvbiBmKGEsYil7dmFyIGMsZTtmb3IoYz0wO2M8aC5sZW5ndGg7YysrKWlmKGU9YysxLGUlPWgubGVuZ3RoLGU9ZChhLGIsaFtjXSxoW2VdLCEwKSwwPGUubGVuZ3RoKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIGcoYSxjKXt2YXIgZSxmLGgsaztmb3IoZT0wO2U8bC5sZW5ndGg7ZSsrKWZvcihmPWJbbFtlXV0saD0wO2g8Zi5sZW5ndGg7aCsrKWlmKGs9aCsxLGslPWYubGVuZ3RoLGs9ZChhLGMsZltoXSxmW2tdLCEwKSwwPGsubGVuZ3RoKXJldHVybiEwO3JldHVybiExfXZhciBoPWEuY29uY2F0KCksayxsPVtdLHAscSxBLEUsRyxGPVtdLHosSSxVLE09MDtmb3IocD1iLmxlbmd0aDtNPHA7TSsrKWwucHVzaChNKTt6PTA7Zm9yKHZhciBIPTIqbC5sZW5ndGg7MDxsLmxlbmd0aDspe0gtLTtpZigwPlxuSCl7Y29uc29sZS5sb2coXCJJbmZpbml0ZSBMb29wISBIb2xlcyBsZWZ0OlwiK2wubGVuZ3RoK1wiLCBQcm9iYWJseSBIb2xlIG91dHNpZGUgU2hhcGUhXCIpO2JyZWFrfWZvcihxPXo7cTxoLmxlbmd0aDtxKyspe0E9aFtxXTtwPS0xO2ZvcihNPTA7TTxsLmxlbmd0aDtNKyspaWYoRT1sW01dLEc9QS54K1wiOlwiK0EueStcIjpcIitFLHZvaWQgMD09PUZbR10pe2s9YltFXTtmb3IoST0wO0k8ay5sZW5ndGg7SSsrKWlmKEU9a1tJXSxjKHEsSSkmJiFmKEEsRSkmJiFnKEEsRSkpe3A9STtsLnNwbGljZShNLDEpO3o9aC5zbGljZSgwLHErMSk7RT1oLnNsaWNlKHEpO0k9ay5zbGljZShwKTtVPWsuc2xpY2UoMCxwKzEpO2g9ei5jb25jYXQoSSkuY29uY2F0KFUpLmNvbmNhdChFKTt6PXE7YnJlYWt9aWYoMDw9cClicmVhaztGW0ddPSEwfWlmKDA8PXApYnJlYWt9fXJldHVybiBofShhLGIpO3ZhciBxPVRIUkVFLkZvbnRVdGlscy5Ucmlhbmd1bGF0ZShmLCExKTtmPTA7Zm9yKGc9cS5sZW5ndGg7ZjxnO2YrKylmb3Ioaz1cbnFbZl0saD0wOzM+aDtoKyspbD1rW2hdLngrXCI6XCIra1toXS55LGw9cFtsXSx2b2lkIDAhPT1sJiYoa1toXT1sKTtyZXR1cm4gcS5jb25jYXQoKX0saXNDbG9ja1dpc2U6ZnVuY3Rpb24oYSl7cmV0dXJuIDA+VEhSRUUuRm9udFV0aWxzLlRyaWFuZ3VsYXRlLmFyZWEoYSl9LGIycDA6ZnVuY3Rpb24oYSxiKXt2YXIgYz0xLWE7cmV0dXJuIGMqYypifSxiMnAxOmZ1bmN0aW9uKGEsYil7cmV0dXJuIDIqKDEtYSkqYSpifSxiMnAyOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGEqYSpifSxiMjpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gdGhpcy5iMnAwKGEsYikrdGhpcy5iMnAxKGEsYykrdGhpcy5iMnAyKGEsZCl9LGIzcDA6ZnVuY3Rpb24oYSxiKXt2YXIgYz0xLWE7cmV0dXJuIGMqYypjKmJ9LGIzcDE6ZnVuY3Rpb24oYSxiKXt2YXIgYz0xLWE7cmV0dXJuIDMqYypjKmEqYn0sYjNwMjpmdW5jdGlvbihhLGIpe3JldHVybiAzKigxLWEpKmEqYSpifSxiM3AzOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGEqXG5hKmEqYn0sYjM6ZnVuY3Rpb24oYSxiLGMsZCxlKXtyZXR1cm4gdGhpcy5iM3AwKGEsYikrdGhpcy5iM3AxKGEsYykrdGhpcy5iM3AyKGEsZCkrdGhpcy5iM3AzKGEsZSl9fTtUSFJFRS5MaW5lQ3VydmU9ZnVuY3Rpb24oYSxiKXt0aGlzLnYxPWE7dGhpcy52Mj1ifTtUSFJFRS5MaW5lQ3VydmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuQ3VydmUucHJvdG90eXBlKTtUSFJFRS5MaW5lQ3VydmUucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkxpbmVDdXJ2ZTtUSFJFRS5MaW5lQ3VydmUucHJvdG90eXBlLmdldFBvaW50PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMudjIuY2xvbmUoKS5zdWIodGhpcy52MSk7Yi5tdWx0aXBseVNjYWxhcihhKS5hZGQodGhpcy52MSk7cmV0dXJuIGJ9O1RIUkVFLkxpbmVDdXJ2ZS5wcm90b3R5cGUuZ2V0UG9pbnRBdD1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5nZXRQb2ludChhKX07XG5USFJFRS5MaW5lQ3VydmUucHJvdG90eXBlLmdldFRhbmdlbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMudjIuY2xvbmUoKS5zdWIodGhpcy52MSkubm9ybWFsaXplKCl9O1RIUkVFLlF1YWRyYXRpY0JlemllckN1cnZlPWZ1bmN0aW9uKGEsYixjKXt0aGlzLnYwPWE7dGhpcy52MT1iO3RoaXMudjI9Y307VEhSRUUuUXVhZHJhdGljQmV6aWVyQ3VydmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuQ3VydmUucHJvdG90eXBlKTtUSFJFRS5RdWFkcmF0aWNCZXppZXJDdXJ2ZS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuUXVhZHJhdGljQmV6aWVyQ3VydmU7XG5USFJFRS5RdWFkcmF0aWNCZXppZXJDdXJ2ZS5wcm90b3R5cGUuZ2V0UG9pbnQ9ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IFRIUkVFLlZlY3RvcjI7Yi54PVRIUkVFLlNoYXBlLlV0aWxzLmIyKGEsdGhpcy52MC54LHRoaXMudjEueCx0aGlzLnYyLngpO2IueT1USFJFRS5TaGFwZS5VdGlscy5iMihhLHRoaXMudjAueSx0aGlzLnYxLnksdGhpcy52Mi55KTtyZXR1cm4gYn07VEhSRUUuUXVhZHJhdGljQmV6aWVyQ3VydmUucHJvdG90eXBlLmdldFRhbmdlbnQ9ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IFRIUkVFLlZlY3RvcjI7Yi54PVRIUkVFLkN1cnZlLlV0aWxzLnRhbmdlbnRRdWFkcmF0aWNCZXppZXIoYSx0aGlzLnYwLngsdGhpcy52MS54LHRoaXMudjIueCk7Yi55PVRIUkVFLkN1cnZlLlV0aWxzLnRhbmdlbnRRdWFkcmF0aWNCZXppZXIoYSx0aGlzLnYwLnksdGhpcy52MS55LHRoaXMudjIueSk7cmV0dXJuIGIubm9ybWFsaXplKCl9O1xuVEhSRUUuQ3ViaWNCZXppZXJDdXJ2ZT1mdW5jdGlvbihhLGIsYyxkKXt0aGlzLnYwPWE7dGhpcy52MT1iO3RoaXMudjI9Yzt0aGlzLnYzPWR9O1RIUkVFLkN1YmljQmV6aWVyQ3VydmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuQ3VydmUucHJvdG90eXBlKTtUSFJFRS5DdWJpY0JlemllckN1cnZlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5DdWJpY0JlemllckN1cnZlO1RIUkVFLkN1YmljQmV6aWVyQ3VydmUucHJvdG90eXBlLmdldFBvaW50PWZ1bmN0aW9uKGEpe3ZhciBiO2I9VEhSRUUuU2hhcGUuVXRpbHMuYjMoYSx0aGlzLnYwLngsdGhpcy52MS54LHRoaXMudjIueCx0aGlzLnYzLngpO2E9VEhSRUUuU2hhcGUuVXRpbHMuYjMoYSx0aGlzLnYwLnksdGhpcy52MS55LHRoaXMudjIueSx0aGlzLnYzLnkpO3JldHVybiBuZXcgVEhSRUUuVmVjdG9yMihiLGEpfTtcblRIUkVFLkN1YmljQmV6aWVyQ3VydmUucHJvdG90eXBlLmdldFRhbmdlbnQ9ZnVuY3Rpb24oYSl7dmFyIGI7Yj1USFJFRS5DdXJ2ZS5VdGlscy50YW5nZW50Q3ViaWNCZXppZXIoYSx0aGlzLnYwLngsdGhpcy52MS54LHRoaXMudjIueCx0aGlzLnYzLngpO2E9VEhSRUUuQ3VydmUuVXRpbHMudGFuZ2VudEN1YmljQmV6aWVyKGEsdGhpcy52MC55LHRoaXMudjEueSx0aGlzLnYyLnksdGhpcy52My55KTtiPW5ldyBUSFJFRS5WZWN0b3IyKGIsYSk7Yi5ub3JtYWxpemUoKTtyZXR1cm4gYn07VEhSRUUuU3BsaW5lQ3VydmU9ZnVuY3Rpb24oYSl7dGhpcy5wb2ludHM9dm9pZCAwPT1hP1tdOmF9O1RIUkVFLlNwbGluZUN1cnZlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkN1cnZlLnByb3RvdHlwZSk7VEhSRUUuU3BsaW5lQ3VydmUucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLlNwbGluZUN1cnZlO1xuVEhSRUUuU3BsaW5lQ3VydmUucHJvdG90eXBlLmdldFBvaW50PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMucG9pbnRzO2EqPWIubGVuZ3RoLTE7dmFyIGM9TWF0aC5mbG9vcihhKTthLT1jO3ZhciBkPWJbMD09Yz9jOmMtMV0sZT1iW2NdLGY9YltjPmIubGVuZ3RoLTI/Yi5sZW5ndGgtMTpjKzFdLGI9YltjPmIubGVuZ3RoLTM/Yi5sZW5ndGgtMTpjKzJdLGM9bmV3IFRIUkVFLlZlY3RvcjI7Yy54PVRIUkVFLkN1cnZlLlV0aWxzLmludGVycG9sYXRlKGQueCxlLngsZi54LGIueCxhKTtjLnk9VEhSRUUuQ3VydmUuVXRpbHMuaW50ZXJwb2xhdGUoZC55LGUueSxmLnksYi55LGEpO3JldHVybiBjfTtUSFJFRS5FbGxpcHNlQ3VydmU9ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyl7dGhpcy5hWD1hO3RoaXMuYVk9Yjt0aGlzLnhSYWRpdXM9Yzt0aGlzLnlSYWRpdXM9ZDt0aGlzLmFTdGFydEFuZ2xlPWU7dGhpcy5hRW5kQW5nbGU9Zjt0aGlzLmFDbG9ja3dpc2U9Z307XG5USFJFRS5FbGxpcHNlQ3VydmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuQ3VydmUucHJvdG90eXBlKTtUSFJFRS5FbGxpcHNlQ3VydmUucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkVsbGlwc2VDdXJ2ZTtUSFJFRS5FbGxpcHNlQ3VydmUucHJvdG90eXBlLmdldFBvaW50PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuYUVuZEFuZ2xlLXRoaXMuYVN0YXJ0QW5nbGU7MD5iJiYoYis9MipNYXRoLlBJKTtiPjIqTWF0aC5QSSYmKGItPTIqTWF0aC5QSSk7YT0hMD09PXRoaXMuYUNsb2Nrd2lzZT90aGlzLmFFbmRBbmdsZSsoMS1hKSooMipNYXRoLlBJLWIpOnRoaXMuYVN0YXJ0QW5nbGUrYSpiO2I9bmV3IFRIUkVFLlZlY3RvcjI7Yi54PXRoaXMuYVgrdGhpcy54UmFkaXVzKk1hdGguY29zKGEpO2IueT10aGlzLmFZK3RoaXMueVJhZGl1cypNYXRoLnNpbihhKTtyZXR1cm4gYn07XG5USFJFRS5BcmNDdXJ2ZT1mdW5jdGlvbihhLGIsYyxkLGUsZil7VEhSRUUuRWxsaXBzZUN1cnZlLmNhbGwodGhpcyxhLGIsYyxjLGQsZSxmKX07VEhSRUUuQXJjQ3VydmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuRWxsaXBzZUN1cnZlLnByb3RvdHlwZSk7VEhSRUUuQXJjQ3VydmUucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkFyY0N1cnZlO1RIUkVFLkxpbmVDdXJ2ZTM9VEhSRUUuQ3VydmUuY3JlYXRlKGZ1bmN0aW9uKGEsYil7dGhpcy52MT1hO3RoaXMudjI9Yn0sZnVuY3Rpb24oYSl7dmFyIGI9bmV3IFRIUkVFLlZlY3RvcjM7Yi5zdWJWZWN0b3JzKHRoaXMudjIsdGhpcy52MSk7Yi5tdWx0aXBseVNjYWxhcihhKTtiLmFkZCh0aGlzLnYxKTtyZXR1cm4gYn0pO1xuVEhSRUUuUXVhZHJhdGljQmV6aWVyQ3VydmUzPVRIUkVFLkN1cnZlLmNyZWF0ZShmdW5jdGlvbihhLGIsYyl7dGhpcy52MD1hO3RoaXMudjE9Yjt0aGlzLnYyPWN9LGZ1bmN0aW9uKGEpe3ZhciBiPW5ldyBUSFJFRS5WZWN0b3IzO2IueD1USFJFRS5TaGFwZS5VdGlscy5iMihhLHRoaXMudjAueCx0aGlzLnYxLngsdGhpcy52Mi54KTtiLnk9VEhSRUUuU2hhcGUuVXRpbHMuYjIoYSx0aGlzLnYwLnksdGhpcy52MS55LHRoaXMudjIueSk7Yi56PVRIUkVFLlNoYXBlLlV0aWxzLmIyKGEsdGhpcy52MC56LHRoaXMudjEueix0aGlzLnYyLnopO3JldHVybiBifSk7XG5USFJFRS5DdWJpY0JlemllckN1cnZlMz1USFJFRS5DdXJ2ZS5jcmVhdGUoZnVuY3Rpb24oYSxiLGMsZCl7dGhpcy52MD1hO3RoaXMudjE9Yjt0aGlzLnYyPWM7dGhpcy52Mz1kfSxmdW5jdGlvbihhKXt2YXIgYj1uZXcgVEhSRUUuVmVjdG9yMztiLng9VEhSRUUuU2hhcGUuVXRpbHMuYjMoYSx0aGlzLnYwLngsdGhpcy52MS54LHRoaXMudjIueCx0aGlzLnYzLngpO2IueT1USFJFRS5TaGFwZS5VdGlscy5iMyhhLHRoaXMudjAueSx0aGlzLnYxLnksdGhpcy52Mi55LHRoaXMudjMueSk7Yi56PVRIUkVFLlNoYXBlLlV0aWxzLmIzKGEsdGhpcy52MC56LHRoaXMudjEueix0aGlzLnYyLnosdGhpcy52My56KTtyZXR1cm4gYn0pO1xuVEhSRUUuU3BsaW5lQ3VydmUzPVRIUkVFLkN1cnZlLmNyZWF0ZShmdW5jdGlvbihhKXt0aGlzLnBvaW50cz12b2lkIDA9PWE/W106YX0sZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5wb2ludHM7YSo9Yi5sZW5ndGgtMTt2YXIgYz1NYXRoLmZsb29yKGEpO2EtPWM7dmFyIGQ9YlswPT1jP2M6Yy0xXSxlPWJbY10sZj1iW2M+Yi5sZW5ndGgtMj9iLmxlbmd0aC0xOmMrMV0sYj1iW2M+Yi5sZW5ndGgtMz9iLmxlbmd0aC0xOmMrMl0sYz1uZXcgVEhSRUUuVmVjdG9yMztjLng9VEhSRUUuQ3VydmUuVXRpbHMuaW50ZXJwb2xhdGUoZC54LGUueCxmLngsYi54LGEpO2MueT1USFJFRS5DdXJ2ZS5VdGlscy5pbnRlcnBvbGF0ZShkLnksZS55LGYueSxiLnksYSk7Yy56PVRIUkVFLkN1cnZlLlV0aWxzLmludGVycG9sYXRlKGQueixlLnosZi56LGIueixhKTtyZXR1cm4gY30pO1xuVEhSRUUuQ2xvc2VkU3BsaW5lQ3VydmUzPVRIUkVFLkN1cnZlLmNyZWF0ZShmdW5jdGlvbihhKXt0aGlzLnBvaW50cz12b2lkIDA9PWE/W106YX0sZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5wb2ludHM7YSo9Yi5sZW5ndGgtMDt2YXIgYz1NYXRoLmZsb29yKGEpO2EtPWM7dmFyIGM9YysoMDxjPzA6KE1hdGguZmxvb3IoTWF0aC5hYnMoYykvYi5sZW5ndGgpKzEpKmIubGVuZ3RoKSxkPWJbKGMtMSklYi5sZW5ndGhdLGU9YltjJWIubGVuZ3RoXSxmPWJbKGMrMSklYi5sZW5ndGhdLGI9YlsoYysyKSViLmxlbmd0aF0sYz1uZXcgVEhSRUUuVmVjdG9yMztjLng9VEhSRUUuQ3VydmUuVXRpbHMuaW50ZXJwb2xhdGUoZC54LGUueCxmLngsYi54LGEpO2MueT1USFJFRS5DdXJ2ZS5VdGlscy5pbnRlcnBvbGF0ZShkLnksZS55LGYueSxiLnksYSk7Yy56PVRIUkVFLkN1cnZlLlV0aWxzLmludGVycG9sYXRlKGQueixlLnosZi56LGIueixhKTtyZXR1cm4gY30pO1xuVEhSRUUuQW5pbWF0aW9uSGFuZGxlcj17TElORUFSOjAsQ0FUTVVMTFJPTToxLENBVE1VTExST01fRk9SV0FSRDoyLGFkZDpmdW5jdGlvbigpe1RIUkVFLndhcm4oXCJUSFJFRS5BbmltYXRpb25IYW5kbGVyLmFkZCgpIGhhcyBiZWVuIGRlcHJlY2F0ZWQuXCIpfSxnZXQ6ZnVuY3Rpb24oKXtUSFJFRS53YXJuKFwiVEhSRUUuQW5pbWF0aW9uSGFuZGxlci5nZXQoKSBoYXMgYmVlbiBkZXByZWNhdGVkLlwiKX0scmVtb3ZlOmZ1bmN0aW9uKCl7VEhSRUUud2FybihcIlRIUkVFLkFuaW1hdGlvbkhhbmRsZXIucmVtb3ZlKCkgaGFzIGJlZW4gZGVwcmVjYXRlZC5cIil9LGFuaW1hdGlvbnM6W10saW5pdDpmdW5jdGlvbihhKXtpZighMD09PWEuaW5pdGlhbGl6ZWQpcmV0dXJuIGE7Zm9yKHZhciBiPTA7YjxhLmhpZXJhcmNoeS5sZW5ndGg7YisrKXtmb3IodmFyIGM9MDtjPGEuaGllcmFyY2h5W2JdLmtleXMubGVuZ3RoO2MrKylpZigwPmEuaGllcmFyY2h5W2JdLmtleXNbY10udGltZSYmKGEuaGllcmFyY2h5W2JdLmtleXNbY10udGltZT1cbjApLHZvaWQgMCE9PWEuaGllcmFyY2h5W2JdLmtleXNbY10ucm90JiYhKGEuaGllcmFyY2h5W2JdLmtleXNbY10ucm90IGluc3RhbmNlb2YgVEhSRUUuUXVhdGVybmlvbikpe3ZhciBkPWEuaGllcmFyY2h5W2JdLmtleXNbY10ucm90O2EuaGllcmFyY2h5W2JdLmtleXNbY10ucm90PShuZXcgVEhSRUUuUXVhdGVybmlvbikuZnJvbUFycmF5KGQpfWlmKGEuaGllcmFyY2h5W2JdLmtleXMubGVuZ3RoJiZ2b2lkIDAhPT1hLmhpZXJhcmNoeVtiXS5rZXlzWzBdLm1vcnBoVGFyZ2V0cyl7ZD17fTtmb3IoYz0wO2M8YS5oaWVyYXJjaHlbYl0ua2V5cy5sZW5ndGg7YysrKWZvcih2YXIgZT0wO2U8YS5oaWVyYXJjaHlbYl0ua2V5c1tjXS5tb3JwaFRhcmdldHMubGVuZ3RoO2UrKyl7dmFyIGY9YS5oaWVyYXJjaHlbYl0ua2V5c1tjXS5tb3JwaFRhcmdldHNbZV07ZFtmXT0tMX1hLmhpZXJhcmNoeVtiXS51c2VkTW9ycGhUYXJnZXRzPWQ7Zm9yKGM9MDtjPGEuaGllcmFyY2h5W2JdLmtleXMubGVuZ3RoO2MrKyl7dmFyIGc9XG57fTtmb3IoZiBpbiBkKXtmb3IoZT0wO2U8YS5oaWVyYXJjaHlbYl0ua2V5c1tjXS5tb3JwaFRhcmdldHMubGVuZ3RoO2UrKylpZihhLmhpZXJhcmNoeVtiXS5rZXlzW2NdLm1vcnBoVGFyZ2V0c1tlXT09PWYpe2dbZl09YS5oaWVyYXJjaHlbYl0ua2V5c1tjXS5tb3JwaFRhcmdldHNJbmZsdWVuY2VzW2VdO2JyZWFrfWU9PT1hLmhpZXJhcmNoeVtiXS5rZXlzW2NdLm1vcnBoVGFyZ2V0cy5sZW5ndGgmJihnW2ZdPTApfWEuaGllcmFyY2h5W2JdLmtleXNbY10ubW9ycGhUYXJnZXRzSW5mbHVlbmNlcz1nfX1mb3IoYz0xO2M8YS5oaWVyYXJjaHlbYl0ua2V5cy5sZW5ndGg7YysrKWEuaGllcmFyY2h5W2JdLmtleXNbY10udGltZT09PWEuaGllcmFyY2h5W2JdLmtleXNbYy0xXS50aW1lJiYoYS5oaWVyYXJjaHlbYl0ua2V5cy5zcGxpY2UoYywxKSxjLS0pO2ZvcihjPTA7YzxhLmhpZXJhcmNoeVtiXS5rZXlzLmxlbmd0aDtjKyspYS5oaWVyYXJjaHlbYl0ua2V5c1tjXS5pbmRleD1jfWEuaW5pdGlhbGl6ZWQ9XG4hMDtyZXR1cm4gYX0scGFyc2U6ZnVuY3Rpb24oYSl7dmFyIGI9ZnVuY3Rpb24oYSxjKXtjLnB1c2goYSk7Zm9yKHZhciBkPTA7ZDxhLmNoaWxkcmVuLmxlbmd0aDtkKyspYihhLmNoaWxkcmVuW2RdLGMpfSxjPVtdO2lmKGEgaW5zdGFuY2VvZiBUSFJFRS5Ta2lubmVkTWVzaClmb3IodmFyIGQ9MDtkPGEuc2tlbGV0b24uYm9uZXMubGVuZ3RoO2QrKyljLnB1c2goYS5za2VsZXRvbi5ib25lc1tkXSk7ZWxzZSBiKGEsYyk7cmV0dXJuIGN9LHBsYXk6ZnVuY3Rpb24oYSl7LTE9PT10aGlzLmFuaW1hdGlvbnMuaW5kZXhPZihhKSYmdGhpcy5hbmltYXRpb25zLnB1c2goYSl9LHN0b3A6ZnVuY3Rpb24oYSl7YT10aGlzLmFuaW1hdGlvbnMuaW5kZXhPZihhKTstMSE9PWEmJnRoaXMuYW5pbWF0aW9ucy5zcGxpY2UoYSwxKX0sdXBkYXRlOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0wO2I8dGhpcy5hbmltYXRpb25zLmxlbmd0aDtiKyspdGhpcy5hbmltYXRpb25zW2JdLnJlc2V0QmxlbmRXZWlnaHRzKCk7XG5mb3IoYj0wO2I8dGhpcy5hbmltYXRpb25zLmxlbmd0aDtiKyspdGhpcy5hbmltYXRpb25zW2JdLnVwZGF0ZShhKX19O1RIUkVFLkFuaW1hdGlvbj1mdW5jdGlvbihhLGIpe3RoaXMucm9vdD1hO3RoaXMuZGF0YT1USFJFRS5BbmltYXRpb25IYW5kbGVyLmluaXQoYik7dGhpcy5oaWVyYXJjaHk9VEhSRUUuQW5pbWF0aW9uSGFuZGxlci5wYXJzZShhKTt0aGlzLmN1cnJlbnRUaW1lPTA7dGhpcy50aW1lU2NhbGU9MTt0aGlzLmlzUGxheWluZz0hMTt0aGlzLmxvb3A9ITA7dGhpcy53ZWlnaHQ9MDt0aGlzLmludGVycG9sYXRpb25UeXBlPVRIUkVFLkFuaW1hdGlvbkhhbmRsZXIuTElORUFSfTtcblRIUkVFLkFuaW1hdGlvbi5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRIUkVFLkFuaW1hdGlvbixrZXlUeXBlczpbXCJwb3NcIixcInJvdFwiLFwic2NsXCJdLHBsYXk6ZnVuY3Rpb24oYSxiKXt0aGlzLmN1cnJlbnRUaW1lPXZvaWQgMCE9PWE/YTowO3RoaXMud2VpZ2h0PXZvaWQgMCE9PWI/YjoxO3RoaXMuaXNQbGF5aW5nPSEwO3RoaXMucmVzZXQoKTtUSFJFRS5BbmltYXRpb25IYW5kbGVyLnBsYXkodGhpcyl9LHN0b3A6ZnVuY3Rpb24oKXt0aGlzLmlzUGxheWluZz0hMTtUSFJFRS5BbmltYXRpb25IYW5kbGVyLnN0b3AodGhpcyl9LHJlc2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciBhPTAsYj10aGlzLmhpZXJhcmNoeS5sZW5ndGg7YTxiO2ErKyl7dmFyIGM9dGhpcy5oaWVyYXJjaHlbYV07dm9pZCAwPT09Yy5hbmltYXRpb25DYWNoZSYmKGMuYW5pbWF0aW9uQ2FjaGU9e2FuaW1hdGlvbnM6e30sYmxlbmRpbmc6e3Bvc2l0aW9uV2VpZ2h0OjAscXVhdGVybmlvbldlaWdodDowLHNjYWxlV2VpZ2h0OjB9fSk7XG52YXIgZD10aGlzLmRhdGEubmFtZSxlPWMuYW5pbWF0aW9uQ2FjaGUuYW5pbWF0aW9ucyxmPWVbZF07dm9pZCAwPT09ZiYmKGY9e3ByZXZLZXk6e3BvczowLHJvdDowLHNjbDowfSxuZXh0S2V5Ontwb3M6MCxyb3Q6MCxzY2w6MH0sb3JpZ2luYWxNYXRyaXg6Yy5tYXRyaXh9LGVbZF09Zik7Zm9yKGM9MDszPmM7YysrKXtmb3IodmFyIGQ9dGhpcy5rZXlUeXBlc1tjXSxlPXRoaXMuZGF0YS5oaWVyYXJjaHlbYV0ua2V5c1swXSxnPXRoaXMuZ2V0TmV4dEtleVdpdGgoZCxhLDEpO2cudGltZTx0aGlzLmN1cnJlbnRUaW1lJiZnLmluZGV4PmUuaW5kZXg7KWU9ZyxnPXRoaXMuZ2V0TmV4dEtleVdpdGgoZCxhLGcuaW5kZXgrMSk7Zi5wcmV2S2V5W2RdPWU7Zi5uZXh0S2V5W2RdPWd9fX0scmVzZXRCbGVuZFdlaWdodHM6ZnVuY3Rpb24oKXtmb3IodmFyIGE9MCxiPXRoaXMuaGllcmFyY2h5Lmxlbmd0aDthPGI7YSsrKXt2YXIgYz10aGlzLmhpZXJhcmNoeVthXS5hbmltYXRpb25DYWNoZTt2b2lkIDAhPT1cbmMmJihjPWMuYmxlbmRpbmcsYy5wb3NpdGlvbldlaWdodD0wLGMucXVhdGVybmlvbldlaWdodD0wLGMuc2NhbGVXZWlnaHQ9MCl9fSx1cGRhdGU6ZnVuY3Rpb24oKXt2YXIgYT1bXSxiPW5ldyBUSFJFRS5WZWN0b3IzLGM9bmV3IFRIUkVFLlZlY3RvcjMsZD1uZXcgVEhSRUUuUXVhdGVybmlvbixlPWZ1bmN0aW9uKGEsYil7dmFyIGM9W10sZD1bXSxlLHEsbix0LHIscztlPShhLmxlbmd0aC0xKSpiO3E9TWF0aC5mbG9vcihlKTtlLT1xO2NbMF09MD09PXE/cTpxLTE7Y1sxXT1xO2NbMl09cT5hLmxlbmd0aC0yP3E6cSsxO2NbM109cT5hLmxlbmd0aC0zP3E6cSsyO3E9YVtjWzBdXTt0PWFbY1sxXV07cj1hW2NbMl1dO3M9YVtjWzNdXTtjPWUqZTtuPWUqYztkWzBdPWYocVswXSx0WzBdLHJbMF0sc1swXSxlLGMsbik7ZFsxXT1mKHFbMV0sdFsxXSxyWzFdLHNbMV0sZSxjLG4pO2RbMl09ZihxWzJdLHRbMl0sclsyXSxzWzJdLGUsYyxuKTtyZXR1cm4gZH0sZj1mdW5jdGlvbihhLGIsYyxkLFxuZSxmLG4pe2E9LjUqKGMtYSk7ZD0uNSooZC1iKTtyZXR1cm4oMiooYi1jKSthK2QpKm4rKC0zKihiLWMpLTIqYS1kKSpmK2EqZStifTtyZXR1cm4gZnVuY3Rpb24oZil7aWYoITEhPT10aGlzLmlzUGxheWluZyYmKHRoaXMuY3VycmVudFRpbWUrPWYqdGhpcy50aW1lU2NhbGUsMCE9PXRoaXMud2VpZ2h0KSl7Zj10aGlzLmRhdGEubGVuZ3RoO2lmKHRoaXMuY3VycmVudFRpbWU+Znx8MD50aGlzLmN1cnJlbnRUaW1lKXRoaXMubG9vcD8odGhpcy5jdXJyZW50VGltZSU9ZiwwPnRoaXMuY3VycmVudFRpbWUmJih0aGlzLmN1cnJlbnRUaW1lKz1mKSx0aGlzLnJlc2V0KCkpOnRoaXMuc3RvcCgpO2Y9MDtmb3IodmFyIGg9dGhpcy5oaWVyYXJjaHkubGVuZ3RoO2Y8aDtmKyspZm9yKHZhciBrPXRoaXMuaGllcmFyY2h5W2ZdLGw9ay5hbmltYXRpb25DYWNoZS5hbmltYXRpb25zW3RoaXMuZGF0YS5uYW1lXSxwPWsuYW5pbWF0aW9uQ2FjaGUuYmxlbmRpbmcscT0wOzM+cTtxKyspe3ZhciBuPXRoaXMua2V5VHlwZXNbcV0sXG50PWwucHJldktleVtuXSxyPWwubmV4dEtleVtuXTtpZigwPHRoaXMudGltZVNjYWxlJiZyLnRpbWU8PXRoaXMuY3VycmVudFRpbWV8fDA+dGhpcy50aW1lU2NhbGUmJnQudGltZT49dGhpcy5jdXJyZW50VGltZSl7dD10aGlzLmRhdGEuaGllcmFyY2h5W2ZdLmtleXNbMF07Zm9yKHI9dGhpcy5nZXROZXh0S2V5V2l0aChuLGYsMSk7ci50aW1lPHRoaXMuY3VycmVudFRpbWUmJnIuaW5kZXg+dC5pbmRleDspdD1yLHI9dGhpcy5nZXROZXh0S2V5V2l0aChuLGYsci5pbmRleCsxKTtsLnByZXZLZXlbbl09dDtsLm5leHRLZXlbbl09cn12YXIgcz0odGhpcy5jdXJyZW50VGltZS10LnRpbWUpLyhyLnRpbWUtdC50aW1lKSx1PXRbbl0sdj1yW25dOzA+cyYmKHM9MCk7MTxzJiYocz0xKTtpZihcInBvc1wiPT09bilpZih0aGlzLmludGVycG9sYXRpb25UeXBlPT09VEhSRUUuQW5pbWF0aW9uSGFuZGxlci5MSU5FQVIpYy54PXVbMF0rKHZbMF0tdVswXSkqcyxjLnk9dVsxXSsodlsxXS11WzFdKSpzLFxuYy56PXVbMl0rKHZbMl0tdVsyXSkqcyx0PXRoaXMud2VpZ2h0Lyh0aGlzLndlaWdodCtwLnBvc2l0aW9uV2VpZ2h0KSxrLnBvc2l0aW9uLmxlcnAoYyx0KSxwLnBvc2l0aW9uV2VpZ2h0Kz10aGlzLndlaWdodDtlbHNle2lmKHRoaXMuaW50ZXJwb2xhdGlvblR5cGU9PT1USFJFRS5BbmltYXRpb25IYW5kbGVyLkNBVE1VTExST018fHRoaXMuaW50ZXJwb2xhdGlvblR5cGU9PT1USFJFRS5BbmltYXRpb25IYW5kbGVyLkNBVE1VTExST01fRk9SV0FSRClhWzBdPXRoaXMuZ2V0UHJldktleVdpdGgoXCJwb3NcIixmLHQuaW5kZXgtMSkucG9zLGFbMV09dSxhWzJdPXYsYVszXT10aGlzLmdldE5leHRLZXlXaXRoKFwicG9zXCIsZixyLmluZGV4KzEpLnBvcyxzPS4zMypzKy4zMyxyPWUoYSxzKSx0PXRoaXMud2VpZ2h0Lyh0aGlzLndlaWdodCtwLnBvc2l0aW9uV2VpZ2h0KSxwLnBvc2l0aW9uV2VpZ2h0Kz10aGlzLndlaWdodCxuPWsucG9zaXRpb24sbi54Kz0oclswXS1uLngpKnQsbi55Kz0oclsxXS1cbm4ueSkqdCxuLnorPShyWzJdLW4ueikqdCx0aGlzLmludGVycG9sYXRpb25UeXBlPT09VEhSRUUuQW5pbWF0aW9uSGFuZGxlci5DQVRNVUxMUk9NX0ZPUldBUkQmJihzPWUoYSwxLjAxKnMpLGIuc2V0KHNbMF0sc1sxXSxzWzJdKSxiLnN1YihuKSxiLnk9MCxiLm5vcm1hbGl6ZSgpLHM9TWF0aC5hdGFuMihiLngsYi56KSxrLnJvdGF0aW9uLnNldCgwLHMsMCkpfWVsc2VcInJvdFwiPT09bj8oVEhSRUUuUXVhdGVybmlvbi5zbGVycCh1LHYsZCxzKSwwPT09cC5xdWF0ZXJuaW9uV2VpZ2h0PyhrLnF1YXRlcm5pb24uY29weShkKSxwLnF1YXRlcm5pb25XZWlnaHQ9dGhpcy53ZWlnaHQpOih0PXRoaXMud2VpZ2h0Lyh0aGlzLndlaWdodCtwLnF1YXRlcm5pb25XZWlnaHQpLFRIUkVFLlF1YXRlcm5pb24uc2xlcnAoay5xdWF0ZXJuaW9uLGQsay5xdWF0ZXJuaW9uLHQpLHAucXVhdGVybmlvbldlaWdodCs9dGhpcy53ZWlnaHQpKTpcInNjbFwiPT09biYmKGMueD11WzBdKyh2WzBdLXVbMF0pKnMsYy55PVxudVsxXSsodlsxXS11WzFdKSpzLGMuej11WzJdKyh2WzJdLXVbMl0pKnMsdD10aGlzLndlaWdodC8odGhpcy53ZWlnaHQrcC5zY2FsZVdlaWdodCksay5zY2FsZS5sZXJwKGMsdCkscC5zY2FsZVdlaWdodCs9dGhpcy53ZWlnaHQpfXJldHVybiEwfX19KCksZ2V0TmV4dEtleVdpdGg6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuZGF0YS5oaWVyYXJjaHlbYl0ua2V5cztmb3IoYz10aGlzLmludGVycG9sYXRpb25UeXBlPT09VEhSRUUuQW5pbWF0aW9uSGFuZGxlci5DQVRNVUxMUk9NfHx0aGlzLmludGVycG9sYXRpb25UeXBlPT09VEhSRUUuQW5pbWF0aW9uSGFuZGxlci5DQVRNVUxMUk9NX0ZPUldBUkQ/YzxkLmxlbmd0aC0xP2M6ZC5sZW5ndGgtMTpjJWQubGVuZ3RoO2M8ZC5sZW5ndGg7YysrKWlmKHZvaWQgMCE9PWRbY11bYV0pcmV0dXJuIGRbY107cmV0dXJuIHRoaXMuZGF0YS5oaWVyYXJjaHlbYl0ua2V5c1swXX0sZ2V0UHJldktleVdpdGg6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPVxudGhpcy5kYXRhLmhpZXJhcmNoeVtiXS5rZXlzO2ZvcihjPXRoaXMuaW50ZXJwb2xhdGlvblR5cGU9PT1USFJFRS5BbmltYXRpb25IYW5kbGVyLkNBVE1VTExST018fHRoaXMuaW50ZXJwb2xhdGlvblR5cGU9PT1USFJFRS5BbmltYXRpb25IYW5kbGVyLkNBVE1VTExST01fRk9SV0FSRD8wPGM/YzowOjA8PWM/YzpjK2QubGVuZ3RoOzA8PWM7Yy0tKWlmKHZvaWQgMCE9PWRbY11bYV0pcmV0dXJuIGRbY107cmV0dXJuIHRoaXMuZGF0YS5oaWVyYXJjaHlbYl0ua2V5c1tkLmxlbmd0aC0xXX19O1xuVEhSRUUuS2V5RnJhbWVBbmltYXRpb249ZnVuY3Rpb24oYSl7dGhpcy5yb290PWEubm9kZTt0aGlzLmRhdGE9VEhSRUUuQW5pbWF0aW9uSGFuZGxlci5pbml0KGEpO3RoaXMuaGllcmFyY2h5PVRIUkVFLkFuaW1hdGlvbkhhbmRsZXIucGFyc2UodGhpcy5yb290KTt0aGlzLmN1cnJlbnRUaW1lPTA7dGhpcy50aW1lU2NhbGU9LjAwMTt0aGlzLmlzUGxheWluZz0hMTt0aGlzLmxvb3A9dGhpcy5pc1BhdXNlZD0hMDthPTA7Zm9yKHZhciBiPXRoaXMuaGllcmFyY2h5Lmxlbmd0aDthPGI7YSsrKXt2YXIgYz10aGlzLmRhdGEuaGllcmFyY2h5W2FdLnNpZHMsZD10aGlzLmhpZXJhcmNoeVthXTtpZih0aGlzLmRhdGEuaGllcmFyY2h5W2FdLmtleXMubGVuZ3RoJiZjKXtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyl7dmFyIGY9Y1tlXSxnPXRoaXMuZ2V0TmV4dEtleVdpdGgoZixhLDApO2cmJmcuYXBwbHkoZil9ZC5tYXRyaXhBdXRvVXBkYXRlPSExO3RoaXMuZGF0YS5oaWVyYXJjaHlbYV0ubm9kZS51cGRhdGVNYXRyaXgoKTtcbmQubWF0cml4V29ybGROZWVkc1VwZGF0ZT0hMH19fTtcblRIUkVFLktleUZyYW1lQW5pbWF0aW9uLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VEhSRUUuS2V5RnJhbWVBbmltYXRpb24scGxheTpmdW5jdGlvbihhKXt0aGlzLmN1cnJlbnRUaW1lPXZvaWQgMCE9PWE/YTowO2lmKCExPT09dGhpcy5pc1BsYXlpbmcpe3RoaXMuaXNQbGF5aW5nPSEwO3ZhciBiPXRoaXMuaGllcmFyY2h5Lmxlbmd0aCxjLGQ7Zm9yKGE9MDthPGI7YSsrKWM9dGhpcy5oaWVyYXJjaHlbYV0sZD10aGlzLmRhdGEuaGllcmFyY2h5W2FdLHZvaWQgMD09PWQuYW5pbWF0aW9uQ2FjaGUmJihkLmFuaW1hdGlvbkNhY2hlPXt9LGQuYW5pbWF0aW9uQ2FjaGUucHJldktleT1udWxsLGQuYW5pbWF0aW9uQ2FjaGUubmV4dEtleT1udWxsLGQuYW5pbWF0aW9uQ2FjaGUub3JpZ2luYWxNYXRyaXg9Yy5tYXRyaXgpLGM9dGhpcy5kYXRhLmhpZXJhcmNoeVthXS5rZXlzLGMubGVuZ3RoJiYoZC5hbmltYXRpb25DYWNoZS5wcmV2S2V5PWNbMF0sZC5hbmltYXRpb25DYWNoZS5uZXh0S2V5PVxuY1sxXSx0aGlzLnN0YXJ0VGltZT1NYXRoLm1pbihjWzBdLnRpbWUsdGhpcy5zdGFydFRpbWUpLHRoaXMuZW5kVGltZT1NYXRoLm1heChjW2MubGVuZ3RoLTFdLnRpbWUsdGhpcy5lbmRUaW1lKSk7dGhpcy51cGRhdGUoMCl9dGhpcy5pc1BhdXNlZD0hMTtUSFJFRS5BbmltYXRpb25IYW5kbGVyLnBsYXkodGhpcyl9LHN0b3A6ZnVuY3Rpb24oKXt0aGlzLmlzUGF1c2VkPXRoaXMuaXNQbGF5aW5nPSExO1RIUkVFLkFuaW1hdGlvbkhhbmRsZXIuc3RvcCh0aGlzKTtmb3IodmFyIGE9MDthPHRoaXMuZGF0YS5oaWVyYXJjaHkubGVuZ3RoO2ErKyl7dmFyIGI9dGhpcy5oaWVyYXJjaHlbYV0sYz10aGlzLmRhdGEuaGllcmFyY2h5W2FdO2lmKHZvaWQgMCE9PWMuYW5pbWF0aW9uQ2FjaGUpe3ZhciBkPWMuYW5pbWF0aW9uQ2FjaGUub3JpZ2luYWxNYXRyaXg7ZC5jb3B5KGIubWF0cml4KTtiLm1hdHJpeD1kO2RlbGV0ZSBjLmFuaW1hdGlvbkNhY2hlfX19LHVwZGF0ZTpmdW5jdGlvbihhKXtpZighMSE9PVxudGhpcy5pc1BsYXlpbmcpe3RoaXMuY3VycmVudFRpbWUrPWEqdGhpcy50aW1lU2NhbGU7YT10aGlzLmRhdGEubGVuZ3RoOyEwPT09dGhpcy5sb29wJiZ0aGlzLmN1cnJlbnRUaW1lPmEmJih0aGlzLmN1cnJlbnRUaW1lJT1hKTt0aGlzLmN1cnJlbnRUaW1lPU1hdGgubWluKHRoaXMuY3VycmVudFRpbWUsYSk7YT0wO2Zvcih2YXIgYj10aGlzLmhpZXJhcmNoeS5sZW5ndGg7YTxiO2ErKyl7dmFyIGM9dGhpcy5oaWVyYXJjaHlbYV0sZD10aGlzLmRhdGEuaGllcmFyY2h5W2FdLGU9ZC5rZXlzLGQ9ZC5hbmltYXRpb25DYWNoZTtpZihlLmxlbmd0aCl7dmFyIGY9ZC5wcmV2S2V5LGc9ZC5uZXh0S2V5O2lmKGcudGltZTw9dGhpcy5jdXJyZW50VGltZSl7Zm9yKDtnLnRpbWU8dGhpcy5jdXJyZW50VGltZSYmZy5pbmRleD5mLmluZGV4OylmPWcsZz1lW2YuaW5kZXgrMV07ZC5wcmV2S2V5PWY7ZC5uZXh0S2V5PWd9Zy50aW1lPj10aGlzLmN1cnJlbnRUaW1lP2YuaW50ZXJwb2xhdGUoZyx0aGlzLmN1cnJlbnRUaW1lKTpcbmYuaW50ZXJwb2xhdGUoZyxnLnRpbWUpO3RoaXMuZGF0YS5oaWVyYXJjaHlbYV0ubm9kZS51cGRhdGVNYXRyaXgoKTtjLm1hdHJpeFdvcmxkTmVlZHNVcGRhdGU9ITB9fX19LGdldE5leHRLZXlXaXRoOmZ1bmN0aW9uKGEsYixjKXtiPXRoaXMuZGF0YS5oaWVyYXJjaHlbYl0ua2V5cztmb3IoYyU9Yi5sZW5ndGg7YzxiLmxlbmd0aDtjKyspaWYoYltjXS5oYXNUYXJnZXQoYSkpcmV0dXJuIGJbY107cmV0dXJuIGJbMF19LGdldFByZXZLZXlXaXRoOmZ1bmN0aW9uKGEsYixjKXtiPXRoaXMuZGF0YS5oaWVyYXJjaHlbYl0ua2V5cztmb3IoYz0wPD1jP2M6YytiLmxlbmd0aDswPD1jO2MtLSlpZihiW2NdLmhhc1RhcmdldChhKSlyZXR1cm4gYltjXTtyZXR1cm4gYltiLmxlbmd0aC0xXX19O1xuVEhSRUUuTW9ycGhBbmltYXRpb249ZnVuY3Rpb24oYSl7dGhpcy5tZXNoPWE7dGhpcy5mcmFtZXM9YS5tb3JwaFRhcmdldEluZmx1ZW5jZXMubGVuZ3RoO3RoaXMuY3VycmVudFRpbWU9MDt0aGlzLmR1cmF0aW9uPTFFMzt0aGlzLmxvb3A9ITA7dGhpcy5jdXJyZW50RnJhbWU9dGhpcy5sYXN0RnJhbWU9MDt0aGlzLmlzUGxheWluZz0hMX07XG5USFJFRS5Nb3JwaEFuaW1hdGlvbi5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOlRIUkVFLk1vcnBoQW5pbWF0aW9uLHBsYXk6ZnVuY3Rpb24oKXt0aGlzLmlzUGxheWluZz0hMH0scGF1c2U6ZnVuY3Rpb24oKXt0aGlzLmlzUGxheWluZz0hMX0sdXBkYXRlOmZ1bmN0aW9uKGEpe2lmKCExIT09dGhpcy5pc1BsYXlpbmcpe3RoaXMuY3VycmVudFRpbWUrPWE7ITA9PT10aGlzLmxvb3AmJnRoaXMuY3VycmVudFRpbWU+dGhpcy5kdXJhdGlvbiYmKHRoaXMuY3VycmVudFRpbWUlPXRoaXMuZHVyYXRpb24pO3RoaXMuY3VycmVudFRpbWU9TWF0aC5taW4odGhpcy5jdXJyZW50VGltZSx0aGlzLmR1cmF0aW9uKTthPXRoaXMuZHVyYXRpb24vdGhpcy5mcmFtZXM7dmFyIGI9TWF0aC5mbG9vcih0aGlzLmN1cnJlbnRUaW1lL2EpLGM9dGhpcy5tZXNoLm1vcnBoVGFyZ2V0SW5mbHVlbmNlcztiIT10aGlzLmN1cnJlbnRGcmFtZSYmKGNbdGhpcy5sYXN0RnJhbWVdPTAsY1t0aGlzLmN1cnJlbnRGcmFtZV09XG4xLGNbYl09MCx0aGlzLmxhc3RGcmFtZT10aGlzLmN1cnJlbnRGcmFtZSx0aGlzLmN1cnJlbnRGcmFtZT1iKTtjW2JdPXRoaXMuY3VycmVudFRpbWUlYS9hO2NbdGhpcy5sYXN0RnJhbWVdPTEtY1tiXX19fTtcblRIUkVFLkJveEdlb21ldHJ5PWZ1bmN0aW9uKGEsYixjLGQsZSxmKXtmdW5jdGlvbiBnKGEsYixjLGQsZSxmLGcscyl7dmFyIHUsdj1oLndpZHRoU2VnbWVudHMseD1oLmhlaWdodFNlZ21lbnRzLEQ9ZS8yLHc9Zi8yLHk9aC52ZXJ0aWNlcy5sZW5ndGg7aWYoXCJ4XCI9PT1hJiZcInlcIj09PWJ8fFwieVwiPT09YSYmXCJ4XCI9PT1iKXU9XCJ6XCI7ZWxzZSBpZihcInhcIj09PWEmJlwielwiPT09Ynx8XCJ6XCI9PT1hJiZcInhcIj09PWIpdT1cInlcIix4PWguZGVwdGhTZWdtZW50cztlbHNlIGlmKFwielwiPT09YSYmXCJ5XCI9PT1ifHxcInlcIj09PWEmJlwielwiPT09Yil1PVwieFwiLHY9aC5kZXB0aFNlZ21lbnRzO3ZhciBBPXYrMSxFPXgrMSxHPWUvdixGPWYveCx6PW5ldyBUSFJFRS5WZWN0b3IzO3pbdV09MDxnPzE6LTE7Zm9yKGU9MDtlPEU7ZSsrKWZvcihmPTA7ZjxBO2YrKyl7dmFyIEk9bmV3IFRIUkVFLlZlY3RvcjM7SVthXT0oZipHLUQpKmM7SVtiXT0oZSpGLXcpKmQ7SVt1XT1nO2gudmVydGljZXMucHVzaChJKX1mb3IoZT1cbjA7ZTx4O2UrKylmb3IoZj0wO2Y8djtmKyspdz1mK0EqZSxhPWYrQSooZSsxKSxiPWYrMStBKihlKzEpLGM9ZisxK0EqZSxkPW5ldyBUSFJFRS5WZWN0b3IyKGYvdiwxLWUveCksZz1uZXcgVEhSRUUuVmVjdG9yMihmL3YsMS0oZSsxKS94KSx1PW5ldyBUSFJFRS5WZWN0b3IyKChmKzEpL3YsMS0oZSsxKS94KSxEPW5ldyBUSFJFRS5WZWN0b3IyKChmKzEpL3YsMS1lL3gpLHc9bmV3IFRIUkVFLkZhY2UzKHcreSxhK3ksYyt5KSx3Lm5vcm1hbC5jb3B5KHopLHcudmVydGV4Tm9ybWFscy5wdXNoKHouY2xvbmUoKSx6LmNsb25lKCksei5jbG9uZSgpKSx3Lm1hdGVyaWFsSW5kZXg9cyxoLmZhY2VzLnB1c2godyksaC5mYWNlVmVydGV4VXZzWzBdLnB1c2goW2QsZyxEXSksdz1uZXcgVEhSRUUuRmFjZTMoYSt5LGIreSxjK3kpLHcubm9ybWFsLmNvcHkoeiksdy52ZXJ0ZXhOb3JtYWxzLnB1c2goei5jbG9uZSgpLHouY2xvbmUoKSx6LmNsb25lKCkpLHcubWF0ZXJpYWxJbmRleD1zLGguZmFjZXMucHVzaCh3KSxcbmguZmFjZVZlcnRleFV2c1swXS5wdXNoKFtnLmNsb25lKCksdSxELmNsb25lKCldKX1USFJFRS5HZW9tZXRyeS5jYWxsKHRoaXMpO3RoaXMudHlwZT1cIkJveEdlb21ldHJ5XCI7dGhpcy5wYXJhbWV0ZXJzPXt3aWR0aDphLGhlaWdodDpiLGRlcHRoOmMsd2lkdGhTZWdtZW50czpkLGhlaWdodFNlZ21lbnRzOmUsZGVwdGhTZWdtZW50czpmfTt0aGlzLndpZHRoU2VnbWVudHM9ZHx8MTt0aGlzLmhlaWdodFNlZ21lbnRzPWV8fDE7dGhpcy5kZXB0aFNlZ21lbnRzPWZ8fDE7dmFyIGg9dGhpcztkPWEvMjtlPWIvMjtmPWMvMjtnKFwielwiLFwieVwiLC0xLC0xLGMsYixkLDApO2coXCJ6XCIsXCJ5XCIsMSwtMSxjLGIsLWQsMSk7ZyhcInhcIixcInpcIiwxLDEsYSxjLGUsMik7ZyhcInhcIixcInpcIiwxLC0xLGEsYywtZSwzKTtnKFwieFwiLFwieVwiLDEsLTEsYSxiLGYsNCk7ZyhcInhcIixcInlcIiwtMSwtMSxhLGIsLWYsNSk7dGhpcy5tZXJnZVZlcnRpY2VzKCl9O1RIUkVFLkJveEdlb21ldHJ5LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkdlb21ldHJ5LnByb3RvdHlwZSk7XG5USFJFRS5Cb3hHZW9tZXRyeS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuQm94R2VvbWV0cnk7XG5USFJFRS5DaXJjbGVHZW9tZXRyeT1mdW5jdGlvbihhLGIsYyxkKXtUSFJFRS5HZW9tZXRyeS5jYWxsKHRoaXMpO3RoaXMudHlwZT1cIkNpcmNsZUdlb21ldHJ5XCI7dGhpcy5wYXJhbWV0ZXJzPXtyYWRpdXM6YSxzZWdtZW50czpiLHRoZXRhU3RhcnQ6Yyx0aGV0YUxlbmd0aDpkfTthPWF8fDUwO2I9dm9pZCAwIT09Yj9NYXRoLm1heCgzLGIpOjg7Yz12b2lkIDAhPT1jP2M6MDtkPXZvaWQgMCE9PWQ/ZDoyKk1hdGguUEk7dmFyIGUsZj1bXTtlPW5ldyBUSFJFRS5WZWN0b3IzO3ZhciBnPW5ldyBUSFJFRS5WZWN0b3IyKC41LC41KTt0aGlzLnZlcnRpY2VzLnB1c2goZSk7Zi5wdXNoKGcpO2ZvcihlPTA7ZTw9YjtlKyspe3ZhciBoPW5ldyBUSFJFRS5WZWN0b3IzLGs9YytlL2IqZDtoLng9YSpNYXRoLmNvcyhrKTtoLnk9YSpNYXRoLnNpbihrKTt0aGlzLnZlcnRpY2VzLnB1c2goaCk7Zi5wdXNoKG5ldyBUSFJFRS5WZWN0b3IyKChoLngvYSsxKS8yLChoLnkvYSsxKS8yKSl9Yz1uZXcgVEhSRUUuVmVjdG9yMygwLFxuMCwxKTtmb3IoZT0xO2U8PWI7ZSsrKXRoaXMuZmFjZXMucHVzaChuZXcgVEhSRUUuRmFjZTMoZSxlKzEsMCxbYy5jbG9uZSgpLGMuY2xvbmUoKSxjLmNsb25lKCldKSksdGhpcy5mYWNlVmVydGV4VXZzWzBdLnB1c2goW2ZbZV0uY2xvbmUoKSxmW2UrMV0uY2xvbmUoKSxnLmNsb25lKCldKTt0aGlzLmNvbXB1dGVGYWNlTm9ybWFscygpO3RoaXMuYm91bmRpbmdTcGhlcmU9bmV3IFRIUkVFLlNwaGVyZShuZXcgVEhSRUUuVmVjdG9yMyxhKX07VEhSRUUuQ2lyY2xlR2VvbWV0cnkucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuR2VvbWV0cnkucHJvdG90eXBlKTtUSFJFRS5DaXJjbGVHZW9tZXRyeS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuQ2lyY2xlR2VvbWV0cnk7XG5USFJFRS5DdWJlR2VvbWV0cnk9ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe1RIUkVFLndhcm4oXCJUSFJFRS5DdWJlR2VvbWV0cnkgaGFzIGJlZW4gcmVuYW1lZCB0byBUSFJFRS5Cb3hHZW9tZXRyeS5cIik7cmV0dXJuIG5ldyBUSFJFRS5Cb3hHZW9tZXRyeShhLGIsYyxkLGUsZil9O1xuVEhSRUUuQ3lsaW5kZXJHZW9tZXRyeT1mdW5jdGlvbihhLGIsYyxkLGUsZixnLGgpe1RIUkVFLkdlb21ldHJ5LmNhbGwodGhpcyk7dGhpcy50eXBlPVwiQ3lsaW5kZXJHZW9tZXRyeVwiO3RoaXMucGFyYW1ldGVycz17cmFkaXVzVG9wOmEscmFkaXVzQm90dG9tOmIsaGVpZ2h0OmMscmFkaWFsU2VnbWVudHM6ZCxoZWlnaHRTZWdtZW50czplLG9wZW5FbmRlZDpmLHRoZXRhU3RhcnQ6Zyx0aGV0YUxlbmd0aDpofTthPXZvaWQgMCE9PWE/YToyMDtiPXZvaWQgMCE9PWI/YjoyMDtjPXZvaWQgMCE9PWM/YzoxMDA7ZD1kfHw4O2U9ZXx8MTtmPXZvaWQgMCE9PWY/ZjohMTtnPXZvaWQgMCE9PWc/ZzowO2g9dm9pZCAwIT09aD9oOjIqTWF0aC5QSTt2YXIgaz1jLzIsbCxwLHE9W10sbj1bXTtmb3IocD0wO3A8PWU7cCsrKXt2YXIgdD1bXSxyPVtdLHM9cC9lLHU9cyooYi1hKSthO2ZvcihsPTA7bDw9ZDtsKyspe3ZhciB2PWwvZCx4PW5ldyBUSFJFRS5WZWN0b3IzO3gueD11Kk1hdGguc2luKHYqaCtcbmcpO3gueT0tcypjK2s7eC56PXUqTWF0aC5jb3ModipoK2cpO3RoaXMudmVydGljZXMucHVzaCh4KTt0LnB1c2godGhpcy52ZXJ0aWNlcy5sZW5ndGgtMSk7ci5wdXNoKG5ldyBUSFJFRS5WZWN0b3IyKHYsMS1zKSl9cS5wdXNoKHQpO24ucHVzaChyKX1jPShiLWEpL2M7Zm9yKGw9MDtsPGQ7bCsrKWZvcigwIT09YT8oZz10aGlzLnZlcnRpY2VzW3FbMF1bbF1dLmNsb25lKCksaD10aGlzLnZlcnRpY2VzW3FbMF1bbCsxXV0uY2xvbmUoKSk6KGc9dGhpcy52ZXJ0aWNlc1txWzFdW2xdXS5jbG9uZSgpLGg9dGhpcy52ZXJ0aWNlc1txWzFdW2wrMV1dLmNsb25lKCkpLGcuc2V0WShNYXRoLnNxcnQoZy54KmcueCtnLnoqZy56KSpjKS5ub3JtYWxpemUoKSxoLnNldFkoTWF0aC5zcXJ0KGgueCpoLngraC56KmgueikqYykubm9ybWFsaXplKCkscD0wO3A8ZTtwKyspe3ZhciB0PXFbcF1bbF0scj1xW3ArMV1bbF0scz1xW3ArMV1bbCsxXSx1PXFbcF1bbCsxXSx2PWcuY2xvbmUoKSx4PWcuY2xvbmUoKSxcbkQ9aC5jbG9uZSgpLHc9aC5jbG9uZSgpLHk9bltwXVtsXS5jbG9uZSgpLEE9bltwKzFdW2xdLmNsb25lKCksRT1uW3ArMV1bbCsxXS5jbG9uZSgpLEc9bltwXVtsKzFdLmNsb25lKCk7dGhpcy5mYWNlcy5wdXNoKG5ldyBUSFJFRS5GYWNlMyh0LHIsdSxbdix4LHddKSk7dGhpcy5mYWNlVmVydGV4VXZzWzBdLnB1c2goW3ksQSxHXSk7dGhpcy5mYWNlcy5wdXNoKG5ldyBUSFJFRS5GYWNlMyhyLHMsdSxbeC5jbG9uZSgpLEQsdy5jbG9uZSgpXSkpO3RoaXMuZmFjZVZlcnRleFV2c1swXS5wdXNoKFtBLmNsb25lKCksRSxHLmNsb25lKCldKX1pZighMT09PWYmJjA8YSlmb3IodGhpcy52ZXJ0aWNlcy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IzKDAsaywwKSksbD0wO2w8ZDtsKyspdD1xWzBdW2xdLHI9cVswXVtsKzFdLHM9dGhpcy52ZXJ0aWNlcy5sZW5ndGgtMSx2PW5ldyBUSFJFRS5WZWN0b3IzKDAsMSwwKSx4PW5ldyBUSFJFRS5WZWN0b3IzKDAsMSwwKSxEPW5ldyBUSFJFRS5WZWN0b3IzKDAsXG4xLDApLHk9blswXVtsXS5jbG9uZSgpLEE9blswXVtsKzFdLmNsb25lKCksRT1uZXcgVEhSRUUuVmVjdG9yMihBLngsMCksdGhpcy5mYWNlcy5wdXNoKG5ldyBUSFJFRS5GYWNlMyh0LHIscyxbdix4LERdKSksdGhpcy5mYWNlVmVydGV4VXZzWzBdLnB1c2goW3ksQSxFXSk7aWYoITE9PT1mJiYwPGIpZm9yKHRoaXMudmVydGljZXMucHVzaChuZXcgVEhSRUUuVmVjdG9yMygwLC1rLDApKSxsPTA7bDxkO2wrKyl0PXFbZV1bbCsxXSxyPXFbZV1bbF0scz10aGlzLnZlcnRpY2VzLmxlbmd0aC0xLHY9bmV3IFRIUkVFLlZlY3RvcjMoMCwtMSwwKSx4PW5ldyBUSFJFRS5WZWN0b3IzKDAsLTEsMCksRD1uZXcgVEhSRUUuVmVjdG9yMygwLC0xLDApLHk9bltlXVtsKzFdLmNsb25lKCksQT1uW2VdW2xdLmNsb25lKCksRT1uZXcgVEhSRUUuVmVjdG9yMihBLngsMSksdGhpcy5mYWNlcy5wdXNoKG5ldyBUSFJFRS5GYWNlMyh0LHIscyxbdix4LERdKSksdGhpcy5mYWNlVmVydGV4VXZzWzBdLnB1c2goW3ksXG5BLEVdKTt0aGlzLmNvbXB1dGVGYWNlTm9ybWFscygpfTtUSFJFRS5DeWxpbmRlckdlb21ldHJ5LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkdlb21ldHJ5LnByb3RvdHlwZSk7VEhSRUUuQ3lsaW5kZXJHZW9tZXRyeS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuQ3lsaW5kZXJHZW9tZXRyeTtUSFJFRS5FeHRydWRlR2VvbWV0cnk9ZnVuY3Rpb24oYSxiKXtcInVuZGVmaW5lZFwiIT09dHlwZW9mIGEmJihUSFJFRS5HZW9tZXRyeS5jYWxsKHRoaXMpLHRoaXMudHlwZT1cIkV4dHJ1ZGVHZW9tZXRyeVwiLGE9YSBpbnN0YW5jZW9mIEFycmF5P2E6W2FdLHRoaXMuYWRkU2hhcGVMaXN0KGEsYiksdGhpcy5jb21wdXRlRmFjZU5vcm1hbHMoKSl9O1RIUkVFLkV4dHJ1ZGVHZW9tZXRyeS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5HZW9tZXRyeS5wcm90b3R5cGUpO1RIUkVFLkV4dHJ1ZGVHZW9tZXRyeS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuRXh0cnVkZUdlb21ldHJ5O1xuVEhSRUUuRXh0cnVkZUdlb21ldHJ5LnByb3RvdHlwZS5hZGRTaGFwZUxpc3Q9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9YS5sZW5ndGgsZD0wO2Q8YztkKyspdGhpcy5hZGRTaGFwZShhW2RdLGIpfTtcblRIUkVFLkV4dHJ1ZGVHZW9tZXRyeS5wcm90b3R5cGUuYWRkU2hhcGU9ZnVuY3Rpb24oYSxiKXtmdW5jdGlvbiBjKGEsYixjKXtifHxUSFJFRS5lcnJvcihcIlRIUkVFLkV4dHJ1ZGVHZW9tZXRyeTogdmVjIGRvZXMgbm90IGV4aXN0XCIpO3JldHVybiBiLmNsb25lKCkubXVsdGlwbHlTY2FsYXIoYykuYWRkKGEpfWZ1bmN0aW9uIGQoYSxiLGMpe3ZhciBkPTEsZD1hLngtYi54LGU9YS55LWIueSxmPWMueC1hLngsZz1jLnktYS55LGg9ZCpkK2UqZTtpZigxRS0xMDxNYXRoLmFicyhkKmctZSpmKSl7dmFyIGs9TWF0aC5zcXJ0KGgpLGw9TWF0aC5zcXJ0KGYqZitnKmcpLGg9Yi54LWUvaztiPWIueStkL2s7Zj0oKGMueC1nL2wtaCkqZy0oYy55K2YvbC1iKSpmKS8oZCpnLWUqZik7Yz1oK2QqZi1hLng7YT1iK2UqZi1hLnk7ZD1jKmMrYSphO2lmKDI+PWQpcmV0dXJuIG5ldyBUSFJFRS5WZWN0b3IyKGMsYSk7ZD1NYXRoLnNxcnQoZC8yKX1lbHNlIGE9ITEsMUUtMTA8ZD8xRS0xMDxmJiYoYT0hMCk6XG4tMUUtMTA+ZD8tMUUtMTA+ZiYmKGE9ITApOk1hdGguc2lnbihlKT09TWF0aC5zaWduKGcpJiYoYT0hMCksYT8oYz0tZSxhPWQsZD1NYXRoLnNxcnQoaCkpOihjPWQsYT1lLGQ9TWF0aC5zcXJ0KGgvMikpO3JldHVybiBuZXcgVEhSRUUuVmVjdG9yMihjL2QsYS9kKX1mdW5jdGlvbiBlKGEsYil7dmFyIGMsZDtmb3IoTz1hLmxlbmd0aDswPD0tLU87KXtjPU87ZD1PLTE7MD5kJiYoZD1hLmxlbmd0aC0xKTtmb3IodmFyIGU9MCxmPXQrMipwLGU9MDtlPGY7ZSsrKXt2YXIgZz1vYSplLGg9b2EqKGUrMSksaz1iK2MrZyxnPWIrZCtnLGw9YitkK2gsaD1iK2MraCxrPWsrVSxnPWcrVSxsPWwrVSxoPWgrVTtJLmZhY2VzLnB1c2gobmV3IFRIUkVFLkZhY2UzKGssZyxoLG51bGwsbnVsbCx4KSk7SS5mYWNlcy5wdXNoKG5ldyBUSFJFRS5GYWNlMyhnLGwsaCxudWxsLG51bGwseCkpO2s9RC5nZW5lcmF0ZVNpZGVXYWxsVVYoSSxrLGcsbCxoKTtJLmZhY2VWZXJ0ZXhVdnNbMF0ucHVzaChba1swXSxcbmtbMV0sa1szXV0pO0kuZmFjZVZlcnRleFV2c1swXS5wdXNoKFtrWzFdLGtbMl0sa1szXV0pfX19ZnVuY3Rpb24gZihhLGIsYyl7SS52ZXJ0aWNlcy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IzKGEsYixjKSl9ZnVuY3Rpb24gZyhhLGIsYyl7YSs9VTtiKz1VO2MrPVU7SS5mYWNlcy5wdXNoKG5ldyBUSFJFRS5GYWNlMyhhLGIsYyxudWxsLG51bGwsdikpO2E9RC5nZW5lcmF0ZVRvcFVWKEksYSxiLGMpO0kuZmFjZVZlcnRleFV2c1swXS5wdXNoKGEpfXZhciBoPXZvaWQgMCE9PWIuYW1vdW50P2IuYW1vdW50OjEwMCxrPXZvaWQgMCE9PWIuYmV2ZWxUaGlja25lc3M/Yi5iZXZlbFRoaWNrbmVzczo2LGw9dm9pZCAwIT09Yi5iZXZlbFNpemU/Yi5iZXZlbFNpemU6ay0yLHA9dm9pZCAwIT09Yi5iZXZlbFNlZ21lbnRzP2IuYmV2ZWxTZWdtZW50czozLHE9dm9pZCAwIT09Yi5iZXZlbEVuYWJsZWQ/Yi5iZXZlbEVuYWJsZWQ6ITAsbj12b2lkIDAhPT1iLmN1cnZlU2VnbWVudHM/Yi5jdXJ2ZVNlZ21lbnRzOlxuMTIsdD12b2lkIDAhPT1iLnN0ZXBzP2Iuc3RlcHM6MSxyPWIuZXh0cnVkZVBhdGgscyx1PSExLHY9Yi5tYXRlcmlhbCx4PWIuZXh0cnVkZU1hdGVyaWFsLEQ9dm9pZCAwIT09Yi5VVkdlbmVyYXRvcj9iLlVWR2VuZXJhdG9yOlRIUkVFLkV4dHJ1ZGVHZW9tZXRyeS5Xb3JsZFVWR2VuZXJhdG9yLHcseSxBLEU7ciYmKHM9ci5nZXRTcGFjZWRQb2ludHModCksdT0hMCxxPSExLHc9dm9pZCAwIT09Yi5mcmFtZXM/Yi5mcmFtZXM6bmV3IFRIUkVFLlR1YmVHZW9tZXRyeS5GcmVuZXRGcmFtZXMocix0LCExKSx5PW5ldyBUSFJFRS5WZWN0b3IzLEE9bmV3IFRIUkVFLlZlY3RvcjMsRT1uZXcgVEhSRUUuVmVjdG9yMyk7cXx8KGw9az1wPTApO3ZhciBHLEYseixJPXRoaXMsVT10aGlzLnZlcnRpY2VzLmxlbmd0aCxyPWEuZXh0cmFjdFBvaW50cyhuKSxuPXIuc2hhcGUsTT1yLmhvbGVzO2lmKHI9IVRIUkVFLlNoYXBlLlV0aWxzLmlzQ2xvY2tXaXNlKG4pKXtuPW4ucmV2ZXJzZSgpO0Y9MDtmb3Ioej1cbk0ubGVuZ3RoO0Y8ejtGKyspRz1NW0ZdLFRIUkVFLlNoYXBlLlV0aWxzLmlzQ2xvY2tXaXNlKEcpJiYoTVtGXT1HLnJldmVyc2UoKSk7cj0hMX12YXIgSD1USFJFRS5TaGFwZS5VdGlscy50cmlhbmd1bGF0ZVNoYXBlKG4sTSksTD1uO0Y9MDtmb3Ioej1NLmxlbmd0aDtGPHo7RisrKUc9TVtGXSxuPW4uY29uY2F0KEcpO3ZhciBQLE4sUixWLEosb2E9bi5sZW5ndGgsamEsaGE9SC5sZW5ndGgscj1bXSxPPTA7Uj1MLmxlbmd0aDtQPVItMTtmb3IoTj1PKzE7TzxSO08rKyxQKyssTisrKVA9PT1SJiYoUD0wKSxOPT09UiYmKE49MCkscltPXT1kKExbT10sTFtQXSxMW05dKTt2YXIgY2E9W10sYmEscWE9ci5jb25jYXQoKTtGPTA7Zm9yKHo9TS5sZW5ndGg7Rjx6O0YrKyl7Rz1NW0ZdO2JhPVtdO089MDtSPUcubGVuZ3RoO1A9Ui0xO2ZvcihOPU8rMTtPPFI7TysrLFArKyxOKyspUD09PVImJihQPTApLE49PT1SJiYoTj0wKSxiYVtPXT1kKEdbT10sR1tQXSxHW05dKTtjYS5wdXNoKGJhKTtxYT1cbnFhLmNvbmNhdChiYSl9Zm9yKFA9MDtQPHA7UCsrKXtSPVAvcDtWPWsqKDEtUik7Tj1sKk1hdGguc2luKFIqTWF0aC5QSS8yKTtPPTA7Zm9yKFI9TC5sZW5ndGg7TzxSO08rKylKPWMoTFtPXSxyW09dLE4pLGYoSi54LEoueSwtVik7Rj0wO2Zvcih6PU0ubGVuZ3RoO0Y8ejtGKyspZm9yKEc9TVtGXSxiYT1jYVtGXSxPPTAsUj1HLmxlbmd0aDtPPFI7TysrKUo9YyhHW09dLGJhW09dLE4pLGYoSi54LEoueSwtVil9Tj1sO2ZvcihPPTA7TzxvYTtPKyspSj1xP2MobltPXSxxYVtPXSxOKTpuW09dLHU/KEEuY29weSh3Lm5vcm1hbHNbMF0pLm11bHRpcGx5U2NhbGFyKEoueCkseS5jb3B5KHcuYmlub3JtYWxzWzBdKS5tdWx0aXBseVNjYWxhcihKLnkpLEUuY29weShzWzBdKS5hZGQoQSkuYWRkKHkpLGYoRS54LEUueSxFLnopKTpmKEoueCxKLnksMCk7Zm9yKFI9MTtSPD10O1IrKylmb3IoTz0wO088b2E7TysrKUo9cT9jKG5bT10scWFbT10sTik6bltPXSx1PyhBLmNvcHkody5ub3JtYWxzW1JdKS5tdWx0aXBseVNjYWxhcihKLngpLFxueS5jb3B5KHcuYmlub3JtYWxzW1JdKS5tdWx0aXBseVNjYWxhcihKLnkpLEUuY29weShzW1JdKS5hZGQoQSkuYWRkKHkpLGYoRS54LEUueSxFLnopKTpmKEoueCxKLnksaC90KlIpO2ZvcihQPXAtMTswPD1QO1AtLSl7Uj1QL3A7Vj1rKigxLVIpO049bCpNYXRoLnNpbihSKk1hdGguUEkvMik7Tz0wO2ZvcihSPUwubGVuZ3RoO088UjtPKyspSj1jKExbT10scltPXSxOKSxmKEoueCxKLnksaCtWKTtGPTA7Zm9yKHo9TS5sZW5ndGg7Rjx6O0YrKylmb3IoRz1NW0ZdLGJhPWNhW0ZdLE89MCxSPUcubGVuZ3RoO088UjtPKyspSj1jKEdbT10sYmFbT10sTiksdT9mKEoueCxKLnkrc1t0LTFdLnksc1t0LTFdLngrVik6ZihKLngsSi55LGgrVil9KGZ1bmN0aW9uKCl7aWYocSl7dmFyIGE7YT0wKm9hO2ZvcihPPTA7TzxoYTtPKyspamE9SFtPXSxnKGphWzJdK2EsamFbMV0rYSxqYVswXSthKTthPXQrMipwO2EqPW9hO2ZvcihPPTA7TzxoYTtPKyspamE9SFtPXSxnKGphWzBdK2EsamFbMV0rYSxqYVsyXStcbmEpfWVsc2V7Zm9yKE89MDtPPGhhO08rKylqYT1IW09dLGcoamFbMl0samFbMV0samFbMF0pO2ZvcihPPTA7TzxoYTtPKyspamE9SFtPXSxnKGphWzBdK29hKnQsamFbMV0rb2EqdCxqYVsyXStvYSp0KX19KSgpOyhmdW5jdGlvbigpe3ZhciBhPTA7ZShMLGEpO2ErPUwubGVuZ3RoO0Y9MDtmb3Ioej1NLmxlbmd0aDtGPHo7RisrKUc9TVtGXSxlKEcsYSksYSs9Ry5sZW5ndGh9KSgpfTtcblRIUkVFLkV4dHJ1ZGVHZW9tZXRyeS5Xb3JsZFVWR2VuZXJhdG9yPXtnZW5lcmF0ZVRvcFVWOmZ1bmN0aW9uKGEsYixjLGQpe2E9YS52ZXJ0aWNlcztiPWFbYl07Yz1hW2NdO2Q9YVtkXTtyZXR1cm5bbmV3IFRIUkVFLlZlY3RvcjIoYi54LGIueSksbmV3IFRIUkVFLlZlY3RvcjIoYy54LGMueSksbmV3IFRIUkVFLlZlY3RvcjIoZC54LGQueSldfSxnZW5lcmF0ZVNpZGVXYWxsVVY6ZnVuY3Rpb24oYSxiLGMsZCxlKXthPWEudmVydGljZXM7Yj1hW2JdO2M9YVtjXTtkPWFbZF07ZT1hW2VdO3JldHVybi4wMT5NYXRoLmFicyhiLnktYy55KT9bbmV3IFRIUkVFLlZlY3RvcjIoYi54LDEtYi56KSxuZXcgVEhSRUUuVmVjdG9yMihjLngsMS1jLnopLG5ldyBUSFJFRS5WZWN0b3IyKGQueCwxLWQueiksbmV3IFRIUkVFLlZlY3RvcjIoZS54LDEtZS56KV06W25ldyBUSFJFRS5WZWN0b3IyKGIueSwxLWIueiksbmV3IFRIUkVFLlZlY3RvcjIoYy55LDEtYy56KSxuZXcgVEhSRUUuVmVjdG9yMihkLnksXG4xLWQueiksbmV3IFRIUkVFLlZlY3RvcjIoZS55LDEtZS56KV19fTtUSFJFRS5TaGFwZUdlb21ldHJ5PWZ1bmN0aW9uKGEsYil7VEhSRUUuR2VvbWV0cnkuY2FsbCh0aGlzKTt0aGlzLnR5cGU9XCJTaGFwZUdlb21ldHJ5XCI7ITE9PT1hIGluc3RhbmNlb2YgQXJyYXkmJihhPVthXSk7dGhpcy5hZGRTaGFwZUxpc3QoYSxiKTt0aGlzLmNvbXB1dGVGYWNlTm9ybWFscygpfTtUSFJFRS5TaGFwZUdlb21ldHJ5LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkdlb21ldHJ5LnByb3RvdHlwZSk7VEhSRUUuU2hhcGVHZW9tZXRyeS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuU2hhcGVHZW9tZXRyeTtUSFJFRS5TaGFwZUdlb21ldHJ5LnByb3RvdHlwZS5hZGRTaGFwZUxpc3Q9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MCxkPWEubGVuZ3RoO2M8ZDtjKyspdGhpcy5hZGRTaGFwZShhW2NdLGIpO3JldHVybiB0aGlzfTtcblRIUkVFLlNoYXBlR2VvbWV0cnkucHJvdG90eXBlLmFkZFNoYXBlPWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9e30pO3ZhciBjPWIubWF0ZXJpYWwsZD12b2lkIDA9PT1iLlVWR2VuZXJhdG9yP1RIUkVFLkV4dHJ1ZGVHZW9tZXRyeS5Xb3JsZFVWR2VuZXJhdG9yOmIuVVZHZW5lcmF0b3IsZSxmLGcsaD10aGlzLnZlcnRpY2VzLmxlbmd0aDtlPWEuZXh0cmFjdFBvaW50cyh2b2lkIDAhPT1iLmN1cnZlU2VnbWVudHM/Yi5jdXJ2ZVNlZ21lbnRzOjEyKTt2YXIgaz1lLnNoYXBlLGw9ZS5ob2xlcztpZighVEhSRUUuU2hhcGUuVXRpbHMuaXNDbG9ja1dpc2UoaykpZm9yKGs9ay5yZXZlcnNlKCksZT0wLGY9bC5sZW5ndGg7ZTxmO2UrKylnPWxbZV0sVEhSRUUuU2hhcGUuVXRpbHMuaXNDbG9ja1dpc2UoZykmJihsW2VdPWcucmV2ZXJzZSgpKTt2YXIgcD1USFJFRS5TaGFwZS5VdGlscy50cmlhbmd1bGF0ZVNoYXBlKGssbCk7ZT0wO2ZvcihmPWwubGVuZ3RoO2U8ZjtlKyspZz1sW2VdLFxuaz1rLmNvbmNhdChnKTtsPWsubGVuZ3RoO2Y9cC5sZW5ndGg7Zm9yKGU9MDtlPGw7ZSsrKWc9a1tlXSx0aGlzLnZlcnRpY2VzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjMoZy54LGcueSwwKSk7Zm9yKGU9MDtlPGY7ZSsrKWw9cFtlXSxrPWxbMF0raCxnPWxbMV0raCxsPWxbMl0raCx0aGlzLmZhY2VzLnB1c2gobmV3IFRIUkVFLkZhY2UzKGssZyxsLG51bGwsbnVsbCxjKSksdGhpcy5mYWNlVmVydGV4VXZzWzBdLnB1c2goZC5nZW5lcmF0ZVRvcFVWKHRoaXMsayxnLGwpKX07XG5USFJFRS5MYXRoZUdlb21ldHJ5PWZ1bmN0aW9uKGEsYixjLGQpe1RIUkVFLkdlb21ldHJ5LmNhbGwodGhpcyk7dGhpcy50eXBlPVwiTGF0aGVHZW9tZXRyeVwiO3RoaXMucGFyYW1ldGVycz17cG9pbnRzOmEsc2VnbWVudHM6YixwaGlTdGFydDpjLHBoaUxlbmd0aDpkfTtiPWJ8fDEyO2M9Y3x8MDtkPWR8fDIqTWF0aC5QSTtmb3IodmFyIGU9MS8oYS5sZW5ndGgtMSksZj0xL2IsZz0wLGg9YjtnPD1oO2crKylmb3IodmFyIGs9YytnKmYqZCxsPU1hdGguY29zKGspLHA9TWF0aC5zaW4oayksaz0wLHE9YS5sZW5ndGg7azxxO2srKyl7dmFyIG49YVtrXSx0PW5ldyBUSFJFRS5WZWN0b3IzO3QueD1sKm4ueC1wKm4ueTt0Lnk9cCpuLngrbCpuLnk7dC56PW4uejt0aGlzLnZlcnRpY2VzLnB1c2godCl9Yz1hLmxlbmd0aDtnPTA7Zm9yKGg9YjtnPGg7ZysrKWZvcihrPTAscT1hLmxlbmd0aC0xO2s8cTtrKyspe2I9cD1rK2MqZztkPXArYzt2YXIgbD1wKzErYyxwPXArMSxuPWcqZix0PWsqZSxyPVxubitmLHM9dCtlO3RoaXMuZmFjZXMucHVzaChuZXcgVEhSRUUuRmFjZTMoYixkLHApKTt0aGlzLmZhY2VWZXJ0ZXhVdnNbMF0ucHVzaChbbmV3IFRIUkVFLlZlY3RvcjIobix0KSxuZXcgVEhSRUUuVmVjdG9yMihyLHQpLG5ldyBUSFJFRS5WZWN0b3IyKG4scyldKTt0aGlzLmZhY2VzLnB1c2gobmV3IFRIUkVFLkZhY2UzKGQsbCxwKSk7dGhpcy5mYWNlVmVydGV4VXZzWzBdLnB1c2goW25ldyBUSFJFRS5WZWN0b3IyKHIsdCksbmV3IFRIUkVFLlZlY3RvcjIocixzKSxuZXcgVEhSRUUuVmVjdG9yMihuLHMpXSl9dGhpcy5tZXJnZVZlcnRpY2VzKCk7dGhpcy5jb21wdXRlRmFjZU5vcm1hbHMoKTt0aGlzLmNvbXB1dGVWZXJ0ZXhOb3JtYWxzKCl9O1RIUkVFLkxhdGhlR2VvbWV0cnkucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuR2VvbWV0cnkucHJvdG90eXBlKTtUSFJFRS5MYXRoZUdlb21ldHJ5LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5MYXRoZUdlb21ldHJ5O1xuVEhSRUUuUGxhbmVHZW9tZXRyeT1mdW5jdGlvbihhLGIsYyxkKXtjb25zb2xlLmluZm8oXCJUSFJFRS5QbGFuZUdlb21ldHJ5OiBDb25zaWRlciB1c2luZyBUSFJFRS5QbGFuZUJ1ZmZlckdlb21ldHJ5IGZvciBsb3dlciBtZW1vcnkgZm9vdHByaW50LlwiKTtUSFJFRS5HZW9tZXRyeS5jYWxsKHRoaXMpO3RoaXMudHlwZT1cIlBsYW5lR2VvbWV0cnlcIjt0aGlzLnBhcmFtZXRlcnM9e3dpZHRoOmEsaGVpZ2h0OmIsd2lkdGhTZWdtZW50czpjLGhlaWdodFNlZ21lbnRzOmR9O3RoaXMuZnJvbUJ1ZmZlckdlb21ldHJ5KG5ldyBUSFJFRS5QbGFuZUJ1ZmZlckdlb21ldHJ5KGEsYixjLGQpKX07VEhSRUUuUGxhbmVHZW9tZXRyeS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5HZW9tZXRyeS5wcm90b3R5cGUpO1RIUkVFLlBsYW5lR2VvbWV0cnkucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLlBsYW5lR2VvbWV0cnk7XG5USFJFRS5QbGFuZUJ1ZmZlckdlb21ldHJ5PWZ1bmN0aW9uKGEsYixjLGQpe1RIUkVFLkJ1ZmZlckdlb21ldHJ5LmNhbGwodGhpcyk7dGhpcy50eXBlPVwiUGxhbmVCdWZmZXJHZW9tZXRyeVwiO3RoaXMucGFyYW1ldGVycz17d2lkdGg6YSxoZWlnaHQ6Yix3aWR0aFNlZ21lbnRzOmMsaGVpZ2h0U2VnbWVudHM6ZH07dmFyIGU9YS8yLGY9Yi8yO2M9Y3x8MTtkPWR8fDE7dmFyIGc9YysxLGg9ZCsxLGs9YS9jLGw9Yi9kO2I9bmV3IEZsb2F0MzJBcnJheShnKmgqMyk7YT1uZXcgRmxvYXQzMkFycmF5KGcqaCozKTtmb3IodmFyIHA9bmV3IEZsb2F0MzJBcnJheShnKmgqMikscT0wLG49MCx0PTA7dDxoO3QrKylmb3IodmFyIHI9dCpsLWYscz0wO3M8ZztzKyspYltxXT1zKmstZSxiW3ErMV09LXIsYVtxKzJdPTEscFtuXT1zL2MscFtuKzFdPTEtdC9kLHErPTMsbis9MjtxPTA7ZT1uZXcgKDY1NTM1PGIubGVuZ3RoLzM/VWludDMyQXJyYXk6VWludDE2QXJyYXkpKGMqZCo2KTtmb3IodD0wO3Q8ZDt0KyspZm9yKHM9XG4wO3M8YztzKyspZj1zK2cqKHQrMSksaD1zKzErZyoodCsxKSxrPXMrMStnKnQsZVtxXT1zK2cqdCxlW3ErMV09ZixlW3ErMl09ayxlW3ErM109ZixlW3ErNF09aCxlW3ErNV09ayxxKz02O3RoaXMuYWRkQXR0cmlidXRlKFwiaW5kZXhcIixuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKGUsMSkpO3RoaXMuYWRkQXR0cmlidXRlKFwicG9zaXRpb25cIixuZXcgVEhSRUUuQnVmZmVyQXR0cmlidXRlKGIsMykpO3RoaXMuYWRkQXR0cmlidXRlKFwibm9ybWFsXCIsbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShhLDMpKTt0aGlzLmFkZEF0dHJpYnV0ZShcInV2XCIsbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShwLDIpKX07VEhSRUUuUGxhbmVCdWZmZXJHZW9tZXRyeS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5CdWZmZXJHZW9tZXRyeS5wcm90b3R5cGUpO1RIUkVFLlBsYW5lQnVmZmVyR2VvbWV0cnkucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLlBsYW5lQnVmZmVyR2VvbWV0cnk7XG5USFJFRS5SaW5nR2VvbWV0cnk9ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe1RIUkVFLkdlb21ldHJ5LmNhbGwodGhpcyk7dGhpcy50eXBlPVwiUmluZ0dlb21ldHJ5XCI7dGhpcy5wYXJhbWV0ZXJzPXtpbm5lclJhZGl1czphLG91dGVyUmFkaXVzOmIsdGhldGFTZWdtZW50czpjLHBoaVNlZ21lbnRzOmQsdGhldGFTdGFydDplLHRoZXRhTGVuZ3RoOmZ9O2E9YXx8MDtiPWJ8fDUwO2U9dm9pZCAwIT09ZT9lOjA7Zj12b2lkIDAhPT1mP2Y6MipNYXRoLlBJO2M9dm9pZCAwIT09Yz9NYXRoLm1heCgzLGMpOjg7ZD12b2lkIDAhPT1kP01hdGgubWF4KDEsZCk6ODt2YXIgZyxoPVtdLGs9YSxsPShiLWEpL2Q7Zm9yKGE9MDthPGQrMTthKyspe2ZvcihnPTA7ZzxjKzE7ZysrKXt2YXIgcD1uZXcgVEhSRUUuVmVjdG9yMyxxPWUrZy9jKmY7cC54PWsqTWF0aC5jb3MocSk7cC55PWsqTWF0aC5zaW4ocSk7dGhpcy52ZXJ0aWNlcy5wdXNoKHApO2gucHVzaChuZXcgVEhSRUUuVmVjdG9yMigocC54L2IrMSkvMixcbihwLnkvYisxKS8yKSl9ays9bH1iPW5ldyBUSFJFRS5WZWN0b3IzKDAsMCwxKTtmb3IoYT0wO2E8ZDthKyspZm9yKGU9YSooYysxKSxnPTA7ZzxjO2crKylmPXE9ZytlLGw9cStjKzEscD1xK2MrMix0aGlzLmZhY2VzLnB1c2gobmV3IFRIUkVFLkZhY2UzKGYsbCxwLFtiLmNsb25lKCksYi5jbG9uZSgpLGIuY2xvbmUoKV0pKSx0aGlzLmZhY2VWZXJ0ZXhVdnNbMF0ucHVzaChbaFtmXS5jbG9uZSgpLGhbbF0uY2xvbmUoKSxoW3BdLmNsb25lKCldKSxmPXEsbD1xK2MrMixwPXErMSx0aGlzLmZhY2VzLnB1c2gobmV3IFRIUkVFLkZhY2UzKGYsbCxwLFtiLmNsb25lKCksYi5jbG9uZSgpLGIuY2xvbmUoKV0pKSx0aGlzLmZhY2VWZXJ0ZXhVdnNbMF0ucHVzaChbaFtmXS5jbG9uZSgpLGhbbF0uY2xvbmUoKSxoW3BdLmNsb25lKCldKTt0aGlzLmNvbXB1dGVGYWNlTm9ybWFscygpO3RoaXMuYm91bmRpbmdTcGhlcmU9bmV3IFRIUkVFLlNwaGVyZShuZXcgVEhSRUUuVmVjdG9yMyxrKX07XG5USFJFRS5SaW5nR2VvbWV0cnkucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuR2VvbWV0cnkucHJvdG90eXBlKTtUSFJFRS5SaW5nR2VvbWV0cnkucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLlJpbmdHZW9tZXRyeTtcblRIUkVFLlNwaGVyZUdlb21ldHJ5PWZ1bmN0aW9uKGEsYixjLGQsZSxmLGcpe1RIUkVFLkdlb21ldHJ5LmNhbGwodGhpcyk7dGhpcy50eXBlPVwiU3BoZXJlR2VvbWV0cnlcIjt0aGlzLnBhcmFtZXRlcnM9e3JhZGl1czphLHdpZHRoU2VnbWVudHM6YixoZWlnaHRTZWdtZW50czpjLHBoaVN0YXJ0OmQscGhpTGVuZ3RoOmUsdGhldGFTdGFydDpmLHRoZXRhTGVuZ3RoOmd9O2E9YXx8NTA7Yj1NYXRoLm1heCgzLE1hdGguZmxvb3IoYil8fDgpO2M9TWF0aC5tYXgoMixNYXRoLmZsb29yKGMpfHw2KTtkPXZvaWQgMCE9PWQ/ZDowO2U9dm9pZCAwIT09ZT9lOjIqTWF0aC5QSTtmPXZvaWQgMCE9PWY/ZjowO2c9dm9pZCAwIT09Zz9nOk1hdGguUEk7dmFyIGgsayxsPVtdLHA9W107Zm9yKGs9MDtrPD1jO2srKyl7dmFyIHE9W10sbj1bXTtmb3IoaD0wO2g8PWI7aCsrKXt2YXIgdD1oL2Iscj1rL2Mscz1uZXcgVEhSRUUuVmVjdG9yMztzLng9LWEqTWF0aC5jb3MoZCt0KmUpKk1hdGguc2luKGYrcipnKTtcbnMueT1hKk1hdGguY29zKGYrcipnKTtzLno9YSpNYXRoLnNpbihkK3QqZSkqTWF0aC5zaW4oZityKmcpO3RoaXMudmVydGljZXMucHVzaChzKTtxLnB1c2godGhpcy52ZXJ0aWNlcy5sZW5ndGgtMSk7bi5wdXNoKG5ldyBUSFJFRS5WZWN0b3IyKHQsMS1yKSl9bC5wdXNoKHEpO3AucHVzaChuKX1mb3Ioaz0wO2s8YztrKyspZm9yKGg9MDtoPGI7aCsrKXtkPWxba11baCsxXTtlPWxba11baF07Zj1sW2srMV1baF07Zz1sW2srMV1baCsxXTt2YXIgcT10aGlzLnZlcnRpY2VzW2RdLmNsb25lKCkubm9ybWFsaXplKCksbj10aGlzLnZlcnRpY2VzW2VdLmNsb25lKCkubm9ybWFsaXplKCksdD10aGlzLnZlcnRpY2VzW2ZdLmNsb25lKCkubm9ybWFsaXplKCkscj10aGlzLnZlcnRpY2VzW2ddLmNsb25lKCkubm9ybWFsaXplKCkscz1wW2tdW2grMV0uY2xvbmUoKSx1PXBba11baF0uY2xvbmUoKSx2PXBbaysxXVtoXS5jbG9uZSgpLHg9cFtrKzFdW2grMV0uY2xvbmUoKTtNYXRoLmFicyh0aGlzLnZlcnRpY2VzW2RdLnkpPT09XG5hPyhzLng9KHMueCt1LngpLzIsdGhpcy5mYWNlcy5wdXNoKG5ldyBUSFJFRS5GYWNlMyhkLGYsZyxbcSx0LHJdKSksdGhpcy5mYWNlVmVydGV4VXZzWzBdLnB1c2goW3Msdix4XSkpOk1hdGguYWJzKHRoaXMudmVydGljZXNbZl0ueSk9PT1hPyh2Lng9KHYueCt4LngpLzIsdGhpcy5mYWNlcy5wdXNoKG5ldyBUSFJFRS5GYWNlMyhkLGUsZixbcSxuLHRdKSksdGhpcy5mYWNlVmVydGV4VXZzWzBdLnB1c2goW3MsdSx2XSkpOih0aGlzLmZhY2VzLnB1c2gobmV3IFRIUkVFLkZhY2UzKGQsZSxnLFtxLG4scl0pKSx0aGlzLmZhY2VWZXJ0ZXhVdnNbMF0ucHVzaChbcyx1LHhdKSx0aGlzLmZhY2VzLnB1c2gobmV3IFRIUkVFLkZhY2UzKGUsZixnLFtuLmNsb25lKCksdCxyLmNsb25lKCldKSksdGhpcy5mYWNlVmVydGV4VXZzWzBdLnB1c2goW3UuY2xvbmUoKSx2LHguY2xvbmUoKV0pKX10aGlzLmNvbXB1dGVGYWNlTm9ybWFscygpO3RoaXMuYm91bmRpbmdTcGhlcmU9bmV3IFRIUkVFLlNwaGVyZShuZXcgVEhSRUUuVmVjdG9yMyxcbmEpfTtUSFJFRS5TcGhlcmVHZW9tZXRyeS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5HZW9tZXRyeS5wcm90b3R5cGUpO1RIUkVFLlNwaGVyZUdlb21ldHJ5LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5TcGhlcmVHZW9tZXRyeTtUSFJFRS5UZXh0R2VvbWV0cnk9ZnVuY3Rpb24oYSxiKXtiPWJ8fHt9O3ZhciBjPVRIUkVFLkZvbnRVdGlscy5nZW5lcmF0ZVNoYXBlcyhhLGIpO2IuYW1vdW50PXZvaWQgMCE9PWIuaGVpZ2h0P2IuaGVpZ2h0OjUwO3ZvaWQgMD09PWIuYmV2ZWxUaGlja25lc3MmJihiLmJldmVsVGhpY2tuZXNzPTEwKTt2b2lkIDA9PT1iLmJldmVsU2l6ZSYmKGIuYmV2ZWxTaXplPTgpO3ZvaWQgMD09PWIuYmV2ZWxFbmFibGVkJiYoYi5iZXZlbEVuYWJsZWQ9ITEpO1RIUkVFLkV4dHJ1ZGVHZW9tZXRyeS5jYWxsKHRoaXMsYyxiKTt0aGlzLnR5cGU9XCJUZXh0R2VvbWV0cnlcIn07VEhSRUUuVGV4dEdlb21ldHJ5LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkV4dHJ1ZGVHZW9tZXRyeS5wcm90b3R5cGUpO1xuVEhSRUUuVGV4dEdlb21ldHJ5LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5UZXh0R2VvbWV0cnk7XG5USFJFRS5Ub3J1c0dlb21ldHJ5PWZ1bmN0aW9uKGEsYixjLGQsZSl7VEhSRUUuR2VvbWV0cnkuY2FsbCh0aGlzKTt0aGlzLnR5cGU9XCJUb3J1c0dlb21ldHJ5XCI7dGhpcy5wYXJhbWV0ZXJzPXtyYWRpdXM6YSx0dWJlOmIscmFkaWFsU2VnbWVudHM6Yyx0dWJ1bGFyU2VnbWVudHM6ZCxhcmM6ZX07YT1hfHwxMDA7Yj1ifHw0MDtjPWN8fDg7ZD1kfHw2O2U9ZXx8MipNYXRoLlBJO2Zvcih2YXIgZj1uZXcgVEhSRUUuVmVjdG9yMyxnPVtdLGg9W10saz0wO2s8PWM7aysrKWZvcih2YXIgbD0wO2w8PWQ7bCsrKXt2YXIgcD1sL2QqZSxxPWsvYypNYXRoLlBJKjI7Zi54PWEqTWF0aC5jb3MocCk7Zi55PWEqTWF0aC5zaW4ocCk7dmFyIG49bmV3IFRIUkVFLlZlY3RvcjM7bi54PShhK2IqTWF0aC5jb3MocSkpKk1hdGguY29zKHApO24ueT0oYStiKk1hdGguY29zKHEpKSpNYXRoLnNpbihwKTtuLno9YipNYXRoLnNpbihxKTt0aGlzLnZlcnRpY2VzLnB1c2gobik7Zy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IyKGwvXG5kLGsvYykpO2gucHVzaChuLmNsb25lKCkuc3ViKGYpLm5vcm1hbGl6ZSgpKX1mb3Ioaz0xO2s8PWM7aysrKWZvcihsPTE7bDw9ZDtsKyspYT0oZCsxKSprK2wtMSxiPShkKzEpKihrLTEpK2wtMSxlPShkKzEpKihrLTEpK2wsZj0oZCsxKSprK2wscD1uZXcgVEhSRUUuRmFjZTMoYSxiLGYsW2hbYV0uY2xvbmUoKSxoW2JdLmNsb25lKCksaFtmXS5jbG9uZSgpXSksdGhpcy5mYWNlcy5wdXNoKHApLHRoaXMuZmFjZVZlcnRleFV2c1swXS5wdXNoKFtnW2FdLmNsb25lKCksZ1tiXS5jbG9uZSgpLGdbZl0uY2xvbmUoKV0pLHA9bmV3IFRIUkVFLkZhY2UzKGIsZSxmLFtoW2JdLmNsb25lKCksaFtlXS5jbG9uZSgpLGhbZl0uY2xvbmUoKV0pLHRoaXMuZmFjZXMucHVzaChwKSx0aGlzLmZhY2VWZXJ0ZXhVdnNbMF0ucHVzaChbZ1tiXS5jbG9uZSgpLGdbZV0uY2xvbmUoKSxnW2ZdLmNsb25lKCldKTt0aGlzLmNvbXB1dGVGYWNlTm9ybWFscygpfTtcblRIUkVFLlRvcnVzR2VvbWV0cnkucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuR2VvbWV0cnkucHJvdG90eXBlKTtUSFJFRS5Ub3J1c0dlb21ldHJ5LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5Ub3J1c0dlb21ldHJ5O1xuVEhSRUUuVG9ydXNLbm90R2VvbWV0cnk9ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyl7ZnVuY3Rpb24gaChhLGIsYyxkLGUpe3ZhciBmPU1hdGguY29zKGEpLGc9TWF0aC5zaW4oYSk7YSo9Yi9jO2I9TWF0aC5jb3MoYSk7Zio9ZCooMitiKSouNTtnPWQqKDIrYikqZyouNTtkPWUqZCpNYXRoLnNpbihhKSouNTtyZXR1cm4gbmV3IFRIUkVFLlZlY3RvcjMoZixnLGQpfVRIUkVFLkdlb21ldHJ5LmNhbGwodGhpcyk7dGhpcy50eXBlPVwiVG9ydXNLbm90R2VvbWV0cnlcIjt0aGlzLnBhcmFtZXRlcnM9e3JhZGl1czphLHR1YmU6YixyYWRpYWxTZWdtZW50czpjLHR1YnVsYXJTZWdtZW50czpkLHA6ZSxxOmYsaGVpZ2h0U2NhbGU6Z307YT1hfHwxMDA7Yj1ifHw0MDtjPWN8fDY0O2Q9ZHx8ODtlPWV8fDI7Zj1mfHwzO2c9Z3x8MTtmb3IodmFyIGs9QXJyYXkoYyksbD1uZXcgVEhSRUUuVmVjdG9yMyxwPW5ldyBUSFJFRS5WZWN0b3IzLHE9bmV3IFRIUkVFLlZlY3RvcjMsbj0wO248YzsrK24pe2tbbl09XG5BcnJheShkKTt2YXIgdD1uL2MqMiplKk1hdGguUEkscj1oKHQsZixlLGEsZyksdD1oKHQrLjAxLGYsZSxhLGcpO2wuc3ViVmVjdG9ycyh0LHIpO3AuYWRkVmVjdG9ycyh0LHIpO3EuY3Jvc3NWZWN0b3JzKGwscCk7cC5jcm9zc1ZlY3RvcnMocSxsKTtxLm5vcm1hbGl6ZSgpO3Aubm9ybWFsaXplKCk7Zm9yKHQ9MDt0PGQ7Kyt0KXt2YXIgcz10L2QqMipNYXRoLlBJLHU9LWIqTWF0aC5jb3Mocykscz1iKk1hdGguc2luKHMpLHY9bmV3IFRIUkVFLlZlY3RvcjM7di54PXIueCt1KnAueCtzKnEueDt2Lnk9ci55K3UqcC55K3MqcS55O3Yuej1yLnordSpwLnorcypxLno7a1tuXVt0XT10aGlzLnZlcnRpY2VzLnB1c2godiktMX19Zm9yKG49MDtuPGM7KytuKWZvcih0PTA7dDxkOysrdCllPShuKzEpJWMsZj0odCsxKSVkLGE9a1tuXVt0XSxiPWtbZV1bdF0sZT1rW2VdW2ZdLGY9a1tuXVtmXSxnPW5ldyBUSFJFRS5WZWN0b3IyKG4vYyx0L2QpLGw9bmV3IFRIUkVFLlZlY3RvcjIoKG4rMSkvYyxcbnQvZCkscD1uZXcgVEhSRUUuVmVjdG9yMigobisxKS9jLCh0KzEpL2QpLHE9bmV3IFRIUkVFLlZlY3RvcjIobi9jLCh0KzEpL2QpLHRoaXMuZmFjZXMucHVzaChuZXcgVEhSRUUuRmFjZTMoYSxiLGYpKSx0aGlzLmZhY2VWZXJ0ZXhVdnNbMF0ucHVzaChbZyxsLHFdKSx0aGlzLmZhY2VzLnB1c2gobmV3IFRIUkVFLkZhY2UzKGIsZSxmKSksdGhpcy5mYWNlVmVydGV4VXZzWzBdLnB1c2goW2wuY2xvbmUoKSxwLHEuY2xvbmUoKV0pO3RoaXMuY29tcHV0ZUZhY2VOb3JtYWxzKCk7dGhpcy5jb21wdXRlVmVydGV4Tm9ybWFscygpfTtUSFJFRS5Ub3J1c0tub3RHZW9tZXRyeS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5HZW9tZXRyeS5wcm90b3R5cGUpO1RIUkVFLlRvcnVzS25vdEdlb21ldHJ5LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5Ub3J1c0tub3RHZW9tZXRyeTtcblRIUkVFLlR1YmVHZW9tZXRyeT1mdW5jdGlvbihhLGIsYyxkLGUsZil7VEhSRUUuR2VvbWV0cnkuY2FsbCh0aGlzKTt0aGlzLnR5cGU9XCJUdWJlR2VvbWV0cnlcIjt0aGlzLnBhcmFtZXRlcnM9e3BhdGg6YSxzZWdtZW50czpiLHJhZGl1czpjLHJhZGlhbFNlZ21lbnRzOmQsY2xvc2VkOmV9O2I9Ynx8NjQ7Yz1jfHwxO2Q9ZHx8ODtlPWV8fCExO2Y9Znx8VEhSRUUuVHViZUdlb21ldHJ5Lk5vVGFwZXI7dmFyIGc9W10saCxrLGw9YisxLHAscSxuLHQscixzPW5ldyBUSFJFRS5WZWN0b3IzLHUsdix4O3U9bmV3IFRIUkVFLlR1YmVHZW9tZXRyeS5GcmVuZXRGcmFtZXMoYSxiLGUpO3Y9dS5ub3JtYWxzO3g9dS5iaW5vcm1hbHM7dGhpcy50YW5nZW50cz11LnRhbmdlbnRzO3RoaXMubm9ybWFscz12O3RoaXMuYmlub3JtYWxzPXg7Zm9yKHU9MDt1PGw7dSsrKWZvcihnW3VdPVtdLHA9dS8obC0xKSxyPWEuZ2V0UG9pbnRBdChwKSxoPXZbdV0saz14W3VdLG49YypmKHApLHA9MDtwPGQ7cCsrKXE9XG5wL2QqMipNYXRoLlBJLHQ9LW4qTWF0aC5jb3MocSkscT1uKk1hdGguc2luKHEpLHMuY29weShyKSxzLngrPXQqaC54K3Eqay54LHMueSs9dCpoLnkrcSprLnkscy56Kz10KmgueitxKmsueixnW3VdW3BdPXRoaXMudmVydGljZXMucHVzaChuZXcgVEhSRUUuVmVjdG9yMyhzLngscy55LHMueikpLTE7Zm9yKHU9MDt1PGI7dSsrKWZvcihwPTA7cDxkO3ArKylmPWU/KHUrMSklYjp1KzEsbD0ocCsxKSVkLGE9Z1t1XVtwXSxjPWdbZl1bcF0sZj1nW2ZdW2xdLGw9Z1t1XVtsXSxzPW5ldyBUSFJFRS5WZWN0b3IyKHUvYixwL2QpLHY9bmV3IFRIUkVFLlZlY3RvcjIoKHUrMSkvYixwL2QpLHg9bmV3IFRIUkVFLlZlY3RvcjIoKHUrMSkvYiwocCsxKS9kKSxoPW5ldyBUSFJFRS5WZWN0b3IyKHUvYiwocCsxKS9kKSx0aGlzLmZhY2VzLnB1c2gobmV3IFRIUkVFLkZhY2UzKGEsYyxsKSksdGhpcy5mYWNlVmVydGV4VXZzWzBdLnB1c2goW3MsdixoXSksdGhpcy5mYWNlcy5wdXNoKG5ldyBUSFJFRS5GYWNlMyhjLFxuZixsKSksdGhpcy5mYWNlVmVydGV4VXZzWzBdLnB1c2goW3YuY2xvbmUoKSx4LGguY2xvbmUoKV0pO3RoaXMuY29tcHV0ZUZhY2VOb3JtYWxzKCk7dGhpcy5jb21wdXRlVmVydGV4Tm9ybWFscygpfTtUSFJFRS5UdWJlR2VvbWV0cnkucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuR2VvbWV0cnkucHJvdG90eXBlKTtUSFJFRS5UdWJlR2VvbWV0cnkucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLlR1YmVHZW9tZXRyeTtUSFJFRS5UdWJlR2VvbWV0cnkuTm9UYXBlcj1mdW5jdGlvbihhKXtyZXR1cm4gMX07VEhSRUUuVHViZUdlb21ldHJ5LlNpbnVzb2lkYWxUYXBlcj1mdW5jdGlvbihhKXtyZXR1cm4gTWF0aC5zaW4oTWF0aC5QSSphKX07XG5USFJFRS5UdWJlR2VvbWV0cnkuRnJlbmV0RnJhbWVzPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1uZXcgVEhSRUUuVmVjdG9yMyxlPVtdLGY9W10sZz1bXSxoPW5ldyBUSFJFRS5WZWN0b3IzLGs9bmV3IFRIUkVFLk1hdHJpeDQ7Yis9MTt2YXIgbCxwLHE7dGhpcy50YW5nZW50cz1lO3RoaXMubm9ybWFscz1mO3RoaXMuYmlub3JtYWxzPWc7Zm9yKGw9MDtsPGI7bCsrKXA9bC8oYi0xKSxlW2xdPWEuZ2V0VGFuZ2VudEF0KHApLGVbbF0ubm9ybWFsaXplKCk7ZlswXT1uZXcgVEhSRUUuVmVjdG9yMztnWzBdPW5ldyBUSFJFRS5WZWN0b3IzO2E9TnVtYmVyLk1BWF9WQUxVRTtsPU1hdGguYWJzKGVbMF0ueCk7cD1NYXRoLmFicyhlWzBdLnkpO3E9TWF0aC5hYnMoZVswXS56KTtsPD1hJiYoYT1sLGQuc2V0KDEsMCwwKSk7cDw9YSYmKGE9cCxkLnNldCgwLDEsMCkpO3E8PWEmJmQuc2V0KDAsMCwxKTtoLmNyb3NzVmVjdG9ycyhlWzBdLGQpLm5vcm1hbGl6ZSgpO2ZbMF0uY3Jvc3NWZWN0b3JzKGVbMF0sXG5oKTtnWzBdLmNyb3NzVmVjdG9ycyhlWzBdLGZbMF0pO2ZvcihsPTE7bDxiO2wrKylmW2xdPWZbbC0xXS5jbG9uZSgpLGdbbF09Z1tsLTFdLmNsb25lKCksaC5jcm9zc1ZlY3RvcnMoZVtsLTFdLGVbbF0pLDFFLTQ8aC5sZW5ndGgoKSYmKGgubm9ybWFsaXplKCksZD1NYXRoLmFjb3MoVEhSRUUuTWF0aC5jbGFtcChlW2wtMV0uZG90KGVbbF0pLC0xLDEpKSxmW2xdLmFwcGx5TWF0cml4NChrLm1ha2VSb3RhdGlvbkF4aXMoaCxkKSkpLGdbbF0uY3Jvc3NWZWN0b3JzKGVbbF0sZltsXSk7aWYoYylmb3IoZD1NYXRoLmFjb3MoVEhSRUUuTWF0aC5jbGFtcChmWzBdLmRvdChmW2ItMV0pLC0xLDEpKSxkLz1iLTEsMDxlWzBdLmRvdChoLmNyb3NzVmVjdG9ycyhmWzBdLGZbYi0xXSkpJiYoZD0tZCksbD0xO2w8YjtsKyspZltsXS5hcHBseU1hdHJpeDQoay5tYWtlUm90YXRpb25BeGlzKGVbbF0sZCpsKSksZ1tsXS5jcm9zc1ZlY3RvcnMoZVtsXSxmW2xdKX07XG5USFJFRS5Qb2x5aGVkcm9uR2VvbWV0cnk9ZnVuY3Rpb24oYSxiLGMsZCl7ZnVuY3Rpb24gZShhKXt2YXIgYj1hLm5vcm1hbGl6ZSgpLmNsb25lKCk7Yi5pbmRleD1rLnZlcnRpY2VzLnB1c2goYiktMTt2YXIgYz1NYXRoLmF0YW4yKGEueiwtYS54KS8yL01hdGguUEkrLjU7YT1NYXRoLmF0YW4yKC1hLnksTWF0aC5zcXJ0KGEueCphLngrYS56KmEueikpL01hdGguUEkrLjU7Yi51dj1uZXcgVEhSRUUuVmVjdG9yMihjLDEtYSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZihhLGIsYyl7dmFyIGQ9bmV3IFRIUkVFLkZhY2UzKGEuaW5kZXgsYi5pbmRleCxjLmluZGV4LFthLmNsb25lKCksYi5jbG9uZSgpLGMuY2xvbmUoKV0pO2suZmFjZXMucHVzaChkKTt1LmNvcHkoYSkuYWRkKGIpLmFkZChjKS5kaXZpZGVTY2FsYXIoMyk7ZD1NYXRoLmF0YW4yKHUueiwtdS54KTtrLmZhY2VWZXJ0ZXhVdnNbMF0ucHVzaChbaChhLnV2LGEsZCksaChiLnV2LGIsZCksaChjLnV2LGMsZCldKX1mdW5jdGlvbiBnKGEsXG5iKXtmb3IodmFyIGM9TWF0aC5wb3coMixiKSxkPWUoay52ZXJ0aWNlc1thLmFdKSxnPWUoay52ZXJ0aWNlc1thLmJdKSxoPWUoay52ZXJ0aWNlc1thLmNdKSxsPVtdLG49MDtuPD1jO24rKyl7bFtuXT1bXTtmb3IodmFyIHA9ZShkLmNsb25lKCkubGVycChoLG4vYykpLHE9ZShnLmNsb25lKCkubGVycChoLG4vYykpLHM9Yy1uLHI9MDtyPD1zO3IrKylsW25dW3JdPTA9PXImJm49PWM/cDplKHAuY2xvbmUoKS5sZXJwKHEsci9zKSl9Zm9yKG49MDtuPGM7bisrKWZvcihyPTA7cjwyKihjLW4pLTE7cisrKWQ9TWF0aC5mbG9vcihyLzIpLDA9PXIlMj9mKGxbbl1bZCsxXSxsW24rMV1bZF0sbFtuXVtkXSk6ZihsW25dW2QrMV0sbFtuKzFdW2QrMV0sbFtuKzFdW2RdKX1mdW5jdGlvbiBoKGEsYixjKXswPmMmJjE9PT1hLngmJihhPW5ldyBUSFJFRS5WZWN0b3IyKGEueC0xLGEueSkpOzA9PT1iLngmJjA9PT1iLnomJihhPW5ldyBUSFJFRS5WZWN0b3IyKGMvMi9NYXRoLlBJKy41LGEueSkpO3JldHVybiBhLmNsb25lKCl9XG5USFJFRS5HZW9tZXRyeS5jYWxsKHRoaXMpO3RoaXMudHlwZT1cIlBvbHloZWRyb25HZW9tZXRyeVwiO3RoaXMucGFyYW1ldGVycz17dmVydGljZXM6YSxpbmRpY2VzOmIscmFkaXVzOmMsZGV0YWlsOmR9O2M9Y3x8MTtkPWR8fDA7Zm9yKHZhciBrPXRoaXMsbD0wLHA9YS5sZW5ndGg7bDxwO2wrPTMpZShuZXcgVEhSRUUuVmVjdG9yMyhhW2xdLGFbbCsxXSxhW2wrMl0pKTthPXRoaXMudmVydGljZXM7Zm9yKHZhciBxPVtdLG49bD0wLHA9Yi5sZW5ndGg7bDxwO2wrPTMsbisrKXt2YXIgdD1hW2JbbF1dLHI9YVtiW2wrMV1dLHM9YVtiW2wrMl1dO3Fbbl09bmV3IFRIUkVFLkZhY2UzKHQuaW5kZXgsci5pbmRleCxzLmluZGV4LFt0LmNsb25lKCksci5jbG9uZSgpLHMuY2xvbmUoKV0pfWZvcih2YXIgdT1uZXcgVEhSRUUuVmVjdG9yMyxsPTAscD1xLmxlbmd0aDtsPHA7bCsrKWcocVtsXSxkKTtsPTA7Zm9yKHA9dGhpcy5mYWNlVmVydGV4VXZzWzBdLmxlbmd0aDtsPHA7bCsrKWI9dGhpcy5mYWNlVmVydGV4VXZzWzBdW2xdLFxuZD1iWzBdLngsYT1iWzFdLngscT1iWzJdLngsbj1NYXRoLm1heChkLE1hdGgubWF4KGEscSkpLHQ9TWF0aC5taW4oZCxNYXRoLm1pbihhLHEpKSwuOTxuJiYuMT50JiYoLjI+ZCYmKGJbMF0ueCs9MSksLjI+YSYmKGJbMV0ueCs9MSksLjI+cSYmKGJbMl0ueCs9MSkpO2w9MDtmb3IocD10aGlzLnZlcnRpY2VzLmxlbmd0aDtsPHA7bCsrKXRoaXMudmVydGljZXNbbF0ubXVsdGlwbHlTY2FsYXIoYyk7dGhpcy5tZXJnZVZlcnRpY2VzKCk7dGhpcy5jb21wdXRlRmFjZU5vcm1hbHMoKTt0aGlzLmJvdW5kaW5nU3BoZXJlPW5ldyBUSFJFRS5TcGhlcmUobmV3IFRIUkVFLlZlY3RvcjMsYyl9O1RIUkVFLlBvbHloZWRyb25HZW9tZXRyeS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5HZW9tZXRyeS5wcm90b3R5cGUpO1RIUkVFLlBvbHloZWRyb25HZW9tZXRyeS5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuUG9seWhlZHJvbkdlb21ldHJ5O1xuVEhSRUUuRG9kZWNhaGVkcm9uR2VvbWV0cnk9ZnVuY3Rpb24oYSxiKXt0aGlzLnBhcmFtZXRlcnM9e3JhZGl1czphLGRldGFpbDpifTt2YXIgYz0oMStNYXRoLnNxcnQoNSkpLzIsZD0xL2M7VEhSRUUuUG9seWhlZHJvbkdlb21ldHJ5LmNhbGwodGhpcyxbLTEsLTEsLTEsLTEsLTEsMSwtMSwxLC0xLC0xLDEsMSwxLC0xLC0xLDEsLTEsMSwxLDEsLTEsMSwxLDEsMCwtZCwtYywwLC1kLGMsMCxkLC1jLDAsZCxjLC1kLC1jLDAsLWQsYywwLGQsLWMsMCxkLGMsMCwtYywwLC1kLGMsMCwtZCwtYywwLGQsYywwLGRdLFszLDExLDcsMyw3LDE1LDMsMTUsMTMsNywxOSwxNyw3LDE3LDYsNyw2LDE1LDE3LDQsOCwxNyw4LDEwLDE3LDEwLDYsOCwwLDE2LDgsMTYsMiw4LDIsMTAsMCwxMiwxLDAsMSwxOCwwLDE4LDE2LDYsMTAsMiw2LDIsMTMsNiwxMywxNSwyLDE2LDE4LDIsMTgsMywyLDMsMTMsMTgsMSw5LDE4LDksMTEsMTgsMTEsMyw0LDE0LDEyLDQsMTIsMCw0LDAsOCwxMSw5LDUsMTEsNSwxOSxcbjExLDE5LDcsMTksNSwxNCwxOSwxNCw0LDE5LDQsMTcsMSwxMiwxNCwxLDE0LDUsMSw1LDldLGEsYil9O1RIUkVFLkRvZGVjYWhlZHJvbkdlb21ldHJ5LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkdlb21ldHJ5LnByb3RvdHlwZSk7VEhSRUUuRG9kZWNhaGVkcm9uR2VvbWV0cnkucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkRvZGVjYWhlZHJvbkdlb21ldHJ5O1xuVEhSRUUuSWNvc2FoZWRyb25HZW9tZXRyeT1mdW5jdGlvbihhLGIpe3ZhciBjPSgxK01hdGguc3FydCg1KSkvMjtUSFJFRS5Qb2x5aGVkcm9uR2VvbWV0cnkuY2FsbCh0aGlzLFstMSxjLDAsMSxjLDAsLTEsLWMsMCwxLC1jLDAsMCwtMSxjLDAsMSxjLDAsLTEsLWMsMCwxLC1jLGMsMCwtMSxjLDAsMSwtYywwLC0xLC1jLDAsMV0sWzAsMTEsNSwwLDUsMSwwLDEsNywwLDcsMTAsMCwxMCwxMSwxLDUsOSw1LDExLDQsMTEsMTAsMiwxMCw3LDYsNywxLDgsMyw5LDQsMyw0LDIsMywyLDYsMyw2LDgsMyw4LDksNCw5LDUsMiw0LDExLDYsMiwxMCw4LDYsNyw5LDgsMV0sYSxiKTt0aGlzLnR5cGU9XCJJY29zYWhlZHJvbkdlb21ldHJ5XCI7dGhpcy5wYXJhbWV0ZXJzPXtyYWRpdXM6YSxkZXRhaWw6Yn19O1RIUkVFLkljb3NhaGVkcm9uR2VvbWV0cnkucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuR2VvbWV0cnkucHJvdG90eXBlKTtcblRIUkVFLkljb3NhaGVkcm9uR2VvbWV0cnkucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkljb3NhaGVkcm9uR2VvbWV0cnk7VEhSRUUuT2N0YWhlZHJvbkdlb21ldHJ5PWZ1bmN0aW9uKGEsYil7dGhpcy5wYXJhbWV0ZXJzPXtyYWRpdXM6YSxkZXRhaWw6Yn07VEhSRUUuUG9seWhlZHJvbkdlb21ldHJ5LmNhbGwodGhpcyxbMSwwLDAsLTEsMCwwLDAsMSwwLDAsLTEsMCwwLDAsMSwwLDAsLTFdLFswLDIsNCwwLDQsMywwLDMsNSwwLDUsMiwxLDIsNSwxLDUsMywxLDMsNCwxLDQsMl0sYSxiKTt0aGlzLnR5cGU9XCJPY3RhaGVkcm9uR2VvbWV0cnlcIjt0aGlzLnBhcmFtZXRlcnM9e3JhZGl1czphLGRldGFpbDpifX07VEhSRUUuT2N0YWhlZHJvbkdlb21ldHJ5LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkdlb21ldHJ5LnByb3RvdHlwZSk7VEhSRUUuT2N0YWhlZHJvbkdlb21ldHJ5LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5PY3RhaGVkcm9uR2VvbWV0cnk7XG5USFJFRS5UZXRyYWhlZHJvbkdlb21ldHJ5PWZ1bmN0aW9uKGEsYil7VEhSRUUuUG9seWhlZHJvbkdlb21ldHJ5LmNhbGwodGhpcyxbMSwxLDEsLTEsLTEsMSwtMSwxLC0xLDEsLTEsLTFdLFsyLDEsMCwwLDMsMiwxLDMsMCwyLDMsMV0sYSxiKTt0aGlzLnR5cGU9XCJUZXRyYWhlZHJvbkdlb21ldHJ5XCI7dGhpcy5wYXJhbWV0ZXJzPXtyYWRpdXM6YSxkZXRhaWw6Yn19O1RIUkVFLlRldHJhaGVkcm9uR2VvbWV0cnkucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuR2VvbWV0cnkucHJvdG90eXBlKTtUSFJFRS5UZXRyYWhlZHJvbkdlb21ldHJ5LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5UZXRyYWhlZHJvbkdlb21ldHJ5O1xuVEhSRUUuUGFyYW1ldHJpY0dlb21ldHJ5PWZ1bmN0aW9uKGEsYixjKXtUSFJFRS5HZW9tZXRyeS5jYWxsKHRoaXMpO3RoaXMudHlwZT1cIlBhcmFtZXRyaWNHZW9tZXRyeVwiO3RoaXMucGFyYW1ldGVycz17ZnVuYzphLHNsaWNlczpiLHN0YWNrczpjfTt2YXIgZD10aGlzLnZlcnRpY2VzLGU9dGhpcy5mYWNlcyxmPXRoaXMuZmFjZVZlcnRleFV2c1swXSxnLGgsayxsLHA9YisxO2ZvcihnPTA7Zzw9YztnKyspZm9yKGw9Zy9jLGg9MDtoPD1iO2grKylrPWgvYixrPWEoayxsKSxkLnB1c2goayk7dmFyIHEsbix0LHI7Zm9yKGc9MDtnPGM7ZysrKWZvcihoPTA7aDxiO2grKylhPWcqcCtoLGQ9ZypwK2grMSxsPShnKzEpKnAraCsxLGs9KGcrMSkqcCtoLHE9bmV3IFRIUkVFLlZlY3RvcjIoaC9iLGcvYyksbj1uZXcgVEhSRUUuVmVjdG9yMigoaCsxKS9iLGcvYyksdD1uZXcgVEhSRUUuVmVjdG9yMigoaCsxKS9iLChnKzEpL2MpLHI9bmV3IFRIUkVFLlZlY3RvcjIoaC9iLChnKzEpL2MpLGUucHVzaChuZXcgVEhSRUUuRmFjZTMoYSxcbmQsaykpLGYucHVzaChbcSxuLHJdKSxlLnB1c2gobmV3IFRIUkVFLkZhY2UzKGQsbCxrKSksZi5wdXNoKFtuLmNsb25lKCksdCxyLmNsb25lKCldKTt0aGlzLmNvbXB1dGVGYWNlTm9ybWFscygpO3RoaXMuY29tcHV0ZVZlcnRleE5vcm1hbHMoKX07VEhSRUUuUGFyYW1ldHJpY0dlb21ldHJ5LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkdlb21ldHJ5LnByb3RvdHlwZSk7VEhSRUUuUGFyYW1ldHJpY0dlb21ldHJ5LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5QYXJhbWV0cmljR2VvbWV0cnk7XG5USFJFRS5BeGlzSGVscGVyPWZ1bmN0aW9uKGEpe2E9YXx8MTt2YXIgYj1uZXcgRmxvYXQzMkFycmF5KFswLDAsMCxhLDAsMCwwLDAsMCwwLGEsMCwwLDAsMCwwLDAsYV0pLGM9bmV3IEZsb2F0MzJBcnJheShbMSwwLDAsMSwuNiwwLDAsMSwwLC42LDEsMCwwLDAsMSwwLC42LDFdKTthPW5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeTthLmFkZEF0dHJpYnV0ZShcInBvc2l0aW9uXCIsbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShiLDMpKTthLmFkZEF0dHJpYnV0ZShcImNvbG9yXCIsbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShjLDMpKTtiPW5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7dmVydGV4Q29sb3JzOlRIUkVFLlZlcnRleENvbG9yc30pO1RIUkVFLkxpbmUuY2FsbCh0aGlzLGEsYixUSFJFRS5MaW5lUGllY2VzKX07VEhSRUUuQXhpc0hlbHBlci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5MaW5lLnByb3RvdHlwZSk7XG5USFJFRS5BeGlzSGVscGVyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5BeGlzSGVscGVyO1xuVEhSRUUuQXJyb3dIZWxwZXI9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuR2VvbWV0cnk7YS52ZXJ0aWNlcy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IzKDAsMCwwKSxuZXcgVEhSRUUuVmVjdG9yMygwLDEsMCkpO3ZhciBiPW5ldyBUSFJFRS5DeWxpbmRlckdlb21ldHJ5KDAsLjUsMSw1LDEpO2IuYXBwbHlNYXRyaXgoKG5ldyBUSFJFRS5NYXRyaXg0KS5tYWtlVHJhbnNsYXRpb24oMCwtLjUsMCkpO3JldHVybiBmdW5jdGlvbihjLGQsZSxmLGcsaCl7VEhSRUUuT2JqZWN0M0QuY2FsbCh0aGlzKTt2b2lkIDA9PT1mJiYoZj0xNjc3Njk2MCk7dm9pZCAwPT09ZSYmKGU9MSk7dm9pZCAwPT09ZyYmKGc9LjIqZSk7dm9pZCAwPT09aCYmKGg9LjIqZyk7dGhpcy5wb3NpdGlvbi5jb3B5KGQpO3RoaXMubGluZT1uZXcgVEhSRUUuTGluZShhLG5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7Y29sb3I6Zn0pKTt0aGlzLmxpbmUubWF0cml4QXV0b1VwZGF0ZT0hMTt0aGlzLmFkZCh0aGlzLmxpbmUpO1xudGhpcy5jb25lPW5ldyBUSFJFRS5NZXNoKGIsbmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKHtjb2xvcjpmfSkpO3RoaXMuY29uZS5tYXRyaXhBdXRvVXBkYXRlPSExO3RoaXMuYWRkKHRoaXMuY29uZSk7dGhpcy5zZXREaXJlY3Rpb24oYyk7dGhpcy5zZXRMZW5ndGgoZSxnLGgpfX0oKTtUSFJFRS5BcnJvd0hlbHBlci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5PYmplY3QzRC5wcm90b3R5cGUpO1RIUkVFLkFycm93SGVscGVyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5BcnJvd0hlbHBlcjtcblRIUkVFLkFycm93SGVscGVyLnByb3RvdHlwZS5zZXREaXJlY3Rpb249ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVEhSRUUuVmVjdG9yMyxiO3JldHVybiBmdW5jdGlvbihjKXsuOTk5OTk8Yy55P3RoaXMucXVhdGVybmlvbi5zZXQoMCwwLDAsMSk6LS45OTk5OT5jLnk/dGhpcy5xdWF0ZXJuaW9uLnNldCgxLDAsMCwwKTooYS5zZXQoYy56LDAsLWMueCkubm9ybWFsaXplKCksYj1NYXRoLmFjb3MoYy55KSx0aGlzLnF1YXRlcm5pb24uc2V0RnJvbUF4aXNBbmdsZShhLGIpKX19KCk7VEhSRUUuQXJyb3dIZWxwZXIucHJvdG90eXBlLnNldExlbmd0aD1mdW5jdGlvbihhLGIsYyl7dm9pZCAwPT09YiYmKGI9LjIqYSk7dm9pZCAwPT09YyYmKGM9LjIqYik7dGhpcy5saW5lLnNjYWxlLnNldCgxLGEtYiwxKTt0aGlzLmxpbmUudXBkYXRlTWF0cml4KCk7dGhpcy5jb25lLnNjYWxlLnNldChjLGIsYyk7dGhpcy5jb25lLnBvc2l0aW9uLnk9YTt0aGlzLmNvbmUudXBkYXRlTWF0cml4KCl9O1xuVEhSRUUuQXJyb3dIZWxwZXIucHJvdG90eXBlLnNldENvbG9yPWZ1bmN0aW9uKGEpe3RoaXMubGluZS5tYXRlcmlhbC5jb2xvci5zZXQoYSk7dGhpcy5jb25lLm1hdGVyaWFsLmNvbG9yLnNldChhKX07VEhSRUUuQm94SGVscGVyPWZ1bmN0aW9uKGEpe3ZhciBiPW5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeTtiLmFkZEF0dHJpYnV0ZShcInBvc2l0aW9uXCIsbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShuZXcgRmxvYXQzMkFycmF5KDcyKSwzKSk7VEhSRUUuTGluZS5jYWxsKHRoaXMsYixuZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoe2NvbG9yOjE2Nzc2OTYwfSksVEhSRUUuTGluZVBpZWNlcyk7dm9pZCAwIT09YSYmdGhpcy51cGRhdGUoYSl9O1RIUkVFLkJveEhlbHBlci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5MaW5lLnByb3RvdHlwZSk7VEhSRUUuQm94SGVscGVyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5Cb3hIZWxwZXI7XG5USFJFRS5Cb3hIZWxwZXIucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihhKXt2YXIgYj1hLmdlb21ldHJ5O251bGw9PT1iLmJvdW5kaW5nQm94JiZiLmNvbXB1dGVCb3VuZGluZ0JveCgpO3ZhciBjPWIuYm91bmRpbmdCb3gubWluLGI9Yi5ib3VuZGluZ0JveC5tYXgsZD10aGlzLmdlb21ldHJ5LmF0dHJpYnV0ZXMucG9zaXRpb24uYXJyYXk7ZFswXT1iLng7ZFsxXT1iLnk7ZFsyXT1iLno7ZFszXT1jLng7ZFs0XT1iLnk7ZFs1XT1iLno7ZFs2XT1jLng7ZFs3XT1iLnk7ZFs4XT1iLno7ZFs5XT1jLng7ZFsxMF09Yy55O2RbMTFdPWIuejtkWzEyXT1jLng7ZFsxM109Yy55O2RbMTRdPWIuejtkWzE1XT1iLng7ZFsxNl09Yy55O2RbMTddPWIuejtkWzE4XT1iLng7ZFsxOV09Yy55O2RbMjBdPWIuejtkWzIxXT1iLng7ZFsyMl09Yi55O2RbMjNdPWIuejtkWzI0XT1iLng7ZFsyNV09Yi55O2RbMjZdPWMuejtkWzI3XT1jLng7ZFsyOF09Yi55O2RbMjldPWMuejtkWzMwXT1jLng7ZFszMV09Yi55O1xuZFszMl09Yy56O2RbMzNdPWMueDtkWzM0XT1jLnk7ZFszNV09Yy56O2RbMzZdPWMueDtkWzM3XT1jLnk7ZFszOF09Yy56O2RbMzldPWIueDtkWzQwXT1jLnk7ZFs0MV09Yy56O2RbNDJdPWIueDtkWzQzXT1jLnk7ZFs0NF09Yy56O2RbNDVdPWIueDtkWzQ2XT1iLnk7ZFs0N109Yy56O2RbNDhdPWIueDtkWzQ5XT1iLnk7ZFs1MF09Yi56O2RbNTFdPWIueDtkWzUyXT1iLnk7ZFs1M109Yy56O2RbNTRdPWMueDtkWzU1XT1iLnk7ZFs1Nl09Yi56O2RbNTddPWMueDtkWzU4XT1iLnk7ZFs1OV09Yy56O2RbNjBdPWMueDtkWzYxXT1jLnk7ZFs2Ml09Yi56O2RbNjNdPWMueDtkWzY0XT1jLnk7ZFs2NV09Yy56O2RbNjZdPWIueDtkWzY3XT1jLnk7ZFs2OF09Yi56O2RbNjldPWIueDtkWzcwXT1jLnk7ZFs3MV09Yy56O3RoaXMuZ2VvbWV0cnkuYXR0cmlidXRlcy5wb3NpdGlvbi5uZWVkc1VwZGF0ZT0hMDt0aGlzLmdlb21ldHJ5LmNvbXB1dGVCb3VuZGluZ1NwaGVyZSgpO3RoaXMubWF0cml4PWEubWF0cml4V29ybGQ7XG50aGlzLm1hdHJpeEF1dG9VcGRhdGU9ITF9O1RIUkVFLkJvdW5kaW5nQm94SGVscGVyPWZ1bmN0aW9uKGEsYil7dmFyIGM9dm9pZCAwIT09Yj9iOjg5NDc4NDg7dGhpcy5vYmplY3Q9YTt0aGlzLmJveD1uZXcgVEhSRUUuQm94MztUSFJFRS5NZXNoLmNhbGwodGhpcyxuZXcgVEhSRUUuQm94R2VvbWV0cnkoMSwxLDEpLG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCh7Y29sb3I6Yyx3aXJlZnJhbWU6ITB9KSl9O1RIUkVFLkJvdW5kaW5nQm94SGVscGVyLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk1lc2gucHJvdG90eXBlKTtUSFJFRS5Cb3VuZGluZ0JveEhlbHBlci5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuQm91bmRpbmdCb3hIZWxwZXI7VEhSRUUuQm91bmRpbmdCb3hIZWxwZXIucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3RoaXMuYm94LnNldEZyb21PYmplY3QodGhpcy5vYmplY3QpO3RoaXMuYm94LnNpemUodGhpcy5zY2FsZSk7dGhpcy5ib3guY2VudGVyKHRoaXMucG9zaXRpb24pfTtcblRIUkVFLkNhbWVyYUhlbHBlcj1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKGEsYixkKXtjKGEsZCk7YyhiLGQpfWZ1bmN0aW9uIGMoYSxiKXtkLnZlcnRpY2VzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjMpO2QuY29sb3JzLnB1c2gobmV3IFRIUkVFLkNvbG9yKGIpKTt2b2lkIDA9PT1mW2FdJiYoZlthXT1bXSk7ZlthXS5wdXNoKGQudmVydGljZXMubGVuZ3RoLTEpfXZhciBkPW5ldyBUSFJFRS5HZW9tZXRyeSxlPW5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7Y29sb3I6MTY3NzcyMTUsdmVydGV4Q29sb3JzOlRIUkVFLkZhY2VDb2xvcnN9KSxmPXt9O2IoXCJuMVwiLFwibjJcIiwxNjc1NTIwMCk7YihcIm4yXCIsXCJuNFwiLDE2NzU1MjAwKTtiKFwibjRcIixcIm4zXCIsMTY3NTUyMDApO2IoXCJuM1wiLFwibjFcIiwxNjc1NTIwMCk7YihcImYxXCIsXCJmMlwiLDE2NzU1MjAwKTtiKFwiZjJcIixcImY0XCIsMTY3NTUyMDApO2IoXCJmNFwiLFwiZjNcIiwxNjc1NTIwMCk7YihcImYzXCIsXCJmMVwiLDE2NzU1MjAwKTtiKFwibjFcIixcImYxXCIsMTY3NTUyMDApO1xuYihcIm4yXCIsXCJmMlwiLDE2NzU1MjAwKTtiKFwibjNcIixcImYzXCIsMTY3NTUyMDApO2IoXCJuNFwiLFwiZjRcIiwxNjc1NTIwMCk7YihcInBcIixcIm4xXCIsMTY3MTE2ODApO2IoXCJwXCIsXCJuMlwiLDE2NzExNjgwKTtiKFwicFwiLFwibjNcIiwxNjcxMTY4MCk7YihcInBcIixcIm40XCIsMTY3MTE2ODApO2IoXCJ1MVwiLFwidTJcIiw0Mzc3NSk7YihcInUyXCIsXCJ1M1wiLDQzNzc1KTtiKFwidTNcIixcInUxXCIsNDM3NzUpO2IoXCJjXCIsXCJ0XCIsMTY3NzcyMTUpO2IoXCJwXCIsXCJjXCIsMzM1NTQ0Myk7YihcImNuMVwiLFwiY24yXCIsMzM1NTQ0Myk7YihcImNuM1wiLFwiY240XCIsMzM1NTQ0Myk7YihcImNmMVwiLFwiY2YyXCIsMzM1NTQ0Myk7YihcImNmM1wiLFwiY2Y0XCIsMzM1NTQ0Myk7VEhSRUUuTGluZS5jYWxsKHRoaXMsZCxlLFRIUkVFLkxpbmVQaWVjZXMpO3RoaXMuY2FtZXJhPWE7dGhpcy5tYXRyaXg9YS5tYXRyaXhXb3JsZDt0aGlzLm1hdHJpeEF1dG9VcGRhdGU9ITE7dGhpcy5wb2ludE1hcD1mO3RoaXMudXBkYXRlKCl9O1xuVEhSRUUuQ2FtZXJhSGVscGVyLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkxpbmUucHJvdG90eXBlKTtUSFJFRS5DYW1lcmFIZWxwZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkNhbWVyYUhlbHBlcjtcblRIUkVFLkNhbWVyYUhlbHBlci5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7dmFyIGEsYixjPW5ldyBUSFJFRS5WZWN0b3IzLGQ9bmV3IFRIUkVFLkNhbWVyYSxlPWZ1bmN0aW9uKGUsZyxoLGspe2Muc2V0KGcsaCxrKS51bnByb2plY3QoZCk7ZT1iW2VdO2lmKHZvaWQgMCE9PWUpZm9yKGc9MCxoPWUubGVuZ3RoO2c8aDtnKyspYS52ZXJ0aWNlc1tlW2ddXS5jb3B5KGMpfTtyZXR1cm4gZnVuY3Rpb24oKXthPXRoaXMuZ2VvbWV0cnk7Yj10aGlzLnBvaW50TWFwO2QucHJvamVjdGlvbk1hdHJpeC5jb3B5KHRoaXMuY2FtZXJhLnByb2plY3Rpb25NYXRyaXgpO2UoXCJjXCIsMCwwLC0xKTtlKFwidFwiLDAsMCwxKTtlKFwibjFcIiwtMSwtMSwtMSk7ZShcIm4yXCIsMSwtMSwtMSk7ZShcIm4zXCIsLTEsMSwtMSk7ZShcIm40XCIsMSwxLC0xKTtlKFwiZjFcIiwtMSwtMSwxKTtlKFwiZjJcIiwxLC0xLDEpO2UoXCJmM1wiLC0xLDEsMSk7ZShcImY0XCIsMSwxLDEpO2UoXCJ1MVwiLC43LDEuMSwtMSk7ZShcInUyXCIsLS43LDEuMSxcbi0xKTtlKFwidTNcIiwwLDIsLTEpO2UoXCJjZjFcIiwtMSwwLDEpO2UoXCJjZjJcIiwxLDAsMSk7ZShcImNmM1wiLDAsLTEsMSk7ZShcImNmNFwiLDAsMSwxKTtlKFwiY24xXCIsLTEsMCwtMSk7ZShcImNuMlwiLDEsMCwtMSk7ZShcImNuM1wiLDAsLTEsLTEpO2UoXCJjbjRcIiwwLDEsLTEpO2EudmVydGljZXNOZWVkVXBkYXRlPSEwfX0oKTtcblRIUkVFLkRpcmVjdGlvbmFsTGlnaHRIZWxwZXI9ZnVuY3Rpb24oYSxiKXtUSFJFRS5PYmplY3QzRC5jYWxsKHRoaXMpO3RoaXMubGlnaHQ9YTt0aGlzLmxpZ2h0LnVwZGF0ZU1hdHJpeFdvcmxkKCk7dGhpcy5tYXRyaXg9YS5tYXRyaXhXb3JsZDt0aGlzLm1hdHJpeEF1dG9VcGRhdGU9ITE7Yj1ifHwxO3ZhciBjPW5ldyBUSFJFRS5HZW9tZXRyeTtjLnZlcnRpY2VzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjMoLWIsYiwwKSxuZXcgVEhSRUUuVmVjdG9yMyhiLGIsMCksbmV3IFRIUkVFLlZlY3RvcjMoYiwtYiwwKSxuZXcgVEhSRUUuVmVjdG9yMygtYiwtYiwwKSxuZXcgVEhSRUUuVmVjdG9yMygtYixiLDApKTt2YXIgZD1uZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoe2ZvZzohMX0pO2QuY29sb3IuY29weSh0aGlzLmxpZ2h0LmNvbG9yKS5tdWx0aXBseVNjYWxhcih0aGlzLmxpZ2h0LmludGVuc2l0eSk7dGhpcy5saWdodFBsYW5lPW5ldyBUSFJFRS5MaW5lKGMsZCk7dGhpcy5hZGQodGhpcy5saWdodFBsYW5lKTtcbmM9bmV3IFRIUkVFLkdlb21ldHJ5O2MudmVydGljZXMucHVzaChuZXcgVEhSRUUuVmVjdG9yMyxuZXcgVEhSRUUuVmVjdG9yMyk7ZD1uZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoe2ZvZzohMX0pO2QuY29sb3IuY29weSh0aGlzLmxpZ2h0LmNvbG9yKS5tdWx0aXBseVNjYWxhcih0aGlzLmxpZ2h0LmludGVuc2l0eSk7dGhpcy50YXJnZXRMaW5lPW5ldyBUSFJFRS5MaW5lKGMsZCk7dGhpcy5hZGQodGhpcy50YXJnZXRMaW5lKTt0aGlzLnVwZGF0ZSgpfTtUSFJFRS5EaXJlY3Rpb25hbExpZ2h0SGVscGVyLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk9iamVjdDNELnByb3RvdHlwZSk7VEhSRUUuRGlyZWN0aW9uYWxMaWdodEhlbHBlci5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuRGlyZWN0aW9uYWxMaWdodEhlbHBlcjtcblRIUkVFLkRpcmVjdGlvbmFsTGlnaHRIZWxwZXIucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aGlzLmxpZ2h0UGxhbmUuZ2VvbWV0cnkuZGlzcG9zZSgpO3RoaXMubGlnaHRQbGFuZS5tYXRlcmlhbC5kaXNwb3NlKCk7dGhpcy50YXJnZXRMaW5lLmdlb21ldHJ5LmRpc3Bvc2UoKTt0aGlzLnRhcmdldExpbmUubWF0ZXJpYWwuZGlzcG9zZSgpfTtcblRIUkVFLkRpcmVjdGlvbmFsTGlnaHRIZWxwZXIucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzLGI9bmV3IFRIUkVFLlZlY3RvcjMsYz1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oKXthLnNldEZyb21NYXRyaXhQb3NpdGlvbih0aGlzLmxpZ2h0Lm1hdHJpeFdvcmxkKTtiLnNldEZyb21NYXRyaXhQb3NpdGlvbih0aGlzLmxpZ2h0LnRhcmdldC5tYXRyaXhXb3JsZCk7Yy5zdWJWZWN0b3JzKGIsYSk7dGhpcy5saWdodFBsYW5lLmxvb2tBdChjKTt0aGlzLmxpZ2h0UGxhbmUubWF0ZXJpYWwuY29sb3IuY29weSh0aGlzLmxpZ2h0LmNvbG9yKS5tdWx0aXBseVNjYWxhcih0aGlzLmxpZ2h0LmludGVuc2l0eSk7dGhpcy50YXJnZXRMaW5lLmdlb21ldHJ5LnZlcnRpY2VzWzFdLmNvcHkoYyk7dGhpcy50YXJnZXRMaW5lLmdlb21ldHJ5LnZlcnRpY2VzTmVlZFVwZGF0ZT0hMDt0aGlzLnRhcmdldExpbmUubWF0ZXJpYWwuY29sb3IuY29weSh0aGlzLmxpZ2h0UGxhbmUubWF0ZXJpYWwuY29sb3IpfX0oKTtcblRIUkVFLkVkZ2VzSGVscGVyPWZ1bmN0aW9uKGEsYixjKXtiPXZvaWQgMCE9PWI/YjoxNjc3NzIxNTtjPU1hdGguY29zKFRIUkVFLk1hdGguZGVnVG9SYWQodm9pZCAwIT09Yz9jOjEpKTt2YXIgZD1bMCwwXSxlPXt9LGY9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS1ifSxnPVtcImFcIixcImJcIixcImNcIl0saD1uZXcgVEhSRUUuQnVmZmVyR2VvbWV0cnksazthLmdlb21ldHJ5IGluc3RhbmNlb2YgVEhSRUUuQnVmZmVyR2VvbWV0cnk/KGs9bmV3IFRIUkVFLkdlb21ldHJ5LGsuZnJvbUJ1ZmZlckdlb21ldHJ5KGEuZ2VvbWV0cnkpKTprPWEuZ2VvbWV0cnkuY2xvbmUoKTtrLm1lcmdlVmVydGljZXMoKTtrLmNvbXB1dGVGYWNlTm9ybWFscygpO3ZhciBsPWsudmVydGljZXM7az1rLmZhY2VzO2Zvcih2YXIgcD0wLHE9MCxuPWsubGVuZ3RoO3E8bjtxKyspZm9yKHZhciB0PWtbcV0scj0wOzM+cjtyKyspe2RbMF09dFtnW3JdXTtkWzFdPXRbZ1socisxKSUzXV07ZC5zb3J0KGYpO3ZhciBzPWQudG9TdHJpbmcoKTtcbnZvaWQgMD09PWVbc10/KGVbc109e3ZlcnQxOmRbMF0sdmVydDI6ZFsxXSxmYWNlMTpxLGZhY2UyOnZvaWQgMH0scCsrKTplW3NdLmZhY2UyPXF9ZD1uZXcgRmxvYXQzMkFycmF5KDYqcCk7Zj0wO2ZvcihzIGluIGUpaWYoZz1lW3NdLHZvaWQgMD09PWcuZmFjZTJ8fGtbZy5mYWNlMV0ubm9ybWFsLmRvdChrW2cuZmFjZTJdLm5vcm1hbCk8PWMpcD1sW2cudmVydDFdLGRbZisrXT1wLngsZFtmKytdPXAueSxkW2YrK109cC56LHA9bFtnLnZlcnQyXSxkW2YrK109cC54LGRbZisrXT1wLnksZFtmKytdPXAuejtoLmFkZEF0dHJpYnV0ZShcInBvc2l0aW9uXCIsbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShkLDMpKTtUSFJFRS5MaW5lLmNhbGwodGhpcyxoLG5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7Y29sb3I6Yn0pLFRIUkVFLkxpbmVQaWVjZXMpO3RoaXMubWF0cml4PWEubWF0cml4V29ybGQ7dGhpcy5tYXRyaXhBdXRvVXBkYXRlPSExfTtcblRIUkVFLkVkZ2VzSGVscGVyLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLkxpbmUucHJvdG90eXBlKTtUSFJFRS5FZGdlc0hlbHBlci5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuRWRnZXNIZWxwZXI7XG5USFJFRS5GYWNlTm9ybWFsc0hlbHBlcj1mdW5jdGlvbihhLGIsYyxkKXt0aGlzLm9iamVjdD1hO3RoaXMuc2l6ZT12b2lkIDAhPT1iP2I6MTthPXZvaWQgMCE9PWM/YzoxNjc3Njk2MDtkPXZvaWQgMCE9PWQ/ZDoxO2I9bmV3IFRIUkVFLkdlb21ldHJ5O2M9MDtmb3IodmFyIGU9dGhpcy5vYmplY3QuZ2VvbWV0cnkuZmFjZXMubGVuZ3RoO2M8ZTtjKyspYi52ZXJ0aWNlcy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IzLG5ldyBUSFJFRS5WZWN0b3IzKTtUSFJFRS5MaW5lLmNhbGwodGhpcyxiLG5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7Y29sb3I6YSxsaW5ld2lkdGg6ZH0pLFRIUkVFLkxpbmVQaWVjZXMpO3RoaXMubWF0cml4QXV0b1VwZGF0ZT0hMTt0aGlzLm5vcm1hbE1hdHJpeD1uZXcgVEhSRUUuTWF0cml4Mzt0aGlzLnVwZGF0ZSgpfTtUSFJFRS5GYWNlTm9ybWFsc0hlbHBlci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5MaW5lLnByb3RvdHlwZSk7XG5USFJFRS5GYWNlTm9ybWFsc0hlbHBlci5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuRmFjZU5vcm1hbHNIZWxwZXI7XG5USFJFRS5GYWNlTm9ybWFsc0hlbHBlci5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5nZW9tZXRyeS52ZXJ0aWNlcyxiPXRoaXMub2JqZWN0LGM9Yi5nZW9tZXRyeS52ZXJ0aWNlcyxkPWIuZ2VvbWV0cnkuZmFjZXMsZT1iLm1hdHJpeFdvcmxkO2IudXBkYXRlTWF0cml4V29ybGQoITApO3RoaXMubm9ybWFsTWF0cml4LmdldE5vcm1hbE1hdHJpeChlKTtmb3IodmFyIGY9Yj0wLGc9ZC5sZW5ndGg7YjxnO2IrKyxmKz0yKXt2YXIgaD1kW2JdO2FbZl0uY29weShjW2guYV0pLmFkZChjW2guYl0pLmFkZChjW2guY10pLmRpdmlkZVNjYWxhcigzKS5hcHBseU1hdHJpeDQoZSk7YVtmKzFdLmNvcHkoaC5ub3JtYWwpLmFwcGx5TWF0cml4Myh0aGlzLm5vcm1hbE1hdHJpeCkubm9ybWFsaXplKCkubXVsdGlwbHlTY2FsYXIodGhpcy5zaXplKS5hZGQoYVtmXSl9dGhpcy5nZW9tZXRyeS52ZXJ0aWNlc05lZWRVcGRhdGU9ITA7cmV0dXJuIHRoaXN9O1xuVEhSRUUuR3JpZEhlbHBlcj1mdW5jdGlvbihhLGIpe3ZhciBjPW5ldyBUSFJFRS5HZW9tZXRyeSxkPW5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7dmVydGV4Q29sb3JzOlRIUkVFLlZlcnRleENvbG9yc30pO3RoaXMuY29sb3IxPW5ldyBUSFJFRS5Db2xvcig0NDczOTI0KTt0aGlzLmNvbG9yMj1uZXcgVEhSRUUuQ29sb3IoODk0Nzg0OCk7Zm9yKHZhciBlPS1hO2U8PWE7ZSs9Yil7Yy52ZXJ0aWNlcy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IzKC1hLDAsZSksbmV3IFRIUkVFLlZlY3RvcjMoYSwwLGUpLG5ldyBUSFJFRS5WZWN0b3IzKGUsMCwtYSksbmV3IFRIUkVFLlZlY3RvcjMoZSwwLGEpKTt2YXIgZj0wPT09ZT90aGlzLmNvbG9yMTp0aGlzLmNvbG9yMjtjLmNvbG9ycy5wdXNoKGYsZixmLGYpfVRIUkVFLkxpbmUuY2FsbCh0aGlzLGMsZCxUSFJFRS5MaW5lUGllY2VzKX07VEhSRUUuR3JpZEhlbHBlci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5MaW5lLnByb3RvdHlwZSk7XG5USFJFRS5HcmlkSGVscGVyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5HcmlkSGVscGVyO1RIUkVFLkdyaWRIZWxwZXIucHJvdG90eXBlLnNldENvbG9ycz1mdW5jdGlvbihhLGIpe3RoaXMuY29sb3IxLnNldChhKTt0aGlzLmNvbG9yMi5zZXQoYik7dGhpcy5nZW9tZXRyeS5jb2xvcnNOZWVkVXBkYXRlPSEwfTtcblRIUkVFLkhlbWlzcGhlcmVMaWdodEhlbHBlcj1mdW5jdGlvbihhLGIpe1RIUkVFLk9iamVjdDNELmNhbGwodGhpcyk7dGhpcy5saWdodD1hO3RoaXMubGlnaHQudXBkYXRlTWF0cml4V29ybGQoKTt0aGlzLm1hdHJpeD1hLm1hdHJpeFdvcmxkO3RoaXMubWF0cml4QXV0b1VwZGF0ZT0hMTt0aGlzLmNvbG9ycz1bbmV3IFRIUkVFLkNvbG9yLG5ldyBUSFJFRS5Db2xvcl07dmFyIGM9bmV3IFRIUkVFLlNwaGVyZUdlb21ldHJ5KGIsNCwyKTtjLmFwcGx5TWF0cml4KChuZXcgVEhSRUUuTWF0cml4NCkubWFrZVJvdGF0aW9uWCgtTWF0aC5QSS8yKSk7Zm9yKHZhciBkPTA7OD5kO2QrKyljLmZhY2VzW2RdLmNvbG9yPXRoaXMuY29sb3JzWzQ+ZD8wOjFdO2Q9bmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKHt2ZXJ0ZXhDb2xvcnM6VEhSRUUuRmFjZUNvbG9ycyx3aXJlZnJhbWU6ITB9KTt0aGlzLmxpZ2h0U3BoZXJlPW5ldyBUSFJFRS5NZXNoKGMsZCk7dGhpcy5hZGQodGhpcy5saWdodFNwaGVyZSk7XG50aGlzLnVwZGF0ZSgpfTtUSFJFRS5IZW1pc3BoZXJlTGlnaHRIZWxwZXIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuT2JqZWN0M0QucHJvdG90eXBlKTtUSFJFRS5IZW1pc3BoZXJlTGlnaHRIZWxwZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkhlbWlzcGhlcmVMaWdodEhlbHBlcjtUSFJFRS5IZW1pc3BoZXJlTGlnaHRIZWxwZXIucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aGlzLmxpZ2h0U3BoZXJlLmdlb21ldHJ5LmRpc3Bvc2UoKTt0aGlzLmxpZ2h0U3BoZXJlLm1hdGVyaWFsLmRpc3Bvc2UoKX07XG5USFJFRS5IZW1pc3BoZXJlTGlnaHRIZWxwZXIucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciBhPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbigpe3RoaXMuY29sb3JzWzBdLmNvcHkodGhpcy5saWdodC5jb2xvcikubXVsdGlwbHlTY2FsYXIodGhpcy5saWdodC5pbnRlbnNpdHkpO3RoaXMuY29sb3JzWzFdLmNvcHkodGhpcy5saWdodC5ncm91bmRDb2xvcikubXVsdGlwbHlTY2FsYXIodGhpcy5saWdodC5pbnRlbnNpdHkpO3RoaXMubGlnaHRTcGhlcmUubG9va0F0KGEuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKHRoaXMubGlnaHQubWF0cml4V29ybGQpLm5lZ2F0ZSgpKTt0aGlzLmxpZ2h0U3BoZXJlLmdlb21ldHJ5LmNvbG9yc05lZWRVcGRhdGU9ITB9fSgpO1xuVEhSRUUuUG9pbnRMaWdodEhlbHBlcj1mdW5jdGlvbihhLGIpe3RoaXMubGlnaHQ9YTt0aGlzLmxpZ2h0LnVwZGF0ZU1hdHJpeFdvcmxkKCk7dmFyIGM9bmV3IFRIUkVFLlNwaGVyZUdlb21ldHJ5KGIsNCwyKSxkPW5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCh7d2lyZWZyYW1lOiEwLGZvZzohMX0pO2QuY29sb3IuY29weSh0aGlzLmxpZ2h0LmNvbG9yKS5tdWx0aXBseVNjYWxhcih0aGlzLmxpZ2h0LmludGVuc2l0eSk7VEhSRUUuTWVzaC5jYWxsKHRoaXMsYyxkKTt0aGlzLm1hdHJpeD10aGlzLmxpZ2h0Lm1hdHJpeFdvcmxkO3RoaXMubWF0cml4QXV0b1VwZGF0ZT0hMX07VEhSRUUuUG9pbnRMaWdodEhlbHBlci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5NZXNoLnByb3RvdHlwZSk7VEhSRUUuUG9pbnRMaWdodEhlbHBlci5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuUG9pbnRMaWdodEhlbHBlcjtcblRIUkVFLlBvaW50TGlnaHRIZWxwZXIucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXt0aGlzLmdlb21ldHJ5LmRpc3Bvc2UoKTt0aGlzLm1hdGVyaWFsLmRpc3Bvc2UoKX07VEhSRUUuUG9pbnRMaWdodEhlbHBlci5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7dGhpcy5tYXRlcmlhbC5jb2xvci5jb3B5KHRoaXMubGlnaHQuY29sb3IpLm11bHRpcGx5U2NhbGFyKHRoaXMubGlnaHQuaW50ZW5zaXR5KX07XG5USFJFRS5Ta2VsZXRvbkhlbHBlcj1mdW5jdGlvbihhKXt0aGlzLmJvbmVzPXRoaXMuZ2V0Qm9uZUxpc3QoYSk7Zm9yKHZhciBiPW5ldyBUSFJFRS5HZW9tZXRyeSxjPTA7Yzx0aGlzLmJvbmVzLmxlbmd0aDtjKyspdGhpcy5ib25lc1tjXS5wYXJlbnQgaW5zdGFuY2VvZiBUSFJFRS5Cb25lJiYoYi52ZXJ0aWNlcy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IzKSxiLnZlcnRpY2VzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjMpLGIuY29sb3JzLnB1c2gobmV3IFRIUkVFLkNvbG9yKDAsMCwxKSksYi5jb2xvcnMucHVzaChuZXcgVEhSRUUuQ29sb3IoMCwxLDApKSk7Yz1uZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoe3ZlcnRleENvbG9yczpUSFJFRS5WZXJ0ZXhDb2xvcnMsZGVwdGhUZXN0OiExLGRlcHRoV3JpdGU6ITEsdHJhbnNwYXJlbnQ6ITB9KTtUSFJFRS5MaW5lLmNhbGwodGhpcyxiLGMsVEhSRUUuTGluZVBpZWNlcyk7dGhpcy5yb290PWE7dGhpcy5tYXRyaXg9YS5tYXRyaXhXb3JsZDtcbnRoaXMubWF0cml4QXV0b1VwZGF0ZT0hMTt0aGlzLnVwZGF0ZSgpfTtUSFJFRS5Ta2VsZXRvbkhlbHBlci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5MaW5lLnByb3RvdHlwZSk7VEhSRUUuU2tlbGV0b25IZWxwZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLlNrZWxldG9uSGVscGVyO1RIUkVFLlNrZWxldG9uSGVscGVyLnByb3RvdHlwZS5nZXRCb25lTGlzdD1mdW5jdGlvbihhKXt2YXIgYj1bXTthIGluc3RhbmNlb2YgVEhSRUUuQm9uZSYmYi5wdXNoKGEpO2Zvcih2YXIgYz0wO2M8YS5jaGlsZHJlbi5sZW5ndGg7YysrKWIucHVzaC5hcHBseShiLHRoaXMuZ2V0Qm9uZUxpc3QoYS5jaGlsZHJlbltjXSkpO3JldHVybiBifTtcblRIUkVFLlNrZWxldG9uSGVscGVyLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oKXtmb3IodmFyIGE9dGhpcy5nZW9tZXRyeSxiPShuZXcgVEhSRUUuTWF0cml4NCkuZ2V0SW52ZXJzZSh0aGlzLnJvb3QubWF0cml4V29ybGQpLGM9bmV3IFRIUkVFLk1hdHJpeDQsZD0wLGU9MDtlPHRoaXMuYm9uZXMubGVuZ3RoO2UrKyl7dmFyIGY9dGhpcy5ib25lc1tlXTtmLnBhcmVudCBpbnN0YW5jZW9mIFRIUkVFLkJvbmUmJihjLm11bHRpcGx5TWF0cmljZXMoYixmLm1hdHJpeFdvcmxkKSxhLnZlcnRpY2VzW2RdLnNldEZyb21NYXRyaXhQb3NpdGlvbihjKSxjLm11bHRpcGx5TWF0cmljZXMoYixmLnBhcmVudC5tYXRyaXhXb3JsZCksYS52ZXJ0aWNlc1tkKzFdLnNldEZyb21NYXRyaXhQb3NpdGlvbihjKSxkKz0yKX1hLnZlcnRpY2VzTmVlZFVwZGF0ZT0hMDthLmNvbXB1dGVCb3VuZGluZ1NwaGVyZSgpfTtcblRIUkVFLlNwb3RMaWdodEhlbHBlcj1mdW5jdGlvbihhKXtUSFJFRS5PYmplY3QzRC5jYWxsKHRoaXMpO3RoaXMubGlnaHQ9YTt0aGlzLmxpZ2h0LnVwZGF0ZU1hdHJpeFdvcmxkKCk7dGhpcy5tYXRyaXg9YS5tYXRyaXhXb3JsZDt0aGlzLm1hdHJpeEF1dG9VcGRhdGU9ITE7YT1uZXcgVEhSRUUuQ3lsaW5kZXJHZW9tZXRyeSgwLDEsMSw4LDEsITApO2EuYXBwbHlNYXRyaXgoKG5ldyBUSFJFRS5NYXRyaXg0KS5tYWtlVHJhbnNsYXRpb24oMCwtLjUsMCkpO2EuYXBwbHlNYXRyaXgoKG5ldyBUSFJFRS5NYXRyaXg0KS5tYWtlUm90YXRpb25YKC1NYXRoLlBJLzIpKTt2YXIgYj1uZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoe3dpcmVmcmFtZTohMCxmb2c6ITF9KTt0aGlzLmNvbmU9bmV3IFRIUkVFLk1lc2goYSxiKTt0aGlzLmFkZCh0aGlzLmNvbmUpO3RoaXMudXBkYXRlKCl9O1RIUkVFLlNwb3RMaWdodEhlbHBlci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5PYmplY3QzRC5wcm90b3R5cGUpO1xuVEhSRUUuU3BvdExpZ2h0SGVscGVyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5TcG90TGlnaHRIZWxwZXI7VEhSRUUuU3BvdExpZ2h0SGVscGVyLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dGhpcy5jb25lLmdlb21ldHJ5LmRpc3Bvc2UoKTt0aGlzLmNvbmUubWF0ZXJpYWwuZGlzcG9zZSgpfTtcblRIUkVFLlNwb3RMaWdodEhlbHBlci5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IFRIUkVFLlZlY3RvcjMsYj1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz10aGlzLmxpZ2h0LmRpc3RhbmNlP3RoaXMubGlnaHQuZGlzdGFuY2U6MUU0LGQ9YypNYXRoLnRhbih0aGlzLmxpZ2h0LmFuZ2xlKTt0aGlzLmNvbmUuc2NhbGUuc2V0KGQsZCxjKTthLnNldEZyb21NYXRyaXhQb3NpdGlvbih0aGlzLmxpZ2h0Lm1hdHJpeFdvcmxkKTtiLnNldEZyb21NYXRyaXhQb3NpdGlvbih0aGlzLmxpZ2h0LnRhcmdldC5tYXRyaXhXb3JsZCk7dGhpcy5jb25lLmxvb2tBdChiLnN1YihhKSk7dGhpcy5jb25lLm1hdGVyaWFsLmNvbG9yLmNvcHkodGhpcy5saWdodC5jb2xvcikubXVsdGlwbHlTY2FsYXIodGhpcy5saWdodC5pbnRlbnNpdHkpfX0oKTtcblRIUkVFLlZlcnRleE5vcm1hbHNIZWxwZXI9ZnVuY3Rpb24oYSxiLGMsZCl7dGhpcy5vYmplY3Q9YTt0aGlzLnNpemU9dm9pZCAwIT09Yj9iOjE7Yj12b2lkIDAhPT1jP2M6MTY3MTE2ODA7ZD12b2lkIDAhPT1kP2Q6MTtjPW5ldyBUSFJFRS5HZW9tZXRyeTthPWEuZ2VvbWV0cnkuZmFjZXM7Zm9yKHZhciBlPTAsZj1hLmxlbmd0aDtlPGY7ZSsrKWZvcih2YXIgZz0wLGg9YVtlXS52ZXJ0ZXhOb3JtYWxzLmxlbmd0aDtnPGg7ZysrKWMudmVydGljZXMucHVzaChuZXcgVEhSRUUuVmVjdG9yMyxuZXcgVEhSRUUuVmVjdG9yMyk7VEhSRUUuTGluZS5jYWxsKHRoaXMsYyxuZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoe2NvbG9yOmIsbGluZXdpZHRoOmR9KSxUSFJFRS5MaW5lUGllY2VzKTt0aGlzLm1hdHJpeEF1dG9VcGRhdGU9ITE7dGhpcy5ub3JtYWxNYXRyaXg9bmV3IFRIUkVFLk1hdHJpeDM7dGhpcy51cGRhdGUoKX07VEhSRUUuVmVydGV4Tm9ybWFsc0hlbHBlci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5MaW5lLnByb3RvdHlwZSk7XG5USFJFRS5WZXJ0ZXhOb3JtYWxzSGVscGVyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5WZXJ0ZXhOb3JtYWxzSGVscGVyO1xuVEhSRUUuVmVydGV4Tm9ybWFsc0hlbHBlci5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGEpe3ZhciBiPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbihhKXthPVtcImFcIixcImJcIixcImNcIixcImRcIl07dGhpcy5vYmplY3QudXBkYXRlTWF0cml4V29ybGQoITApO3RoaXMubm9ybWFsTWF0cml4LmdldE5vcm1hbE1hdHJpeCh0aGlzLm9iamVjdC5tYXRyaXhXb3JsZCk7Zm9yKHZhciBkPXRoaXMuZ2VvbWV0cnkudmVydGljZXMsZT10aGlzLm9iamVjdC5nZW9tZXRyeS52ZXJ0aWNlcyxmPXRoaXMub2JqZWN0Lmdlb21ldHJ5LmZhY2VzLGc9dGhpcy5vYmplY3QubWF0cml4V29ybGQsaD0wLGs9MCxsPWYubGVuZ3RoO2s8bDtrKyspZm9yKHZhciBwPWZba10scT0wLG49cC52ZXJ0ZXhOb3JtYWxzLmxlbmd0aDtxPG47cSsrKXt2YXIgdD1wLnZlcnRleE5vcm1hbHNbcV07ZFtoXS5jb3B5KGVbcFthW3FdXV0pLmFwcGx5TWF0cml4NChnKTtiLmNvcHkodCkuYXBwbHlNYXRyaXgzKHRoaXMubm9ybWFsTWF0cml4KS5ub3JtYWxpemUoKS5tdWx0aXBseVNjYWxhcih0aGlzLnNpemUpO1xuYi5hZGQoZFtoXSk7aCs9MTtkW2hdLmNvcHkoYik7aCs9MX10aGlzLmdlb21ldHJ5LnZlcnRpY2VzTmVlZFVwZGF0ZT0hMDtyZXR1cm4gdGhpc319KCk7XG5USFJFRS5WZXJ0ZXhUYW5nZW50c0hlbHBlcj1mdW5jdGlvbihhLGIsYyxkKXt0aGlzLm9iamVjdD1hO3RoaXMuc2l6ZT12b2lkIDAhPT1iP2I6MTtiPXZvaWQgMCE9PWM/YzoyNTU7ZD12b2lkIDAhPT1kP2Q6MTtjPW5ldyBUSFJFRS5HZW9tZXRyeTthPWEuZ2VvbWV0cnkuZmFjZXM7Zm9yKHZhciBlPTAsZj1hLmxlbmd0aDtlPGY7ZSsrKWZvcih2YXIgZz0wLGg9YVtlXS52ZXJ0ZXhUYW5nZW50cy5sZW5ndGg7ZzxoO2crKyljLnZlcnRpY2VzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjMpLGMudmVydGljZXMucHVzaChuZXcgVEhSRUUuVmVjdG9yMyk7VEhSRUUuTGluZS5jYWxsKHRoaXMsYyxuZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoe2NvbG9yOmIsbGluZXdpZHRoOmR9KSxUSFJFRS5MaW5lUGllY2VzKTt0aGlzLm1hdHJpeEF1dG9VcGRhdGU9ITE7dGhpcy51cGRhdGUoKX07VEhSRUUuVmVydGV4VGFuZ2VudHNIZWxwZXIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuTGluZS5wcm90b3R5cGUpO1xuVEhSRUUuVmVydGV4VGFuZ2VudHNIZWxwZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLlZlcnRleFRhbmdlbnRzSGVscGVyO1xuVEhSRUUuVmVydGV4VGFuZ2VudHNIZWxwZXIucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihhKXt2YXIgYj1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oYSl7YT1bXCJhXCIsXCJiXCIsXCJjXCIsXCJkXCJdO3RoaXMub2JqZWN0LnVwZGF0ZU1hdHJpeFdvcmxkKCEwKTtmb3IodmFyIGQ9dGhpcy5nZW9tZXRyeS52ZXJ0aWNlcyxlPXRoaXMub2JqZWN0Lmdlb21ldHJ5LnZlcnRpY2VzLGY9dGhpcy5vYmplY3QuZ2VvbWV0cnkuZmFjZXMsZz10aGlzLm9iamVjdC5tYXRyaXhXb3JsZCxoPTAsaz0wLGw9Zi5sZW5ndGg7azxsO2srKylmb3IodmFyIHA9ZltrXSxxPTAsbj1wLnZlcnRleFRhbmdlbnRzLmxlbmd0aDtxPG47cSsrKXt2YXIgdD1wLnZlcnRleFRhbmdlbnRzW3FdO2RbaF0uY29weShlW3BbYVtxXV1dKS5hcHBseU1hdHJpeDQoZyk7Yi5jb3B5KHQpLnRyYW5zZm9ybURpcmVjdGlvbihnKS5tdWx0aXBseVNjYWxhcih0aGlzLnNpemUpO2IuYWRkKGRbaF0pO2grPTE7ZFtoXS5jb3B5KGIpO1xuaCs9MX10aGlzLmdlb21ldHJ5LnZlcnRpY2VzTmVlZFVwZGF0ZT0hMDtyZXR1cm4gdGhpc319KCk7XG5USFJFRS5XaXJlZnJhbWVIZWxwZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz12b2lkIDAhPT1iP2I6MTY3NzcyMTUsZD1bMCwwXSxlPXt9LGY9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS1ifSxnPVtcImFcIixcImJcIixcImNcIl0saD1uZXcgVEhSRUUuQnVmZmVyR2VvbWV0cnk7aWYoYS5nZW9tZXRyeSBpbnN0YW5jZW9mIFRIUkVFLkdlb21ldHJ5KXtmb3IodmFyIGs9YS5nZW9tZXRyeS52ZXJ0aWNlcyxsPWEuZ2VvbWV0cnkuZmFjZXMscD0wLHE9bmV3IFVpbnQzMkFycmF5KDYqbC5sZW5ndGgpLG49MCx0PWwubGVuZ3RoO248dDtuKyspZm9yKHZhciByPWxbbl0scz0wOzM+cztzKyspe2RbMF09cltnW3NdXTtkWzFdPXJbZ1socysxKSUzXV07ZC5zb3J0KGYpO3ZhciB1PWQudG9TdHJpbmcoKTt2b2lkIDA9PT1lW3VdJiYocVsyKnBdPWRbMF0scVsyKnArMV09ZFsxXSxlW3VdPSEwLHArKyl9ZD1uZXcgRmxvYXQzMkFycmF5KDYqcCk7bj0wO2Zvcih0PXA7bjx0O24rKylmb3Iocz0wOzI+cztzKyspcD1cbmtbcVsyKm4rc11dLGc9NipuKzMqcyxkW2crMF09cC54LGRbZysxXT1wLnksZFtnKzJdPXAuejtoLmFkZEF0dHJpYnV0ZShcInBvc2l0aW9uXCIsbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShkLDMpKX1lbHNlIGlmKGEuZ2VvbWV0cnkgaW5zdGFuY2VvZiBUSFJFRS5CdWZmZXJHZW9tZXRyeSl7aWYodm9pZCAwIT09YS5nZW9tZXRyeS5hdHRyaWJ1dGVzLmluZGV4KXtrPWEuZ2VvbWV0cnkuYXR0cmlidXRlcy5wb3NpdGlvbi5hcnJheTt0PWEuZ2VvbWV0cnkuYXR0cmlidXRlcy5pbmRleC5hcnJheTtsPWEuZ2VvbWV0cnkuZHJhd2NhbGxzO3A9MDswPT09bC5sZW5ndGgmJihsPVt7Y291bnQ6dC5sZW5ndGgsaW5kZXg6MCxzdGFydDowfV0pO2Zvcih2YXIgcT1uZXcgVWludDMyQXJyYXkoMip0Lmxlbmd0aCkscj0wLHY9bC5sZW5ndGg7cjx2Oysrcilmb3IodmFyIHM9bFtyXS5zdGFydCx1PWxbcl0uY291bnQsZz1sW3JdLmluZGV4LG49cyx4PXMrdTtuPHg7bis9Mylmb3Iocz0wOzM+cztzKyspZFswXT1cbmcrdFtuK3NdLGRbMV09Zyt0W24rKHMrMSklM10sZC5zb3J0KGYpLHU9ZC50b1N0cmluZygpLHZvaWQgMD09PWVbdV0mJihxWzIqcF09ZFswXSxxWzIqcCsxXT1kWzFdLGVbdV09ITAscCsrKTtkPW5ldyBGbG9hdDMyQXJyYXkoNipwKTtuPTA7Zm9yKHQ9cDtuPHQ7bisrKWZvcihzPTA7Mj5zO3MrKylnPTYqbiszKnMscD0zKnFbMipuK3NdLGRbZyswXT1rW3BdLGRbZysxXT1rW3ArMV0sZFtnKzJdPWtbcCsyXX1lbHNlIGZvcihrPWEuZ2VvbWV0cnkuYXR0cmlidXRlcy5wb3NpdGlvbi5hcnJheSxwPWsubGVuZ3RoLzMscT1wLzMsZD1uZXcgRmxvYXQzMkFycmF5KDYqcCksbj0wLHQ9cTtuPHQ7bisrKWZvcihzPTA7Mz5zO3MrKylnPTE4Km4rNipzLHE9OSpuKzMqcyxkW2crMF09a1txXSxkW2crMV09a1txKzFdLGRbZysyXT1rW3ErMl0scD05Km4rKHMrMSklMyozLGRbZyszXT1rW3BdLGRbZys0XT1rW3ArMV0sZFtnKzVdPWtbcCsyXTtoLmFkZEF0dHJpYnV0ZShcInBvc2l0aW9uXCIsbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZShkLFxuMykpfVRIUkVFLkxpbmUuY2FsbCh0aGlzLGgsbmV3IFRIUkVFLkxpbmVCYXNpY01hdGVyaWFsKHtjb2xvcjpjfSksVEhSRUUuTGluZVBpZWNlcyk7dGhpcy5tYXRyaXg9YS5tYXRyaXhXb3JsZDt0aGlzLm1hdHJpeEF1dG9VcGRhdGU9ITF9O1RIUkVFLldpcmVmcmFtZUhlbHBlci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShUSFJFRS5MaW5lLnByb3RvdHlwZSk7VEhSRUUuV2lyZWZyYW1lSGVscGVyLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1USFJFRS5XaXJlZnJhbWVIZWxwZXI7VEhSRUUuSW1tZWRpYXRlUmVuZGVyT2JqZWN0PWZ1bmN0aW9uKCl7VEhSRUUuT2JqZWN0M0QuY2FsbCh0aGlzKTt0aGlzLnJlbmRlcj1mdW5jdGlvbihhKXt9fTtUSFJFRS5JbW1lZGlhdGVSZW5kZXJPYmplY3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoVEhSRUUuT2JqZWN0M0QucHJvdG90eXBlKTtUSFJFRS5JbW1lZGlhdGVSZW5kZXJPYmplY3QucHJvdG90eXBlLmNvbnN0cnVjdG9yPVRIUkVFLkltbWVkaWF0ZVJlbmRlck9iamVjdDtcblRIUkVFLk1vcnBoQmxlbmRNZXNoPWZ1bmN0aW9uKGEsYil7VEhSRUUuTWVzaC5jYWxsKHRoaXMsYSxiKTt0aGlzLmFuaW1hdGlvbnNNYXA9e307dGhpcy5hbmltYXRpb25zTGlzdD1bXTt2YXIgYz10aGlzLmdlb21ldHJ5Lm1vcnBoVGFyZ2V0cy5sZW5ndGg7dGhpcy5jcmVhdGVBbmltYXRpb24oXCJfX2RlZmF1bHRcIiwwLGMtMSxjLzEpO3RoaXMuc2V0QW5pbWF0aW9uV2VpZ2h0KFwiX19kZWZhdWx0XCIsMSl9O1RIUkVFLk1vcnBoQmxlbmRNZXNoLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKFRIUkVFLk1lc2gucHJvdG90eXBlKTtUSFJFRS5Nb3JwaEJsZW5kTWVzaC5wcm90b3R5cGUuY29uc3RydWN0b3I9VEhSRUUuTW9ycGhCbGVuZE1lc2g7XG5USFJFRS5Nb3JwaEJsZW5kTWVzaC5wcm90b3R5cGUuY3JlYXRlQW5pbWF0aW9uPWZ1bmN0aW9uKGEsYixjLGQpe2I9e3N0YXJ0RnJhbWU6YixlbmRGcmFtZTpjLGxlbmd0aDpjLWIrMSxmcHM6ZCxkdXJhdGlvbjooYy1iKS9kLGxhc3RGcmFtZTowLGN1cnJlbnRGcmFtZTowLGFjdGl2ZTohMSx0aW1lOjAsZGlyZWN0aW9uOjEsd2VpZ2h0OjEsZGlyZWN0aW9uQmFja3dhcmRzOiExLG1pcnJvcmVkTG9vcDohMX07dGhpcy5hbmltYXRpb25zTWFwW2FdPWI7dGhpcy5hbmltYXRpb25zTGlzdC5wdXNoKGIpfTtcblRIUkVFLk1vcnBoQmxlbmRNZXNoLnByb3RvdHlwZS5hdXRvQ3JlYXRlQW5pbWF0aW9ucz1mdW5jdGlvbihhKXtmb3IodmFyIGI9LyhbYS16XSspXz8oXFxkKykvLGMsZD17fSxlPXRoaXMuZ2VvbWV0cnksZj0wLGc9ZS5tb3JwaFRhcmdldHMubGVuZ3RoO2Y8ZztmKyspe3ZhciBoPWUubW9ycGhUYXJnZXRzW2ZdLm5hbWUubWF0Y2goYik7aWYoaCYmMTxoLmxlbmd0aCl7dmFyIGs9aFsxXTtkW2tdfHwoZFtrXT17c3RhcnQ6SW5maW5pdHksZW5kOi1JbmZpbml0eX0pO2g9ZFtrXTtmPGguc3RhcnQmJihoLnN0YXJ0PWYpO2Y+aC5lbmQmJihoLmVuZD1mKTtjfHwoYz1rKX19Zm9yKGsgaW4gZCloPWRba10sdGhpcy5jcmVhdGVBbmltYXRpb24oayxoLnN0YXJ0LGguZW5kLGEpO3RoaXMuZmlyc3RBbmltYXRpb249Y307XG5USFJFRS5Nb3JwaEJsZW5kTWVzaC5wcm90b3R5cGUuc2V0QW5pbWF0aW9uRGlyZWN0aW9uRm9yd2FyZD1mdW5jdGlvbihhKXtpZihhPXRoaXMuYW5pbWF0aW9uc01hcFthXSlhLmRpcmVjdGlvbj0xLGEuZGlyZWN0aW9uQmFja3dhcmRzPSExfTtUSFJFRS5Nb3JwaEJsZW5kTWVzaC5wcm90b3R5cGUuc2V0QW5pbWF0aW9uRGlyZWN0aW9uQmFja3dhcmQ9ZnVuY3Rpb24oYSl7aWYoYT10aGlzLmFuaW1hdGlvbnNNYXBbYV0pYS5kaXJlY3Rpb249LTEsYS5kaXJlY3Rpb25CYWNrd2FyZHM9ITB9O1RIUkVFLk1vcnBoQmxlbmRNZXNoLnByb3RvdHlwZS5zZXRBbmltYXRpb25GUFM9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmFuaW1hdGlvbnNNYXBbYV07YyYmKGMuZnBzPWIsYy5kdXJhdGlvbj0oYy5lbmQtYy5zdGFydCkvYy5mcHMpfTtcblRIUkVFLk1vcnBoQmxlbmRNZXNoLnByb3RvdHlwZS5zZXRBbmltYXRpb25EdXJhdGlvbj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuYW5pbWF0aW9uc01hcFthXTtjJiYoYy5kdXJhdGlvbj1iLGMuZnBzPShjLmVuZC1jLnN0YXJ0KS9jLmR1cmF0aW9uKX07VEhSRUUuTW9ycGhCbGVuZE1lc2gucHJvdG90eXBlLnNldEFuaW1hdGlvbldlaWdodD1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuYW5pbWF0aW9uc01hcFthXTtjJiYoYy53ZWlnaHQ9Yil9O1RIUkVFLk1vcnBoQmxlbmRNZXNoLnByb3RvdHlwZS5zZXRBbmltYXRpb25UaW1lPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5hbmltYXRpb25zTWFwW2FdO2MmJihjLnRpbWU9Yil9O1RIUkVFLk1vcnBoQmxlbmRNZXNoLnByb3RvdHlwZS5nZXRBbmltYXRpb25UaW1lPWZ1bmN0aW9uKGEpe3ZhciBiPTA7aWYoYT10aGlzLmFuaW1hdGlvbnNNYXBbYV0pYj1hLnRpbWU7cmV0dXJuIGJ9O1xuVEhSRUUuTW9ycGhCbGVuZE1lc2gucHJvdG90eXBlLmdldEFuaW1hdGlvbkR1cmF0aW9uPWZ1bmN0aW9uKGEpe3ZhciBiPS0xO2lmKGE9dGhpcy5hbmltYXRpb25zTWFwW2FdKWI9YS5kdXJhdGlvbjtyZXR1cm4gYn07VEhSRUUuTW9ycGhCbGVuZE1lc2gucHJvdG90eXBlLnBsYXlBbmltYXRpb249ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5hbmltYXRpb25zTWFwW2FdO2I/KGIudGltZT0wLGIuYWN0aXZlPSEwKTpUSFJFRS53YXJuKFwiVEhSRUUuTW9ycGhCbGVuZE1lc2g6IGFuaW1hdGlvbltcIithK1wiXSB1bmRlZmluZWQgaW4gLnBsYXlBbmltYXRpb24oKVwiKX07VEhSRUUuTW9ycGhCbGVuZE1lc2gucHJvdG90eXBlLnN0b3BBbmltYXRpb249ZnVuY3Rpb24oYSl7aWYoYT10aGlzLmFuaW1hdGlvbnNNYXBbYV0pYS5hY3RpdmU9ITF9O1xuVEhSRUUuTW9ycGhCbGVuZE1lc2gucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihhKXtmb3IodmFyIGI9MCxjPXRoaXMuYW5pbWF0aW9uc0xpc3QubGVuZ3RoO2I8YztiKyspe3ZhciBkPXRoaXMuYW5pbWF0aW9uc0xpc3RbYl07aWYoZC5hY3RpdmUpe3ZhciBlPWQuZHVyYXRpb24vZC5sZW5ndGg7ZC50aW1lKz1kLmRpcmVjdGlvbiphO2lmKGQubWlycm9yZWRMb29wKXtpZihkLnRpbWU+ZC5kdXJhdGlvbnx8MD5kLnRpbWUpZC5kaXJlY3Rpb24qPS0xLGQudGltZT5kLmR1cmF0aW9uJiYoZC50aW1lPWQuZHVyYXRpb24sZC5kaXJlY3Rpb25CYWNrd2FyZHM9ITApLDA+ZC50aW1lJiYoZC50aW1lPTAsZC5kaXJlY3Rpb25CYWNrd2FyZHM9ITEpfWVsc2UgZC50aW1lJT1kLmR1cmF0aW9uLDA+ZC50aW1lJiYoZC50aW1lKz1kLmR1cmF0aW9uKTt2YXIgZj1kLnN0YXJ0RnJhbWUrVEhSRUUuTWF0aC5jbGFtcChNYXRoLmZsb29yKGQudGltZS9lKSwwLGQubGVuZ3RoLTEpLGc9ZC53ZWlnaHQ7XG5mIT09ZC5jdXJyZW50RnJhbWUmJih0aGlzLm1vcnBoVGFyZ2V0SW5mbHVlbmNlc1tkLmxhc3RGcmFtZV09MCx0aGlzLm1vcnBoVGFyZ2V0SW5mbHVlbmNlc1tkLmN1cnJlbnRGcmFtZV09MSpnLHRoaXMubW9ycGhUYXJnZXRJbmZsdWVuY2VzW2ZdPTAsZC5sYXN0RnJhbWU9ZC5jdXJyZW50RnJhbWUsZC5jdXJyZW50RnJhbWU9Zik7ZT1kLnRpbWUlZS9lO2QuZGlyZWN0aW9uQmFja3dhcmRzJiYoZT0xLWUpO3RoaXMubW9ycGhUYXJnZXRJbmZsdWVuY2VzW2QuY3VycmVudEZyYW1lXT1lKmc7dGhpcy5tb3JwaFRhcmdldEluZmx1ZW5jZXNbZC5sYXN0RnJhbWVdPSgxLWUpKmd9fX07XG4iLCJmdW5jdGlvbiBIdWQoKSB7XG4gIHRoaXMuaGludHMgPSB0aGlzLm1ha2VIaW50TGV0dGVycygpO1xufVxuXG5cbkh1ZC5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24oKSB7fTtcblxuXG5IdWQucHJvdG90eXBlLmtleXVwID0gZnVuY3Rpb24obGV0dGVyKSB7XG4gIGlmIChsZXR0ZXIgaW4gdGhpcy5oaW50cykge1xuICAgIHRoaXMuaGludHNbbGV0dGVyXS5jbGFzc0xpc3QuYWRkKFwiaGlkZVwiKTtcbiAgICBkZWxldGUgdGhpcy5oaW50c1tsZXR0ZXJdO1xuICAgIHRoaXMuaGludHMubGVuZ3RoLS07XG5cbiAgICBpZiAodGhpcy5oaW50cy5sZW5ndGggPD0gMCkge1xuICAgICAgdGhpcy5rZXl1cCA9IGZ1bmN0aW9uKCkge307XG4gICAgICAvLyBUT0RPOiBjb3VsZCByZW1vdmUgaGludHMgaGVyZSBpZiBpdCBpbXByb3ZlcyBwZXJmb3JtYW5jZS5cbiAgICB9XG4gIH1cbn07XG5cblxuSHVkLnByb3RvdHlwZS5tYWtlSGludExldHRlcnMgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGkgPSAwLFxuICAgIHJlc3VsdCA9IHtcbiAgICAgIGxlbmd0aDogMFxuICAgIH0sXG4gICAgYml0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5oaW50cycpLFxuICAgIGZyYWcsIGxldHRlcnM7XG5cbiAgZm9yICg7IGkgPCBiaXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgZnJhZyA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICBsZXR0ZXJzID0gYml0c1tpXS50ZXh0Q29udGVudC5zcGxpdCgnICcpO1xuXG4gICAgbGV0dGVycy5mb3JFYWNoKGZ1bmN0aW9uKGxldHRlcikge1xuICAgICAgcmVzdWx0W2xldHRlcl0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICAgIHJlc3VsdFtsZXR0ZXJdLnRleHRDb250ZW50ID0gbGV0dGVyO1xuICAgICAgZnJhZy5hcHBlbmRDaGlsZChyZXN1bHRbbGV0dGVyXSk7XG4gICAgICByZXN1bHQubGVuZ3RoKys7XG4gICAgfSk7XG5cbiAgICBiaXRzW2ldLmlubmVySFRNTCA9IFwiJm5ic3A7XCI7XG4gICAgYml0c1tpXS5hcHBlbmRDaGlsZChmcmFnKTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogTG8tRGFzaCAyLjQuMSAoQ3VzdG9tIEJ1aWxkKSBsb2Rhc2guY29tL2xpY2Vuc2UgfCBVbmRlcnNjb3JlLmpzIDEuNS4yIHVuZGVyc2NvcmVqcy5vcmcvTElDRU5TRVxuICogQnVpbGQ6IGBsb2Rhc2ggbW9kZXJuIC1vIC4vZGlzdC9sb2Rhc2guanNgXG4gKi9cbjsoZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4sdCxlKXtlPShlfHwwKS0xO2Zvcih2YXIgcj1uP24ubGVuZ3RoOjA7KytlPHI7KWlmKG5bZV09PT10KXJldHVybiBlO3JldHVybi0xfWZ1bmN0aW9uIHQodCxlKXt2YXIgcj10eXBlb2YgZTtpZih0PXQubCxcImJvb2xlYW5cIj09cnx8bnVsbD09ZSlyZXR1cm4gdFtlXT8wOi0xO1wibnVtYmVyXCIhPXImJlwic3RyaW5nXCIhPXImJihyPVwib2JqZWN0XCIpO3ZhciB1PVwibnVtYmVyXCI9PXI/ZTptK2U7cmV0dXJuIHQ9KHQ9dFtyXSkmJnRbdV0sXCJvYmplY3RcIj09cj90JiYtMTxuKHQsZSk/MDotMTp0PzA6LTF9ZnVuY3Rpb24gZShuKXt2YXIgdD10aGlzLmwsZT10eXBlb2YgbjtpZihcImJvb2xlYW5cIj09ZXx8bnVsbD09bil0W25dPXRydWU7ZWxzZXtcIm51bWJlclwiIT1lJiZcInN0cmluZ1wiIT1lJiYoZT1cIm9iamVjdFwiKTt2YXIgcj1cIm51bWJlclwiPT1lP246bStuLHQ9dFtlXXx8KHRbZV09e30pO1wib2JqZWN0XCI9PWU/KHRbcl18fCh0W3JdPVtdKSkucHVzaChuKTp0W3JdPXRydWVcbn19ZnVuY3Rpb24gcihuKXtyZXR1cm4gbi5jaGFyQ29kZUF0KDApfWZ1bmN0aW9uIHUobix0KXtmb3IodmFyIGU9bi5tLHI9dC5tLHU9LTEsbz1lLmxlbmd0aDsrK3U8bzspe3ZhciBpPWVbdV0sYT1yW3VdO2lmKGkhPT1hKXtpZihpPmF8fHR5cGVvZiBpPT1cInVuZGVmaW5lZFwiKXJldHVybiAxO2lmKGk8YXx8dHlwZW9mIGE9PVwidW5kZWZpbmVkXCIpcmV0dXJuLTF9fXJldHVybiBuLm4tdC5ufWZ1bmN0aW9uIG8obil7dmFyIHQ9LTEscj1uLmxlbmd0aCx1PW5bMF0sbz1uW3IvMnwwXSxpPW5bci0xXTtpZih1JiZ0eXBlb2YgdT09XCJvYmplY3RcIiYmbyYmdHlwZW9mIG89PVwib2JqZWN0XCImJmkmJnR5cGVvZiBpPT1cIm9iamVjdFwiKXJldHVybiBmYWxzZTtmb3IodT1mKCksdVtcImZhbHNlXCJdPXVbXCJudWxsXCJdPXVbXCJ0cnVlXCJdPXUudW5kZWZpbmVkPWZhbHNlLG89ZigpLG8uaz1uLG8ubD11LG8ucHVzaD1lOysrdDxyOylvLnB1c2goblt0XSk7cmV0dXJuIG99ZnVuY3Rpb24gaShuKXtyZXR1cm5cIlxcXFxcIitVW25dXG59ZnVuY3Rpb24gYSgpe3JldHVybiBoLnBvcCgpfHxbXX1mdW5jdGlvbiBmKCl7cmV0dXJuIGcucG9wKCl8fHtrOm51bGwsbDpudWxsLG06bnVsbCxcImZhbHNlXCI6ZmFsc2UsbjowLFwibnVsbFwiOmZhbHNlLG51bWJlcjpudWxsLG9iamVjdDpudWxsLHB1c2g6bnVsbCxzdHJpbmc6bnVsbCxcInRydWVcIjpmYWxzZSx1bmRlZmluZWQ6ZmFsc2UsbzpudWxsfX1mdW5jdGlvbiBsKG4pe24ubGVuZ3RoPTAsaC5sZW5ndGg8XyYmaC5wdXNoKG4pfWZ1bmN0aW9uIGMobil7dmFyIHQ9bi5sO3QmJmModCksbi5rPW4ubD1uLm09bi5vYmplY3Q9bi5udW1iZXI9bi5zdHJpbmc9bi5vPW51bGwsZy5sZW5ndGg8XyYmZy5wdXNoKG4pfWZ1bmN0aW9uIHAobix0LGUpe3R8fCh0PTApLHR5cGVvZiBlPT1cInVuZGVmaW5lZFwiJiYoZT1uP24ubGVuZ3RoOjApO3ZhciByPS0xO2U9ZS10fHwwO2Zvcih2YXIgdT1BcnJheSgwPmU/MDplKTsrK3I8ZTspdVtyXT1uW3Qrcl07cmV0dXJuIHV9ZnVuY3Rpb24gcyhlKXtmdW5jdGlvbiBoKG4sdCxlKXtpZighbnx8IVZbdHlwZW9mIG5dKXJldHVybiBuO1xudD10JiZ0eXBlb2YgZT09XCJ1bmRlZmluZWRcIj90OnR0KHQsZSwzKTtmb3IodmFyIHI9LTEsdT1WW3R5cGVvZiBuXSYmRmUobiksbz11P3UubGVuZ3RoOjA7KytyPG8mJihlPXVbcl0sZmFsc2UhPT10KG5bZV0sZSxuKSk7KTtyZXR1cm4gbn1mdW5jdGlvbiBnKG4sdCxlKXt2YXIgcjtpZighbnx8IVZbdHlwZW9mIG5dKXJldHVybiBuO3Q9dCYmdHlwZW9mIGU9PVwidW5kZWZpbmVkXCI/dDp0dCh0LGUsMyk7Zm9yKHIgaW4gbilpZihmYWxzZT09PXQobltyXSxyLG4pKWJyZWFrO3JldHVybiBufWZ1bmN0aW9uIF8obix0LGUpe3ZhciByLHU9bixvPXU7aWYoIXUpcmV0dXJuIG87Zm9yKHZhciBpPWFyZ3VtZW50cyxhPTAsZj10eXBlb2YgZT09XCJudW1iZXJcIj8yOmkubGVuZ3RoOysrYTxmOylpZigodT1pW2FdKSYmVlt0eXBlb2YgdV0pZm9yKHZhciBsPS0xLGM9Vlt0eXBlb2YgdV0mJkZlKHUpLHA9Yz9jLmxlbmd0aDowOysrbDxwOylyPWNbbF0sXCJ1bmRlZmluZWRcIj09dHlwZW9mIG9bcl0mJihvW3JdPXVbcl0pO1xucmV0dXJuIG99ZnVuY3Rpb24gVShuLHQsZSl7dmFyIHIsdT1uLG89dTtpZighdSlyZXR1cm4gbzt2YXIgaT1hcmd1bWVudHMsYT0wLGY9dHlwZW9mIGU9PVwibnVtYmVyXCI/MjppLmxlbmd0aDtpZigzPGYmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGlbZi0yXSl2YXIgbD10dChpWy0tZi0xXSxpW2YtLV0sMik7ZWxzZSAyPGYmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGlbZi0xXSYmKGw9aVstLWZdKTtmb3IoOysrYTxmOylpZigodT1pW2FdKSYmVlt0eXBlb2YgdV0pZm9yKHZhciBjPS0xLHA9Vlt0eXBlb2YgdV0mJkZlKHUpLHM9cD9wLmxlbmd0aDowOysrYzxzOylyPXBbY10sb1tyXT1sP2wob1tyXSx1W3JdKTp1W3JdO3JldHVybiBvfWZ1bmN0aW9uIEgobil7dmFyIHQsZT1bXTtpZighbnx8IVZbdHlwZW9mIG5dKXJldHVybiBlO2Zvcih0IGluIG4pbWUuY2FsbChuLHQpJiZlLnB1c2godCk7cmV0dXJuIGV9ZnVuY3Rpb24gSihuKXtyZXR1cm4gbiYmdHlwZW9mIG49PVwib2JqZWN0XCImJiFUZShuKSYmbWUuY2FsbChuLFwiX193cmFwcGVkX19cIik/bjpuZXcgUShuKVxufWZ1bmN0aW9uIFEobix0KXt0aGlzLl9fY2hhaW5fXz0hIXQsdGhpcy5fX3dyYXBwZWRfXz1ufWZ1bmN0aW9uIFgobil7ZnVuY3Rpb24gdCgpe2lmKHIpe3ZhciBuPXAocik7YmUuYXBwbHkobixhcmd1bWVudHMpfWlmKHRoaXMgaW5zdGFuY2VvZiB0KXt2YXIgbz1udChlLnByb3RvdHlwZSksbj1lLmFwcGx5KG8sbnx8YXJndW1lbnRzKTtyZXR1cm4gd3Qobik/bjpvfXJldHVybiBlLmFwcGx5KHUsbnx8YXJndW1lbnRzKX12YXIgZT1uWzBdLHI9blsyXSx1PW5bNF07cmV0dXJuICRlKHQsbiksdH1mdW5jdGlvbiBaKG4sdCxlLHIsdSl7aWYoZSl7dmFyIG89ZShuKTtpZih0eXBlb2YgbyE9XCJ1bmRlZmluZWRcIilyZXR1cm4gb31pZighd3QobikpcmV0dXJuIG47dmFyIGk9Y2UuY2FsbChuKTtpZighS1tpXSlyZXR1cm4gbjt2YXIgZj1BZVtpXTtzd2l0Y2goaSl7Y2FzZSBUOmNhc2UgRjpyZXR1cm4gbmV3IGYoK24pO2Nhc2UgVzpjYXNlIFA6cmV0dXJuIG5ldyBmKG4pO2Nhc2UgejpyZXR1cm4gbz1mKG4uc291cmNlLEMuZXhlYyhuKSksby5sYXN0SW5kZXg9bi5sYXN0SW5kZXgsb1xufWlmKGk9VGUobiksdCl7dmFyIGM9IXI7cnx8KHI9YSgpKSx1fHwodT1hKCkpO2Zvcih2YXIgcz1yLmxlbmd0aDtzLS07KWlmKHJbc109PW4pcmV0dXJuIHVbc107bz1pP2Yobi5sZW5ndGgpOnt9fWVsc2Ugbz1pP3Aobik6VSh7fSxuKTtyZXR1cm4gaSYmKG1lLmNhbGwobixcImluZGV4XCIpJiYoby5pbmRleD1uLmluZGV4KSxtZS5jYWxsKG4sXCJpbnB1dFwiKSYmKG8uaW5wdXQ9bi5pbnB1dCkpLHQ/KHIucHVzaChuKSx1LnB1c2gobyksKGk/U3Q6aCkobixmdW5jdGlvbihuLGkpe29baV09WihuLHQsZSxyLHUpfSksYyYmKGwociksbCh1KSksbyk6b31mdW5jdGlvbiBudChuKXtyZXR1cm4gd3Qobik/a2Uobik6e319ZnVuY3Rpb24gdHQobix0LGUpe2lmKHR5cGVvZiBuIT1cImZ1bmN0aW9uXCIpcmV0dXJuIFV0O2lmKHR5cGVvZiB0PT1cInVuZGVmaW5lZFwifHwhKFwicHJvdG90eXBlXCJpbiBuKSlyZXR1cm4gbjt2YXIgcj1uLl9fYmluZERhdGFfXztpZih0eXBlb2Ygcj09XCJ1bmRlZmluZWRcIiYmKERlLmZ1bmNOYW1lcyYmKHI9IW4ubmFtZSkscj1yfHwhRGUuZnVuY0RlY29tcCwhcikpe3ZhciB1PWdlLmNhbGwobik7XG5EZS5mdW5jTmFtZXN8fChyPSFPLnRlc3QodSkpLHJ8fChyPUUudGVzdCh1KSwkZShuLHIpKX1pZihmYWxzZT09PXJ8fHRydWUhPT1yJiYxJnJbMV0pcmV0dXJuIG47c3dpdGNoKGUpe2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIG4uY2FsbCh0LGUpfTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKGUscil7cmV0dXJuIG4uY2FsbCh0LGUscil9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24oZSxyLHUpe3JldHVybiBuLmNhbGwodCxlLHIsdSl9O2Nhc2UgNDpyZXR1cm4gZnVuY3Rpb24oZSxyLHUsbyl7cmV0dXJuIG4uY2FsbCh0LGUscix1LG8pfX1yZXR1cm4gTXQobix0KX1mdW5jdGlvbiBldChuKXtmdW5jdGlvbiB0KCl7dmFyIG49Zj9pOnRoaXM7aWYodSl7dmFyIGg9cCh1KTtiZS5hcHBseShoLGFyZ3VtZW50cyl9cmV0dXJuKG98fGMpJiYoaHx8KGg9cChhcmd1bWVudHMpKSxvJiZiZS5hcHBseShoLG8pLGMmJmgubGVuZ3RoPGEpPyhyfD0xNixldChbZSxzP3I6LTQmcixoLG51bGwsaSxhXSkpOihofHwoaD1hcmd1bWVudHMpLGwmJihlPW5bdl0pLHRoaXMgaW5zdGFuY2VvZiB0PyhuPW50KGUucHJvdG90eXBlKSxoPWUuYXBwbHkobixoKSx3dChoKT9oOm4pOmUuYXBwbHkobixoKSlcbn12YXIgZT1uWzBdLHI9blsxXSx1PW5bMl0sbz1uWzNdLGk9bls0XSxhPW5bNV0sZj0xJnIsbD0yJnIsYz00JnIscz04JnIsdj1lO3JldHVybiAkZSh0LG4pLHR9ZnVuY3Rpb24gcnQoZSxyKXt2YXIgdT0tMSxpPXN0KCksYT1lP2UubGVuZ3RoOjAsZj1hPj1iJiZpPT09bixsPVtdO2lmKGYpe3ZhciBwPW8ocik7cD8oaT10LHI9cCk6Zj1mYWxzZX1mb3IoOysrdTxhOylwPWVbdV0sMD5pKHIscCkmJmwucHVzaChwKTtyZXR1cm4gZiYmYyhyKSxsfWZ1bmN0aW9uIHV0KG4sdCxlLHIpe3I9KHJ8fDApLTE7Zm9yKHZhciB1PW4/bi5sZW5ndGg6MCxvPVtdOysrcjx1Oyl7dmFyIGk9bltyXTtpZihpJiZ0eXBlb2YgaT09XCJvYmplY3RcIiYmdHlwZW9mIGkubGVuZ3RoPT1cIm51bWJlclwiJiYoVGUoaSl8fHl0KGkpKSl7dHx8KGk9dXQoaSx0LGUpKTt2YXIgYT0tMSxmPWkubGVuZ3RoLGw9by5sZW5ndGg7Zm9yKG8ubGVuZ3RoKz1mOysrYTxmOylvW2wrK109aVthXX1lbHNlIGV8fG8ucHVzaChpKX1yZXR1cm4gb1xufWZ1bmN0aW9uIG90KG4sdCxlLHIsdSxvKXtpZihlKXt2YXIgaT1lKG4sdCk7aWYodHlwZW9mIGkhPVwidW5kZWZpbmVkXCIpcmV0dXJuISFpfWlmKG49PT10KXJldHVybiAwIT09bnx8MS9uPT0xL3Q7aWYobj09PW4mJiEobiYmVlt0eXBlb2Ygbl18fHQmJlZbdHlwZW9mIHRdKSlyZXR1cm4gZmFsc2U7aWYobnVsbD09bnx8bnVsbD09dClyZXR1cm4gbj09PXQ7dmFyIGY9Y2UuY2FsbChuKSxjPWNlLmNhbGwodCk7aWYoZj09RCYmKGY9cSksYz09RCYmKGM9cSksZiE9YylyZXR1cm4gZmFsc2U7c3dpdGNoKGYpe2Nhc2UgVDpjYXNlIEY6cmV0dXJuK249PSt0O2Nhc2UgVzpyZXR1cm4gbiE9K24/dCE9K3Q6MD09bj8xL249PTEvdDpuPT0rdDtjYXNlIHo6Y2FzZSBQOnJldHVybiBuPT1vZSh0KX1pZihjPWY9PSQsIWMpe3ZhciBwPW1lLmNhbGwobixcIl9fd3JhcHBlZF9fXCIpLHM9bWUuY2FsbCh0LFwiX193cmFwcGVkX19cIik7aWYocHx8cylyZXR1cm4gb3QocD9uLl9fd3JhcHBlZF9fOm4scz90Ll9fd3JhcHBlZF9fOnQsZSxyLHUsbyk7XG5pZihmIT1xKXJldHVybiBmYWxzZTtpZihmPW4uY29uc3RydWN0b3IscD10LmNvbnN0cnVjdG9yLGYhPXAmJiEoZHQoZikmJmYgaW5zdGFuY2VvZiBmJiZkdChwKSYmcCBpbnN0YW5jZW9mIHApJiZcImNvbnN0cnVjdG9yXCJpbiBuJiZcImNvbnN0cnVjdG9yXCJpbiB0KXJldHVybiBmYWxzZX1mb3IoZj0hdSx1fHwodT1hKCkpLG98fChvPWEoKSkscD11Lmxlbmd0aDtwLS07KWlmKHVbcF09PW4pcmV0dXJuIG9bcF09PXQ7dmFyIHY9MCxpPXRydWU7aWYodS5wdXNoKG4pLG8ucHVzaCh0KSxjKXtpZihwPW4ubGVuZ3RoLHY9dC5sZW5ndGgsKGk9dj09cCl8fHIpZm9yKDt2LS07KWlmKGM9cCxzPXRbdl0scilmb3IoO2MtLSYmIShpPW90KG5bY10scyxlLHIsdSxvKSk7KTtlbHNlIGlmKCEoaT1vdChuW3ZdLHMsZSxyLHUsbykpKWJyZWFrfWVsc2UgZyh0LGZ1bmN0aW9uKHQsYSxmKXtyZXR1cm4gbWUuY2FsbChmLGEpPyh2KyssaT1tZS5jYWxsKG4sYSkmJm90KG5bYV0sdCxlLHIsdSxvKSk6dm9pZCAwfSksaSYmIXImJmcobixmdW5jdGlvbihuLHQsZSl7cmV0dXJuIG1lLmNhbGwoZSx0KT9pPS0xPC0tdjp2b2lkIDBcbn0pO3JldHVybiB1LnBvcCgpLG8ucG9wKCksZiYmKGwodSksbChvKSksaX1mdW5jdGlvbiBpdChuLHQsZSxyLHUpeyhUZSh0KT9TdDpoKSh0LGZ1bmN0aW9uKHQsbyl7dmFyIGksYSxmPXQsbD1uW29dO2lmKHQmJigoYT1UZSh0KSl8fFBlKHQpKSl7Zm9yKGY9ci5sZW5ndGg7Zi0tOylpZihpPXJbZl09PXQpe2w9dVtmXTticmVha31pZighaSl7dmFyIGM7ZSYmKGY9ZShsLHQpLGM9dHlwZW9mIGYhPVwidW5kZWZpbmVkXCIpJiYobD1mKSxjfHwobD1hP1RlKGwpP2w6W106UGUobCk/bDp7fSksci5wdXNoKHQpLHUucHVzaChsKSxjfHxpdChsLHQsZSxyLHUpfX1lbHNlIGUmJihmPWUobCx0KSx0eXBlb2YgZj09XCJ1bmRlZmluZWRcIiYmKGY9dCkpLHR5cGVvZiBmIT1cInVuZGVmaW5lZFwiJiYobD1mKTtuW29dPWx9KX1mdW5jdGlvbiBhdChuLHQpe3JldHVybiBuK2hlKFJlKCkqKHQtbisxKSl9ZnVuY3Rpb24gZnQoZSxyLHUpe3ZhciBpPS0xLGY9c3QoKSxwPWU/ZS5sZW5ndGg6MCxzPVtdLHY9IXImJnA+PWImJmY9PT1uLGg9dXx8dj9hKCk6cztcbmZvcih2JiYoaD1vKGgpLGY9dCk7KytpPHA7KXt2YXIgZz1lW2ldLHk9dT91KGcsaSxlKTpnOyhyPyFpfHxoW2gubGVuZ3RoLTFdIT09eTowPmYoaCx5KSkmJigodXx8dikmJmgucHVzaCh5KSxzLnB1c2goZykpfXJldHVybiB2PyhsKGguayksYyhoKSk6dSYmbChoKSxzfWZ1bmN0aW9uIGx0KG4pe3JldHVybiBmdW5jdGlvbih0LGUscil7dmFyIHU9e307ZT1KLmNyZWF0ZUNhbGxiYWNrKGUsciwzKSxyPS0xO3ZhciBvPXQ/dC5sZW5ndGg6MDtpZih0eXBlb2Ygbz09XCJudW1iZXJcIilmb3IoOysrcjxvOyl7dmFyIGk9dFtyXTtuKHUsaSxlKGkscix0KSx0KX1lbHNlIGgodCxmdW5jdGlvbih0LHIsbyl7bih1LHQsZSh0LHIsbyksbyl9KTtyZXR1cm4gdX19ZnVuY3Rpb24gY3Qobix0LGUscix1LG8pe3ZhciBpPTEmdCxhPTQmdCxmPTE2JnQsbD0zMiZ0O2lmKCEoMiZ0fHxkdChuKSkpdGhyb3cgbmV3IGllO2YmJiFlLmxlbmd0aCYmKHQmPS0xNyxmPWU9ZmFsc2UpLGwmJiFyLmxlbmd0aCYmKHQmPS0zMyxsPXI9ZmFsc2UpO1xudmFyIGM9biYmbi5fX2JpbmREYXRhX187cmV0dXJuIGMmJnRydWUhPT1jPyhjPXAoYyksY1syXSYmKGNbMl09cChjWzJdKSksY1szXSYmKGNbM109cChjWzNdKSksIWl8fDEmY1sxXXx8KGNbNF09dSksIWkmJjEmY1sxXSYmKHR8PTgpLCFhfHw0JmNbMV18fChjWzVdPW8pLGYmJmJlLmFwcGx5KGNbMl18fChjWzJdPVtdKSxlKSxsJiZ3ZS5hcHBseShjWzNdfHwoY1szXT1bXSksciksY1sxXXw9dCxjdC5hcHBseShudWxsLGMpKTooMT09dHx8MTc9PT10P1g6ZXQpKFtuLHQsZSxyLHUsb10pfWZ1bmN0aW9uIHB0KG4pe3JldHVybiBCZVtuXX1mdW5jdGlvbiBzdCgpe3ZhciB0PSh0PUouaW5kZXhPZik9PT1XdD9uOnQ7cmV0dXJuIHR9ZnVuY3Rpb24gdnQobil7cmV0dXJuIHR5cGVvZiBuPT1cImZ1bmN0aW9uXCImJnBlLnRlc3Qobil9ZnVuY3Rpb24gaHQobil7dmFyIHQsZTtyZXR1cm4gbiYmY2UuY2FsbChuKT09cSYmKHQ9bi5jb25zdHJ1Y3RvciwhZHQodCl8fHQgaW5zdGFuY2VvZiB0KT8oZyhuLGZ1bmN0aW9uKG4sdCl7ZT10XG59KSx0eXBlb2YgZT09XCJ1bmRlZmluZWRcInx8bWUuY2FsbChuLGUpKTpmYWxzZX1mdW5jdGlvbiBndChuKXtyZXR1cm4gV2Vbbl19ZnVuY3Rpb24geXQobil7cmV0dXJuIG4mJnR5cGVvZiBuPT1cIm9iamVjdFwiJiZ0eXBlb2Ygbi5sZW5ndGg9PVwibnVtYmVyXCImJmNlLmNhbGwobik9PUR8fGZhbHNlfWZ1bmN0aW9uIG10KG4sdCxlKXt2YXIgcj1GZShuKSx1PXIubGVuZ3RoO2Zvcih0PXR0KHQsZSwzKTt1LS0mJihlPXJbdV0sZmFsc2UhPT10KG5bZV0sZSxuKSk7KTtyZXR1cm4gbn1mdW5jdGlvbiBidChuKXt2YXIgdD1bXTtyZXR1cm4gZyhuLGZ1bmN0aW9uKG4sZSl7ZHQobikmJnQucHVzaChlKX0pLHQuc29ydCgpfWZ1bmN0aW9uIF90KG4pe2Zvcih2YXIgdD0tMSxlPUZlKG4pLHI9ZS5sZW5ndGgsdT17fTsrK3Q8cjspe3ZhciBvPWVbdF07dVtuW29dXT1vfXJldHVybiB1fWZ1bmN0aW9uIGR0KG4pe3JldHVybiB0eXBlb2Ygbj09XCJmdW5jdGlvblwifWZ1bmN0aW9uIHd0KG4pe3JldHVybiEoIW58fCFWW3R5cGVvZiBuXSlcbn1mdW5jdGlvbiBqdChuKXtyZXR1cm4gdHlwZW9mIG49PVwibnVtYmVyXCJ8fG4mJnR5cGVvZiBuPT1cIm9iamVjdFwiJiZjZS5jYWxsKG4pPT1XfHxmYWxzZX1mdW5jdGlvbiBrdChuKXtyZXR1cm4gdHlwZW9mIG49PVwic3RyaW5nXCJ8fG4mJnR5cGVvZiBuPT1cIm9iamVjdFwiJiZjZS5jYWxsKG4pPT1QfHxmYWxzZX1mdW5jdGlvbiB4dChuKXtmb3IodmFyIHQ9LTEsZT1GZShuKSxyPWUubGVuZ3RoLHU9WHQocik7Kyt0PHI7KXVbdF09bltlW3RdXTtyZXR1cm4gdX1mdW5jdGlvbiBDdChuLHQsZSl7dmFyIHI9LTEsdT1zdCgpLG89bj9uLmxlbmd0aDowLGk9ZmFsc2U7cmV0dXJuIGU9KDA+ZT9JZSgwLG8rZSk6ZSl8fDAsVGUobik/aT0tMTx1KG4sdCxlKTp0eXBlb2Ygbz09XCJudW1iZXJcIj9pPS0xPChrdChuKT9uLmluZGV4T2YodCxlKTp1KG4sdCxlKSk6aChuLGZ1bmN0aW9uKG4pe3JldHVybisrcjxlP3ZvaWQgMDohKGk9bj09PXQpfSksaX1mdW5jdGlvbiBPdChuLHQsZSl7dmFyIHI9dHJ1ZTt0PUouY3JlYXRlQ2FsbGJhY2sodCxlLDMpLGU9LTE7XG52YXIgdT1uP24ubGVuZ3RoOjA7aWYodHlwZW9mIHU9PVwibnVtYmVyXCIpZm9yKDsrK2U8dSYmKHI9ISF0KG5bZV0sZSxuKSk7KTtlbHNlIGgobixmdW5jdGlvbihuLGUsdSl7cmV0dXJuIHI9ISF0KG4sZSx1KX0pO3JldHVybiByfWZ1bmN0aW9uIE50KG4sdCxlKXt2YXIgcj1bXTt0PUouY3JlYXRlQ2FsbGJhY2sodCxlLDMpLGU9LTE7dmFyIHU9bj9uLmxlbmd0aDowO2lmKHR5cGVvZiB1PT1cIm51bWJlclwiKWZvcig7KytlPHU7KXt2YXIgbz1uW2VdO3QobyxlLG4pJiZyLnB1c2gobyl9ZWxzZSBoKG4sZnVuY3Rpb24obixlLHUpe3QobixlLHUpJiZyLnB1c2gobil9KTtyZXR1cm4gcn1mdW5jdGlvbiBJdChuLHQsZSl7dD1KLmNyZWF0ZUNhbGxiYWNrKHQsZSwzKSxlPS0xO3ZhciByPW4/bi5sZW5ndGg6MDtpZih0eXBlb2YgciE9XCJudW1iZXJcIil7dmFyIHU7cmV0dXJuIGgobixmdW5jdGlvbihuLGUscil7cmV0dXJuIHQobixlLHIpPyh1PW4sZmFsc2UpOnZvaWQgMH0pLHV9Zm9yKDsrK2U8cjspe3ZhciBvPW5bZV07XG5pZih0KG8sZSxuKSlyZXR1cm4gb319ZnVuY3Rpb24gU3Qobix0LGUpe3ZhciByPS0xLHU9bj9uLmxlbmd0aDowO2lmKHQ9dCYmdHlwZW9mIGU9PVwidW5kZWZpbmVkXCI/dDp0dCh0LGUsMyksdHlwZW9mIHU9PVwibnVtYmVyXCIpZm9yKDsrK3I8dSYmZmFsc2UhPT10KG5bcl0scixuKTspO2Vsc2UgaChuLHQpO3JldHVybiBufWZ1bmN0aW9uIEV0KG4sdCxlKXt2YXIgcj1uP24ubGVuZ3RoOjA7aWYodD10JiZ0eXBlb2YgZT09XCJ1bmRlZmluZWRcIj90OnR0KHQsZSwzKSx0eXBlb2Ygcj09XCJudW1iZXJcIilmb3IoO3ItLSYmZmFsc2UhPT10KG5bcl0scixuKTspO2Vsc2V7dmFyIHU9RmUobikscj11Lmxlbmd0aDtoKG4sZnVuY3Rpb24obixlLG8pe3JldHVybiBlPXU/dVstLXJdOi0tcix0KG9bZV0sZSxvKX0pfXJldHVybiBufWZ1bmN0aW9uIFJ0KG4sdCxlKXt2YXIgcj0tMSx1PW4/bi5sZW5ndGg6MDtpZih0PUouY3JlYXRlQ2FsbGJhY2sodCxlLDMpLHR5cGVvZiB1PT1cIm51bWJlclwiKWZvcih2YXIgbz1YdCh1KTsrK3I8dTspb1tyXT10KG5bcl0scixuKTtcbmVsc2Ugbz1bXSxoKG4sZnVuY3Rpb24obixlLHUpe29bKytyXT10KG4sZSx1KX0pO3JldHVybiBvfWZ1bmN0aW9uIEF0KG4sdCxlKXt2YXIgdT0tMS8wLG89dTtpZih0eXBlb2YgdCE9XCJmdW5jdGlvblwiJiZlJiZlW3RdPT09biYmKHQ9bnVsbCksbnVsbD09dCYmVGUobikpe2U9LTE7Zm9yKHZhciBpPW4ubGVuZ3RoOysrZTxpOyl7dmFyIGE9bltlXTthPm8mJihvPWEpfX1lbHNlIHQ9bnVsbD09dCYma3Qobik/cjpKLmNyZWF0ZUNhbGxiYWNrKHQsZSwzKSxTdChuLGZ1bmN0aW9uKG4sZSxyKXtlPXQobixlLHIpLGU+dSYmKHU9ZSxvPW4pfSk7cmV0dXJuIG99ZnVuY3Rpb24gRHQobix0LGUscil7aWYoIW4pcmV0dXJuIGU7dmFyIHU9Mz5hcmd1bWVudHMubGVuZ3RoO3Q9Si5jcmVhdGVDYWxsYmFjayh0LHIsNCk7dmFyIG89LTEsaT1uLmxlbmd0aDtpZih0eXBlb2YgaT09XCJudW1iZXJcIilmb3IodSYmKGU9blsrK29dKTsrK288aTspZT10KGUsbltvXSxvLG4pO2Vsc2UgaChuLGZ1bmN0aW9uKG4scixvKXtlPXU/KHU9ZmFsc2Usbik6dChlLG4scixvKVxufSk7cmV0dXJuIGV9ZnVuY3Rpb24gJHQobix0LGUscil7dmFyIHU9Mz5hcmd1bWVudHMubGVuZ3RoO3JldHVybiB0PUouY3JlYXRlQ2FsbGJhY2sodCxyLDQpLEV0KG4sZnVuY3Rpb24obixyLG8pe2U9dT8odT1mYWxzZSxuKTp0KGUsbixyLG8pfSksZX1mdW5jdGlvbiBUdChuKXt2YXIgdD0tMSxlPW4/bi5sZW5ndGg6MCxyPVh0KHR5cGVvZiBlPT1cIm51bWJlclwiP2U6MCk7cmV0dXJuIFN0KG4sZnVuY3Rpb24obil7dmFyIGU9YXQoMCwrK3QpO3JbdF09cltlXSxyW2VdPW59KSxyfWZ1bmN0aW9uIEZ0KG4sdCxlKXt2YXIgcjt0PUouY3JlYXRlQ2FsbGJhY2sodCxlLDMpLGU9LTE7dmFyIHU9bj9uLmxlbmd0aDowO2lmKHR5cGVvZiB1PT1cIm51bWJlclwiKWZvcig7KytlPHUmJiEocj10KG5bZV0sZSxuKSk7KTtlbHNlIGgobixmdW5jdGlvbihuLGUsdSl7cmV0dXJuIShyPXQobixlLHUpKX0pO3JldHVybiEhcn1mdW5jdGlvbiBCdChuLHQsZSl7dmFyIHI9MCx1PW4/bi5sZW5ndGg6MDtpZih0eXBlb2YgdCE9XCJudW1iZXJcIiYmbnVsbCE9dCl7dmFyIG89LTE7XG5mb3IodD1KLmNyZWF0ZUNhbGxiYWNrKHQsZSwzKTsrK288dSYmdChuW29dLG8sbik7KXIrK31lbHNlIGlmKHI9dCxudWxsPT1yfHxlKXJldHVybiBuP25bMF06djtyZXR1cm4gcChuLDAsU2UoSWUoMCxyKSx1KSl9ZnVuY3Rpb24gV3QodCxlLHIpe2lmKHR5cGVvZiByPT1cIm51bWJlclwiKXt2YXIgdT10P3QubGVuZ3RoOjA7cj0wPnI/SWUoMCx1K3IpOnJ8fDB9ZWxzZSBpZihyKXJldHVybiByPXp0KHQsZSksdFtyXT09PWU/cjotMTtyZXR1cm4gbih0LGUscil9ZnVuY3Rpb24gcXQobix0LGUpe2lmKHR5cGVvZiB0IT1cIm51bWJlclwiJiZudWxsIT10KXt2YXIgcj0wLHU9LTEsbz1uP24ubGVuZ3RoOjA7Zm9yKHQ9Si5jcmVhdGVDYWxsYmFjayh0LGUsMyk7Kyt1PG8mJnQoblt1XSx1LG4pOylyKyt9ZWxzZSByPW51bGw9PXR8fGU/MTpJZSgwLHQpO3JldHVybiBwKG4scil9ZnVuY3Rpb24genQobix0LGUscil7dmFyIHU9MCxvPW4/bi5sZW5ndGg6dTtmb3IoZT1lP0ouY3JlYXRlQ2FsbGJhY2soZSxyLDEpOlV0LHQ9ZSh0KTt1PG87KXI9dStvPj4+MSxlKG5bcl0pPHQ/dT1yKzE6bz1yO1xucmV0dXJuIHV9ZnVuY3Rpb24gUHQobix0LGUscil7cmV0dXJuIHR5cGVvZiB0IT1cImJvb2xlYW5cIiYmbnVsbCE9dCYmKHI9ZSxlPXR5cGVvZiB0IT1cImZ1bmN0aW9uXCImJnImJnJbdF09PT1uP251bGw6dCx0PWZhbHNlKSxudWxsIT1lJiYoZT1KLmNyZWF0ZUNhbGxiYWNrKGUsciwzKSksZnQobix0LGUpfWZ1bmN0aW9uIEt0KCl7Zm9yKHZhciBuPTE8YXJndW1lbnRzLmxlbmd0aD9hcmd1bWVudHM6YXJndW1lbnRzWzBdLHQ9LTEsZT1uP0F0KFZlKG4sXCJsZW5ndGhcIikpOjAscj1YdCgwPmU/MDplKTsrK3Q8ZTspclt0XT1WZShuLHQpO3JldHVybiByfWZ1bmN0aW9uIEx0KG4sdCl7dmFyIGU9LTEscj1uP24ubGVuZ3RoOjAsdT17fTtmb3IodHx8IXJ8fFRlKG5bMF0pfHwodD1bXSk7KytlPHI7KXt2YXIgbz1uW2VdO3Q/dVtvXT10W2VdOm8mJih1W29bMF1dPW9bMV0pfXJldHVybiB1fWZ1bmN0aW9uIE10KG4sdCl7cmV0dXJuIDI8YXJndW1lbnRzLmxlbmd0aD9jdChuLDE3LHAoYXJndW1lbnRzLDIpLG51bGwsdCk6Y3QobiwxLG51bGwsbnVsbCx0KVxufWZ1bmN0aW9uIFZ0KG4sdCxlKXtmdW5jdGlvbiByKCl7YyYmdmUoYyksaT1jPXA9diwoZ3x8aCE9PXQpJiYocz1VZSgpLGE9bi5hcHBseShsLG8pLGN8fGl8fChvPWw9bnVsbCkpfWZ1bmN0aW9uIHUoKXt2YXIgZT10LShVZSgpLWYpOzA8ZT9jPV9lKHUsZSk6KGkmJnZlKGkpLGU9cCxpPWM9cD12LGUmJihzPVVlKCksYT1uLmFwcGx5KGwsbyksY3x8aXx8KG89bD1udWxsKSkpfXZhciBvLGksYSxmLGwsYyxwLHM9MCxoPWZhbHNlLGc9dHJ1ZTtpZighZHQobikpdGhyb3cgbmV3IGllO2lmKHQ9SWUoMCx0KXx8MCx0cnVlPT09ZSl2YXIgeT10cnVlLGc9ZmFsc2U7ZWxzZSB3dChlKSYmKHk9ZS5sZWFkaW5nLGg9XCJtYXhXYWl0XCJpbiBlJiYoSWUodCxlLm1heFdhaXQpfHwwKSxnPVwidHJhaWxpbmdcImluIGU/ZS50cmFpbGluZzpnKTtyZXR1cm4gZnVuY3Rpb24oKXtpZihvPWFyZ3VtZW50cyxmPVVlKCksbD10aGlzLHA9ZyYmKGN8fCF5KSxmYWxzZT09PWgpdmFyIGU9eSYmIWM7ZWxzZXtpfHx5fHwocz1mKTt2YXIgdj1oLShmLXMpLG09MD49djtcbm0/KGkmJihpPXZlKGkpKSxzPWYsYT1uLmFwcGx5KGwsbykpOml8fChpPV9lKHIsdikpfXJldHVybiBtJiZjP2M9dmUoYyk6Y3x8dD09PWh8fChjPV9lKHUsdCkpLGUmJihtPXRydWUsYT1uLmFwcGx5KGwsbykpLCFtfHxjfHxpfHwobz1sPW51bGwpLGF9fWZ1bmN0aW9uIFV0KG4pe3JldHVybiBufWZ1bmN0aW9uIEd0KG4sdCxlKXt2YXIgcj10cnVlLHU9dCYmYnQodCk7dCYmKGV8fHUubGVuZ3RoKXx8KG51bGw9PWUmJihlPXQpLG89USx0PW4sbj1KLHU9YnQodCkpLGZhbHNlPT09ZT9yPWZhbHNlOnd0KGUpJiZcImNoYWluXCJpbiBlJiYocj1lLmNoYWluKTt2YXIgbz1uLGk9ZHQobyk7U3QodSxmdW5jdGlvbihlKXt2YXIgdT1uW2VdPXRbZV07aSYmKG8ucHJvdG90eXBlW2VdPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fX2NoYWluX18sZT10aGlzLl9fd3JhcHBlZF9fLGk9W2VdO2lmKGJlLmFwcGx5KGksYXJndW1lbnRzKSxpPXUuYXBwbHkobixpKSxyfHx0KXtpZihlPT09aSYmd3QoaSkpcmV0dXJuIHRoaXM7XG5pPW5ldyBvKGkpLGkuX19jaGFpbl9fPXR9cmV0dXJuIGl9KX0pfWZ1bmN0aW9uIEh0KCl7fWZ1bmN0aW9uIEp0KG4pe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gdFtuXX19ZnVuY3Rpb24gUXQoKXtyZXR1cm4gdGhpcy5fX3dyYXBwZWRfX31lPWU/WS5kZWZhdWx0cyhHLk9iamVjdCgpLGUsWS5waWNrKEcsQSkpOkc7dmFyIFh0PWUuQXJyYXksWXQ9ZS5Cb29sZWFuLFp0PWUuRGF0ZSxuZT1lLkZ1bmN0aW9uLHRlPWUuTWF0aCxlZT1lLk51bWJlcixyZT1lLk9iamVjdCx1ZT1lLlJlZ0V4cCxvZT1lLlN0cmluZyxpZT1lLlR5cGVFcnJvcixhZT1bXSxmZT1yZS5wcm90b3R5cGUsbGU9ZS5fLGNlPWZlLnRvU3RyaW5nLHBlPXVlKFwiXlwiK29lKGNlKS5yZXBsYWNlKC9bLiorP14ke30oKXxbXFxdXFxcXF0vZyxcIlxcXFwkJlwiKS5yZXBsYWNlKC90b1N0cmluZ3wgZm9yIFteXFxdXSsvZyxcIi4qP1wiKStcIiRcIiksc2U9dGUuY2VpbCx2ZT1lLmNsZWFyVGltZW91dCxoZT10ZS5mbG9vcixnZT1uZS5wcm90b3R5cGUudG9TdHJpbmcseWU9dnQoeWU9cmUuZ2V0UHJvdG90eXBlT2YpJiZ5ZSxtZT1mZS5oYXNPd25Qcm9wZXJ0eSxiZT1hZS5wdXNoLF9lPWUuc2V0VGltZW91dCxkZT1hZS5zcGxpY2Usd2U9YWUudW5zaGlmdCxqZT1mdW5jdGlvbigpe3RyeXt2YXIgbj17fSx0PXZ0KHQ9cmUuZGVmaW5lUHJvcGVydHkpJiZ0LGU9dChuLG4sbikmJnRcbn1jYXRjaChyKXt9cmV0dXJuIGV9KCksa2U9dnQoa2U9cmUuY3JlYXRlKSYma2UseGU9dnQoeGU9WHQuaXNBcnJheSkmJnhlLENlPWUuaXNGaW5pdGUsT2U9ZS5pc05hTixOZT12dChOZT1yZS5rZXlzKSYmTmUsSWU9dGUubWF4LFNlPXRlLm1pbixFZT1lLnBhcnNlSW50LFJlPXRlLnJhbmRvbSxBZT17fTtBZVskXT1YdCxBZVtUXT1ZdCxBZVtGXT1adCxBZVtCXT1uZSxBZVtxXT1yZSxBZVtXXT1lZSxBZVt6XT11ZSxBZVtQXT1vZSxRLnByb3RvdHlwZT1KLnByb3RvdHlwZTt2YXIgRGU9Si5zdXBwb3J0PXt9O0RlLmZ1bmNEZWNvbXA9IXZ0KGUuYSkmJkUudGVzdChzKSxEZS5mdW5jTmFtZXM9dHlwZW9mIG5lLm5hbWU9PVwic3RyaW5nXCIsSi50ZW1wbGF0ZVNldHRpbmdzPXtlc2NhcGU6LzwlLShbXFxzXFxTXSs/KSU+L2csZXZhbHVhdGU6LzwlKFtcXHNcXFNdKz8pJT4vZyxpbnRlcnBvbGF0ZTpOLHZhcmlhYmxlOlwiXCIsaW1wb3J0czp7XzpKfX0sa2V8fChudD1mdW5jdGlvbigpe2Z1bmN0aW9uIG4oKXt9cmV0dXJuIGZ1bmN0aW9uKHQpe2lmKHd0KHQpKXtuLnByb3RvdHlwZT10O1xudmFyIHI9bmV3IG47bi5wcm90b3R5cGU9bnVsbH1yZXR1cm4gcnx8ZS5PYmplY3QoKX19KCkpO3ZhciAkZT1qZT9mdW5jdGlvbihuLHQpe00udmFsdWU9dCxqZShuLFwiX19iaW5kRGF0YV9fXCIsTSl9Okh0LFRlPXhlfHxmdW5jdGlvbihuKXtyZXR1cm4gbiYmdHlwZW9mIG49PVwib2JqZWN0XCImJnR5cGVvZiBuLmxlbmd0aD09XCJudW1iZXJcIiYmY2UuY2FsbChuKT09JHx8ZmFsc2V9LEZlPU5lP2Z1bmN0aW9uKG4pe3JldHVybiB3dChuKT9OZShuKTpbXX06SCxCZT17XCImXCI6XCImYW1wO1wiLFwiPFwiOlwiJmx0O1wiLFwiPlwiOlwiJmd0O1wiLCdcIic6XCImcXVvdDtcIixcIidcIjpcIiYjMzk7XCJ9LFdlPV90KEJlKSxxZT11ZShcIihcIitGZShXZSkuam9pbihcInxcIikrXCIpXCIsXCJnXCIpLHplPXVlKFwiW1wiK0ZlKEJlKS5qb2luKFwiXCIpK1wiXVwiLFwiZ1wiKSxQZT15ZT9mdW5jdGlvbihuKXtpZighbnx8Y2UuY2FsbChuKSE9cSlyZXR1cm4gZmFsc2U7dmFyIHQ9bi52YWx1ZU9mLGU9dnQodCkmJihlPXllKHQpKSYmeWUoZSk7cmV0dXJuIGU/bj09ZXx8eWUobik9PWU6aHQobilcbn06aHQsS2U9bHQoZnVuY3Rpb24obix0LGUpe21lLmNhbGwobixlKT9uW2VdKys6bltlXT0xfSksTGU9bHQoZnVuY3Rpb24obix0LGUpeyhtZS5jYWxsKG4sZSk/bltlXTpuW2VdPVtdKS5wdXNoKHQpfSksTWU9bHQoZnVuY3Rpb24obix0LGUpe25bZV09dH0pLFZlPVJ0LFVlPXZ0KFVlPVp0Lm5vdykmJlVlfHxmdW5jdGlvbigpe3JldHVybihuZXcgWnQpLmdldFRpbWUoKX0sR2U9OD09RWUoZCtcIjA4XCIpP0VlOmZ1bmN0aW9uKG4sdCl7cmV0dXJuIEVlKGt0KG4pP24ucmVwbGFjZShJLFwiXCIpOm4sdHx8MCl9O3JldHVybiBKLmFmdGVyPWZ1bmN0aW9uKG4sdCl7aWYoIWR0KHQpKXRocm93IG5ldyBpZTtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gMT4tLW4/dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk6dm9pZCAwfX0sSi5hc3NpZ249VSxKLmF0PWZ1bmN0aW9uKG4pe2Zvcih2YXIgdD1hcmd1bWVudHMsZT0tMSxyPXV0KHQsdHJ1ZSxmYWxzZSwxKSx0PXRbMl0mJnRbMl1bdFsxXV09PT1uPzE6ci5sZW5ndGgsdT1YdCh0KTsrK2U8dDspdVtlXT1uW3JbZV1dO1xucmV0dXJuIHV9LEouYmluZD1NdCxKLmJpbmRBbGw9ZnVuY3Rpb24obil7Zm9yKHZhciB0PTE8YXJndW1lbnRzLmxlbmd0aD91dChhcmd1bWVudHMsdHJ1ZSxmYWxzZSwxKTpidChuKSxlPS0xLHI9dC5sZW5ndGg7KytlPHI7KXt2YXIgdT10W2VdO25bdV09Y3Qoblt1XSwxLG51bGwsbnVsbCxuKX1yZXR1cm4gbn0sSi5iaW5kS2V5PWZ1bmN0aW9uKG4sdCl7cmV0dXJuIDI8YXJndW1lbnRzLmxlbmd0aD9jdCh0LDE5LHAoYXJndW1lbnRzLDIpLG51bGwsbik6Y3QodCwzLG51bGwsbnVsbCxuKX0sSi5jaGFpbj1mdW5jdGlvbihuKXtyZXR1cm4gbj1uZXcgUShuKSxuLl9fY2hhaW5fXz10cnVlLG59LEouY29tcGFjdD1mdW5jdGlvbihuKXtmb3IodmFyIHQ9LTEsZT1uP24ubGVuZ3RoOjAscj1bXTsrK3Q8ZTspe3ZhciB1PW5bdF07dSYmci5wdXNoKHUpfXJldHVybiByfSxKLmNvbXBvc2U9ZnVuY3Rpb24oKXtmb3IodmFyIG49YXJndW1lbnRzLHQ9bi5sZW5ndGg7dC0tOylpZighZHQoblt0XSkpdGhyb3cgbmV3IGllO1xucmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciB0PWFyZ3VtZW50cyxlPW4ubGVuZ3RoO2UtLTspdD1bbltlXS5hcHBseSh0aGlzLHQpXTtyZXR1cm4gdFswXX19LEouY29uc3RhbnQ9ZnVuY3Rpb24obil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG59fSxKLmNvdW50Qnk9S2UsSi5jcmVhdGU9ZnVuY3Rpb24obix0KXt2YXIgZT1udChuKTtyZXR1cm4gdD9VKGUsdCk6ZX0sSi5jcmVhdGVDYWxsYmFjaz1mdW5jdGlvbihuLHQsZSl7dmFyIHI9dHlwZW9mIG47aWYobnVsbD09bnx8XCJmdW5jdGlvblwiPT1yKXJldHVybiB0dChuLHQsZSk7aWYoXCJvYmplY3RcIiE9cilyZXR1cm4gSnQobik7dmFyIHU9RmUobiksbz11WzBdLGk9bltvXTtyZXR1cm4gMSE9dS5sZW5ndGh8fGkhPT1pfHx3dChpKT9mdW5jdGlvbih0KXtmb3IodmFyIGU9dS5sZW5ndGgscj1mYWxzZTtlLS0mJihyPW90KHRbdVtlXV0sblt1W2VdXSxudWxsLHRydWUpKTspO3JldHVybiByfTpmdW5jdGlvbihuKXtyZXR1cm4gbj1uW29dLGk9PT1uJiYoMCE9PWl8fDEvaT09MS9uKVxufX0sSi5jdXJyeT1mdW5jdGlvbihuLHQpe3JldHVybiB0PXR5cGVvZiB0PT1cIm51bWJlclwiP3Q6K3R8fG4ubGVuZ3RoLGN0KG4sNCxudWxsLG51bGwsbnVsbCx0KX0sSi5kZWJvdW5jZT1WdCxKLmRlZmF1bHRzPV8sSi5kZWZlcj1mdW5jdGlvbihuKXtpZighZHQobikpdGhyb3cgbmV3IGllO3ZhciB0PXAoYXJndW1lbnRzLDEpO3JldHVybiBfZShmdW5jdGlvbigpe24uYXBwbHkodix0KX0sMSl9LEouZGVsYXk9ZnVuY3Rpb24obix0KXtpZighZHQobikpdGhyb3cgbmV3IGllO3ZhciBlPXAoYXJndW1lbnRzLDIpO3JldHVybiBfZShmdW5jdGlvbigpe24uYXBwbHkodixlKX0sdCl9LEouZGlmZmVyZW5jZT1mdW5jdGlvbihuKXtyZXR1cm4gcnQobix1dChhcmd1bWVudHMsdHJ1ZSx0cnVlLDEpKX0sSi5maWx0ZXI9TnQsSi5mbGF0dGVuPWZ1bmN0aW9uKG4sdCxlLHIpe3JldHVybiB0eXBlb2YgdCE9XCJib29sZWFuXCImJm51bGwhPXQmJihyPWUsZT10eXBlb2YgdCE9XCJmdW5jdGlvblwiJiZyJiZyW3RdPT09bj9udWxsOnQsdD1mYWxzZSksbnVsbCE9ZSYmKG49UnQobixlLHIpKSx1dChuLHQpXG59LEouZm9yRWFjaD1TdCxKLmZvckVhY2hSaWdodD1FdCxKLmZvckluPWcsSi5mb3JJblJpZ2h0PWZ1bmN0aW9uKG4sdCxlKXt2YXIgcj1bXTtnKG4sZnVuY3Rpb24obix0KXtyLnB1c2godCxuKX0pO3ZhciB1PXIubGVuZ3RoO2Zvcih0PXR0KHQsZSwzKTt1LS0mJmZhbHNlIT09dChyW3UtLV0sclt1XSxuKTspO3JldHVybiBufSxKLmZvck93bj1oLEouZm9yT3duUmlnaHQ9bXQsSi5mdW5jdGlvbnM9YnQsSi5ncm91cEJ5PUxlLEouaW5kZXhCeT1NZSxKLmluaXRpYWw9ZnVuY3Rpb24obix0LGUpe3ZhciByPTAsdT1uP24ubGVuZ3RoOjA7aWYodHlwZW9mIHQhPVwibnVtYmVyXCImJm51bGwhPXQpe3ZhciBvPXU7Zm9yKHQ9Si5jcmVhdGVDYWxsYmFjayh0LGUsMyk7by0tJiZ0KG5bb10sbyxuKTspcisrfWVsc2Ugcj1udWxsPT10fHxlPzE6dHx8cjtyZXR1cm4gcChuLDAsU2UoSWUoMCx1LXIpLHUpKX0sSi5pbnRlcnNlY3Rpb249ZnVuY3Rpb24oKXtmb3IodmFyIGU9W10scj0tMSx1PWFyZ3VtZW50cy5sZW5ndGgsaT1hKCksZj1zdCgpLHA9Zj09PW4scz1hKCk7KytyPHU7KXt2YXIgdj1hcmd1bWVudHNbcl07XG4oVGUodil8fHl0KHYpKSYmKGUucHVzaCh2KSxpLnB1c2gocCYmdi5sZW5ndGg+PWImJm8ocj9lW3JdOnMpKSl9dmFyIHA9ZVswXSxoPS0xLGc9cD9wLmxlbmd0aDowLHk9W107bjpmb3IoOysraDxnOyl7dmFyIG09aVswXSx2PXBbaF07aWYoMD4obT90KG0sdik6ZihzLHYpKSl7Zm9yKHI9dSwobXx8cykucHVzaCh2KTstLXI7KWlmKG09aVtyXSwwPihtP3QobSx2KTpmKGVbcl0sdikpKWNvbnRpbnVlIG47eS5wdXNoKHYpfX1mb3IoO3UtLTspKG09aVt1XSkmJmMobSk7cmV0dXJuIGwoaSksbChzKSx5fSxKLmludmVydD1fdCxKLmludm9rZT1mdW5jdGlvbihuLHQpe3ZhciBlPXAoYXJndW1lbnRzLDIpLHI9LTEsdT10eXBlb2YgdD09XCJmdW5jdGlvblwiLG89bj9uLmxlbmd0aDowLGk9WHQodHlwZW9mIG89PVwibnVtYmVyXCI/bzowKTtyZXR1cm4gU3QobixmdW5jdGlvbihuKXtpWysrcl09KHU/dDpuW3RdKS5hcHBseShuLGUpfSksaX0sSi5rZXlzPUZlLEoubWFwPVJ0LEoubWFwVmFsdWVzPWZ1bmN0aW9uKG4sdCxlKXt2YXIgcj17fTtcbnJldHVybiB0PUouY3JlYXRlQ2FsbGJhY2sodCxlLDMpLGgobixmdW5jdGlvbihuLGUsdSl7cltlXT10KG4sZSx1KX0pLHJ9LEoubWF4PUF0LEoubWVtb2l6ZT1mdW5jdGlvbihuLHQpe2Z1bmN0aW9uIGUoKXt2YXIgcj1lLmNhY2hlLHU9dD90LmFwcGx5KHRoaXMsYXJndW1lbnRzKTptK2FyZ3VtZW50c1swXTtyZXR1cm4gbWUuY2FsbChyLHUpP3JbdV06clt1XT1uLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1pZighZHQobikpdGhyb3cgbmV3IGllO3JldHVybiBlLmNhY2hlPXt9LGV9LEoubWVyZ2U9ZnVuY3Rpb24obil7dmFyIHQ9YXJndW1lbnRzLGU9MjtpZighd3QobikpcmV0dXJuIG47aWYoXCJudW1iZXJcIiE9dHlwZW9mIHRbMl0mJihlPXQubGVuZ3RoKSwzPGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHRbZS0yXSl2YXIgcj10dCh0Wy0tZS0xXSx0W2UtLV0sMik7ZWxzZSAyPGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHRbZS0xXSYmKHI9dFstLWVdKTtmb3IodmFyIHQ9cChhcmd1bWVudHMsMSxlKSx1PS0xLG89YSgpLGk9YSgpOysrdTxlOylpdChuLHRbdV0scixvLGkpO1xucmV0dXJuIGwobyksbChpKSxufSxKLm1pbj1mdW5jdGlvbihuLHQsZSl7dmFyIHU9MS8wLG89dTtpZih0eXBlb2YgdCE9XCJmdW5jdGlvblwiJiZlJiZlW3RdPT09biYmKHQ9bnVsbCksbnVsbD09dCYmVGUobikpe2U9LTE7Zm9yKHZhciBpPW4ubGVuZ3RoOysrZTxpOyl7dmFyIGE9bltlXTthPG8mJihvPWEpfX1lbHNlIHQ9bnVsbD09dCYma3Qobik/cjpKLmNyZWF0ZUNhbGxiYWNrKHQsZSwzKSxTdChuLGZ1bmN0aW9uKG4sZSxyKXtlPXQobixlLHIpLGU8dSYmKHU9ZSxvPW4pfSk7cmV0dXJuIG99LEoub21pdD1mdW5jdGlvbihuLHQsZSl7dmFyIHI9e307aWYodHlwZW9mIHQhPVwiZnVuY3Rpb25cIil7dmFyIHU9W107ZyhuLGZ1bmN0aW9uKG4sdCl7dS5wdXNoKHQpfSk7Zm9yKHZhciB1PXJ0KHUsdXQoYXJndW1lbnRzLHRydWUsZmFsc2UsMSkpLG89LTEsaT11Lmxlbmd0aDsrK288aTspe3ZhciBhPXVbb107clthXT1uW2FdfX1lbHNlIHQ9Si5jcmVhdGVDYWxsYmFjayh0LGUsMyksZyhuLGZ1bmN0aW9uKG4sZSx1KXt0KG4sZSx1KXx8KHJbZV09bilcbn0pO3JldHVybiByfSxKLm9uY2U9ZnVuY3Rpb24obil7dmFyIHQsZTtpZighZHQobikpdGhyb3cgbmV3IGllO3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0P2U6KHQ9dHJ1ZSxlPW4uYXBwbHkodGhpcyxhcmd1bWVudHMpLG49bnVsbCxlKX19LEoucGFpcnM9ZnVuY3Rpb24obil7Zm9yKHZhciB0PS0xLGU9RmUobikscj1lLmxlbmd0aCx1PVh0KHIpOysrdDxyOyl7dmFyIG89ZVt0XTt1W3RdPVtvLG5bb11dfXJldHVybiB1fSxKLnBhcnRpYWw9ZnVuY3Rpb24obil7cmV0dXJuIGN0KG4sMTYscChhcmd1bWVudHMsMSkpfSxKLnBhcnRpYWxSaWdodD1mdW5jdGlvbihuKXtyZXR1cm4gY3QobiwzMixudWxsLHAoYXJndW1lbnRzLDEpKX0sSi5waWNrPWZ1bmN0aW9uKG4sdCxlKXt2YXIgcj17fTtpZih0eXBlb2YgdCE9XCJmdW5jdGlvblwiKWZvcih2YXIgdT0tMSxvPXV0KGFyZ3VtZW50cyx0cnVlLGZhbHNlLDEpLGk9d3Qobik/by5sZW5ndGg6MDsrK3U8aTspe3ZhciBhPW9bdV07YSBpbiBuJiYoclthXT1uW2FdKVxufWVsc2UgdD1KLmNyZWF0ZUNhbGxiYWNrKHQsZSwzKSxnKG4sZnVuY3Rpb24obixlLHUpe3QobixlLHUpJiYocltlXT1uKX0pO3JldHVybiByfSxKLnBsdWNrPVZlLEoucHJvcGVydHk9SnQsSi5wdWxsPWZ1bmN0aW9uKG4pe2Zvcih2YXIgdD1hcmd1bWVudHMsZT0wLHI9dC5sZW5ndGgsdT1uP24ubGVuZ3RoOjA7KytlPHI7KWZvcih2YXIgbz0tMSxpPXRbZV07KytvPHU7KW5bb109PT1pJiYoZGUuY2FsbChuLG8tLSwxKSx1LS0pO3JldHVybiBufSxKLnJhbmdlPWZ1bmN0aW9uKG4sdCxlKXtuPStufHwwLGU9dHlwZW9mIGU9PVwibnVtYmVyXCI/ZTorZXx8MSxudWxsPT10JiYodD1uLG49MCk7dmFyIHI9LTE7dD1JZSgwLHNlKCh0LW4pLyhlfHwxKSkpO2Zvcih2YXIgdT1YdCh0KTsrK3I8dDspdVtyXT1uLG4rPWU7cmV0dXJuIHV9LEoucmVqZWN0PWZ1bmN0aW9uKG4sdCxlKXtyZXR1cm4gdD1KLmNyZWF0ZUNhbGxiYWNrKHQsZSwzKSxOdChuLGZ1bmN0aW9uKG4sZSxyKXtyZXR1cm4hdChuLGUscilcbn0pfSxKLnJlbW92ZT1mdW5jdGlvbihuLHQsZSl7dmFyIHI9LTEsdT1uP24ubGVuZ3RoOjAsbz1bXTtmb3IodD1KLmNyZWF0ZUNhbGxiYWNrKHQsZSwzKTsrK3I8dTspZT1uW3JdLHQoZSxyLG4pJiYoby5wdXNoKGUpLGRlLmNhbGwobixyLS0sMSksdS0tKTtyZXR1cm4gb30sSi5yZXN0PXF0LEouc2h1ZmZsZT1UdCxKLnNvcnRCeT1mdW5jdGlvbihuLHQsZSl7dmFyIHI9LTEsbz1UZSh0KSxpPW4/bi5sZW5ndGg6MCxwPVh0KHR5cGVvZiBpPT1cIm51bWJlclwiP2k6MCk7Zm9yKG98fCh0PUouY3JlYXRlQ2FsbGJhY2sodCxlLDMpKSxTdChuLGZ1bmN0aW9uKG4sZSx1KXt2YXIgaT1wWysrcl09ZigpO28/aS5tPVJ0KHQsZnVuY3Rpb24odCl7cmV0dXJuIG5bdF19KTooaS5tPWEoKSlbMF09dChuLGUsdSksaS5uPXIsaS5vPW59KSxpPXAubGVuZ3RoLHAuc29ydCh1KTtpLS07KW49cFtpXSxwW2ldPW4ubyxvfHxsKG4ubSksYyhuKTtyZXR1cm4gcH0sSi50YXA9ZnVuY3Rpb24obix0KXtyZXR1cm4gdChuKSxuXG59LEoudGhyb3R0bGU9ZnVuY3Rpb24obix0LGUpe3ZhciByPXRydWUsdT10cnVlO2lmKCFkdChuKSl0aHJvdyBuZXcgaWU7cmV0dXJuIGZhbHNlPT09ZT9yPWZhbHNlOnd0KGUpJiYocj1cImxlYWRpbmdcImluIGU/ZS5sZWFkaW5nOnIsdT1cInRyYWlsaW5nXCJpbiBlP2UudHJhaWxpbmc6dSksTC5sZWFkaW5nPXIsTC5tYXhXYWl0PXQsTC50cmFpbGluZz11LFZ0KG4sdCxMKX0sSi50aW1lcz1mdW5jdGlvbihuLHQsZSl7bj0tMTwobj0rbik/bjowO3ZhciByPS0xLHU9WHQobik7Zm9yKHQ9dHQodCxlLDEpOysrcjxuOyl1W3JdPXQocik7cmV0dXJuIHV9LEoudG9BcnJheT1mdW5jdGlvbihuKXtyZXR1cm4gbiYmdHlwZW9mIG4ubGVuZ3RoPT1cIm51bWJlclwiP3Aobik6eHQobil9LEoudHJhbnNmb3JtPWZ1bmN0aW9uKG4sdCxlLHIpe3ZhciB1PVRlKG4pO2lmKG51bGw9PWUpaWYodSllPVtdO2Vsc2V7dmFyIG89biYmbi5jb25zdHJ1Y3RvcjtlPW50KG8mJm8ucHJvdG90eXBlKX1yZXR1cm4gdCYmKHQ9Si5jcmVhdGVDYWxsYmFjayh0LHIsNCksKHU/U3Q6aCkobixmdW5jdGlvbihuLHIsdSl7cmV0dXJuIHQoZSxuLHIsdSlcbn0pKSxlfSxKLnVuaW9uPWZ1bmN0aW9uKCl7cmV0dXJuIGZ0KHV0KGFyZ3VtZW50cyx0cnVlLHRydWUpKX0sSi51bmlxPVB0LEoudmFsdWVzPXh0LEoud2hlcmU9TnQsSi53aXRob3V0PWZ1bmN0aW9uKG4pe3JldHVybiBydChuLHAoYXJndW1lbnRzLDEpKX0sSi53cmFwPWZ1bmN0aW9uKG4sdCl7cmV0dXJuIGN0KHQsMTYsW25dKX0sSi54b3I9ZnVuY3Rpb24oKXtmb3IodmFyIG49LTEsdD1hcmd1bWVudHMubGVuZ3RoOysrbjx0Oyl7dmFyIGU9YXJndW1lbnRzW25dO2lmKFRlKGUpfHx5dChlKSl2YXIgcj1yP2Z0KHJ0KHIsZSkuY29uY2F0KHJ0KGUscikpKTplfXJldHVybiByfHxbXX0sSi56aXA9S3QsSi56aXBPYmplY3Q9THQsSi5jb2xsZWN0PVJ0LEouZHJvcD1xdCxKLmVhY2g9U3QsSi5lYWNoUmlnaHQ9RXQsSi5leHRlbmQ9VSxKLm1ldGhvZHM9YnQsSi5vYmplY3Q9THQsSi5zZWxlY3Q9TnQsSi50YWlsPXF0LEoudW5pcXVlPVB0LEoudW56aXA9S3QsR3QoSiksSi5jbG9uZT1mdW5jdGlvbihuLHQsZSxyKXtyZXR1cm4gdHlwZW9mIHQhPVwiYm9vbGVhblwiJiZudWxsIT10JiYocj1lLGU9dCx0PWZhbHNlKSxaKG4sdCx0eXBlb2YgZT09XCJmdW5jdGlvblwiJiZ0dChlLHIsMSkpXG59LEouY2xvbmVEZWVwPWZ1bmN0aW9uKG4sdCxlKXtyZXR1cm4gWihuLHRydWUsdHlwZW9mIHQ9PVwiZnVuY3Rpb25cIiYmdHQodCxlLDEpKX0sSi5jb250YWlucz1DdCxKLmVzY2FwZT1mdW5jdGlvbihuKXtyZXR1cm4gbnVsbD09bj9cIlwiOm9lKG4pLnJlcGxhY2UoemUscHQpfSxKLmV2ZXJ5PU90LEouZmluZD1JdCxKLmZpbmRJbmRleD1mdW5jdGlvbihuLHQsZSl7dmFyIHI9LTEsdT1uP24ubGVuZ3RoOjA7Zm9yKHQ9Si5jcmVhdGVDYWxsYmFjayh0LGUsMyk7KytyPHU7KWlmKHQobltyXSxyLG4pKXJldHVybiByO3JldHVybi0xfSxKLmZpbmRLZXk9ZnVuY3Rpb24obix0LGUpe3ZhciByO3JldHVybiB0PUouY3JlYXRlQ2FsbGJhY2sodCxlLDMpLGgobixmdW5jdGlvbihuLGUsdSl7cmV0dXJuIHQobixlLHUpPyhyPWUsZmFsc2UpOnZvaWQgMH0pLHJ9LEouZmluZExhc3Q9ZnVuY3Rpb24obix0LGUpe3ZhciByO3JldHVybiB0PUouY3JlYXRlQ2FsbGJhY2sodCxlLDMpLEV0KG4sZnVuY3Rpb24obixlLHUpe3JldHVybiB0KG4sZSx1KT8ocj1uLGZhbHNlKTp2b2lkIDBcbn0pLHJ9LEouZmluZExhc3RJbmRleD1mdW5jdGlvbihuLHQsZSl7dmFyIHI9bj9uLmxlbmd0aDowO2Zvcih0PUouY3JlYXRlQ2FsbGJhY2sodCxlLDMpO3ItLTspaWYodChuW3JdLHIsbikpcmV0dXJuIHI7cmV0dXJuLTF9LEouZmluZExhc3RLZXk9ZnVuY3Rpb24obix0LGUpe3ZhciByO3JldHVybiB0PUouY3JlYXRlQ2FsbGJhY2sodCxlLDMpLG10KG4sZnVuY3Rpb24obixlLHUpe3JldHVybiB0KG4sZSx1KT8ocj1lLGZhbHNlKTp2b2lkIDB9KSxyfSxKLmhhcz1mdW5jdGlvbihuLHQpe3JldHVybiBuP21lLmNhbGwobix0KTpmYWxzZX0sSi5pZGVudGl0eT1VdCxKLmluZGV4T2Y9V3QsSi5pc0FyZ3VtZW50cz15dCxKLmlzQXJyYXk9VGUsSi5pc0Jvb2xlYW49ZnVuY3Rpb24obil7cmV0dXJuIHRydWU9PT1ufHxmYWxzZT09PW58fG4mJnR5cGVvZiBuPT1cIm9iamVjdFwiJiZjZS5jYWxsKG4pPT1UfHxmYWxzZX0sSi5pc0RhdGU9ZnVuY3Rpb24obil7cmV0dXJuIG4mJnR5cGVvZiBuPT1cIm9iamVjdFwiJiZjZS5jYWxsKG4pPT1GfHxmYWxzZVxufSxKLmlzRWxlbWVudD1mdW5jdGlvbihuKXtyZXR1cm4gbiYmMT09PW4ubm9kZVR5cGV8fGZhbHNlfSxKLmlzRW1wdHk9ZnVuY3Rpb24obil7dmFyIHQ9dHJ1ZTtpZighbilyZXR1cm4gdDt2YXIgZT1jZS5jYWxsKG4pLHI9bi5sZW5ndGg7cmV0dXJuIGU9PSR8fGU9PVB8fGU9PUR8fGU9PXEmJnR5cGVvZiByPT1cIm51bWJlclwiJiZkdChuLnNwbGljZSk/IXI6KGgobixmdW5jdGlvbigpe3JldHVybiB0PWZhbHNlfSksdCl9LEouaXNFcXVhbD1mdW5jdGlvbihuLHQsZSxyKXtyZXR1cm4gb3Qobix0LHR5cGVvZiBlPT1cImZ1bmN0aW9uXCImJnR0KGUsciwyKSl9LEouaXNGaW5pdGU9ZnVuY3Rpb24obil7cmV0dXJuIENlKG4pJiYhT2UocGFyc2VGbG9hdChuKSl9LEouaXNGdW5jdGlvbj1kdCxKLmlzTmFOPWZ1bmN0aW9uKG4pe3JldHVybiBqdChuKSYmbiE9K259LEouaXNOdWxsPWZ1bmN0aW9uKG4pe3JldHVybiBudWxsPT09bn0sSi5pc051bWJlcj1qdCxKLmlzT2JqZWN0PXd0LEouaXNQbGFpbk9iamVjdD1QZSxKLmlzUmVnRXhwPWZ1bmN0aW9uKG4pe3JldHVybiBuJiZ0eXBlb2Ygbj09XCJvYmplY3RcIiYmY2UuY2FsbChuKT09enx8ZmFsc2Vcbn0sSi5pc1N0cmluZz1rdCxKLmlzVW5kZWZpbmVkPWZ1bmN0aW9uKG4pe3JldHVybiB0eXBlb2Ygbj09XCJ1bmRlZmluZWRcIn0sSi5sYXN0SW5kZXhPZj1mdW5jdGlvbihuLHQsZSl7dmFyIHI9bj9uLmxlbmd0aDowO2Zvcih0eXBlb2YgZT09XCJudW1iZXJcIiYmKHI9KDA+ZT9JZSgwLHIrZSk6U2UoZSxyLTEpKSsxKTtyLS07KWlmKG5bcl09PT10KXJldHVybiByO3JldHVybi0xfSxKLm1peGluPUd0LEoubm9Db25mbGljdD1mdW5jdGlvbigpe3JldHVybiBlLl89bGUsdGhpc30sSi5ub29wPUh0LEoubm93PVVlLEoucGFyc2VJbnQ9R2UsSi5yYW5kb209ZnVuY3Rpb24obix0LGUpe3ZhciByPW51bGw9PW4sdT1udWxsPT10O3JldHVybiBudWxsPT1lJiYodHlwZW9mIG49PVwiYm9vbGVhblwiJiZ1PyhlPW4sbj0xKTp1fHx0eXBlb2YgdCE9XCJib29sZWFuXCJ8fChlPXQsdT10cnVlKSksciYmdSYmKHQ9MSksbj0rbnx8MCx1Pyh0PW4sbj0wKTp0PSt0fHwwLGV8fG4lMXx8dCUxPyhlPVJlKCksU2UobitlKih0LW4rcGFyc2VGbG9hdChcIjFlLVwiKygoZStcIlwiKS5sZW5ndGgtMSkpKSx0KSk6YXQobix0KVxufSxKLnJlZHVjZT1EdCxKLnJlZHVjZVJpZ2h0PSR0LEoucmVzdWx0PWZ1bmN0aW9uKG4sdCl7aWYobil7dmFyIGU9blt0XTtyZXR1cm4gZHQoZSk/blt0XSgpOmV9fSxKLnJ1bkluQ29udGV4dD1zLEouc2l6ZT1mdW5jdGlvbihuKXt2YXIgdD1uP24ubGVuZ3RoOjA7cmV0dXJuIHR5cGVvZiB0PT1cIm51bWJlclwiP3Q6RmUobikubGVuZ3RofSxKLnNvbWU9RnQsSi5zb3J0ZWRJbmRleD16dCxKLnRlbXBsYXRlPWZ1bmN0aW9uKG4sdCxlKXt2YXIgcj1KLnRlbXBsYXRlU2V0dGluZ3M7bj1vZShufHxcIlwiKSxlPV8oe30sZSxyKTt2YXIgdSxvPV8oe30sZS5pbXBvcnRzLHIuaW1wb3J0cykscj1GZShvKSxvPXh0KG8pLGE9MCxmPWUuaW50ZXJwb2xhdGV8fFMsbD1cIl9fcCs9J1wiLGY9dWUoKGUuZXNjYXBlfHxTKS5zb3VyY2UrXCJ8XCIrZi5zb3VyY2UrXCJ8XCIrKGY9PT1OP3g6Uykuc291cmNlK1wifFwiKyhlLmV2YWx1YXRlfHxTKS5zb3VyY2UrXCJ8JFwiLFwiZ1wiKTtuLnJlcGxhY2UoZixmdW5jdGlvbih0LGUscixvLGYsYyl7cmV0dXJuIHJ8fChyPW8pLGwrPW4uc2xpY2UoYSxjKS5yZXBsYWNlKFIsaSksZSYmKGwrPVwiJytfX2UoXCIrZStcIikrJ1wiKSxmJiYodT10cnVlLGwrPVwiJztcIitmK1wiO1xcbl9fcCs9J1wiKSxyJiYobCs9XCInKygoX190PShcIityK1wiKSk9PW51bGw/Jyc6X190KSsnXCIpLGE9Yyt0Lmxlbmd0aCx0XG59KSxsKz1cIic7XCIsZj1lPWUudmFyaWFibGUsZnx8KGU9XCJvYmpcIixsPVwid2l0aChcIitlK1wiKXtcIitsK1wifVwiKSxsPSh1P2wucmVwbGFjZSh3LFwiXCIpOmwpLnJlcGxhY2UoaixcIiQxXCIpLnJlcGxhY2UoayxcIiQxO1wiKSxsPVwiZnVuY3Rpb24oXCIrZStcIil7XCIrKGY/XCJcIjplK1wifHwoXCIrZStcIj17fSk7XCIpK1widmFyIF9fdCxfX3A9JycsX19lPV8uZXNjYXBlXCIrKHU/XCIsX19qPUFycmF5LnByb3RvdHlwZS5qb2luO2Z1bmN0aW9uIHByaW50KCl7X19wKz1fX2ouY2FsbChhcmd1bWVudHMsJycpfVwiOlwiO1wiKStsK1wicmV0dXJuIF9fcH1cIjt0cnl7dmFyIGM9bmUocixcInJldHVybiBcIitsKS5hcHBseSh2LG8pfWNhdGNoKHApe3Rocm93IHAuc291cmNlPWwscH1yZXR1cm4gdD9jKHQpOihjLnNvdXJjZT1sLGMpfSxKLnVuZXNjYXBlPWZ1bmN0aW9uKG4pe3JldHVybiBudWxsPT1uP1wiXCI6b2UobikucmVwbGFjZShxZSxndCl9LEoudW5pcXVlSWQ9ZnVuY3Rpb24obil7dmFyIHQ9Kyt5O3JldHVybiBvZShudWxsPT1uP1wiXCI6bikrdFxufSxKLmFsbD1PdCxKLmFueT1GdCxKLmRldGVjdD1JdCxKLmZpbmRXaGVyZT1JdCxKLmZvbGRsPUR0LEouZm9sZHI9JHQsSi5pbmNsdWRlPUN0LEouaW5qZWN0PUR0LEd0KGZ1bmN0aW9uKCl7dmFyIG49e307cmV0dXJuIGgoSixmdW5jdGlvbih0LGUpe0oucHJvdG90eXBlW2VdfHwobltlXT10KX0pLG59KCksZmFsc2UpLEouZmlyc3Q9QnQsSi5sYXN0PWZ1bmN0aW9uKG4sdCxlKXt2YXIgcj0wLHU9bj9uLmxlbmd0aDowO2lmKHR5cGVvZiB0IT1cIm51bWJlclwiJiZudWxsIT10KXt2YXIgbz11O2Zvcih0PUouY3JlYXRlQ2FsbGJhY2sodCxlLDMpO28tLSYmdChuW29dLG8sbik7KXIrK31lbHNlIGlmKHI9dCxudWxsPT1yfHxlKXJldHVybiBuP25bdS0xXTp2O3JldHVybiBwKG4sSWUoMCx1LXIpKX0sSi5zYW1wbGU9ZnVuY3Rpb24obix0LGUpe3JldHVybiBuJiZ0eXBlb2Ygbi5sZW5ndGghPVwibnVtYmVyXCImJihuPXh0KG4pKSxudWxsPT10fHxlP24/blthdCgwLG4ubGVuZ3RoLTEpXTp2OihuPVR0KG4pLG4ubGVuZ3RoPVNlKEllKDAsdCksbi5sZW5ndGgpLG4pXG59LEoudGFrZT1CdCxKLmhlYWQ9QnQsaChKLGZ1bmN0aW9uKG4sdCl7dmFyIGU9XCJzYW1wbGVcIiE9PXQ7Si5wcm90b3R5cGVbdF18fChKLnByb3RvdHlwZVt0XT1mdW5jdGlvbih0LHIpe3ZhciB1PXRoaXMuX19jaGFpbl9fLG89bih0aGlzLl9fd3JhcHBlZF9fLHQscik7cmV0dXJuIHV8fG51bGwhPXQmJighcnx8ZSYmdHlwZW9mIHQ9PVwiZnVuY3Rpb25cIik/bmV3IFEobyx1KTpvfSl9KSxKLlZFUlNJT049XCIyLjQuMVwiLEoucHJvdG90eXBlLmNoYWluPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX19jaGFpbl9fPXRydWUsdGhpc30sSi5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gb2UodGhpcy5fX3dyYXBwZWRfXyl9LEoucHJvdG90eXBlLnZhbHVlPVF0LEoucHJvdG90eXBlLnZhbHVlT2Y9UXQsU3QoW1wiam9pblwiLFwicG9wXCIsXCJzaGlmdFwiXSxmdW5jdGlvbihuKXt2YXIgdD1hZVtuXTtKLnByb3RvdHlwZVtuXT1mdW5jdGlvbigpe3ZhciBuPXRoaXMuX19jaGFpbl9fLGU9dC5hcHBseSh0aGlzLl9fd3JhcHBlZF9fLGFyZ3VtZW50cyk7XG5yZXR1cm4gbj9uZXcgUShlLG4pOmV9fSksU3QoW1wicHVzaFwiLFwicmV2ZXJzZVwiLFwic29ydFwiLFwidW5zaGlmdFwiXSxmdW5jdGlvbihuKXt2YXIgdD1hZVtuXTtKLnByb3RvdHlwZVtuXT1mdW5jdGlvbigpe3JldHVybiB0LmFwcGx5KHRoaXMuX193cmFwcGVkX18sYXJndW1lbnRzKSx0aGlzfX0pLFN0KFtcImNvbmNhdFwiLFwic2xpY2VcIixcInNwbGljZVwiXSxmdW5jdGlvbihuKXt2YXIgdD1hZVtuXTtKLnByb3RvdHlwZVtuXT1mdW5jdGlvbigpe3JldHVybiBuZXcgUSh0LmFwcGx5KHRoaXMuX193cmFwcGVkX18sYXJndW1lbnRzKSx0aGlzLl9fY2hhaW5fXyl9fSksSn12YXIgdixoPVtdLGc9W10seT0wLG09K25ldyBEYXRlK1wiXCIsYj03NSxfPTQwLGQ9XCIgXFx0XFx4MEJcXGZcXHhhMFxcdWZlZmZcXG5cXHJcXHUyMDI4XFx1MjAyOVxcdTE2ODBcXHUxODBlXFx1MjAwMFxcdTIwMDFcXHUyMDAyXFx1MjAwM1xcdTIwMDRcXHUyMDA1XFx1MjAwNlxcdTIwMDdcXHUyMDA4XFx1MjAwOVxcdTIwMGFcXHUyMDJmXFx1MjA1ZlxcdTMwMDBcIix3PS9cXGJfX3BcXCs9Jyc7L2csaj0vXFxiKF9fcFxcKz0pJydcXCsvZyxrPS8oX19lXFwoLio/XFwpfFxcYl9fdFxcKSlcXCsnJzsvZyx4PS9cXCRcXHsoW15cXFxcfV0qKD86XFxcXC5bXlxcXFx9XSopKilcXH0vZyxDPS9cXHcqJC8sTz0vXlxccypmdW5jdGlvblsgXFxuXFxyXFx0XStcXHcvLE49LzwlPShbXFxzXFxTXSs/KSU+L2csST1SZWdFeHAoXCJeW1wiK2QrXCJdKjArKD89LiQpXCIpLFM9LygkXikvLEU9L1xcYnRoaXNcXGIvLFI9L1snXFxuXFxyXFx0XFx1MjAyOFxcdTIwMjlcXFxcXS9nLEE9XCJBcnJheSBCb29sZWFuIERhdGUgRnVuY3Rpb24gTWF0aCBOdW1iZXIgT2JqZWN0IFJlZ0V4cCBTdHJpbmcgXyBhdHRhY2hFdmVudCBjbGVhclRpbWVvdXQgaXNGaW5pdGUgaXNOYU4gcGFyc2VJbnQgc2V0VGltZW91dFwiLnNwbGl0KFwiIFwiKSxEPVwiW29iamVjdCBBcmd1bWVudHNdXCIsJD1cIltvYmplY3QgQXJyYXldXCIsVD1cIltvYmplY3QgQm9vbGVhbl1cIixGPVwiW29iamVjdCBEYXRlXVwiLEI9XCJbb2JqZWN0IEZ1bmN0aW9uXVwiLFc9XCJbb2JqZWN0IE51bWJlcl1cIixxPVwiW29iamVjdCBPYmplY3RdXCIsej1cIltvYmplY3QgUmVnRXhwXVwiLFA9XCJbb2JqZWN0IFN0cmluZ11cIixLPXt9O1xuS1tCXT1mYWxzZSxLW0RdPUtbJF09S1tUXT1LW0ZdPUtbV109S1txXT1LW3pdPUtbUF09dHJ1ZTt2YXIgTD17bGVhZGluZzpmYWxzZSxtYXhXYWl0OjAsdHJhaWxpbmc6ZmFsc2V9LE09e2NvbmZpZ3VyYWJsZTpmYWxzZSxlbnVtZXJhYmxlOmZhbHNlLHZhbHVlOm51bGwsd3JpdGFibGU6ZmFsc2V9LFY9e1wiYm9vbGVhblwiOmZhbHNlLFwiZnVuY3Rpb25cIjp0cnVlLG9iamVjdDp0cnVlLG51bWJlcjpmYWxzZSxzdHJpbmc6ZmFsc2UsdW5kZWZpbmVkOmZhbHNlfSxVPXtcIlxcXFxcIjpcIlxcXFxcIixcIidcIjpcIidcIixcIlxcblwiOlwiblwiLFwiXFxyXCI6XCJyXCIsXCJcXHRcIjpcInRcIixcIlxcdTIwMjhcIjpcInUyMDI4XCIsXCJcXHUyMDI5XCI6XCJ1MjAyOVwifSxHPVZbdHlwZW9mIHdpbmRvd10mJndpbmRvd3x8dGhpcyxIPVZbdHlwZW9mIGV4cG9ydHNdJiZleHBvcnRzJiYhZXhwb3J0cy5ub2RlVHlwZSYmZXhwb3J0cyxKPVZbdHlwZW9mIG1vZHVsZV0mJm1vZHVsZSYmIW1vZHVsZS5ub2RlVHlwZSYmbW9kdWxlLFE9SiYmSi5leHBvcnRzPT09SCYmSCxYPVZbdHlwZW9mIGdsb2JhbF0mJmdsb2JhbDshWHx8WC5nbG9iYWwhPT1YJiZYLndpbmRvdyE9PVh8fChHPVgpO1xudmFyIFk9cygpO3R5cGVvZiBkZWZpbmU9PVwiZnVuY3Rpb25cIiYmdHlwZW9mIGRlZmluZS5hbWQ9PVwib2JqZWN0XCImJmRlZmluZS5hbWQ/KEcuXz1ZLCBkZWZpbmUoZnVuY3Rpb24oKXtyZXR1cm4gWX0pKTpIJiZKP1E/KEouZXhwb3J0cz1ZKS5fPVk6SC5fPVk6Ry5fPVl9KS5jYWxsKHRoaXMpOyIsIndpbmRvdy5GUkFHX1NIQURFUiA9IFtcIlwiXG4sXCJ2YXJ5aW5nIHZlYzQgY29sb3VyO1wiXG4sXCJcIlxuLFwidm9pZCBtYWluKCkge1wiXG4sXCIgIGdsX0ZyYWdDb2xvciA9IGNvbG91cjtcIlxuLFwifVwiXG5dLmpvaW4oXCJcXG5cIik7XG5cbndpbmRvdy5WRVJUX1NIQURFUiA9IFtcIlwiXG4sXCJ2YXJ5aW5nIHZlYzQgY29sb3VyO1wiXG4sXCJ1bmlmb3JtIGZsb2F0IHRpY2s7XCJcbixcIlwiXG4sXCJ2b2lkIG1haW4oKSB7XCJcbixcIiAgZmxvYXQgcSA9IGFicyhwb3NpdGlvbi55ICsgMzAwLjApIC8gNTUwLjA7XCJcbixcIiAgcSA9IHEgLSBmbG9vcihxKTtcIlxuLFwiICBjb2xvdXIgPSB2ZWM0KDAuMjEgKiBxICsgMC4xLCBzaW4ocSAqIDYuOCArIGNvcyh0aWNrLzMwMC4wKSowLjc1KSwgMC45ICogcSwgMS4wKTtcIlxuLFwiXCJcbixcIiAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNChwb3NpdGlvbiwgMS4wKTtcIlxuLFwiICBnbF9Qb3NpdGlvbi55ICs9IDAuMztcIlxuLFwifVwiXG5dLmpvaW4oXCJcXG5cIik7XG4iLCJ2YXIgTm9pc2UgPSB7XG4gICAgYmFzZTogZnVuY3Rpb24oZmlsbGVyKSB7IHJldHVybiBmdW5jdGlvbihhYykge1xuICAgICAgICB2YXIgbm9kZSA9IGFjLmNyZWF0ZUJ1ZmZlclNvdXJjZSgpXG4gICAgICAgICAgICAsQlVGRkVSX1NJWkUgPSBhYy5zYW1wbGVSYXRlICogM1xuICAgICAgICAgICAgLGJ1ZmZlciA9IGFjLmNyZWF0ZUJ1ZmZlcigxLCBCVUZGRVJfU0laRSwgYWMuc2FtcGxlUmF0ZSlcbiAgICAgICAgICAgICxkYXRhID0gYnVmZmVyLmdldENoYW5uZWxEYXRhKDApXG4gICAgICAgIDtcbiAgICAgICAgZmlsbGVyKGRhdGEsIEJVRkZFUl9TSVpFKTtcblxuICAgICAgICBub2RlLmJ1ZmZlciA9IGJ1ZmZlcjtcbiAgICAgICAgbm9kZS5sb29wID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfTsgfVxufTtcblxuTm9pc2UucGluayA9IE5vaXNlLmJhc2UoZnVuY3Rpb24oZGF0YSwgQlVGRkVSX1NJWkUpIHtcbiAgICAvLyB3aXRoIGNvZGUgZnJvbSBodHRwOi8vbm9pc2VoYWNrLmNvbS9nZW5lcmF0ZS1ub2lzZS13ZWItYXVkaW8tYXBpL1xuICAgIHZhciBiID0gWzAuMCwgMC4wLCAwLjAsIDAuMCwgMC4wLCAwLjAsIDAuMF07XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IEJVRkZFUl9TSVpFOyBpKyspIHtcbiAgICAgICAgdmFyIHdoaXRlID0gTWF0aC5yYW5kb20oKSAqIDIgLSAxO1xuICAgICAgICAvLyBoZXJlIGNvbWVzIHRoZSBtYWdpYyFcbiAgICAgICAgYlswXSA9IDAuOTk4ODYgKiBiWzBdICsgd2hpdGUgKiAwLjA1NTUxNzk7XG4gICAgICAgIGJbMV0gPSAwLjk5MzMyICogYlsxXSArIHdoaXRlICogMC4wNzUwNzU5O1xuICAgICAgICBiWzJdID0gMC45NjkwMCAqIGJbMl0gKyB3aGl0ZSAqIDAuMTUzODUyMDtcbiAgICAgICAgYlszXSA9IDAuODY2NTAgKiBiWzNdICsgd2hpdGUgKiAwLjMxMDQ4NTY7XG4gICAgICAgIGJbNF0gPSAwLjU1MDAwICogYls0XSArIHdoaXRlICogMC41MzI5NTIyO1xuICAgICAgICBiWzVdID0gLTAuNzYxNiAqIGJbNV0gLSB3aGl0ZSAqIDAuMDE2ODk4MDtcbiAgICAgICAgZGF0YVtpXSA9IChzdW0oYikgKyB3aGl0ZSAqIDAuNTM2MikgKiAwLjExO1xuICAgICAgICBiWzZdID0gd2hpdGUgKiAwLjExNTkyNjtcbiAgICB9XG59KTtcblxuTm9pc2UuYnJvd24gPSBOb2lzZS5iYXNlKGZ1bmN0aW9uKGRhdGEsIEJVRkZFUl9TSVpFKSB7XG4gICAgdmFyIHByZXZpb3VzID0gMC4wO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgQlVGRkVSX1NJWkU7IGkrKykge1xuICAgICAgICB2YXIgd2hpdGUgPSBNYXRoLnJhbmRvbSgpICogMiAtIDE7XG4gICAgICAgIGRhdGFbaV0gPSAocHJldmlvdXMgKyAoMC4wMiAqIHdoaXRlKSkgLyAxLjAyO1xuICAgICAgICBwcmV2aW91cyA9IGRhdGFbaV07XG4gICAgICAgIGRhdGFbaV0gKj0gMy41O1xuICAgIH1cbn0pO1xuXG5Ob2lzZS53aGl0ZSA9IE5vaXNlLmJhc2UoZnVuY3Rpb24oZGF0YSwgQlVGRkVSX1NJWkUpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IEJVRkZFUl9TSVpFOyBpKyspIHtcbiAgICAgICAgZGF0YVtpXSA9ICBNYXRoLnNpbihNYXRoLnJhbmRvbSgpICogTWF0aC5QSSAqIDIpO1xuICAgIH1cbn0pO1xuXG5cblxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgSmVsbHlTdGF0cyA9IGZ1bmN0aW9uKHBsYW5lKSB7XG4gICAgdGhpcy5wbGFuZSA9IHBsYW5lO1xuICAgIHRoaXMuZGVsdGFfc3VtID0gMDtcbiAgICB0aGlzLnNsaWRpbmcgPSBuZXcgRmxvYXQzMkFycmF5KHBsYW5lLndpZHRoKTtcbn07XG5cbl8uZXh0ZW5kKEplbGx5U3RhdHMucHJvdG90eXBlLCB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgcGxhbmUgPSB0aGlzLnBsYW5lO1xuICAgICAgICB0aGlzLmRlbHRhX3N1bSA9IHN1bShwbGFuZS5kZWx0YXMpXG5cdFx0XG5cdFx0Ly8gY2FsY3VsYXRlIHNsaWRpbmcgc3VtcyBvZiA1IG5lYXJieSBwb2ludHNcbiAgICAgICAgdGhpcy51cGRhdGVfc2xpZGluZyhwbGFuZSk7XG4gICAgfVxuICAgICx1cGRhdGVfc2xpZGluZzogZnVuY3Rpb24ocGxhbmUpIHtcblx0XHR2YXIgc2xpZGluZyA9IHRoaXMuc2xpZGluZztcblx0XHQvLyBjYWxjdWxhdGUgc2xpZGluZyBzdW1zIG9mIDUgbmVhcmJ5IHBvaW50c1xuXHRcdHNsaWRpbmdbMF0gPSBwbGFuZS5kZWx0YXNbMF0gKyBwbGFuZS5kZWx0YXNbMV0gKyBwbGFuZS5kZWx0YXNbMl07XG5cdFx0Zm9yICh2YXIgaSA9IDE7IGkgPCBwbGFuZS53aWR0aDsgaSsrKSB7XG5cdFx0XHRzbGlkaW5nW2ldID0gc2xpZGluZ1tpIC0gMV1cblx0XHRcdFx0XHRcdCsgZGVmYXVsdF9hdChpICsgMiwgcGxhbmUuZGVsdGFzLCAwKVxuXHRcdFx0XHRcdFx0LSBkZWZhdWx0X2F0KGkgLSAzLCBwbGFuZS5kZWx0YXMsIDApO1xuXHRcdH1cbiAgICB9XG59KTtcblxuXG52YXIgUGxhbmUgPSBmdW5jdGlvbih0aHJlZV9wbGFuZSkge1xuXHR0aGlzLnRocmVlX3BsYW5lID0gdGhyZWVfcGxhbmU7XG5cdHRoaXMud19zZWcgPSB0aHJlZV9wbGFuZS5wYXJhbWV0ZXJzLndpZHRoU2VnbWVudHM7XG4gICAgdGhpcy53aWR0aCA9IHRoaXMud19zZWcgKyAxO1xuXHR0aGlzLmhfc2VnID0gdGhyZWVfcGxhbmUucGFyYW1ldGVycy5oZWlnaHRTZWdtZW50cztcblxuICAgIHRoaXMudmVydGljZXMgPSB0aHJlZV9wbGFuZS5hdHRyaWJ1dGVzLnBvc2l0aW9uLmFycmF5O1xuICAgIHRocmVlX3BsYW5lLmFkZEF0dHJpYnV0ZSgncG9zaXRpb24nLCBuZXcgVEhSRUUuRHluYW1pY0J1ZmZlckF0dHJpYnV0ZSh0aHJlZV9wbGFuZS5nZXRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJykuYXJyYXksIDMpKTtcblxuXHR0aGlzLm9yaWdpbmFsID0gdGhpcy5tYXAoZnVuY3Rpb24odiwgaSkge1xuXHRcdHJldHVybiB0aGlzLnZlcnRpY2VzW3YgKyAxXTtcblx0fSwgdGhpcywgbmV3IEludDMyQXJyYXkodGhpcy53X3NlZyArIDEpKTtcblx0dGhpcy5uZXh0ID0gbmV3IEZsb2F0MzJBcnJheSh0aGlzLm9yaWdpbmFsLmxlbmd0aCk7XG4gICAgdGhpcy5kZWx0YXMgPSBuZXcgRmxvYXQzMkFycmF5KHRoaXMubmV4dC5sZW5ndGgpO1xuICAgICAgICAvLyBeIHVzZWQgaW4gcHVsbCgpXG4gICAgdGhpcy5lYWNoKGZ1bmN0aW9uKHYsIGkpIHtcbiAgICAgICAgdGhpcy52ZXJ0aWNlc1t2ICsgMl0gKz0gMTtcbiAgICB9LCB0aGlzKTtcblxufTtcblxuXG5fLmV4dGVuZChQbGFuZS5wcm90b3R5cGUsIHtcbiAgICBlYWNoOiBmdW5jdGlvbihmLCBjdHgpIHtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMud19zZWcgKyAxOyBpKyspIHtcblx0XHRcdGYuY2FsbChjdHgsIGkgKiAzLCBpKTtcblx0XHR9XG4gICAgfVxuXHQsbWFwOiBmdW5jdGlvbihmLCBjdHgsIGludG8pIHtcblx0XHR2YXIgciA9IGludG8gfHwgbmV3IEFycmF5KHRoaXMud19zZWcpO1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy53aWR0aDsgaSsrKSB7XG5cdFx0XHRyW2ldID0gZi5jYWxsKGN0eCwgaSAqIDMsIGkpOyAvLyAqMyBmb3IgeHl6XG5cdFx0fVxuXHRcdHJldHVybiByO1xuXHR9XG5cdCxwdWxsOiBmdW5jdGlvbigpIHtcblx0XHR0aGlzLmRlbHRhcyA9IHRoaXMubWFwKGZ1bmN0aW9uKHYsIGkpIHtcblx0XHRcdHRoaXMubmV4dFtpXSA9IDA7XG5cdFx0XHRyZXR1cm4gdGhpcy5vcmlnaW5hbFtpXSAtIHRoaXMudmVydGljZXNbdiArIDFdO1xuXHRcdH0sIHRoaXMsIHRoaXMuZGVsdGFzKTtcblx0fVxuXHQscHVzaDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGk7XG5cdFx0Zm9yIChpID0gMDsgaSA8IHRoaXMud2lkdGg7IGkrKykge1xuXHRcdFx0dGhpcy52ZXJ0aWNlc1szICogKGkgKyB0aGlzLndpZHRoKSArIDFdID0gdGhpcy52ZXJ0aWNlc1szICogaSArIDFdIC0gMTUwO1xuXHRcdFx0dGhpcy52ZXJ0aWNlc1szICogaSArIDFdICs9IHRoaXMubmV4dFtpXTtcblx0XHR9XG5cdFx0dGhpcy50aHJlZV9wbGFuZS5hdHRyaWJ1dGVzLnBvc2l0aW9uLm5lZWRzVXBkYXRlID0gdHJ1ZTtcblx0fVxufSk7XG4iLCIvKiBnbG9iYWw6IGRvY3VtZW50LCB3aW5kb3csIFRocmVlLCBQbGFuZSwgSHVkLCBfICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBkZWZhdWx0X2F0ID0gZnVuY3Rpb24oaSwgYXJyYXksIGQpIHtcbiAgICBpZiAoaSA8IDAgfHwgaSA+PSBhcnJheS5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBkO1xuICAgIH1cbiAgICByZXR1cm4gYXJyYXlbaV07XG4gIH0sXG4gIHN1bSA9IGZ1bmN0aW9uKGFyciwgbSkge1xuICAgIHZhciByID0gMCxcbiAgICAgIGkgPSAwO1xuICAgIG0gPSBtIHx8IGZ1bmN0aW9uKGEpIHtcbiAgICAgIHJldHVybiBhO1xuICAgIH07XG5cbiAgICBmb3IgKDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgciArPSBtKGFycltpXSk7XG4gICAgfVxuICAgIHJldHVybiByO1xuICB9LFxuICBjbGFtcGVkID0gZnVuY3Rpb24obWluLCBhLCBtYXgpIHtcbiAgICByZXR1cm4gTWF0aC5tYXgobWluLCBNYXRoLm1pbihtYXgsIGEpKTtcbiAgfSxcbiAgZm1vZCA9IGZ1bmN0aW9uKGYsIG1vZCkge1xuICAgIHZhciBxID0gZiAvIG1vZDtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihxKSAtIHE7XG4gIH07XG5cblxudmFyIEplbGx5UGh5c2ljcyA9IGZ1bmN0aW9uKHBsYW5lKSB7XG4gIC8vIHVwZGF0ZSBtb21lbnR1bVxuICB2YXIgbW9tZW50dW0gPSBuZXcgRmxvYXQzMkFycmF5KHBsYW5lLndpZHRoKTtcbiAgdGhpcy5tb21lbnR1bSA9IG1vbWVudHVtO1xuXG4gIHRoaXMudXBkYXRlID0gZnVuY3Rpb24ocGxhbmUsIHN0YXRzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwbGFuZS53aWR0aDsgaSsrKSB7XG4gICAgICB2YXIgcmV0dXJuX2NvbXBvbmVudCA9IHBsYW5lLmRlbHRhc1tpXSAvIDIwLFxuICAgICAgICBzbGlkaW5nX2NvbXBvbmVudCA9IChzdGF0cy5zbGlkaW5nW2ldIC8gNSkgLyAtMjEuMyxcbiAgICAgICAgbW9tZW50dW1fY29tcG9uZW50ID0gbW9tZW50dW1baV0sXG4gICAgICAgIHRvdGFsID0gbW9tZW50dW1fY29tcG9uZW50ICsgcmV0dXJuX2NvbXBvbmVudCArIHNsaWRpbmdfY29tcG9uZW50O1xuICAgICAgbW9tZW50dW1baV0gPSAobW9tZW50dW1baV0gKyB0b3RhbCkgKiAwLjQ5O1xuICAgICAgcGxhbmUubmV4dFtpXSA9IHRvdGFsO1xuICAgIH1cbiAgfTtcblxuICB0aGlzLmRyb3AgPSBmdW5jdGlvbihhbW91bnQsIF93aGVyZSkge1xuICAgIC8vIHdlIHBpY2sgYSBzcG90IGFuZCBwdXNoIHRoaW5ncyBhcm91bmQgbmVhciBpdFxuICAgIHZhciB3aGVyZSA9IE1hdGguZmxvb3IoKHBsYW5lLndpZHRoIC0gOSkgKiBfd2hlcmUpLFxuICAgICAgYWJzX2Ftb3VudCA9IE1hdGguYWJzKGFtb3VudCksXG4gICAgICBhbW91bnRfc2lnbiA9IGFtb3VudCAvIGFic19hbW91bnQsXG4gICAgICBwb3dlciA9IE1hdGgubG9nKGFic19hbW91bnQpIC8gTWF0aC5sb2coNCksXG4gICAgICBpO1xuICAgIGZvciAoaSA9IC00OyBpIDw9IDQ7IGkrKykge1xuICAgICAgdmFyIGFic19pID0gTWF0aC5hYnMoaSksXG4gICAgICAgIG1vZGlmaWVyID0gKGFtb3VudCAtIChhbW91bnRfc2lnbiAqIE1hdGgucG93KGFic19pLCBwb3dlcikpKSAvIDg7XG4gICAgICBtb21lbnR1bVtpICsgd2hlcmUgKyA0XSAtPSBtb2RpZmllcjtcbiAgICB9XG4gIH07XG59O1xuXG5cbnZhciBXYXZlTm9pc2VzID0gZnVuY3Rpb24ocGh5c2ljcywgYWMpIHtcbiAgdGhpcy5waHlzaWNzID0gcGh5c2ljcztcbiAgdGhpcy5ub2lzZSA9IE5vaXNlLnBpbmsoYWMpO1xuICB0aGlzLmdhaW4gPSBhYy5jcmVhdGVHYWluKCk7XG4gIHRoaXMuZ2Fpbi5nYWluLnZhbHVlID0gMC4zNTtcblxuICB0aGlzLm5vaXNlLmNvbm5lY3QodGhpcy5nYWluKTtcbiAgdGhpcy5nYWluLmNvbm5lY3QoYWMuZGVzdGluYXRpb24pO1xuICB0aGlzLm5vaXNlLnN0YXJ0KCk7XG59O1xuXG5cbl8uZXh0ZW5kKFdhdmVOb2lzZXMucHJvdG90eXBlLCB7XG4gIHVwZGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgdmFyIG1vbWVudHVtX3N1bSA9IHN1bSh0aGlzLnBoeXNpY3MubW9tZW50dW0sIE1hdGguYWJzKTtcbiAgICB0aGlzLm5vaXNlLnBsYXliYWNrUmF0ZS52YWx1ZSA9IE1hdGgubWF4KE1hdGgubG9nKE1hdGguc3FydChtb21lbnR1bV9zdW0gLyA1MCkgKyAxKSAvIDIsIDAuMDA0KTtcbiAgICB0aGlzLmdhaW4uZ2Fpbi52YWx1ZSA9IE1hdGgubWluKE1hdGgubG9nKChtb21lbnR1bV9zdW0pIC8gMTcwICsgMSkgLyA0LCAxLjQpO1xuICB9XG59KTtcblxuXG52YXIgR2FtZSA9IGZ1bmN0aW9uKGh1ZCkge1xuICB2YXIgV0lEVEggPSA1MDAsXG4gICAgSEVJR0hUID0gNDAwLFxuICAgIHNjZW5lID0gbmV3IFRIUkVFLlNjZW5lKCksXG4gICAgY2FtZXJhID0gbmV3IFRIUkVFLk9ydGhvZ3JhcGhpY0NhbWVyYShXSURUSCAvIC0yLCBXSURUSCAvIDIsXG4gICAgICBIRUlHSFQgLyAyLCBIRUlHSFQgLyAtMiwgMSwgMTAwMCksXG4gICAgcmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcigpO1xuXG4gIHJlbmRlcmVyLnNldFNpemUoMjUwLCA2MDApO1xuICByZW5kZXJlci5zZXRDbGVhckNvbG9yKDB4MTkwOTY5LCAxKTtcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dmeCcpLmFwcGVuZENoaWxkKHJlbmRlcmVyLmRvbUVsZW1lbnQpO1xuICByZW5kZXJlci5kb21FbGVtZW50LnN0eWxlLndpZHRoID0gd2luZG93LmlubmVyV2lkdGggKyBcInB4XCI7XG4gIHJlbmRlcmVyLmRvbUVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0ICsgXCJweFwiO1xuXG4gIHZhciBnZW9tZXRyeSA9IG5ldyBUSFJFRS5QbGFuZUJ1ZmZlckdlb21ldHJ5KFdJRFRILCBIRUlHSFQgLyAyLCA5MSwgMSksXG4gICAgcGxhbmUgPSBuZXcgUGxhbmUoZ2VvbWV0cnkpLFxuICAgIHN0YXRzID0gbmV3IEplbGx5U3RhdHMocGxhbmUpLFxuICAgIG11dGF0b3IgPSBuZXcgSmVsbHlQaHlzaWNzKHBsYW5lKSxcbiAgICBhdWRpb19jb250ZXh0ID0gbmV3KHdpbmRvdy5BdWRpb0NvbnRleHQgfHwgd2luZG93LndlYmtpdEF1ZGlvQ29udGV4dCkoKSxcbiAgICB3YXZlX25vaXNlcyA9IG5ldyBXYXZlTm9pc2VzKG11dGF0b3IsIGF1ZGlvX2NvbnRleHQpLFxuICAgIG1hdGVyaWFsID0gbmV3IFRIUkVFLlNoYWRlck1hdGVyaWFsKHtcbiAgICAgIHVuaWZvcm1zOiB7XG4gICAgICAgIHRpY2s6IHtcbiAgICAgICAgICB0eXBlOiBcImZcIixcbiAgICAgICAgICB2YWx1ZTogMS4wXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBhdHRyaWJ1dGVzOiB7fSxcbiAgICAgIHZlcnRleFNoYWRlcjogd2luZG93LlZFUlRfU0hBREVSLFxuICAgICAgZnJhZ21lbnRTaGFkZXI6IHdpbmRvdy5GUkFHX1NIQURFUlxuICAgIH0pLFxuICAgIG1lc2ggPSBuZXcgVEhSRUUuTWVzaChnZW9tZXRyeSwgbWF0ZXJpYWwpO1xuICBtYXRlcmlhbC5zaWRlID0gVEhSRUUuRG91YmxlU2lkZTtcblxuICBzY2VuZS5hZGQobWVzaCk7XG4gIHNjZW5lLmFkZChuZXcgVEhSRUUuQW1iaWVudExpZ2h0KDB4RkZGRkZGKSk7XG4gIGNhbWVyYS5wb3NpdGlvbi56ID0gNTtcblxuICB2YXIgdXBkYXRlX2F1ZGlvID0gZnVuY3Rpb24oKSB7XG4gICAgcGxhbmUucHVsbCgpO1xuICAgIHN0YXRzLnVwZGF0ZSgpO1xuICAgIG11dGF0b3IudXBkYXRlKHBsYW5lLCBzdGF0cyk7XG4gICAgd2F2ZV9ub2lzZXMudXBkYXRlKCk7XG4gICAgcGxhbmUucHVzaCgpO1xuICAgIG1hdGVyaWFsLnVuaWZvcm1zLnRpY2sudmFsdWUrKztcbiAgfTtcblxuICB2YXIga2V5Y29kZV9tYXAgPSBbNjUsIDgzLCA2OCwgNzAsIDcxLCA3MiwgNzQsIDc1LCA3Nl0sXG4gICAga2V5Y29kZV9jaGFycyA9IFwiYXNkZmdoamtsXCIuc3BsaXQoXCJcIiksXG4gICAga2V5Y29kZV9jaGFyc191cCA9IGtleWNvZGVfY2hhcnMubWFwKGZ1bmN0aW9uKGMpIHtcbiAgICAgIHJldHVybiBjLnRvVXBwZXJDYXNlKCk7XG4gICAgfSksXG4gICAga2V5X3N0YXRlID0gXy5tYXAoa2V5Y29kZV9tYXAsIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfSksXG4gICAgcmVuZGVyX2Z1bmMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXJfZnVuYyk7XG4gICAgICByZW5kZXJlci5yZW5kZXIoc2NlbmUsIGNhbWVyYSk7XG5cbiAgICAgIHVwZGF0ZV9hdWRpbygpO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleWNvZGVfbWFwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciB3aGVyZSA9IGkgLyAoa2V5Y29kZV9tYXAubGVuZ3RoIC0gMSk7XG4gICAgICAgIGlmIChrZXlfc3RhdGVbaV0gIT09IDApIHtcbiAgICAgICAgICBtdXRhdG9yLmRyb3Aoa2V5X3N0YXRlW2ldICogMTAsIHdoZXJlKTtcbiAgICAgICAgICBrZXlfc3RhdGVbaV0gPSBNYXRoLmFicyhrZXlfc3RhdGVbaV0pIC8ga2V5X3N0YXRlW2ldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICB3aW5kb3cub25rZXl1cCA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgdmFyIHdoZXJlID0gXy5pbmRleE9mKGtleWNvZGVfbWFwLCBldmVudC5rZXlDb2RlKSxcbiAgICAgIGxldHRlcjtcbiAgICBpZiAod2hlcmUgPD0gLTEpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGtleV9zdGF0ZVt3aGVyZV0gPSAwO1xuICAgIGxldHRlciA9IChldmVudC5zaGlmdEtleSA/IGtleWNvZGVfY2hhcnNfdXAgOiBrZXljb2RlX2NoYXJzKVt3aGVyZV07XG4gICAgaHVkLmtleXVwKGxldHRlcik7XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG4gIHdpbmRvdy5vbmtleWRvd24gPSBmdW5jdGlvbihldmVudCkge1xuICAgIHZhciB3aGVyZSA9IF8uaW5kZXhPZihrZXljb2RlX21hcCwgZXZlbnQua2V5Q29kZSk7XG4gICAgaWYgKHdoZXJlID4gLTEpIHtcbiAgICAgIGtleV9zdGF0ZVt3aGVyZV0gPSBldmVudC5zaGlmdEtleSA/IC0zIDogMztcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH07XG5cbiAgdXBkYXRlX2F1ZGlvKCk7XG4gIHJlbmRlcl9mdW5jKCk7XG59O1xuXG53aW5kb3cub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gIG5ldyBHYW1lKG5ldyBIdWQoKSk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9